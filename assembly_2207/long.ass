CompileCommand: print *LongLinearRegression.fit bool print = true
# JMH version: 1.32
# VM version: JDK 16-internal, OpenJDK 64-Bit Server VM, 16-internal+0-adhoc.ominil.jdk16
# VM invoker: /Library/Java/JavaVirtualMachines/macosx-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector -XX:+UnlockDiagnosticVMOptions -XX:CompileCommand=print,*LongLinearRegression::fit -XX:PrintAssemblyOptions=intel -XX:-UseCompressedOops
# Blackhole mode: full + dont-inline hint
# Warmup: 100 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: org.jml.regression.linear.BenchmarkLinearRegression.testLongLinearRegression

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
CompileCommand: print *LOopnegnLJiDnKe a6r4R-eBgirte sSseirovne.rf iVtM  bwoaorln ipnrgi:n tp r=i nttriuneg
 of assembly code is enabled; turning on DebugNonSafepoints to gain additional output
# Warmup Iteration   1: 
============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    2530  975 %     3       org.jml.regression.linear.LongLinearRegression::fit @ 25 (155 bytes)
 total in heap  [0x000000010ff4f490,0x000000010ff50390] = 3840
 relocation     [0x000000010ff4f608,0x000000010ff4f740] = 312
 main code      [0x000000010ff4f740,0x000000010ff4fe00] = 1728
 stub code      [0x000000010ff4fe00,0x000000010ff4fe68] = 104
 oops           [0x000000010ff4fe68,0x000000010ff4fe70] = 8
 metadata       [0x000000010ff4fe70,0x000000010ff4fe78] = 8
 scopes data    [0x000000010ff4fe78,0x000000010ff50010] = 408
 scopes pcs     [0x000000010ff50010,0x000000010ff50340] = 816
 dependencies   [0x000000010ff50340,0x000000010ff50348] = 8
 nul chk table  [0x000000010ff50348,0x000000010ff50390] = 72

[Constant Pool (empty)]

[MachCode]
[Entry Point]
  # {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
 ;;  block B10 [0, 0]
  0x000000010ff4f740: 448b 5608 | 49c1 e203 

  0x000000010ff4f748: ;   {runtime_call ic_miss_stub}
  0x000000010ff4f748: 4c3b d00f | 85cf 01a0 | ff90 9090 | 9090 9090 | 9090 9090 | 9090 9090 
[Verified Entry Point]
  0x000000010ff4f760: 8984 2400 | a0fe ff55 | 4881 ecc0 

  0x000000010ff4f76c: ;   {metadata(method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression')}
  0x000000010ff4f76c: 0000 0048 | bf00 00f0 | 0e01 0000 | 008b 9f1c | 0100 0083 | c302 899f | 1c01 0000 | 81e3 fe07 
  0x000000010ff4f78c: 0000 83fb | 000f 8401 

  0x000000010ff4f794: ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@0 (line 9)
  0x000000010ff4f794: 0400 008b 

  0x000000010ff4f798: ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@1 (line 9)
  0x000000010ff4f798: 7a0c 8b59 

  0x000000010ff4f79c: ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@3 (line 9)
                      ;   {metadata(method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression')}
  0x000000010ff4f79c: 0c3b fb48 | bf00 00f0 | 0e01 0000 | 0048 bb70 | 0100 0000 | 0000 000f | 850a 0000 | 0048 bb60 
  0x000000010ff4f7bc: 0100 0000 | 0000 0048 | 8b04 1f48 | 8d40 0148 | 8904 1f0f | 85aa 0200 

  0x000000010ff4f7d4: ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@4 (line 9)
  0x000000010ff4f7d4: 00bf 0000 | 0000 48bb | 0000 0000 | 0000 0000 | 48b8 0000 | 0000 0000 | 0000 e977 

  0x000000010ff4f7f0: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@25 (line 13)
  0x000000010ff4f7f0: 0000 0090 | 9090 9090 
 ;;  block B4 [32, 51]
  0x000000010ff4f7f8: 3b7a 0c0f | 83ea 0300 | 004c 63c7 | 4e8b 4cc2 

  0x000000010ff4f808: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@36 (line 14)
  0x000000010ff4f808: 104c 03c8 

  0x000000010ff4f80c: ; implicit exception: dispatches to 0x000000010ff4fc0d
  0x000000010ff4f80c: 3b79 0c0f | 832a 0400 | 0048 63c7 | 4c8b 44c1 

  0x000000010ff4f81c: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
  0x000000010ff4f81c: 104c 03c3 

  0x000000010ff4f820: ;   {metadata(method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression')}
  0x000000010ff4f820: ffc7 48bb | 0000 f00e | 0100 0000 | 8b83 2001 | 0000 83c0 | 0289 8320 | 0100 0081 | e0fe 3f00 
  0x000000010ff4f840: 0083 f800 
 ;;  168 branch [EQ] [CounterOverflowStub: 0x00007f87cc8d8330]
  0x000000010ff4f844: 0f84 1704 

  0x000000010ff4f848: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
  0x000000010ff4f848: 0000 4d8b | 9730 0100 

  0x000000010ff4f850: ; ImmutableOopMap {rcx=Oop rdx=Oop rsi=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
                      ;   {poll}
  0x000000010ff4f850: 0041 8502 

  0x000000010ff4f854: ;   {metadata(method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression')}
  0x000000010ff4f854: 48bb 0000 | f00e 0100 | 0000 ff83 | b001 0000 | 498b d849 

  0x000000010ff4f868: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
  0x000000010ff4f868: 8bc1 448b 

  0x000000010ff4f86c: ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@28 (line 13)
  0x000000010ff4f86c: 420c 413b 

  0x000000010ff4f870: ;   {metadata(method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression')}
  0x000000010ff4f870: f849 b900 | 00f0 0e01 | 0000 0049 | bba0 0100 | 0000 0000 | 000f 8c0a | 0000 0049 | bb90 0100 
  0x000000010ff4f890: 0000 0000 | 004f 8b2c | 194d 8d6d | 014f 892c | 190f 8c51 

  0x000000010ff4f8a4: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
  0x000000010ff4f8a4: ffff ff48 | 895c 2478 | 4889 8c24 | 9000 0000 | 4889 9424 | 8800 0000 | 4889 b424 | 9800 0000 
  0x000000010ff4f8c4: 4d63 c848 | 8bf0 498b | c148 8bf8 | 4883 f800 
 ;;  198 branch [EQ] [DivByZeroStub: 0x00007f87cc8d9080] [bci:58]
  0x000000010ff4f8d4: 0f84 c103 | 0000 4489 | 4424 4c4c | 898c 2480 

  0x000000010ff4f8e4: ;   {runtime_call SharedRuntime::ldiv(long, long)}
  0x000000010ff4f8e4: 0000 00e8 

  0x000000010ff4f8e8: ;*ldiv {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@58 (line 18)
  0x000000010ff4f8e8: c458 02fa | 4889 8424 | a000 0000 | 488b 7424 | 784c 8b8c | 2480 0000 | 0049 8bf9 | 4983 f900 
 ;;  212 branch [EQ] [DivByZeroStub: 0x00007f87cc8d9640] [bci:66]
  0x000000010ff4f908: 0f84 a603 

  0x000000010ff4f90c: ;   {runtime_call SharedRuntime::ldiv(long, long)}
  0x000000010ff4f90c: 0000 e89d 

  0x000000010ff4f910: ;*ldiv {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@66 (line 19)
  0x000000010ff4f910: 5802 fabe | 0000 0000 | 48bf 0000 | 0000 0000 | 0000 48bb | 0000 0000 | 0000 0000 | 4c8b c848 
  0x000000010ff4f930: 8b84 24a0 | 0000 0044 | 8b44 244c | 488b 8c24 | 9000 0000 | 488b 9424 | 8800 0000 
 ;;  224 branch [AL] [B6] 
  0x000000010ff4f94c: e99b 0000 

  0x000000010ff4f950: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@78 (line 23)
  0x000000010ff4f950: 0090 9090 | 9090 9090 
 ;;  block B7 [85, 128]
  0x000000010ff4f958: 3b72 0c0f | 836c 0300 | 004c 63de | 4e8b 6cda 

  0x000000010ff4f968: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@90 (line 24)
  0x000000010ff4f968: 104c 2be8 | 4d8b dd49 | 8bc5 490f | afc3 4c8b | d84c 03db 

  0x000000010ff4f97c: ; implicit exception: dispatches to 0x000000010ff4fcef
  0x000000010ff4f97c: 3b71 0c0f | 839c 0300 | 0048 63c6 | 488b 5cc1 

  0x000000010ff4f98c: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
  0x000000010ff4f98c: 1049 2bd9 | 488b c349 | 0faf c548 | 03c7 ffc6 

  0x000000010ff4f99c: ;   {metadata(method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression')}
  0x000000010ff4f99c: 48bf 0000 | f00e 0100 | 0000 8b9f | 2001 0000 | 83c3 0289 | 9f20 0100 | 0081 e3fe | 3f00 0083 
  0x000000010ff4f9bc: fb00 0f84 

  0x000000010ff4f9c0: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
  0x000000010ff4f9c0: 7f03 0000 | 4d8b 9730 

  0x000000010ff4f9c8: ; ImmutableOopMap {[152]=Oop rdx=Oop rcx=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
                      ;   {poll}
  0x000000010ff4f9c8: 0100 0041 

  0x000000010ff4f9cc: ;   {metadata(method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression')}
  0x000000010ff4f9cc: 8502 48bf | 0000 f00e | 0100 0000 | ff87 e801 | 0000 488b 

  0x000000010ff4f9e0: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
  0x000000010ff4f9e0: f849 8bdb | 488b 8424 | a000 0000 
 ;;  block B6 [78, 82]
  0x000000010ff4f9ec: ;   {metadata(method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression')}
  0x000000010ff4f9ec: 413b f049 | bb00 00f0 | 0e01 0000 | 0049 bdd8 | 0100 0000 | 0000 000f | 8c0a 0000 | 0049 bdc8 
  0x000000010ff4fa0c: 0100 0000 | 0000 004f | 8b34 2b4d | 8d76 014f | 8934 2b0f | 8c33 ffff 

  0x000000010ff4fa24: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
  0x000000010ff4fa24: ff4c 898c | 24a8 0000 | 0048 8bf7 | 488b fb48 | 83fb 000f | 8427 0300 

  0x000000010ff4fa3c: ;   {runtime_call SharedRuntime::ldiv(long, long)}
  0x000000010ff4fa3c: 00e8 6e57 

  0x000000010ff4fa40: ;*ldiv {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
  0x000000010ff4fa40: 02fa 488b | b424 9800 | 0000 4889 

  0x000000010ff4fa4c: ;*putfield slope {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)
  0x000000010ff4fa4c: 4618 488b | 9424 a000 | 0000 480f | afc2 488b | 9424 a800 | 0000 482b | d048 8956 

  0x000000010ff4fa68: ;*putfield intercept {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@151 (line 30)
  0x000000010ff4fa68: 1048 81c4 | c000 0000 

  0x000000010ff4fa70: ;   {poll_return}
  0x000000010ff4fa70: 5d49 3ba7 | 2801 0000 | 0f87 1803 

  0x000000010ff4fa7c: ;*return {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@154 (line 31)
  0x000000010ff4fa7c: 0000 c390 

  0x000000010ff4fa80: ;   {no_reloc}
  0x000000010ff4fa80: e936 0300 | 0000 0000 | 0000 498b | 8748 0100 | 0048 8d78 | 3849 3bbf | 5801 0000 | 0f87 2303 
  0x000000010ff4faa0: 0000 4989 | bf48 0100 | 0048 c700 | 0100 0000 | 488b ca48 | c1e9 0389 | 4808 4833 | c989 480c 
  0x000000010ff4fac0: 4833 c948 | bf05 0000 | 0000 0000 | 0048 894c | f808 48ff 

  0x000000010ff4fad4: ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@7 (line 9)
  0x000000010ff4fad4: cf75 f648 

  0x000000010ff4fad8: ;   {metadata(method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression')}
  0x000000010ff4fad8: 8bd0 48be | 0000 f00e | 0100 0000 | 4883 8680 | 0100 0001 

  0x000000010ff4faec: ;   {oop("Arrays length are not equals"{0x0000000197f00000})}
  0x000000010ff4faec: 48ba 0000 | f097 0100 | 0000 488b 

  0x000000010ff4faf8: ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@13 (line 9)
  0x000000010ff4faf8: f048 8984 | 24b0 0000 | 0090 9090 

  0x000000010ff4fb04: ;   {optimized virtual_call}
  0x000000010ff4fb04: 9090 90e8 

  0x000000010ff4fb08: ; ImmutableOopMap {[176]=Oop }
                      ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@13 (line 9)
  0x000000010ff4fb08: 1401 a0ff | 488b 8424 | b000 0000 | e9d8 0200 

  0x000000010ff4fb18: ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@16 (line 9)
  0x000000010ff4fb18: 0089 8424 | 00a0 feff | 5548 81ec | c000 0000 | 488b 5e78 | 488b 4670 | 488b 5668 | 488b 4e58 
  0x000000010ff4fb38: 4c8b 4648 | 448b 4e40 | 488b fe48 | 895c 2470 | 4889 4424 | 6848 8954 | 2460 4889 | 4c24 584c 
  0x000000010ff4fb58: 8944 2450 | 4489 4c24 

  0x000000010ff4fb60: ;   {runtime_call SharedRuntime::OSR_migration_end(long*)}
  0x000000010ff4fb60: 48e8 3a15 | 03fa 448b | 4c24 4849 | 8bf9 4c8b | 4424 5049 | 8bd8 488b | 4c24 5848 | 8bc1 488b 
  0x000000010ff4fb80: 5424 6048 | 8bca 488b | 7424 6848 | 8bd6 488b | 7424 70e9 | d2fc ffff 
 ;; CounterOverflowStub slow case
  0x000000010ff4fb98: ;   {metadata({method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression')}
  0x000000010ff4fb98: 49ba 60fa | c80e 0100 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000010ff4fbac: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000010ff4fbac: ffff ffe8 

  0x000000010ff4fbb0: ; ImmutableOopMap {rsi=Oop rdx=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - org.jml.regression.linear.LongLinearRegression::fit@-1 (line 9)
  0x000000010ff4fbb0: 0c4a 94ff | e9de fbff 

  0x000000010ff4fbb8: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000010ff4fbb8: ffe8 82a9 

  0x000000010ff4fbbc: ; ImmutableOopMap {rsi=Oop rdx=Oop rcx=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@1 (line 9)
                      ;   {external_word}
  0x000000010ff4fbbc: 94ff 48bf | 696b 320a | 0100 0000 | 4883 e4f0 

  0x000000010ff4fbcc: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000010ff4fbcc: e87f 13d9 

  0x000000010ff4fbd0: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000010ff4fbd0: f9f4 e869 

  0x000000010ff4fbd4: ; ImmutableOopMap {rsi=Oop rdx=Oop rcx=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@3 (line 9)
                      ;   {external_word}
  0x000000010ff4fbd4: a994 ff48 | bf69 6b32 | 0a01 0000 | 0048 83e4 

  0x000000010ff4fbe4: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000010ff4fbe4: f0e8 6613 | d9f9 f448 | 893c 2448 | 8954 2408 

  0x000000010ff4fbf4: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000010ff4fbf4: e847 b294 

  0x000000010ff4fbf8: ; ImmutableOopMap {rcx=Oop rdx=Oop rsi=Oop }
                      ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@36 (line 14)
                      ;   {external_word}
  0x000000010ff4fbf8: ff48 bf69 | 6b32 0a01 | 0000 0048 

  0x000000010ff4fc04: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000010ff4fc04: 83e4 f0e8 | 4413 d9f9 

  0x000000010ff4fc0c: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000010ff4fc0c: f4e8 2ea9 

  0x000000010ff4fc10: ; ImmutableOopMap {rcx=Oop rdx=Oop rsi=Oop }
                      ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
                      ;   {external_word}
  0x000000010ff4fc10: 94ff 48bf | 696b 320a | 0100 0000 | 4883 e4f0 

  0x000000010ff4fc20: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000010ff4fc20: e82b 13d9 

  0x000000010ff4fc24: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000010ff4fc24: f9f4 e815 

  0x000000010ff4fc28: ; ImmutableOopMap {rcx=Oop rdx=Oop rsi=Oop }
                      ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
                      ;   {external_word}
  0x000000010ff4fc28: a994 ff48 | bf69 6b32 | 0a01 0000 | 0048 83e4 

  0x000000010ff4fc38: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000010ff4fc38: f0e8 1213 | d9f9 f448 | 893c 2448 | 894c 2408 

  0x000000010ff4fc48: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000010ff4fc48: e8f3 b194 

  0x000000010ff4fc4c: ; ImmutableOopMap {rcx=Oop rdx=Oop rsi=Oop }
                      ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
                      ;   {external_word}
  0x000000010ff4fc4c: ff48 bf69 | 6b32 0a01 | 0000 0048 

  0x000000010ff4fc58: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000010ff4fc58: 83e4 f0e8 | f012 d9f9 

  0x000000010ff4fc60: ;   {metadata({method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression')}
  0x000000010ff4fc60: f449 ba60 | fac8 0e01 | 0000 004c | 8954 2408 | 48c7 0424 | 3300 0000 

  0x000000010ff4fc78: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000010ff4fc78: e843 4994 

  0x000000010ff4fc7c: ; ImmutableOopMap {rcx=Oop rdx=Oop rsi=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
  0x000000010ff4fc7c: ffe9 c8fb 

  0x000000010ff4fc80: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000010ff4fc80: ffff e8b9 

  0x000000010ff4fc84: ; ImmutableOopMap {rcx=Oop rdx=Oop rsi=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@28 (line 13)
                      ;   {external_word}
  0x000000010ff4fc84: a894 ff48 | bf69 6b32 | 0a01 0000 | 0048 83e4 

  0x000000010ff4fc94: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000010ff4fc94: f0e8 b612 

  0x000000010ff4fc98: ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x000000010ff4fc98: d9f9 f4e8 

  0x000000010ff4fc9c: ; ImmutableOopMap {[144]=Oop [136]=Oop [152]=Oop }
                      ;*ldiv {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@58 (line 18)
  0x000000010ff4fc9c: a0ab 94ff 

  0x000000010ff4fca0: ;   {external_word}
  0x000000010ff4fca0: 48bf 696b | 320a 0100 | 0000 4883 

  0x000000010ff4fcac: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000010ff4fcac: e4f0 e89d | 12d9 f9f4 
 ;; DivByZeroStub slow case
  0x000000010ff4fcb4: ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x000000010ff4fcb4: e887 ab94 

  0x000000010ff4fcb8: ; ImmutableOopMap {[152]=Oop [136]=Oop [144]=Oop }
                      ;*ldiv {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@66 (line 19)
                      ;   {external_word}
  0x000000010ff4fcb8: ff48 bf69 | 6b32 0a01 | 0000 0048 

  0x000000010ff4fcc4: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000010ff4fcc4: 83e4 f0e8 | 8412 d9f9 | f448 8934 | 2448 8954 

  0x000000010ff4fcd4: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000010ff4fcd4: 2408 e865 

  0x000000010ff4fcd8: ; ImmutableOopMap {[152]=Oop rdx=Oop rcx=Oop }
                      ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@90 (line 24)
                      ;   {external_word}
  0x000000010ff4fcd8: b194 ff48 | bf69 6b32 | 0a01 0000 | 0048 83e4 

  0x000000010ff4fce8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000010ff4fce8: f0e8 6212 

  0x000000010ff4fcec: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000010ff4fcec: d9f9 f4e8 

  0x000000010ff4fcf0: ; ImmutableOopMap {[152]=Oop rdx=Oop rcx=Oop }
                      ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
  0x000000010ff4fcf0: 4ca8 94ff 

  0x000000010ff4fcf4: ;   {external_word}
  0x000000010ff4fcf4: 48bf 696b | 320a 0100 | 0000 4883 

  0x000000010ff4fd00: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000010ff4fd00: e4f0 e849 | 12d9 f9f4 
 ;; ImplicitNullCheckStub slow case
  0x000000010ff4fd08: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000010ff4fd08: e833 a894 

  0x000000010ff4fd0c: ; ImmutableOopMap {[152]=Oop rdx=Oop rcx=Oop }
                      ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
                      ;   {external_word}
  0x000000010ff4fd0c: ff48 bf69 | 6b32 0a01 | 0000 0048 

  0x000000010ff4fd18: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000010ff4fd18: 83e4 f0e8 | 3012 d9f9 | f448 8934 | 2448 894c 

  0x000000010ff4fd28: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000010ff4fd28: 2408 e811 

  0x000000010ff4fd2c: ; ImmutableOopMap {[152]=Oop rdx=Oop rcx=Oop }
                      ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
                      ;   {external_word}
  0x000000010ff4fd2c: b194 ff48 | bf69 6b32 | 0a01 0000 | 0048 83e4 

  0x000000010ff4fd3c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000010ff4fd3c: f0e8 0e12 

  0x000000010ff4fd40: ;   {metadata({method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression')}
  0x000000010ff4fd40: d9f9 f449 | ba60 fac8 | 0e01 0000 | 004c 8954 | 2408 48c7 | 0424 8000 

  0x000000010ff4fd58: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000010ff4fd58: 0000 e861 

  0x000000010ff4fd5c: ; ImmutableOopMap {[152]=Oop rdx=Oop rcx=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
  0x000000010ff4fd5c: 4894 ffe9 | 60fc ffff 
 ;; DivByZeroStub slow case
  0x000000010ff4fd64: ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x000000010ff4fd64: e8d7 aa94 

  0x000000010ff4fd68: ; ImmutableOopMap {[152]=Oop }
                      ;*ldiv {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
                      ;   {external_word}
  0x000000010ff4fd68: ff48 bf69 | 6b32 0a01 | 0000 0048 

  0x000000010ff4fd74: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000010ff4fd74: 83e4 f0e8 | d411 d9f9 

  0x000000010ff4fd7c: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000010ff4fd7c: f4e8 bea7 

  0x000000010ff4fd80: ; ImmutableOopMap {rsi=Oop }
                      ;*putfield slope {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)
                      ;   {external_word}
  0x000000010ff4fd80: 94ff 48bf | 696b 320a | 0100 0000 | 4883 e4f0 

  0x000000010ff4fd90: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000010ff4fd90: e8bb 11d9 

  0x000000010ff4fd94: ;   {internal_word}
  0x000000010ff4fd94: f9f4 49ba | 71fa f40f | 0100 0000 | 4d89 97e8 

  0x000000010ff4fda4: ;   {runtime_call SafepointBlob}
  0x000000010ff4fda4: 0300 00e9 | 7414 a0ff 
 ;; PatchingStub slow case
 ;;  patch template
  0x000000010ff4fdac: ;   {metadata(NULL)}
  0x000000010ff4fdac: 48ba 0000 | 0000 0000 | 0000 b800 

  0x000000010ff4fdb8: ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000010ff4fdb8: 0f05 0ae8 

  0x000000010ff4fdbc: ; ImmutableOopMap {}
                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@7 (line 9)
  0x000000010ff4fdbc: c05a 94ff | e9bb fcff | ff48 8bd2 

  0x000000010ff4fdc8: ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000010ff4fdc8: e8f3 9c94 

  0x000000010ff4fdcc: ; ImmutableOopMap {}
                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@7 (line 9)
  0x000000010ff4fdcc: ffe9 05fd | ffff 9090 
 ;; Unwind handler
  0x000000010ff4fdd4: 498b 8750 | 0400 0049 | c787 5004 | 0000 0000 | 0000 49c7 | 8758 0400 | 0000 0000 | 0048 81c4 
  0x000000010ff4fdf4: c000 0000 

  0x000000010ff4fdf8: ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000010ff4fdf8: 5de9 42ba | 94ff f4f4 
[Stub Code]
  0x000000010ff4fe00: ;   {no_reloc}
  0x000000010ff4fe00: 9090 9090 

  0x000000010ff4fe04: ;   {static_stub}
  0x000000010ff4fe04: 9048 bb00 | 0000 0000 

  0x000000010ff4fe0c: ;   {runtime_call}
  0x000000010ff4fe0c: 0000 00e9 | fbff ffff 
[Exception Handler]
  0x000000010ff4fe14: 48bb adde | 0000 0000 | 0000 48b9 | adde 0000 | 0000 0000 | 48be adde | 0000 0000 | 0000 48bf 
  0x000000010ff4fe34: adde 0000 | 0000 0000 

  0x000000010ff4fe3c: ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000010ff4fe3c: e89f 8294 

  0x000000010ff4fe40: ;   {external_word}
  0x000000010ff4fe40: ff48 bf69 | 6b32 0a01 | 0000 0048 

  0x000000010ff4fe4c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000010ff4fe4c: 83e4 f0e8 | fc10 d9f9 

  0x000000010ff4fe54: ;   {section_word}
  0x000000010ff4fe54: f449 ba55 | fef4 0f01 | 0000 0041 

  0x000000010ff4fe60: ;   {runtime_call DeoptimizationBlob}
  0x000000010ff4fe60: 52e9 fa09 | a0ff f4f4 
[/MachCode]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x000000010ff4fe68:   0x000000011ed59890 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011ed59890}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x000000010ff4fe70:   0x000000010ec8fa60 {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x000000010ff4f73f offset=ffffffff bits=0):
PcDesc(pc=0x000000010ff4f797 offset=57 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@0 (line 9)
PcDesc(pc=0x000000010ff4f79a offset=5a bits=0):   org.jml.regression.linear.LongLinearRegression::fit@1 (line 9)
PcDesc(pc=0x000000010ff4f79d offset=5d bits=0):   org.jml.regression.linear.LongLinearRegression::fit@3 (line 9)
PcDesc(pc=0x000000010ff4f7d5 offset=95 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@4 (line 9)
PcDesc(pc=0x000000010ff4f7f3 offset=b3 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@25 (line 13)
PcDesc(pc=0x000000010ff4f809 offset=c9 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@36 (line 14)
PcDesc(pc=0x000000010ff4f81d offset=dd bits=0):   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
PcDesc(pc=0x000000010ff4f84a offset=10a bits=0):   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
PcDesc(pc=0x000000010ff4f851 offset=111 bits=1):   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)  reexecute=true
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: reg r9 [18],long
    - l5: 0
    - l6: reg r8 [16],long
    - l7: reg rdi [14],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff4f86a offset=12a bits=0):   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
PcDesc(pc=0x000000010ff4f86e offset=12e bits=0):   org.jml.regression.linear.LongLinearRegression::fit@28 (line 13)
PcDesc(pc=0x000000010ff4f8a7 offset=167 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
PcDesc(pc=0x000000010ff4f8ec offset=1ac bits=0):   org.jml.regression.linear.LongLinearRegression::fit@58 (line 18)
PcDesc(pc=0x000000010ff4f913 offset=1d3 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@66 (line 19)
PcDesc(pc=0x000000010ff4f951 offset=211 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@78 (line 23)
PcDesc(pc=0x000000010ff4f969 offset=229 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@90 (line 24)
PcDesc(pc=0x000000010ff4f98d offset=24d bits=0):   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
PcDesc(pc=0x000000010ff4f9c4 offset=284 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
PcDesc(pc=0x000000010ff4f9cb offset=28b bits=1):   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)  reexecute=true
   Locals
    - l0: stack[152],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[160],long
    - l9: 0
    - l10: reg r9 [18],long
    - l11: 0
    - l12: reg r11 [22],long
    - l13: 0
    - l14: reg rax [0],long
    - l15: reg rsi [12],int
PcDesc(pc=0x000000010ff4f9e4 offset=2a4 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
PcDesc(pc=0x000000010ff4fa25 offset=2e5 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
PcDesc(pc=0x000000010ff4fa42 offset=302 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
PcDesc(pc=0x000000010ff4fa4e offset=30e bits=0):   org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)
PcDesc(pc=0x000000010ff4fa69 offset=329 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@151 (line 30)
PcDesc(pc=0x000000010ff4fa7f offset=33f bits=0):   org.jml.regression.linear.LongLinearRegression::fit@154 (line 31)
PcDesc(pc=0x000000010ff4fad7 offset=397 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@7 (line 9)
PcDesc(pc=0x000000010ff4faf9 offset=3b9 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@13 (line 9)
PcDesc(pc=0x000000010ff4fb0c offset=3cc bits=0):   org.jml.regression.linear.LongLinearRegression::fit@13 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: stack[176],oop
PcDesc(pc=0x000000010ff4fb19 offset=3d9 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@16 (line 9)
PcDesc(pc=0x000000010ff4fbb4 offset=474 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@-1 (line 9)
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff4fbbe offset=47e bits=0):   org.jml.regression.linear.LongLinearRegression::fit@1 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff4fbd7 offset=497 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@3 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff4fbf9 offset=4b9 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@36 (line 14)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff4fc12 offset=4d2 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff4fc2b offset=4eb bits=0):   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff4fc4d offset=50d bits=0):   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff4fc7d offset=53d bits=1):   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)  reexecute=true
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: reg r9 [18],long
    - l5: 0
    - l6: reg r8 [16],long
    - l7: reg rdi [14],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff4fc87 offset=547 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@28 (line 13)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff4fca0 offset=560 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@58 (line 18)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff4fcb9 offset=579 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@66 (line 19)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff4fcdb offset=59b bits=0):   org.jml.regression.linear.LongLinearRegression::fit@90 (line 24)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff4fcf4 offset=5b4 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff4fd0d offset=5cd bits=0):   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff4fd2f offset=5ef bits=0):   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff4fd5f offset=61f bits=1):   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)  reexecute=true
   Locals
    - l0: stack[152],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[160],long
    - l9: 0
    - l10: reg r9 [18],long
    - l11: 0
    - l12: reg r11 [22],long
    - l13: 0
    - l14: reg rax [0],long
    - l15: reg rsi [12],int
PcDesc(pc=0x000000010ff4fd69 offset=629 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff4fd82 offset=642 bits=1):   org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff4fdc0 offset=680 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@7 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff4fdcd offset=68d bits=0):   org.jml.regression.linear.LongLinearRegression::fit@7 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff4fe69 offset=729 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 23 OopMaps

ImmutableOopMap {rcx=Oop rdx=Oop rsi=Oop } pc offsets: 273 
ImmutableOopMap {[152]=Oop rdx=Oop rcx=Oop } pc offsets: 651 
ImmutableOopMap {[176]=Oop } pc offsets: 972 
ImmutableOopMap {rsi=Oop rdx=Oop rcx=Oop } pc offsets: 1140 1150 1175 
ImmutableOopMap {rcx=Oop rdx=Oop rsi=Oop } pc offsets: 1209 1234 1259 1293 1341 1351 
ImmutableOopMap {[144]=Oop [136]=Oop [152]=Oop } pc offsets: 1376 
ImmutableOopMap {[152]=Oop [136]=Oop [144]=Oop } pc offsets: 1401 
ImmutableOopMap {[152]=Oop rdx=Oop rcx=Oop } pc offsets: 1435 1460 1485 1519 1567 
ImmutableOopMap {[152]=Oop } pc offsets: 1577 
ImmutableOopMap {rsi=Oop } pc offsets: 1602 
ImmutableOopMap {} pc offsets: 1664 1677 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x000000010ff4f797 offset=57):
   org.jml.regression.linear.LongLinearRegression::fit@0 (line 9)
ScopeDesc(pc=0x000000010ff4f79a offset=5a):
   org.jml.regression.linear.LongLinearRegression::fit@1 (line 9)
ScopeDesc(pc=0x000000010ff4f79d offset=5d):
   org.jml.regression.linear.LongLinearRegression::fit@3 (line 9)
ScopeDesc(pc=0x000000010ff4f7d5 offset=95):
   org.jml.regression.linear.LongLinearRegression::fit@4 (line 9)
ScopeDesc(pc=0x000000010ff4f7f3 offset=b3):
   org.jml.regression.linear.LongLinearRegression::fit@25 (line 13)
ScopeDesc(pc=0x000000010ff4f809 offset=c9):
   org.jml.regression.linear.LongLinearRegression::fit@36 (line 14)
ScopeDesc(pc=0x000000010ff4f81d offset=dd):
   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
ScopeDesc(pc=0x000000010ff4f84a offset=10a):
   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
ScopeDesc(pc=0x000000010ff4f851 offset=111):
   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)  reexecute=true
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: reg r9 [18],long
    - l5: 0
    - l6: reg r8 [16],long
    - l7: reg rdi [14],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x000000010ff4f86a offset=12a):
   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
ScopeDesc(pc=0x000000010ff4f86e offset=12e):
   org.jml.regression.linear.LongLinearRegression::fit@28 (line 13)
ScopeDesc(pc=0x000000010ff4f8a7 offset=167):
   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
ScopeDesc(pc=0x000000010ff4f8ec offset=1ac):
   org.jml.regression.linear.LongLinearRegression::fit@58 (line 18)
ScopeDesc(pc=0x000000010ff4f913 offset=1d3):
   org.jml.regression.linear.LongLinearRegression::fit@66 (line 19)
ScopeDesc(pc=0x000000010ff4f951 offset=211):
   org.jml.regression.linear.LongLinearRegression::fit@78 (line 23)
ScopeDesc(pc=0x000000010ff4f969 offset=229):
   org.jml.regression.linear.LongLinearRegression::fit@90 (line 24)
ScopeDesc(pc=0x000000010ff4f98d offset=24d):
   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
ScopeDesc(pc=0x000000010ff4f9c4 offset=284):
   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
ScopeDesc(pc=0x000000010ff4f9cb offset=28b):
   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)  reexecute=true
   Locals
    - l0: stack[152],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[160],long
    - l9: 0
    - l10: reg r9 [18],long
    - l11: 0
    - l12: reg r11 [22],long
    - l13: 0
    - l14: reg rax [0],long
    - l15: reg rsi [12],int
ScopeDesc(pc=0x000000010ff4f9e4 offset=2a4):
   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
ScopeDesc(pc=0x000000010ff4fa25 offset=2e5):
   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
ScopeDesc(pc=0x000000010ff4fa42 offset=302):
   org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
ScopeDesc(pc=0x000000010ff4fa4e offset=30e):
   org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)
ScopeDesc(pc=0x000000010ff4fa69 offset=329):
   org.jml.regression.linear.LongLinearRegression::fit@151 (line 30)
ScopeDesc(pc=0x000000010ff4fa7f offset=33f):
   org.jml.regression.linear.LongLinearRegression::fit@154 (line 31)
ScopeDesc(pc=0x000000010ff4fad7 offset=397):
   org.jml.regression.linear.LongLinearRegression::fit@7 (line 9)
ScopeDesc(pc=0x000000010ff4faf9 offset=3b9):
   org.jml.regression.linear.LongLinearRegression::fit@13 (line 9)
ScopeDesc(pc=0x000000010ff4fb0c offset=3cc):
   org.jml.regression.linear.LongLinearRegression::fit@13 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: stack[176],oop
ScopeDesc(pc=0x000000010ff4fb19 offset=3d9):
   org.jml.regression.linear.LongLinearRegression::fit@16 (line 9)
ScopeDesc(pc=0x000000010ff4fbb4 offset=474):
   org.jml.regression.linear.LongLinearRegression::fit@-1 (line 9)
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x000000010ff4fbbe offset=47e):
   org.jml.regression.linear.LongLinearRegression::fit@1 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x000000010ff4fbd7 offset=497):
   org.jml.regression.linear.LongLinearRegression::fit@3 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x000000010ff4fbf9 offset=4b9):
   org.jml.regression.linear.LongLinearRegression::fit@36 (line 14)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x000000010ff4fc12 offset=4d2):
   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x000000010ff4fc2b offset=4eb):
   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x000000010ff4fc4d offset=50d):
   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x000000010ff4fc7d offset=53d):
   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)  reexecute=true
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: reg r9 [18],long
    - l5: 0
    - l6: reg r8 [16],long
    - l7: reg rdi [14],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x000000010ff4fc87 offset=547):
   org.jml.regression.linear.LongLinearRegression::fit@28 (line 13)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x000000010ff4fca0 offset=560):
   org.jml.regression.linear.LongLinearRegression::fit@58 (line 18)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x000000010ff4fcb9 offset=579):
   org.jml.regression.linear.LongLinearRegression::fit@66 (line 19)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x000000010ff4fcdb offset=59b):
   org.jml.regression.linear.LongLinearRegression::fit@90 (line 24)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x000000010ff4fcf4 offset=5b4):
   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x000000010ff4fd0d offset=5cd):
   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x000000010ff4fd2f offset=5ef):
   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x000000010ff4fd5f offset=61f):
   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)  reexecute=true
   Locals
    - l0: stack[152],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[160],long
    - l9: 0
    - l10: reg r9 [18],long
    - l11: 0
    - l12: reg r11 [22],long
    - l13: 0
    - l14: reg rax [0],long
    - l15: reg rsi [12],int
ScopeDesc(pc=0x000000010ff4fd69 offset=629):
   org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x000000010ff4fd82 offset=642):
   org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x000000010ff4fdc0 offset=680):
   org.jml.regression.linear.LongLinearRegression::fit@7 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x000000010ff4fdcd offset=68d):
   org.jml.regression.linear.LongLinearRegression::fit@7 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x000000010ff4f608: 600b
relocInfo@0x000000010ff4f608 [type=6(runtime_call) addr=0x000000010ff4f74b offset=11] | [destination=0x000000010f94f920]
         @0x000000010ff4f60a: c024
relocInfo@0x000000010ff4f60a [type=12(metadata) addr=0x000000010ff4f76f offset=36] | [metadata_addr=0x000000010ff4f771 *=0x000000010ef00000 offset=0]metadata_value=0x000000010ef00000: method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
         @0x000000010ff4f60c: c030
relocInfo@0x000000010ff4f60c [type=12(metadata) addr=0x000000010ff4f79f offset=48] | [metadata_addr=0x000000010ff4f7a1 *=0x000000010ef00000 offset=0]metadata_value=0x000000010ef00000: method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
         @0x000000010ff4f60e: c083
relocInfo@0x000000010ff4f60e [type=12(metadata) addr=0x000000010ff4f822 offset=131] | [metadata_addr=0x000000010ff4f824 *=0x000000010ef00000 offset=0]metadata_value=0x000000010ef00000: method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
         @0x000000010ff4f610: a02f
relocInfo@0x000000010ff4f610 [type=10(poll) addr=0x000000010ff4f851 offset=47]
         @0x000000010ff4f612: c003
relocInfo@0x000000010ff4f612 [type=12(metadata) addr=0x000000010ff4f854 offset=3] | [metadata_addr=0x000000010ff4f856 *=0x000000010ef00000 offset=0]metadata_value=0x000000010ef00000: method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
         @0x000000010ff4f614: c01d
relocInfo@0x000000010ff4f614 [type=12(metadata) addr=0x000000010ff4f871 offset=29] | [metadata_addr=0x000000010ff4f873 *=0x000000010ef00000 offset=0]metadata_value=0x000000010ef00000: method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
         @0x000000010ff4f616: 6476
relocInfo@0x000000010ff4f616 [type=6(runtime_call) addr=0x000000010ff4f8e7 offset=118 format=1] | [destination=0x0000000109f751b0]
         @0x000000010ff4f618: 6427
relocInfo@0x000000010ff4f618 [type=6(runtime_call) addr=0x000000010ff4f90e offset=39 format=1] | [destination=0x0000000109f751b0]
         @0x000000010ff4f61a: c08e
relocInfo@0x000000010ff4f61a [type=12(metadata) addr=0x000000010ff4f99c offset=142] | [metadata_addr=0x000000010ff4f99e *=0x000000010ef00000 offset=0]metadata_value=0x000000010ef00000: method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
         @0x000000010ff4f61c: a02f
relocInfo@0x000000010ff4f61c [type=10(poll) addr=0x000000010ff4f9cb offset=47]
         @0x000000010ff4f61e: c003
relocInfo@0x000000010ff4f61e [type=12(metadata) addr=0x000000010ff4f9ce offset=3] | [metadata_addr=0x000000010ff4f9d0 *=0x000000010ef00000 offset=0]metadata_value=0x000000010ef00000: method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
         @0x000000010ff4f620: c021
relocInfo@0x000000010ff4f620 [type=12(metadata) addr=0x000000010ff4f9ef offset=33] | [metadata_addr=0x000000010ff4f9f1 *=0x000000010ef00000 offset=0]metadata_value=0x000000010ef00000: method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
         @0x000000010ff4f622: 644e
relocInfo@0x000000010ff4f622 [type=6(runtime_call) addr=0x000000010ff4fa3d offset=78 format=1] | [destination=0x0000000109f751b0]
         @0x000000010ff4f624: b034
relocInfo@0x000000010ff4f624 [type=11(poll_return) addr=0x000000010ff4fa71 offset=52]
         @0x000000010ff4f626: 000f
relocInfo@0x000000010ff4f626 [type=0(none) addr=0x000000010ff4fa80 offset=15]
         @0x000000010ff4f628: c05a
relocInfo@0x000000010ff4f628 [type=12(metadata) addr=0x000000010ff4fada offset=90] | [metadata_addr=0x000000010ff4fadc *=0x000000010ef00000 offset=0]metadata_value=0x000000010ef00000: method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
         @0x000000010ff4f62a: 1012
relocInfo@0x000000010ff4f62a [type=1(oop) addr=0x000000010ff4faec offset=18] | [oop_addr=0x000000010ff4faee *=0x0000000197f00000 offset=0]
         @0x000000010ff4f62c: 341b
relocInfo@0x000000010ff4f62c [type=3(opt_virtual_call) addr=0x000000010ff4fb07 offset=27 format=1] | [destination=0x000000010f94fc20 metadata=0x0000000000000000]
         @0x000000010ff4f62e: 645a
relocInfo@0x000000010ff4f62e [type=6(runtime_call) addr=0x000000010ff4fb61 offset=90 format=1] | [destination=0x0000000109f810a0]
         @0x000000010ff4f630: c037
relocInfo@0x000000010ff4f630 [type=12(metadata) addr=0x000000010ff4fb98 offset=55] | [metadata_addr=0x000000010ff4fb9a *=0x000000010ec8fa60 offset=0]metadata_value=0x000000010ec8fa60: {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
         @0x000000010ff4f632: 6417
relocInfo@0x000000010ff4f632 [type=6(runtime_call) addr=0x000000010ff4fbaf offset=23 format=1] | [destination=0x000000010f8945c0]
         @0x000000010ff4f634: 640a
relocInfo@0x000000010ff4f634 [type=6(runtime_call) addr=0x000000010ff4fbb9 offset=10 format=1] | [destination=0x000000010f89a540]
         @0x000000010ff4f636: f8030a326b6900017005
relocInfo@0x000000010ff4f63e [type=7(external_word) addr=0x000000010ff4fbbe offset=5 data={0a326b690001}] | [target=0x000000010a326b69]
         @0x000000010ff4f640: 640e
relocInfo@0x000000010ff4f640 [type=6(runtime_call) addr=0x000000010ff4fbcc offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x000000010ff4f642: 6406
relocInfo@0x000000010ff4f642 [type=6(runtime_call) addr=0x000000010ff4fbd2 offset=6 format=1] | [destination=0x000000010f89a540]
         @0x000000010ff4f644: f8030a326b6900017005
relocInfo@0x000000010ff4f64c [type=7(external_word) addr=0x000000010ff4fbd7 offset=5 data={0a326b690001}] | [target=0x000000010a326b69]
         @0x000000010ff4f64e: 640e
relocInfo@0x000000010ff4f64e [type=6(runtime_call) addr=0x000000010ff4fbe5 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x000000010ff4f650: 640f
relocInfo@0x000000010ff4f650 [type=6(runtime_call) addr=0x000000010ff4fbf4 offset=15 format=1] | [destination=0x000000010f89ae40]
         @0x000000010ff4f652: f8030a326b6900017005
relocInfo@0x000000010ff4f65a [type=7(external_word) addr=0x000000010ff4fbf9 offset=5 data={0a326b690001}] | [target=0x000000010a326b69]
         @0x000000010ff4f65c: 640e
relocInfo@0x000000010ff4f65c [type=6(runtime_call) addr=0x000000010ff4fc07 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x000000010ff4f65e: 6406
relocInfo@0x000000010ff4f65e [type=6(runtime_call) addr=0x000000010ff4fc0d offset=6 format=1] | [destination=0x000000010f89a540]
         @0x000000010ff4f660: f8030a326b6900017005
relocInfo@0x000000010ff4f668 [type=7(external_word) addr=0x000000010ff4fc12 offset=5 data={0a326b690001}] | [target=0x000000010a326b69]
         @0x000000010ff4f66a: 640e
relocInfo@0x000000010ff4f66a [type=6(runtime_call) addr=0x000000010ff4fc20 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x000000010ff4f66c: 6406
relocInfo@0x000000010ff4f66c [type=6(runtime_call) addr=0x000000010ff4fc26 offset=6 format=1] | [destination=0x000000010f89a540]
         @0x000000010ff4f66e: f8030a326b6900017005
relocInfo@0x000000010ff4f676 [type=7(external_word) addr=0x000000010ff4fc2b offset=5 data={0a326b690001}] | [target=0x000000010a326b69]
         @0x000000010ff4f678: 640e
relocInfo@0x000000010ff4f678 [type=6(runtime_call) addr=0x000000010ff4fc39 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x000000010ff4f67a: 640f
relocInfo@0x000000010ff4f67a [type=6(runtime_call) addr=0x000000010ff4fc48 offset=15 format=1] | [destination=0x000000010f89ae40]
         @0x000000010ff4f67c: f8030a326b6900017005
relocInfo@0x000000010ff4f684 [type=7(external_word) addr=0x000000010ff4fc4d offset=5 data={0a326b690001}] | [target=0x000000010a326b69]
         @0x000000010ff4f686: 640e
relocInfo@0x000000010ff4f686 [type=6(runtime_call) addr=0x000000010ff4fc5b offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x000000010ff4f688: c006
relocInfo@0x000000010ff4f688 [type=12(metadata) addr=0x000000010ff4fc61 offset=6] | [metadata_addr=0x000000010ff4fc63 *=0x000000010ec8fa60 offset=0]metadata_value=0x000000010ec8fa60: {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
         @0x000000010ff4f68a: 6417
relocInfo@0x000000010ff4f68a [type=6(runtime_call) addr=0x000000010ff4fc78 offset=23 format=1] | [destination=0x000000010f8945c0]
         @0x000000010ff4f68c: 640a
relocInfo@0x000000010ff4f68c [type=6(runtime_call) addr=0x000000010ff4fc82 offset=10 format=1] | [destination=0x000000010f89a540]
         @0x000000010ff4f68e: f8030a326b6900017005
relocInfo@0x000000010ff4f696 [type=7(external_word) addr=0x000000010ff4fc87 offset=5 data={0a326b690001}] | [target=0x000000010a326b69]
         @0x000000010ff4f698: 640e
relocInfo@0x000000010ff4f698 [type=6(runtime_call) addr=0x000000010ff4fc95 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x000000010ff4f69a: 6406
relocInfo@0x000000010ff4f69a [type=6(runtime_call) addr=0x000000010ff4fc9b offset=6 format=1] | [destination=0x000000010f89a840]
         @0x000000010ff4f69c: f8030a326b6900017005
relocInfo@0x000000010ff4f6a4 [type=7(external_word) addr=0x000000010ff4fca0 offset=5 data={0a326b690001}] | [target=0x000000010a326b69]
         @0x000000010ff4f6a6: 640e
relocInfo@0x000000010ff4f6a6 [type=6(runtime_call) addr=0x000000010ff4fcae offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x000000010ff4f6a8: 6406
relocInfo@0x000000010ff4f6a8 [type=6(runtime_call) addr=0x000000010ff4fcb4 offset=6 format=1] | [destination=0x000000010f89a840]
         @0x000000010ff4f6aa: f8030a326b6900017005
relocInfo@0x000000010ff4f6b2 [type=7(external_word) addr=0x000000010ff4fcb9 offset=5 data={0a326b690001}] | [target=0x000000010a326b69]
         @0x000000010ff4f6b4: 640e
relocInfo@0x000000010ff4f6b4 [type=6(runtime_call) addr=0x000000010ff4fcc7 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x000000010ff4f6b6: 640f
relocInfo@0x000000010ff4f6b6 [type=6(runtime_call) addr=0x000000010ff4fcd6 offset=15 format=1] | [destination=0x000000010f89ae40]
         @0x000000010ff4f6b8: f8030a326b6900017005
relocInfo@0x000000010ff4f6c0 [type=7(external_word) addr=0x000000010ff4fcdb offset=5 data={0a326b690001}] | [target=0x000000010a326b69]
         @0x000000010ff4f6c2: 640e
relocInfo@0x000000010ff4f6c2 [type=6(runtime_call) addr=0x000000010ff4fce9 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x000000010ff4f6c4: 6406
relocInfo@0x000000010ff4f6c4 [type=6(runtime_call) addr=0x000000010ff4fcef offset=6 format=1] | [destination=0x000000010f89a540]
         @0x000000010ff4f6c6: f8030a326b6900017005
relocInfo@0x000000010ff4f6ce [type=7(external_word) addr=0x000000010ff4fcf4 offset=5 data={0a326b690001}] | [target=0x000000010a326b69]
         @0x000000010ff4f6d0: 640e
relocInfo@0x000000010ff4f6d0 [type=6(runtime_call) addr=0x000000010ff4fd02 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x000000010ff4f6d2: 6406
relocInfo@0x000000010ff4f6d2 [type=6(runtime_call) addr=0x000000010ff4fd08 offset=6 format=1] | [destination=0x000000010f89a540]
         @0x000000010ff4f6d4: f8030a326b6900017005
relocInfo@0x000000010ff4f6dc [type=7(external_word) addr=0x000000010ff4fd0d offset=5 data={0a326b690001}] | [target=0x000000010a326b69]
         @0x000000010ff4f6de: 640e
relocInfo@0x000000010ff4f6de [type=6(runtime_call) addr=0x000000010ff4fd1b offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x000000010ff4f6e0: 640f
relocInfo@0x000000010ff4f6e0 [type=6(runtime_call) addr=0x000000010ff4fd2a offset=15 format=1] | [destination=0x000000010f89ae40]
         @0x000000010ff4f6e2: f8030a326b6900017005
relocInfo@0x000000010ff4f6ea [type=7(external_word) addr=0x000000010ff4fd2f offset=5 data={0a326b690001}] | [target=0x000000010a326b69]
         @0x000000010ff4f6ec: 640e
relocInfo@0x000000010ff4f6ec [type=6(runtime_call) addr=0x000000010ff4fd3d offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x000000010ff4f6ee: c006
relocInfo@0x000000010ff4f6ee [type=12(metadata) addr=0x000000010ff4fd43 offset=6] | [metadata_addr=0x000000010ff4fd45 *=0x000000010ec8fa60 offset=0]metadata_value=0x000000010ec8fa60: {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
         @0x000000010ff4f6f0: 6417
relocInfo@0x000000010ff4f6f0 [type=6(runtime_call) addr=0x000000010ff4fd5a offset=23 format=1] | [destination=0x000000010f8945c0]
         @0x000000010ff4f6f2: 640a
relocInfo@0x000000010ff4f6f2 [type=6(runtime_call) addr=0x000000010ff4fd64 offset=10 format=1] | [destination=0x000000010f89a840]
         @0x000000010ff4f6f4: f8030a326b6900017005
relocInfo@0x000000010ff4f6fc [type=7(external_word) addr=0x000000010ff4fd69 offset=5 data={0a326b690001}] | [target=0x000000010a326b69]
         @0x000000010ff4f6fe: 640e
relocInfo@0x000000010ff4f6fe [type=6(runtime_call) addr=0x000000010ff4fd77 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x000000010ff4f700: 6406
relocInfo@0x000000010ff4f700 [type=6(runtime_call) addr=0x000000010ff4fd7d offset=6 format=1] | [destination=0x000000010f89a540]
         @0x000000010ff4f702: f8030a326b6900017005
relocInfo@0x000000010ff4f70a [type=7(external_word) addr=0x000000010ff4fd82 offset=5 data={0a326b690001}] | [target=0x000000010a326b69]
         @0x000000010ff4f70c: 640e
relocInfo@0x000000010ff4f70c [type=6(runtime_call) addr=0x000000010ff4fd90 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x000000010ff4f70e: f3258006
relocInfo@0x000000010ff4f710 [type=8(internal_word) addr=0x000000010ff4fd96 offset=6 data=805] | [target=0x000000010ff4fa71]
         @0x000000010ff4f712: 6411
relocInfo@0x000000010ff4f712 [type=6(runtime_call) addr=0x000000010ff4fda7 offset=17 format=1] | [destination=0x000000010f951220]
         @0x000000010ff4f714: c005
relocInfo@0x000000010ff4f714 [type=12(metadata) addr=0x000000010ff4fdac offset=5] | [metadata_addr=0x000000010ff4fdae *=0x0000000000000000 offset=0]
         @0x000000010ff4f716: 640f
relocInfo@0x000000010ff4f716 [type=6(runtime_call) addr=0x000000010ff4fdbb offset=15 format=1] | [destination=0x000000010f895880]
         @0x000000010ff4f718: 640d
relocInfo@0x000000010ff4f718 [type=6(runtime_call) addr=0x000000010ff4fdc8 offset=13 format=1] | [destination=0x000000010f899ac0]
         @0x000000010ff4f71a: 6431
relocInfo@0x000000010ff4f71a [type=6(runtime_call) addr=0x000000010ff4fdf9 offset=49 format=1] | [destination=0x000000010f89b840]
         @0x000000010ff4f71c: 0007
relocInfo@0x000000010ff4f71c [type=0(none) addr=0x000000010ff4fe00 offset=7]
         @0x000000010ff4f71e: f801fc395005
relocInfo@0x000000010ff4f722 [type=5(static_stub) addr=0x000000010ff4fe05 offset=5 data=-967] | [static_call=0x000000010ff4fb07]
         @0x000000010ff4f724: c000
relocInfo@0x000000010ff4f724 [type=12(metadata) addr=0x000000010ff4fe05 offset=0] | [metadata_addr=0x000000010ff4fe07 *=0x0000000000000000 offset=0]
         @0x000000010ff4f726: 640a
relocInfo@0x000000010ff4f726 [type=6(runtime_call) addr=0x000000010ff4fe0f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000010ff4f728: 642d
relocInfo@0x000000010ff4f728 [type=6(runtime_call) addr=0x000000010ff4fe3c offset=45 format=1] | [destination=0x000000010f8980e0]
         @0x000000010ff4f72a: f8030a326b6900017005
relocInfo@0x000000010ff4f732 [type=7(external_word) addr=0x000000010ff4fe41 offset=5 data={0a326b690001}] | [target=0x000000010a326b69]
         @0x000000010ff4f734: 640e
relocInfo@0x000000010ff4f734 [type=6(runtime_call) addr=0x000000010ff4fe4f offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x000000010ff4f736: f801feae9006
relocInfo@0x000000010ff4f73a [type=9(section_word) addr=0x000000010ff4fe55 offset=6 data=-338] | [target=0x000000010ff4fe55]
         @0x000000010ff4f73c: 640c
relocInfo@0x000000010ff4f73c [type=6(runtime_call) addr=0x000000010ff4fe61 offset=12 format=1] | [destination=0x000000010f950860]
         @0x000000010ff4f73e: 0000
relocInfo@0x000000010ff4f73e [type=0(none) addr=0x000000010ff4fe61 offset=0]
         @0x000000010ff4f740: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 8 entries, 68 bytes):
{
   < 0x000000010ff4f797, 0x000000010ff4fbb9 > < 0x000000010ff4f79a, 0x000000010ff4fbd2 > < 0x000000010ff4f80c, 0x000000010ff4fc0d > 
   < 0x000000010ff4f80c, 0x000000010ff4fc26 > < 0x000000010ff4f86a, 0x000000010ff4fc82 > < 0x000000010ff4f97c, 0x000000010ff4fcef > 
   < 0x000000010ff4f97c, 0x000000010ff4fd08 > < 0x000000010ff4fa4a, 0x000000010ff4fd7d > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 NULL-oop
#1: 0x000000011ed59890 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011ed59890}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
#0: 0x0000000000000000 NULL-oop
#1: 0x000000010ec8fa60 {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

============================= C2-compiled nmethod ==============================
----------------------- MetaData before Compile_id = 976 ------------------------
{method}
 - this oop:          0x000000010ec8fa60
 - method holder:     'org/jml/regression/linear/LongLinearRegression'
 - constants:         0x000000010ec8f518 constant pool [71]/operands[5] {0x000000010ec8f518} for 'org/jml/regression/linear/LongLinearRegression' cache=0x000000010ec8fe20
 - access:            0xc1000001  public 
 - name:              'fit'
 - signature:         '([J[J)V'
 - max stack:         9
 - max locals:        16
 - size of params:    3
 - method size:       13
 - vtable index:      5
 - i2i entry:         0x000000010f847e20
 - adapters:          AHE@0x00007f87c7837270: 0xbbb00000 i2c: 0x000000010f8bfee0 c2i: 0x000000010f8bffbf c2iUV: 0x000000010f8bff92 c2iNCI: 0x000000010f8bfffc
 - compiled entry     0x000000010f8bffbf
 - code size:         155
 - code start:        0x000000010ec8f928
 - code end (excl):   0x000000010ec8f9c3
 - method data:       0x000000010ef00000
 - checked ex length: 0
 - linenumber start:  0x000000010ec8f9c3
 - localvar length:   11
 - localvar start:    0x000000010ec8f9da

------------------------ OptoAssembly for Compile_id = 976 -----------------------
#
#  void ( rawptr:BotPTR )
#
#r018 rsi:rsi   : parm 0: rawptr:BotPTR
# -- Old rsp -- Framesize: 80 --
#r583 rsp+76: in_preserve
#r582 rsp+72: return address
#r581 rsp+68: in_preserve
#r580 rsp+64: saved fp register
#r579 rsp+60: pad2, stack alignment
#r578 rsp+56: pad2, stack alignment
#r577 rsp+52: Fixed slot 1
#r576 rsp+48: Fixed slot 0
#r595 rsp+44: spill
#r594 rsp+40: spill
#r593 rsp+36: spill
#r592 rsp+32: spill
#r591 rsp+28: spill
#r590 rsp+24: spill
#r589 rsp+20: spill
#r588 rsp+16: spill
#r587 rsp+12: spill
#r586 rsp+ 8: spill
#r585 rsp+ 4: spill
#r584 rsp+ 0: spill
#
000     N436: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # breakpoint
        nop 	# 11 bytes pad for loops and calls

010     B1: #	out( B36 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
010     # stack bang (288 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #64	# Create frame

01c     movq    R10, [RSI + #120 (8-bit)]	# ptr
020     movq    [rsp + #0], R10	# spill
024     movq    RBP, [RSI + #112 (8-bit)]	# ptr
028     movl    R13, [RSI + #64 (8-bit)]	# int
02c     movq    R12, [RSI + #104 (8-bit)]	# ptr
030     movq    RBX, [RSI + #88 (8-bit)]	# long
034     movq    R14, [RSI + #72 (8-bit)]	# long
038     movq    RDI, RSI	# spill
        nop 	# 5 bytes pad for loops and calls
040     call_leaf,runtime  OSR_migration_end
        No JVM State Info
        # 
04d     movq    R10, [rsp + #0]	# spill
051     testq   R10, R10	# ptr
054     je     B36  P=0.001000 C=-1.000000

05a     B2: #	out( B44 B3 ) <- in( B1 )  Freq: 0.999
05a     movq    R11, R10	# spill
05d     movl    R10, [R10 + #8 (8-bit)]	# compressed klass ptr
061     cmpl    R10, narrowklass: precise klass org/jml/regression/linear/LongLinearRegression: 0x00007f87cbfefa20:Constant:exact *	# compressed klass ptr
068     jne,u   B44  P=0.000001 C=-1.000000

06e     B3: #	out( B4 ) <- in( B2 )  Freq: 0.998999
06e     movq    RDX, R11	# spill
071     # checkcastPP of RDX

071     B4: #	out( B37 B5 ) <- in( B3 B36 )  Freq: 0.999999
071     testq   RBP, RBP	# ptr
074     je     B37  P=0.001000 C=-1.000000

07a     B5: #	out( B44 B6 ) <- in( B4 )  Freq: 0.998999
07a     movl    R8, [RBP + #8 (8-bit)]	# compressed klass ptr
        nop 	# 2 bytes pad for loops and calls
080     cmpl    R8, narrowklass: precise klass [J: 0x00007f87cb813890:Constant:exact *	# compressed klass ptr
087     jne,u   B44  P=0.000001 C=-1.000000

08d     B6: #	out( B7 ) <- in( B5 )  Freq: 0.998998
08d     movq    R8, RBP	# spill
090     # checkcastPP of R8

090     B7: #	out( B38 B8 ) <- in( B6 B37 )  Freq: 0.999998
090     testq   R12, R12	# ptr
093     je     B38  P=0.001000 C=-1.000000

099     B8: #	out( B44 B9 ) <- in( B7 )  Freq: 0.998998
099     movl    R10, [R12 + #8 (8-bit)]	# compressed klass ptr
        nop 	# 2 bytes pad for loops and calls
0a0     cmpl    R10, narrowklass: precise klass [J: 0x00007f87cb813890:Constant:exact *	# compressed klass ptr
0a7     jne,u   B44  P=0.000001 C=-1.000000

0ad     B9: #	out( B10 ) <- in( B8 )  Freq: 0.998997
0ad     # checkcastPP of R12

0ad     B10: #	out( B45 B11 ) <- in( B9 B38 )  Freq: 0.999997
0ad     movl    RDI, [R8 + #12 (8-bit)]	# range
0b1     NullCheck R8

0b1     B11: #	out( B45 B12 ) <- in( B10 )  Freq: 0.999996
0b1     movl    RSI, [R12 + #12 (8-bit)]	# range
0b6     NullCheck R12

0b6     B12: #	out( B33 B13 ) <- in( B11 )  Freq: 0.999995
0b6     cmpl    R13, RDI
0b9     jge     B33  P=0.000000 C=8192897.000000

0bf     B13: #	out( B14 ) <- in( B12 )  Freq: 0.999994
0bf     movl    R10, R13	# spill
0c2     incl    R10	# int
0c5     xorl    R9, R9	# int
0c8     cmpl    R10, R9
0cb     cmovllt R10, R9	# max
0cf     cmpl    R10, RDI
0d2     cmovlgt R10, RDI	# min

0d6     B14: #	out( B34 B15 ) <- in( B13 B16 ) Loop( B14-B16 inner pre of N377) Freq: 1.99998
0d6     cmpl    R13, RDI	# unsigned
0d9     jnb,u   B34  P=0.000001 C=-1.000000

0df     B15: #	out( B35 B16 ) <- in( B14 )  Freq: 1.99998
0df     addq    RBX, [R8 + #16 + R13 << #3]	# long
0e4     cmpl    R13, RSI	# unsigned
0e7     jnb,u   B35  P=0.000001 C=-1.000000

0ed     B16: #	out( B14 B17 ) <- in( B15 )  Freq: 1.99998
0ed     addq    R14, [R12 + #16 + R13 << #3]	# long
0f2     incl    R13	# int
0f5     cmpl    R13, R10
0f8     jl,s   B14	# loop end  P=0.500000 C=8192897.000000

0fa     B17: #	out( B28 B18 ) <- in( B16 )  Freq: 0.99999
0fa     cmpl    RDI, RSI
0fc     movl    R10, RDI	# spill
0ff     cmovlgt R10, RSI	# min
103     movl    RCX, R10	# spill
106     addl    RCX, #-7	# int
109     movl    R11, #-2147483648	# int
10f     cmpl    R10, RCX
112     cmovll RCX, R11	# signed, int
116     cmpl    R13, RCX
119     jge     B28  P=0.000001 C=-1.000000

11f     B18: #	out( B39 B19 ) <- in( B17 )  Freq: 0.999989
11f     # castII of R13
        nop 	# 1 bytes pad for loops and calls
120     cmpl    R13, RDI	# unsigned
123     jnb,u   B39  P=0.000001 C=-1.000000

129     B19: #	out( B40 B20 ) <- in( B18 )  Freq: 0.999988
129     cmpl    R13, RSI	# unsigned
12c     jnb,u   B40  P=0.000001 C=-1.000000

132     B20: #	out( B41 B21 ) <- in( B19 )  Freq: 0.999987
132     movl    R10, R13	# spill
135     addl    R10, #7	# int
139     cmpl    R10, RSI	# unsigned
        nop 	# 4 bytes pad for loops and calls
140     jnb,u   B41  P=0.000001 C=-1.000000

146     B21: #	out( B42 B22 ) <- in( B20 )  Freq: 0.999986
146     cmpl    R10, RDI	# unsigned
149     jnb,u   B42  P=0.000001 C=-1.000000

14f     B22: #	out( B43 B23 ) <- in( B21 )  Freq: 0.999985
14f     cmpl    R13, RDI	# unsigned
152     jnb,u   B43  P=0.000001 C=-1.000000

158     B23: #	out( B25 ) <- in( B22 )  Freq: 0.999984
158     movl    R10, #8000	# int
15e     # TLS is in R15
        nop 	# 2 bytes pad for loops and calls
160     jmp,s   B25

162     B24: #	out( B28 B25 ) <- in( B27 ) top-of-loop Freq: 999984
162     movq    R11, [R15 + #304 (32-bit)]	# ptr
169     testl   rax, [R11]	# Safepoint: poll for GC        # org.jml.regression.linear.LongLinearRegression::fit @ bci:51 (line 13) L[0]=RDX L[1]=R8 L[2]=R12 L[3]=RBX L[4]=_ L[5]=R14 L[6]=_ L[7]=R13 L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_
        # OopMap {r8=Oop r12=Oop rdx=Oop off=361/0x169}
16c     cmpl    R13, RCX
16f     jge     B28  P=0.000000 C=8192897.000000

175     B25: #	out( B26 ) <- in( B23 B24 ) Loop( B25-B24 ) Freq: 999984
175     movl    R11, RCX	# spill
178     subl    R11, R13	# int
17b     cmpl    RCX, R13
17e     cmovll R11, R9	# signed, int
182     cmpl    R11, #8000	# unsigned
189     cmovlnbe R11, R10	# unsigned, int
18d     addl    R11, R13	# int

190     B26: #	out( B26 B27 ) <- in( B25 B26 ) Loop( B26-B26 inner main of N171 strip mined) Freq: 9.99984e+11
190     addq    R14, [R12 + #16 + R13 << #3]	# long
195     addq    RBX, [R8 + #16 + R13 << #3]	# long
19a     movslq  RAX, R13	# i2l
19d     addq    RBX, [R8 + #24 + RAX << #3]	# long
1a2     addq    R14, [R12 + #24 + RAX << #3]	# long
1a7     addq    RBX, [R8 + #32 + RAX << #3]	# long
1ac     addq    R14, [R12 + #32 + RAX << #3]	# long
1b1     addq    RBX, [R8 + #40 + RAX << #3]	# long
1b6     addq    R14, [R12 + #40 + RAX << #3]	# long
1bb     addq    RBX, [R8 + #48 + RAX << #3]	# long
1c0     addq    R14, [R12 + #48 + RAX << #3]	# long
1c5     addq    RBX, [R8 + #56 + RAX << #3]	# long
1ca     addq    R14, [R12 + #56 + RAX << #3]	# long
1cf     addq    RBX, [R8 + #64 + RAX << #3]	# long
1d4     addq    R14, [R12 + #64 + RAX << #3]	# long
1d9     addq    RBX, [R8 + #72 + RAX << #3]	# long
1de     addq    R14, [R12 + #72 + RAX << #3]	# long
1e3     addl    R13, #8	# int
1e7     cmpl    R13, R11
1ea     jl,s   B26	# loop end  P=1.000000 C=8192897.000000

1ec     B27: #	out( B24 ) <- in( B26 )  Freq: 476830
1ec     jmp     B24

1f1     B28: #	out( B33 B29 ) <- in( B17 B24 )  Freq: 0.999985
1f1     cmpl    R13, RDI
1f4     jge,s   B33  P=0.000001 C=-1.000000

1f6     B29: #	out( B30 ) <- in( B28 )  Freq: 0.999984
1f6     # castII of R13
        nop 	# 2 bytes pad for loops and calls

1f8     B30: #	out( B34 B31 ) <- in( B29 B32 ) Loop( B30-B32 inner post of N377) Freq: 328960
1f8     cmpl    R13, RDI	# unsigned
        nop 	# 5 bytes pad for loops and calls
200     jnb,u   B34  P=0.000001 C=-1.000000

206     B31: #	out( B35 B32 ) <- in( B30 )  Freq: 328960
206     addq    RBX, [R8 + #16 + R13 << #3]	# long
20b     cmpl    R13, RSI	# unsigned
20e     jnb,u   B35  P=0.000001 C=-1.000000

214     B32: #	out( B30 B33 ) <- in( B31 )  Freq: 328960
214     addq    R14, [R12 + #16 + R13 << #3]	# long
219     incl    R13	# int
        nop 	# 4 bytes pad for loops and calls
220     cmpl    R13, RDI
223     jl,s   B30	# loop end  P=0.999999 C=8192897.000000

225     B33: #	out( N436 ) <- in( B12 B32 B28 )  Freq: 0.333329
225     movl    RSI, #-187	# int
22a     movq    RBP, RDX	# spill
22d     movq    [rsp + #0], R8	# spill
231     movq    [rsp + #8], R12	# spill
236     movq    [rsp + #16], RBX	# spill
23b     movq    [rsp + #24], R14	# spill
240     movl    [rsp + #36], R13	# spill
245     movl    [rsp + #40], RDI	# spill
        nop 	# 2 bytes pad for loops and calls
24b     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:29 (line 13) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=rsp + #16 L[4]=_ L[5]=rsp + #24 L[6]=_ L[7]=rsp + #36 L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ STK[0]=rsp + #36 STK[1]=rsp + #40
        # OopMap {rbp=Oop [0]=Oop [8]=Oop off=592/0x250}
250     stop	# ShouldNotReachHere

264     B34: #	out( N436 ) <- in( B30 B14 )  Freq: 0.33333
264     movl    RSI, #-28	# int
269     movq    RBP, RDX	# spill
26c     movq    [rsp + #8], R12	# spill
271     movq    [rsp + #16], R14	# spill
276     movq    [rsp + #32], RBX	# spill
27b     movq    [rsp + #40], R8	# spill
280     movl    [rsp + #28], R13	# spill
        nop 	# 2 bytes pad for loops and calls
287     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:36 (line 14) L[0]=RBP L[1]=rsp + #40 L[2]=rsp + #8 L[3]=_ L[4]=_ L[5]=rsp + #16 L[6]=_ L[7]=rsp + #28 L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ STK[0]=rsp + #32 STK[1]=_ STK[2]=rsp + #40 STK[3]=rsp + #28
        # OopMap {rbp=Oop [8]=Oop [40]=Oop off=652/0x28c}
28c     stop	# ShouldNotReachHere

2a0     B35: #	out( N436 ) <- in( B31 B15 )  Freq: 0.33333
2a0     movl    RSI, #-28	# int
2a5     movq    RBP, RDX	# spill
2a8     movq    [rsp + #0], R8	# spill
2ac     movq    [rsp + #16], RBX	# spill
2b1     movq    [rsp + #32], R14	# spill
2b6     movq    [rsp + #40], R12	# spill
2bb     movl    [rsp + #28], R13	# spill
        nop 	# 3 bytes pad for loops and calls
2c3     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:44 (line 15) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #40 L[3]=rsp + #16 L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #28 L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ STK[0]=rsp + #32 STK[1]=_ STK[2]=rsp + #40 STK[3]=rsp + #28
        # OopMap {rbp=Oop [0]=Oop [40]=Oop off=712/0x2c8}
2c8     stop	# ShouldNotReachHere

2dc     B36: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
2dc     xorl    RDX, RDX	# ptr
2de     movq    R11, R10	# spill
2e1     jmp     B4

2e6     B37: #	out( B7 ) <- in( B4 )  Freq: 0.000999986
2e6     xorl    R8, R8	# ptr
2e9     jmp     B7

2ee     B38: #	out( B10 ) <- in( B7 )  Freq: 0.000999985
2ee     xorl    R12, R12	# ptr
2f1     jmp     B10

2f6     B39: #	out( N436 ) <- in( B18 )  Freq: 1.01327e-06
2f6     stop	# ShouldNotReachHere

30a     B40: #	out( N436 ) <- in( B19 )  Freq: 1.01327e-06
30a     stop	# ShouldNotReachHere

31e     B41: #	out( N436 ) <- in( B20 )  Freq: 1.01327e-06
31e     stop	# ShouldNotReachHere

332     B42: #	out( N436 ) <- in( B21 )  Freq: 1.01327e-06
332     stop	# ShouldNotReachHere

346     B43: #	out( N436 ) <- in( B22 )  Freq: 1.01326e-06
346     stop	# ShouldNotReachHere

35a     B44: #	out( N436 ) <- in( B2 B5 B8 )  Freq: 2.997e-06
35a     movl    RSI, #-115	# int
35f     movq    [rsp + #0], R12	# spill
363     movq    [rsp + #8], RBX	# spill
368     movq    [rsp + #16], R14	# spill
36d     movl    [rsp + #24], R13	# spill
372     movq    [rsp + #32], R11	# spill
377     call,static  wrapper for: uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:25 (line 13) L[0]=rsp + #32 L[1]=RBP L[2]=rsp + #0 L[3]=rsp + #8 L[4]=_ L[5]=rsp + #16 L[6]=_ L[7]=rsp + #24 L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_
        # OopMap {rbp=Oop [0]=Oop [32]=Oop off=892/0x37c}
37c     stop	# ShouldNotReachHere

390     B45: #	out( N436 ) <- in( B11 B10 )  Freq: 2.02655e-06
390     movl    RSI, #-138	# int
395     movq    RBP, RDX	# spill
398     movq    [rsp + #0], R8	# spill
39c     movq    [rsp + #8], R12	# spill
3a1     movq    [rsp + #16], RBX	# spill
3a6     movq    [rsp + #24], R14	# spill
3ab     movl    [rsp + #32], R13	# spill
        nop 	# 3 bytes pad for loops and calls
3b3     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:25 (line 13) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=rsp + #16 L[4]=_ L[5]=rsp + #24 L[6]=_ L[7]=rsp + #32 L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_
        # OopMap {rbp=Oop [0]=Oop [8]=Oop off=952/0x3b8}
3b8     stop	# ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    2564  976 %     4       org.jml.regression.linear.LongLinearRegression::fit @ 25 (155 bytes)
 total in heap  [0x00000001173cee10,0x00000001173cf790] = 2432
 relocation     [0x00000001173cef88,0x00000001173cf020] = 152
 main code      [0x00000001173cf020,0x00000001173cf400] = 992
 stub code      [0x00000001173cf400,0x00000001173cf418] = 24
 oops           [0x00000001173cf418,0x00000001173cf420] = 8
 metadata       [0x00000001173cf420,0x00000001173cf438] = 24
 scopes data    [0x00000001173cf438,0x00000001173cf580] = 328
 scopes pcs     [0x00000001173cf580,0x00000001173cf770] = 496
 dependencies   [0x00000001173cf770,0x00000001173cf778] = 8
 nul chk table  [0x00000001173cf778,0x00000001173cf790] = 24

[Constant Pool (empty)]

[MachCode]
[Verified Entry Point]
  # {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
 ;; N436: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00000001173cf020: ;   {runtime_call os::breakpoint()}
  0x00000001173cf020: e87b 8faa | f290 9090 | 9090 9090 | 9090 9090 
 ;; B1: #	out( B36 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00000001173cf030: 8984 2400 | a0fe ff55 | 4883 ec40 | 4c8b 5678 | 4c89 1424 | 488b 6e70 | 448b 6e40 | 4c8b 6668 
  0x00000001173cf050: 488b 5e58 | 4c8b 7648 | 488b fe90 | 9090 9090 | 49ba a010 | f809 0100 | 0000 41ff | d24c 8b14 
  0x00000001173cf070: 244d 85d2 | 0f84 8202 | 0000 4d8b | da45 8b52 

  0x00000001173cf080: ;   {metadata('org/jml/regression/linear/LongLinearRegression')}
  0x00000001173cf080: 0841 81fa | 201d da44 | 0f85 ec02 | 0000 498b | d348 85ed | 0f84 6c02 | 0000 448b | 4508 9090 
  0x00000001173cf0a0: ;   {metadata({type array long})}
  0x00000001173cf0a0: 4181 f8c7 | 81d8 440f | 85cd 0200 | 004c 8bc5 
 ;; B7: #	out( B38 B8 ) <- in( B6 B37 )  Freq: 0.999998
  0x00000001173cf0b0: 4d85 e40f | 8455 0200 | 0045 8b54 | 2408 9090 

  0x00000001173cf0c0: ;   {metadata({type array long})}
  0x00000001173cf0c0: 4181 fac7 | 81d8 440f | 85ad 0200 

  0x00000001173cf0cc: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@25 (line 13)
  0x00000001173cf0cc: 0041 8b78 

  0x00000001173cf0d0: ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@28 (line 13)
  0x00000001173cf0d0: 0c41 8b74 

  0x00000001173cf0d4: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
  0x00000001173cf0d4: 240c 443b | ef0f 8d66 

  0x00000001173cf0dc: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
  0x00000001173cf0dc: 0100 0045 | 8bd5 41ff | c245 33c9 | 453b d145 | 0f4c d144 | 3bd7 440f 

  0x00000001173cf0f4: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
  0x00000001173cf0f4: 4fd7 443b | ef0f 8385 | 0100 004b 

  0x00000001173cf100: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@37 (line 14)
  0x00000001173cf100: 035c e810 | 443b ee0f | 83b3 0100 | 004f 0374 

  0x00000001173cf110: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@45 (line 15)
  0x00000001173cf110: ec10 41ff 

  0x00000001173cf114: ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@48 (line 13)
  0x00000001173cf114: c545 3bea 

  0x00000001173cf118: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
  0x00000001173cf118: 7cdc 3bfe | 448b d744 | 0f4f d641 | 8bca 83c1 | f941 bb00 | 0000 8044 | 3bd1 410f | 4ccb 443b 
  0x00000001173cf138: e90f 8dd2 | 0000 0090 | 443b ef0f | 83cd 0100 | 0044 3bee | 0f83 d801 | 0000 458b | d541 83c2 
  0x00000001173cf158: 0744 3bd6 | 9090 9090 | 0f83 d801 | 0000 443b | d70f 83e3 | 0100 0044 | 3bef 0f83 | ee01 0000 
 ;; B23: #	out( B25 ) <- in( B22 )  Freq: 0.999984
  0x00000001173cf178: 41ba 401f 

  0x00000001173cf17c: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
  0x00000001173cf17c: 0000 9090 | eb13 4d8b | 9f30 0100 

  0x00000001173cf188: ; ImmutableOopMap {r8=Oop r12=Oop rdx=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
                      ;   {poll}
  0x00000001173cf188: 0041 8503 | 443b e90f | 8d7c 0000 | 0044 8bd9 | 452b dd41 | 3bcd 450f | 4cd9 4181 | fb40 1f00 
  0x00000001173cf1a8: 0045 0f47 

  0x00000001173cf1ac: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
  0x00000001173cf1ac: da45 03dd 
 ;; B26: #	out( B26 B27 ) <- in( B25 B26 ) Loop( B26-B26 inner main of N171 strip mined) Freq: 9.99984e+11
  0x00000001173cf1b0: 4f03 74ec | 104b 035c | e810 4963 | c549 035c | c018 4d03 | 74c4 1849 | 035c c020 | 4d03 74c4 
  0x00000001173cf1d0: 2049 035c | c028 4d03 | 74c4 2849 | 035c c030 | 4d03 74c4 | 3049 035c | c038 4d03 | 74c4 3849 
  0x00000001173cf1f0: 035c c040 | 4d03 74c4 | 4049 035c 

  0x00000001173cf1fc: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@37 (line 14)
  0x00000001173cf1fc: c048 4d03 

  0x00000001173cf200: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@45 (line 15)
  0x00000001173cf200: 74c4 4841 

  0x00000001173cf204: ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@48 (line 13)
  0x00000001173cf204: 83c5 0845 

  0x00000001173cf208: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
  0x00000001173cf208: 3beb 7ca4 
 ;; B27: #	out( B24 ) <- in( B26 )  Freq: 476830
  0x00000001173cf20c: e971 ffff | ff44 3bef 

  0x00000001173cf214: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
  0x00000001173cf214: 7d2f 9090 
 ;; B30: #	out( B34 B31 ) <- in( B29 B32 ) Loop( B30-B32 inner post of N377) Freq: 328960
  0x00000001173cf218: 443b ef90 | 9090 9090 | 0f83 5e00 | 0000 4b03 

  0x00000001173cf228: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@37 (line 14)
  0x00000001173cf228: 5ce8 1044 | 3bee 0f83 | 8c00 0000 
 ;; B32: #	out( B30 B33 ) <- in( B31 )  Freq: 328960
  0x00000001173cf234: 4f03 74ec 

  0x00000001173cf238: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@45 (line 15)
  0x00000001173cf238: 1041 ffc5 | 9090 9090 | 443b ef7c 

  0x00000001173cf244: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
  0x00000001173cf244: d3be 45ff | ffff 488b | ea4c 8904 | 244c 8964 | 2408 4889 | 5c24 104c | 8974 2418 | 4489 6c24 
  0x00000001173cf264: 2489 7c24 

  0x00000001173cf268: ;   {runtime_call UncommonTrapBlob}
  0x00000001173cf268: 2890 90e8 

  0x00000001173cf26c: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop }
                      ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
  0x00000001173cf26c: d012 58f8 

  0x00000001173cf270: ;   {external_word}
  0x00000001173cf270: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173cf27c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173cf27c: e4f0 e8cd | 1c91 f2f4 
 ;; B34: #	out( N436 ) <- in( B30 B14 )  Freq: 0.33333
  0x00000001173cf284: bee4 ffff | ff48 8bea | 4c89 6424 | 084c 8974 | 2410 4889 | 5c24 204c | 8944 2428 | 4489 6c24 
  0x00000001173cf2a4: ;   {runtime_call UncommonTrapBlob}
  0x00000001173cf2a4: 1c90 90e8 

  0x00000001173cf2a8: ; ImmutableOopMap {rbp=Oop [8]=Oop [40]=Oop }
                      ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@36 (line 14)
  0x00000001173cf2a8: 9412 58f8 

  0x00000001173cf2ac: ;   {external_word}
  0x00000001173cf2ac: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173cf2b8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173cf2b8: e4f0 e891 | 1c91 f2f4 
 ;; B35: #	out( N436 ) <- in( B31 B15 )  Freq: 0.33333
  0x00000001173cf2c0: bee4 ffff | ff48 8bea | 4c89 0424 | 4889 5c24 | 104c 8974 | 2420 4c89 | 6424 2844 | 896c 241c 
  0x00000001173cf2e0: ;   {runtime_call UncommonTrapBlob}
  0x00000001173cf2e0: 9090 90e8 

  0x00000001173cf2e4: ; ImmutableOopMap {rbp=Oop [0]=Oop [40]=Oop }
                      ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
  0x00000001173cf2e4: 5812 58f8 

  0x00000001173cf2e8: ;   {external_word}
  0x00000001173cf2e8: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173cf2f4: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173cf2f4: e4f0 e855 

  0x00000001173cf2f8: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
  0x00000001173cf2f8: 1c91 f2f4 
 ;; B36: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
  0x00000001173cf2fc: 33d2 4d8b | dae9 8bfd | ffff 4533 | c0e9 a2fd | ffff 4533 | e4e9 b7fd 

  0x00000001173cf314: ;   {external_word}
  0x00000001173cf314: ffff 48bf | a62d 420a | 0100 0000 | 4883 e4f0 

  0x00000001173cf324: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173cf324: e827 1c91 

  0x00000001173cf328: ;   {external_word}
  0x00000001173cf328: f2f4 48bf | a62d 420a | 0100 0000 | 4883 e4f0 

  0x00000001173cf338: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173cf338: e813 1c91 

  0x00000001173cf33c: ;   {external_word}
  0x00000001173cf33c: f2f4 48bf | 3125 420a | 0100 0000 | 4883 e4f0 

  0x00000001173cf34c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173cf34c: e8ff 1b91 

  0x00000001173cf350: ;   {external_word}
  0x00000001173cf350: f2f4 48bf | 3125 420a | 0100 0000 | 4883 e4f0 

  0x00000001173cf360: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173cf360: e8eb 1b91 

  0x00000001173cf364: ;   {external_word}
  0x00000001173cf364: f2f4 48bf | 3125 420a | 0100 0000 | 4883 e4f0 

  0x00000001173cf374: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173cf374: e8d7 1b91 | f2f4 be8d | ffff ff4c | 8924 2448 | 895c 2408 | 4c89 7424 | 1044 896c | 2418 4c89 
  0x00000001173cf394: ;   {runtime_call UncommonTrapBlob}
  0x00000001173cf394: 5c24 20e8 

  0x00000001173cf398: ; ImmutableOopMap {rbp=Oop [0]=Oop [32]=Oop }
                      ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@25 (line 13)
  0x00000001173cf398: a411 58f8 

  0x00000001173cf39c: ;   {external_word}
  0x00000001173cf39c: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173cf3a8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173cf3a8: e4f0 e8a1 | 1b91 f2f4 
 ;; B45: #	out( N436 ) <- in( B11 B10 )  Freq: 2.02655e-06
  0x00000001173cf3b0: be76 ffff | ff48 8bea | 4c89 0424 | 4c89 6424 | 0848 895c | 2410 4c89 | 7424 1844 | 896c 2420 
  0x00000001173cf3d0: ;   {runtime_call UncommonTrapBlob}
  0x00000001173cf3d0: 9090 90e8 

  0x00000001173cf3d4: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop }
                      ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@25 (line 13)
  0x00000001173cf3d4: 6811 58f8 

  0x00000001173cf3d8: ;   {external_word}
  0x00000001173cf3d8: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173cf3e4: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173cf3e4: e4f0 e865 

  0x00000001173cf3e8: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@25 (line 13)
  0x00000001173cf3e8: 1b91 f2f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 
[Exception Handler]
  0x00000001173cf400: ;   {no_reloc}
  0x00000001173cf400: e91b bd4c | f8e8 0000 | 0000 4883 

  0x00000001173cf40c: ;   {runtime_call DeoptimizationBlob}
  0x00000001173cf40c: 2c24 05e9 | 4c14 58f8 | f4f4 f4f4 
[/MachCode]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00000001173cf418:   0x000000011ed59890 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011ed59890}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00000001173cf420:   0x0000000226d0e900 'org/jml/regression/linear/LongLinearRegression'
  0x00000001173cf428:   0x0000000226c40e38 {type array long}
  0x00000001173cf430:   0x000000010ec8fa60 {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00000001173cf01f offset=ffffffff bits=0):
PcDesc(pc=0x00000001173cf0cd offset=ad bits=0):   org.jml.regression.linear.LongLinearRegression::fit@25 (line 13)
PcDesc(pc=0x00000001173cf0d1 offset=b1 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@28 (line 13)
PcDesc(pc=0x00000001173cf0d6 offset=b6 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
PcDesc(pc=0x00000001173cf0df offset=bf bits=0):   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
PcDesc(pc=0x00000001173cf0f6 offset=d6 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
PcDesc(pc=0x00000001173cf104 offset=e4 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@37 (line 14)
PcDesc(pc=0x00000001173cf112 offset=f2 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@45 (line 15)
PcDesc(pc=0x00000001173cf115 offset=f5 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@48 (line 13)
PcDesc(pc=0x00000001173cf11a offset=fa bits=0):   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
PcDesc(pc=0x00000001173cf17e offset=15e bits=0):   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
PcDesc(pc=0x00000001173cf189 offset=169 bits=1):   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)  reexecute=true
   Locals
    - l0: reg rdx [4],oop
    - l1: reg r8 [16],oop
    - l2: reg r12 [24],oop
    - l3: 0
    - l4: reg rbx [6],long
    - l5: 0
    - l6: reg r14 [28],long
    - l7: reg r13 [26],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x00000001173cf18c offset=16c bits=0):   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
PcDesc(pc=0x00000001173cf1b0 offset=190 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
PcDesc(pc=0x00000001173cf1fe offset=1de bits=0):   org.jml.regression.linear.LongLinearRegression::fit@37 (line 14)
PcDesc(pc=0x00000001173cf203 offset=1e3 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@45 (line 15)
PcDesc(pc=0x00000001173cf207 offset=1e7 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@48 (line 13)
PcDesc(pc=0x00000001173cf20c offset=1ec bits=0):   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
PcDesc(pc=0x00000001173cf218 offset=1f8 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
PcDesc(pc=0x00000001173cf22b offset=20b bits=0):   org.jml.regression.linear.LongLinearRegression::fit@37 (line 14)
PcDesc(pc=0x00000001173cf239 offset=219 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@45 (line 15)
PcDesc(pc=0x00000001173cf23c offset=21c bits=0):   org.jml.regression.linear.LongLinearRegression::fit@48 (line 13)
PcDesc(pc=0x00000001173cf245 offset=225 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
PcDesc(pc=0x00000001173cf270 offset=250 bits=1):   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[16],long
    - l5: 0
    - l6: stack[24],long
    - l7: stack[36]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: stack[36]
    - @1: stack[40]
PcDesc(pc=0x00000001173cf2ac offset=28c bits=0):   org.jml.regression.linear.LongLinearRegression::fit@36 (line 14)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[40],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: 0
    - l6: stack[16],long
    - l7: stack[28]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: 0
    - @1: stack[32],long
    - @2: stack[40],oop
    - @3: stack[28]
PcDesc(pc=0x00000001173cf2e8 offset=2c8 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[40],oop
    - l3: 0
    - l4: stack[16],long
    - l5: empty
    - l6: empty
    - l7: stack[28]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: 0
    - @1: stack[32],long
    - @2: stack[40],oop
    - @3: stack[28]
PcDesc(pc=0x00000001173cf2fc offset=2dc bits=0):   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
PcDesc(pc=0x00000001173cf39c offset=37c bits=0):   org.jml.regression.linear.LongLinearRegression::fit@25 (line 13)
   Locals
    - l0: stack[32],oop
    - l1: reg rbp [10],oop
    - l2: stack[0],oop
    - l3: 0
    - l4: stack[8],long
    - l5: 0
    - l6: stack[16],long
    - l7: stack[24]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x00000001173cf3d8 offset=3b8 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@25 (line 13)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[16],long
    - l5: 0
    - l6: stack[24],long
    - l7: stack[32]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x00000001173cf3ec offset=3cc bits=0):   org.jml.regression.linear.LongLinearRegression::fit@25 (line 13)
PcDesc(pc=0x00000001173cf419 offset=3f9 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 6 OopMaps

ImmutableOopMap {r8=Oop r12=Oop rdx=Oop } pc offsets: 361 
ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop } pc offsets: 592 
ImmutableOopMap {rbp=Oop [8]=Oop [40]=Oop } pc offsets: 652 
ImmutableOopMap {rbp=Oop [0]=Oop [40]=Oop } pc offsets: 712 
ImmutableOopMap {rbp=Oop [0]=Oop [32]=Oop } pc offsets: 892 
ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop } pc offsets: 952 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00000001173cf0cd offset=ad):
   org.jml.regression.linear.LongLinearRegression::fit@25 (line 13)
ScopeDesc(pc=0x00000001173cf0d1 offset=b1):
   org.jml.regression.linear.LongLinearRegression::fit@28 (line 13)
ScopeDesc(pc=0x00000001173cf0d6 offset=b6):
   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
ScopeDesc(pc=0x00000001173cf0df offset=bf):
   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
ScopeDesc(pc=0x00000001173cf0f6 offset=d6):
   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
ScopeDesc(pc=0x00000001173cf104 offset=e4):
   org.jml.regression.linear.LongLinearRegression::fit@37 (line 14)
ScopeDesc(pc=0x00000001173cf112 offset=f2):
   org.jml.regression.linear.LongLinearRegression::fit@45 (line 15)
ScopeDesc(pc=0x00000001173cf115 offset=f5):
   org.jml.regression.linear.LongLinearRegression::fit@48 (line 13)
ScopeDesc(pc=0x00000001173cf11a offset=fa):
   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
ScopeDesc(pc=0x00000001173cf17e offset=15e):
   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
ScopeDesc(pc=0x00000001173cf189 offset=169):
   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)  reexecute=true
   Locals
    - l0: reg rdx [4],oop
    - l1: reg r8 [16],oop
    - l2: reg r12 [24],oop
    - l3: 0
    - l4: reg rbx [6],long
    - l5: 0
    - l6: reg r14 [28],long
    - l7: reg r13 [26],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x00000001173cf18c offset=16c):
   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
ScopeDesc(pc=0x00000001173cf1b0 offset=190):
   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
ScopeDesc(pc=0x00000001173cf1fe offset=1de):
   org.jml.regression.linear.LongLinearRegression::fit@37 (line 14)
ScopeDesc(pc=0x00000001173cf203 offset=1e3):
   org.jml.regression.linear.LongLinearRegression::fit@45 (line 15)
ScopeDesc(pc=0x00000001173cf207 offset=1e7):
   org.jml.regression.linear.LongLinearRegression::fit@48 (line 13)
ScopeDesc(pc=0x00000001173cf20c offset=1ec):
   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
ScopeDesc(pc=0x00000001173cf218 offset=1f8):
   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
ScopeDesc(pc=0x00000001173cf22b offset=20b):
   org.jml.regression.linear.LongLinearRegression::fit@37 (line 14)
ScopeDesc(pc=0x00000001173cf239 offset=219):
   org.jml.regression.linear.LongLinearRegression::fit@45 (line 15)
ScopeDesc(pc=0x00000001173cf23c offset=21c):
   org.jml.regression.linear.LongLinearRegression::fit@48 (line 13)
ScopeDesc(pc=0x00000001173cf245 offset=225):
   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
ScopeDesc(pc=0x00000001173cf270 offset=250):
   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[16],long
    - l5: 0
    - l6: stack[24],long
    - l7: stack[36]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: stack[36]
    - @1: stack[40]
ScopeDesc(pc=0x00000001173cf2ac offset=28c):
   org.jml.regression.linear.LongLinearRegression::fit@36 (line 14)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[40],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: 0
    - l6: stack[16],long
    - l7: stack[28]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: 0
    - @1: stack[32],long
    - @2: stack[40],oop
    - @3: stack[28]
ScopeDesc(pc=0x00000001173cf2e8 offset=2c8):
   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[40],oop
    - l3: 0
    - l4: stack[16],long
    - l5: empty
    - l6: empty
    - l7: stack[28]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: 0
    - @1: stack[32],long
    - @2: stack[40],oop
    - @3: stack[28]
ScopeDesc(pc=0x00000001173cf2fc offset=2dc):
   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
ScopeDesc(pc=0x00000001173cf39c offset=37c):
   org.jml.regression.linear.LongLinearRegression::fit@25 (line 13)
   Locals
    - l0: stack[32],oop
    - l1: reg rbp [10],oop
    - l2: stack[0],oop
    - l3: 0
    - l4: stack[8],long
    - l5: 0
    - l6: stack[16],long
    - l7: stack[24]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x00000001173cf3d8 offset=3b8):
   org.jml.regression.linear.LongLinearRegression::fit@25 (line 13)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[16],long
    - l5: 0
    - l6: stack[24],long
    - l7: stack[32]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x00000001173cf3ec offset=3cc):
   org.jml.regression.linear.LongLinearRegression::fit@25 (line 13)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00000001173cef88: 6400
relocInfo@0x00000001173cef88 [type=6(runtime_call) addr=0x00000001173cf020 offset=0 format=1] | [destination=0x0000000109e77fa0]
         @0x00000001173cef8a: f001cc61
relocInfo@0x00000001173cef8c [type=12(metadata) addr=0x00000001173cf081 offset=97 format=3 data=1] | [metadata_addr=0x00000001173cf420 *=0x0000000226d0e900 offset=0]metadata_value=0x0000000226d0e900: 'org/jml/regression/linear/LongLinearRegression'
         @0x00000001173cef8e: f002cc1f
relocInfo@0x00000001173cef90 [type=12(metadata) addr=0x00000001173cf0a0 offset=31 format=3 data=2] | [metadata_addr=0x00000001173cf428 *=0x0000000226c40e38 offset=0]metadata_value=0x0000000226c40e38: {type array long}
         @0x00000001173cef92: f002cc20
relocInfo@0x00000001173cef94 [type=12(metadata) addr=0x00000001173cf0c0 offset=32 format=3 data=2] | [metadata_addr=0x00000001173cf428 *=0x0000000226c40e38 offset=0]metadata_value=0x0000000226c40e38: {type array long}
         @0x00000001173cef96: a0c9
relocInfo@0x00000001173cef96 [type=10(poll) addr=0x00000001173cf189 offset=201]
         @0x00000001173cef98: 64e2
relocInfo@0x00000001173cef98 [type=6(runtime_call) addr=0x00000001173cf26b offset=226 format=1] | [destination=0x000000010f950540]
         @0x00000001173cef9a: f8030a3a777700017005
relocInfo@0x00000001173cefa2 [type=7(external_word) addr=0x00000001173cf270 offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173cefa4: 640e
relocInfo@0x00000001173cefa4 [type=6(runtime_call) addr=0x00000001173cf27e offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173cefa6: 6429
relocInfo@0x00000001173cefa6 [type=6(runtime_call) addr=0x00000001173cf2a7 offset=41 format=1] | [destination=0x000000010f950540]
         @0x00000001173cefa8: f8030a3a777700017005
relocInfo@0x00000001173cefb0 [type=7(external_word) addr=0x00000001173cf2ac offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173cefb2: 640e
relocInfo@0x00000001173cefb2 [type=6(runtime_call) addr=0x00000001173cf2ba offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173cefb4: 6429
relocInfo@0x00000001173cefb4 [type=6(runtime_call) addr=0x00000001173cf2e3 offset=41 format=1] | [destination=0x000000010f950540]
         @0x00000001173cefb6: f8030a3a777700017005
relocInfo@0x00000001173cefbe [type=7(external_word) addr=0x00000001173cf2e8 offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173cefc0: 640e
relocInfo@0x00000001173cefc0 [type=6(runtime_call) addr=0x00000001173cf2f6 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173cefc2: f8030a422da600017020
relocInfo@0x00000001173cefca [type=7(external_word) addr=0x00000001173cf316 offset=32 data={0a422da60001}] | [target=0x000000010a422da6]
         @0x00000001173cefcc: 640e
relocInfo@0x00000001173cefcc [type=6(runtime_call) addr=0x00000001173cf324 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173cefce: f8030a422da600017006
relocInfo@0x00000001173cefd6 [type=7(external_word) addr=0x00000001173cf32a offset=6 data={0a422da60001}] | [target=0x000000010a422da6]
         @0x00000001173cefd8: 640e
relocInfo@0x00000001173cefd8 [type=6(runtime_call) addr=0x00000001173cf338 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173cefda: f8030a42253100017006
relocInfo@0x00000001173cefe2 [type=7(external_word) addr=0x00000001173cf33e offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173cefe4: 640e
relocInfo@0x00000001173cefe4 [type=6(runtime_call) addr=0x00000001173cf34c offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173cefe6: f8030a42253100017006
relocInfo@0x00000001173cefee [type=7(external_word) addr=0x00000001173cf352 offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173ceff0: 640e
relocInfo@0x00000001173ceff0 [type=6(runtime_call) addr=0x00000001173cf360 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173ceff2: f8030a42253100017006
relocInfo@0x00000001173ceffa [type=7(external_word) addr=0x00000001173cf366 offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173ceffc: 640e
relocInfo@0x00000001173ceffc [type=6(runtime_call) addr=0x00000001173cf374 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173ceffe: 6423
relocInfo@0x00000001173ceffe [type=6(runtime_call) addr=0x00000001173cf397 offset=35 format=1] | [destination=0x000000010f950540]
         @0x00000001173cf000: f8030a3a777700017005
relocInfo@0x00000001173cf008 [type=7(external_word) addr=0x00000001173cf39c offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173cf00a: 640e
relocInfo@0x00000001173cf00a [type=6(runtime_call) addr=0x00000001173cf3aa offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173cf00c: 6429
relocInfo@0x00000001173cf00c [type=6(runtime_call) addr=0x00000001173cf3d3 offset=41 format=1] | [destination=0x000000010f950540]
         @0x00000001173cf00e: f8030a3a777700017005
relocInfo@0x00000001173cf016 [type=7(external_word) addr=0x00000001173cf3d8 offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173cf018: 640e
relocInfo@0x00000001173cf018 [type=6(runtime_call) addr=0x00000001173cf3e6 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173cf01a: 001a
relocInfo@0x00000001173cf01a [type=0(none) addr=0x00000001173cf400 offset=26]
         @0x00000001173cf01c: 6400
relocInfo@0x00000001173cf01c [type=6(runtime_call) addr=0x00000001173cf400 offset=0 format=1] | [destination=0x000000010f89b120]
         @0x00000001173cf01e: 640f
relocInfo@0x00000001173cf01e [type=6(runtime_call) addr=0x00000001173cf40f offset=15 format=1] | [destination=0x000000010f950860]
         @0x00000001173cf020: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type leaf_type
  context = org.jml.regression.linear.LongLinearRegression
   [nmethod<=klass]org.jml.regression.linear.LongLinearRegression
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 2 entries, 20 bytes):
{
   < 0x00000001173cf0cd, 0x00000001173cf3b0 > < 0x00000001173cf0d1, 0x00000001173cf3b0 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 NULL-oop
#1: 0x000000011ed59890 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011ed59890}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
#0: 0x0000000000000000 NULL-oop
#1: 0x0000000226d0e900 'org/jml/regression/linear/LongLinearRegression'
#2: 0x0000000226c40e38 {type array long}
#3: 0x000000010ec8fa60 {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

============================= C2-compiled nmethod ==============================
----------------------- MetaData before Compile_id = 977 ------------------------
{method}
 - this oop:          0x000000010ec8fa60
 - method holder:     'org/jml/regression/linear/LongLinearRegression'
 - constants:         0x000000010ec8f518 constant pool [71]/operands[5] {0x000000010ec8f518} for 'org/jml/regression/linear/LongLinearRegression' cache=0x000000010ec8fe20
 - access:            0xc1000001  public 
 - name:              'fit'
 - signature:         '([J[J)V'
 - max stack:         9
 - max locals:        16
 - size of params:    3
 - method size:       13
 - vtable index:      5
 - i2i entry:         0x000000010f847e20
 - adapters:          AHE@0x00007f87c7837270: 0xbbb00000 i2c: 0x000000010f8bfee0 c2i: 0x000000010f8bffbf c2iUV: 0x000000010f8bff92 c2iNCI: 0x000000010f8bfffc
 - compiled entry     0x000000010f8bffbf
 - code size:         155
 - code start:        0x000000010ec8f928
 - code end (excl):   0x000000010ec8f9c3
 - method data:       0x000000010ef00000
 - checked ex length: 0
 - linenumber start:  0x000000010ec8f9c3
 - localvar length:   11
 - localvar start:    0x000000010ec8f9da

------------------------ OptoAssembly for Compile_id = 977 -----------------------
#
#  void ( rawptr:BotPTR )
#
#r018 rsi:rsi   : parm 0: rawptr:BotPTR
# -- Old rsp -- Framesize: 112 --
#r583 rsp+108: in_preserve
#r582 rsp+104: return address
#r581 rsp+100: in_preserve
#r580 rsp+96: saved fp register
#r579 rsp+92: pad2, stack alignment
#r578 rsp+88: pad2, stack alignment
#r577 rsp+84: Fixed slot 1
#r576 rsp+80: Fixed slot 0
#r603 rsp+76: spill
#r602 rsp+72: spill
#r601 rsp+68: spill
#r600 rsp+64: spill
#r599 rsp+60: spill
#r598 rsp+56: spill
#r597 rsp+52: spill
#r596 rsp+48: spill
#r595 rsp+44: spill
#r594 rsp+40: spill
#r593 rsp+36: spill
#r592 rsp+32: spill
#r591 rsp+28: spill
#r590 rsp+24: spill
#r589 rsp+20: spill
#r588 rsp+16: spill
#r587 rsp+12: spill
#r586 rsp+ 8: spill
#r585 rsp+ 4: spill
#r584 rsp+ 0: spill
#
000     N634: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # breakpoint
        nop 	# 11 bytes pad for loops and calls

010     B1: #	out( B41 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
010     # stack bang (288 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #96	# Create frame

01c     movq    R10, [RSI + #120 (8-bit)]	# ptr
020     movq    [rsp + #0], R10	# spill
024     movq    RBP, [RSI + #112 (8-bit)]	# ptr
028     movl    R13, [RSI]	# int
02b     movq    R12, [RSI + #104 (8-bit)]	# ptr
02f     movq    R10, [RSI + #56 (8-bit)]	# long
033     movq    [rsp + #16], R10	# spill
038     movq    R10, [RSI + #40 (8-bit)]	# long
03c     movq    [rsp + #24], R10	# spill
041     movq    RBX, [RSI + #24 (8-bit)]	# long
045     movq    R14, [RSI + #8 (8-bit)]	# long
049     movq    RDI, RSI	# spill
04c     call_leaf,runtime  OSR_migration_end
        No JVM State Info
        # 
05c     movq    R10, [rsp + #0]	# spill
060     testq   R10, R10	# ptr
063     je     B41  P=0.001000 C=-1.000000

069     B2: #	out( B50 B3 ) <- in( B1 )  Freq: 0.999
069     movl    R8, [R10 + #8 (8-bit)]	# compressed klass ptr
06d     cmpl    R8, narrowklass: precise klass org/jml/regression/linear/LongLinearRegression: 0x00007f87cdfa2a20:Constant:exact *	# compressed klass ptr
074     jne,u   B50  P=0.000001 C=-1.000000

07a     B3: #	out( B4 ) <- in( B2 )  Freq: 0.998999
07a     movq    R8, R10	# spill
07d     # checkcastPP of R8

07d     B4: #	out( B42 B5 ) <- in( B3 B41 )  Freq: 0.999999
        nop 	# 3 bytes pad for loops and calls
080     testq   RBP, RBP	# ptr
083     je     B42  P=0.001000 C=-1.000000

089     B5: #	out( B50 B6 ) <- in( B4 )  Freq: 0.998999
089     movl    R11, [RBP + #8 (8-bit)]	# compressed klass ptr
08d     cmpl    R11, narrowklass: precise klass [J: 0x00007f87cb813890:Constant:exact *	# compressed klass ptr
094     jne,u   B50  P=0.000001 C=-1.000000

09a     B6: #	out( B7 ) <- in( B5 )  Freq: 0.998998
09a     movq    RCX, RBP	# spill
09d     # checkcastPP of RCX

09d     B7: #	out( B43 B8 ) <- in( B6 B42 )  Freq: 0.999998
        nop 	# 3 bytes pad for loops and calls
0a0     testq   R12, R12	# ptr
0a3     je     B43  P=0.001000 C=-1.000000

0a9     B8: #	out( B50 B9 ) <- in( B7 )  Freq: 0.998998
0a9     movl    R11, [R12 + #8 (8-bit)]	# compressed klass ptr
0ae     cmpl    R11, narrowklass: precise klass [J: 0x00007f87cb813890:Constant:exact *	# compressed klass ptr
0b5     jne,u   B50  P=0.000001 C=-1.000000

0bb     B9: #	out( B10 ) <- in( B8 )  Freq: 0.998997
0bb     # checkcastPP of R12

0bb     B10: #	out( B51 B11 ) <- in( B9 B43 )  Freq: 0.999997
        nop 	# 5 bytes pad for loops and calls
0c0     movl    RDI, [RCX + #12 (8-bit)]	# range
0c3     NullCheck RCX

0c3     B11: #	out( B51 B12 ) <- in( B10 )  Freq: 0.999996
0c3     movl    RBP, [R12 + #12 (8-bit)]	# range
0c8     NullCheck R12

0c8     B12: #	out( B38 B13 ) <- in( B11 )  Freq: 0.999995
0c8     cmpl    R13, RDI
0cb     jge     B38  P=0.000000 C=4499432.000000

0d1     B13: #	out( B14 ) <- in( B12 )  Freq: 0.999994
0d1     movdq   XMM0, R8	# spill
0d6     movl    R11, R12	# ptr -> int
0d9     movl    R9, R13	# spill
0dc     incl    R9	# int
0df     shrl    R11, #3
0e3     andl    R11, #3	# int
0e7     xorl    R10, R10	# int
0ea     cmpl    R9, R10
0ed     cmovllt R9, R10	# max
0f1     cmpl    R9, RDI
0f4     cmovlgt R9, RDI	# min
0f8     addl    R11, R9	# int
0fb     movl    RSI, #2	# int
100     subl    RSI, R11	# int
103     andl    RSI, #3	# int
106     addl    RSI, R9	# int
109     cmpl    RSI, RDI
10b     cmovlgt RSI, RDI	# min

10e     B14: #	out( B39 B15 ) <- in( B13 B16 ) Loop( B14-B16 inner pre of N443) Freq: 1.99998
10e     cmpl    R13, RDI	# unsigned
111     jnb,u   B39  P=0.000001 C=-1.000000

117     B15: #	out( B40 B16 ) <- in( B14 )  Freq: 1.99998
117     movq    R11, [RCX + #16 + R13 << #3]	# long
11c     subq    R11, [RSP + #16 (32-bit)]	# long
121     movq    R8, R11	# spill
124     imulq   R8, R11	# long
128     addq    RBX, R8	# long
12b     cmpl    R13, RBP	# unsigned
12e     jnb,u   B40  P=0.000001 C=-1.000000

134     B16: #	out( B14 B17 ) <- in( B15 )  Freq: 1.99998
134     movq    R8, [R12 + #16 + R13 << #3]	# long
139     subq    R8, [RSP + #24 (32-bit)]	# long
13e     imulq   R8, R11	# long
142     addq    R14, R8	# long
145     incl    R13	# int
148     cmpl    R13, RSI
14b     jl,s   B14	# loop end  P=0.500000 C=4499432.000000

14d     B17: #	out( B32 B18 ) <- in( B16 )  Freq: 0.99999
14d     cmpl    RDI, RBP
14f     movl    R11, RDI	# spill
152     cmovlgt R11, RBP	# min
156     movl    R9, R11	# spill
159     addl    R9, #-15	# int
15d     movl    RSI, #-2147483648	# int
162     cmpl    R11, R9
165     cmovll R9, RSI	# signed, int
169     cmpl    R13, R9
16c     jge     B32  P=0.000001 C=-1.000000

172     B18: #	out( B44 B19 ) <- in( B17 )  Freq: 0.999989
172     # castII of R13
172     cmpl    R13, RDI	# unsigned
175     jnb,u   B44  P=0.000001 C=-1.000000

17b     B19: #	out( B45 B20 ) <- in( B18 )  Freq: 0.999988
        nop 	# 5 bytes pad for loops and calls
180     cmpl    R13, RBP	# unsigned
183     jnb,u   B45  P=0.000001 C=-1.000000

189     B20: #	out( B46 B21 ) <- in( B19 )  Freq: 0.999987
189     movl    R8, R13	# spill
18c     addl    R8, #15	# int
190     cmpl    R8, RBP	# unsigned
193     jnb,u   B46  P=0.000001 C=-1.000000

199     B21: #	out( B47 B22 ) <- in( B20 )  Freq: 0.999986
199     cmpl    R13, RBP	# unsigned
        nop 	# 4 bytes pad for loops and calls
1a0     jnb,u   B47  P=0.000001 C=-1.000000

1a6     B22: #	out( B48 B23 ) <- in( B21 )  Freq: 0.999985
1a6     cmpl    R8, RDI	# unsigned
1a9     jnb,u   B48  P=0.000001 C=-1.000000

1af     B23: #	out( B49 B24 ) <- in( B22 )  Freq: 0.999984
1af     cmpl    R13, RDI	# unsigned
1b2     jnb,u   B49  P=0.000001 C=-1.000000

1b8     B24: #	out( B26 ) <- in( B23 )  Freq: 0.999983
1b8     replicateL XMM7,[RSP + #16 (32-bit)]
1bf     replicateL XMM8,[RSP + #24 (32-bit)]
1c6     movl    R8, #16000	# int
1cc     # TLS is in R15
1cc     jmp,s   B26

1ce     B25: #	out( B29 B26 ) <- in( B28 ) top-of-loop Freq: 999983
1ce     movq    RDX, [R15 + #304 (32-bit)]	# ptr
1d5     testl   rax, [RDX]	# Safepoint: poll for GC        # org.jml.regression.linear.LongLinearRegression::fit @ bci:128 (line 23) L[0]=XMM0 L[1]=RCX L[2]=R12 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #16 L[8]=_ L[9]=rsp + #24 L[10]=_ L[11]=RBX L[12]=_ L[13]=R14 L[14]=_ L[15]=R13
        # OopMap {r12=Oop rcx=Oop xmm0=Oop off=469/0x1d5}
1d7     cmpl    R13, R9
        nop 	# 6 bytes pad for loops and calls
1e0     jge     B29  P=0.000000 C=4499432.000000

1e6     B26: #	out( B27 ) <- in( B24 B25 ) Loop( B26-B25 ) Freq: 999983
1e6     movl    RDX, R9	# spill
1e9     subl    RDX, R13	# int
1ec     cmpl    R9, R13
1ef     cmovll RDX, R10	# signed, int
1f3     cmpl    RDX, #16000	# unsigned
1f9     cmovlnbe RDX, R8	# unsigned, int
1fd     addl    RDX, R13	# int

200     B27: #	out( B27 B28 ) <- in( B26 B27 ) Loop( B27-B27 inner main of N201 strip mined) Freq: 9.99983e+11
200     load_vector XMM1,[R12 + #16 + R13 << #3]
207     load_vector XMM2,[RCX + #16 + R13 << #3]
20e     vpsubq  XMM9,XMM1,XMM8	! sub packedL
213     vpsubq  XMM10,XMM2,XMM7	! sub packedL
217     movslq  RAX, R13	# i2l
21a     load_vector XMM1,[RCX + #48 + RAX << #3]
220     load_vector XMM2,[R12 + #112 + RAX << #3]
227     load_vector XMM3,[RCX + #80 + RAX << #3]
22d     load_vector XMM4,[RCX + #112 + RAX << #3]
233     load_vector XMM5,[R12 + #48 + RAX << #3]
23a     load_vector XMM6,[R12 + #80 + RAX << #3]
241     vpsubq  XMM11,XMM1,XMM7	! sub packedL
245     vpsubq  XMM6,XMM6,XMM8	! sub packedL
24a     vpsubq  XMM5,XMM5,XMM8	! sub packedL
24f     vpsubq  XMM12,XMM4,XMM7	! sub packedL
253     vpsubq  XMM13,XMM3,XMM7	! sub packedL
257     vpsubq  XMM3,XMM2,XMM8	! sub packedL
25c     vpshufd XMM1,XMM10
	vpmulld XMM1,XMM10,XMM1
	vphaddd XMM1,XMM1,XMM1
	vpmovzxdq XMM1,XMM1
	vpsllq XMM1,XMM1
	vpmuludq XMM2,XMM10,XMM10
	vpaddq XMM1,XMM1,XMM2	! mul packed4L
285     vector_reduction_long RBX,RBX,XMM1 ; using XMM2, XMM15 as TEMP
2a7     vpshufd XMM1,XMM11
	vpmulld XMM1,XMM11,XMM1
	vphaddd XMM1,XMM1,XMM1
	vpmovzxdq XMM1,XMM1
	vpsllq XMM1,XMM1
	vpmuludq XMM2,XMM11,XMM11
	vpaddq XMM1,XMM1,XMM2	! mul packed4L
2d0     vector_reduction_long RBX,RBX,XMM1 ; using XMM2, XMM15 as TEMP
2f2     vpshufd XMM1,XMM13
	vpmulld XMM1,XMM13,XMM1
	vphaddd XMM1,XMM1,XMM1
	vpmovzxdq XMM1,XMM1
	vpsllq XMM1,XMM1
	vpmuludq XMM2,XMM13,XMM13
	vpaddq XMM1,XMM1,XMM2	! mul packed4L
31b     vector_reduction_long RBX,RBX,XMM1 ; using XMM2, XMM15 as TEMP
33d     vpshufd XMM1,XMM12
	vpmulld XMM1,XMM12,XMM1
	vphaddd XMM1,XMM1,XMM1
	vpmovzxdq XMM1,XMM1
	vpsllq XMM1,XMM1
	vpmuludq XMM2,XMM12,XMM12
	vpaddq XMM1,XMM1,XMM2	! mul packed4L
366     vector_reduction_long RBX,RBX,XMM1 ; using XMM2, XMM15 as TEMP
388     vpshufd XMM1,XMM10
	vpmulld XMM1,XMM9,XMM1
	vphaddd XMM1,XMM1,XMM1
	vpmovzxdq XMM1,XMM1
	vpsllq XMM1,XMM1
	vpmuludq XMM2,XMM9,XMM10
	vpaddq XMM1,XMM1,XMM2	! mul packed4L
3b1     vector_reduction_long RAX,R14,XMM1 ; using XMM2, XMM9 as TEMP
3d3     vpshufd XMM1,XMM11
	vpmulld XMM1,XMM5,XMM1
	vphaddd XMM1,XMM1,XMM1
	vpmovzxdq XMM1,XMM1
	vpsllq XMM1,XMM1
	vpmuludq XMM2,XMM5,XMM11
	vpaddq XMM1,XMM1,XMM2	! mul packed4L
3fc     vector_reduction_long RAX,RAX,XMM1 ; using XMM2, XMM5 as TEMP
41d     vpshufd XMM1,XMM13
	vpmulld XMM1,XMM6,XMM1
	vphaddd XMM1,XMM1,XMM1
	vpmovzxdq XMM1,XMM1
	vpsllq XMM1,XMM1
	vpmuludq XMM2,XMM6,XMM13
	vpaddq XMM1,XMM1,XMM2	! mul packed4L
446     vector_reduction_long RAX,RAX,XMM1 ; using XMM2, XMM5 as TEMP
467     vpshufd XMM1,XMM12
	vpmulld XMM1,XMM3,XMM1
	vphaddd XMM1,XMM1,XMM1
	vpmovzxdq XMM1,XMM1
	vpsllq XMM1,XMM1
	vpmuludq XMM2,XMM3,XMM12
	vpaddq XMM1,XMM1,XMM2	! mul packed4L
490     vector_reduction_long R14,RAX,XMM1 ; using XMM14, XMM4 as TEMP
4b3     addl    R13, #16	# int
4b7     cmpl    R13, RDX
        nop 	# 6 bytes pad for loops and calls
4c0     jl     B27	# loop end  P=1.000000 C=4499432.000000

4c6     B28: #	out( B25 ) <- in( B27 )  Freq: 476829
4c6     jmp     B25

4cb     B29: #	out( B32 B30 ) <- in( B25 )  Freq: 0.999983
4cb     movl    R8, R11	# spill
4ce     addl    R8, #-3	# int
4d2     cmpl    R11, R8
4d5     cmovll R8, RSI	# signed, int
4d9     cmpl    R13, R8
        nop 	# 4 bytes pad for loops and calls
4e0     jge     B32  P=0.500000 C=-1.000000

4e6     B30: #	out( B31 ) <- in( B29 )  Freq: 0.499992
4e6     # castII of R13
        nop 	# 2 bytes pad for loops and calls

4e8     B31: #	out( B31 B32 ) <- in( B30 B31 ) Loop( B31-B31 inner post of N857) Freq: 0.999983
4e8     load_vector XMM1,[R12 + #16 + R13 << #3]
4ef     load_vector XMM2,[RCX + #16 + R13 << #3]
4f6     vpsubq  XMM1,XMM1,XMM8	! sub packedL
4fb     vpsubq  XMM2,XMM2,XMM7	! sub packedL
4ff     vpshufd XMM5,XMM2
	vpmulld XMM5,XMM2,XMM5
	vphaddd XMM5,XMM5,XMM5
	vpmovzxdq XMM5,XMM5
	vpsllq XMM5,XMM5
	vpmuludq XMM6,XMM2,XMM2
	vpaddq XMM5,XMM5,XMM6	! mul packed4L
526     vector_reduction_long RBX,RBX,XMM5 ; using XMM6, XMM9 as TEMP
548     vpshufd XMM5,XMM2
	vpmulld XMM5,XMM1,XMM5
	vphaddd XMM5,XMM5,XMM5
	vpmovzxdq XMM5,XMM5
	vpsllq XMM5,XMM5
	vpmuludq XMM6,XMM1,XMM2
	vpaddq XMM1,XMM5,XMM6	! mul packed4L
56f     vector_reduction_long R14,R14,XMM1 ; using XMM4, XMM3 as TEMP
590     addl    R13, #4	# int
594     cmpl    R13, R8
597     jl     B31	# loop end  P=0.500000 C=4499432.000000

59d     B32: #	out( B37 B33 ) <- in( B17 B31 B29 )  Freq: 0.999984
        nop 	# 3 bytes pad for loops and calls
5a0     cmpl    R13, RDI
5a3     jge,s   B37  P=0.000001 C=-1.000000

5a5     B33: #	out( B34 ) <- in( B32 )  Freq: 0.999983
5a5     # castII of R13
        nop 	# 3 bytes pad for loops and calls

5a8     B34: #	out( B39 B35 ) <- in( B33 B36 ) Loop( B34-B36 inner post of N443) Freq: 328960
5a8     cmpl    R13, RDI	# unsigned
5ab     jnb,u   B39  P=0.000001 C=-1.000000

5b1     B35: #	out( B40 B36 ) <- in( B34 )  Freq: 328960
5b1     movq    R11, [RCX + #16 + R13 << #3]	# long
5b6     subq    R11, [RSP + #16 (32-bit)]	# long
5bb     movq    R10, R11	# spill
5be     imulq   R10, R11	# long
5c2     addq    RBX, R10	# long
5c5     cmpl    R13, RBP	# unsigned
5c8     jnb,u   B40  P=0.000001 C=-1.000000

5ce     B36: #	out( B34 B37 ) <- in( B35 )  Freq: 328959
5ce     movq    R10, [R12 + #16 + R13 << #3]	# long
5d3     subq    R10, [RSP + #24 (32-bit)]	# long
5d8     imulq   R10, R11	# long
5dc     addq    R14, R10	# long
5df     incl    R13	# int
5e2     cmpl    R13, RDI
5e5     jl,s   B34	# loop end  P=0.999999 C=4499432.000000

5e7     B37: #	out( B38 ) <- in( B36 B32 )  Freq: 0.333328
5e7     movdq   R8, XMM0	# spill

5ec     B38: #	out( N634 ) <- in( B12 B37 )  Freq: 0.333329
5ec     movl    RSI, #-187	# int
5f1     movq    RBP, R8	# spill
5f4     movq    [rsp + #0], RCX	# spill
5f8     movq    [rsp + #8], R12	# spill
5fd     movq    [rsp + #32], RBX	# spill
602     movq    [rsp + #40], R14	# spill
607     movl    [rsp + #52], R13	# spill
60c     movl    [rsp + #56], RDI	# spill
610     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:82 (line 23) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #16 L[8]=_ L[9]=rsp + #24 L[10]=_ L[11]=rsp + #32 L[12]=_ L[13]=rsp + #40 L[14]=_ L[15]=rsp + #52 STK[0]=rsp + #52 STK[1]=rsp + #56
        # OopMap {rbp=Oop [0]=Oop [8]=Oop off=1560/0x618}
618     stop	# ShouldNotReachHere

62c     B39: #	out( N634 ) <- in( B34 B14 )  Freq: 0.33333
62c     movl    RSI, #-28	# int
631     movdq   RBP, XMM0	# spill
636     movq    [rsp + #8], R12	# spill
63b     movq    [rsp + #32], R14	# spill
640     movq    [rsp + #48], RBX	# spill
645     movq    [rsp + #56], RCX	# spill
64a     movl    [rsp + #44], R13	# spill
        nop 	# 1 bytes pad for loops and calls
650     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:90 (line 24) L[0]=RBP L[1]=rsp + #56 L[2]=rsp + #8 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #16 L[8]=_ L[9]=rsp + #24 L[10]=_ L[11]=_ L[12]=_ L[13]=rsp + #32 L[14]=_ L[15]=rsp + #44 STK[0]=rsp + #48 STK[1]=_ STK[2]=rsp + #56 STK[3]=rsp + #44
        # OopMap {rbp=Oop [8]=Oop [56]=Oop off=1624/0x658}
658     stop	# ShouldNotReachHere

66c     B40: #	out( N634 ) <- in( B35 B15 )  Freq: 0.33333
66c     movl    RSI, #-28	# int
671     movdq   RBP, XMM0	# spill
676     movq    [rsp + #0], RCX	# spill
67a     movq    [rsp + #32], RBX	# spill
67f     movq    [rsp + #48], R14	# spill
684     movq    [rsp + #56], R11	# spill
689     movq    [rsp + #64], R12	# spill
68e     movl    [rsp + #44], R13	# spill
        nop 	# 1 bytes pad for loops and calls
694     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:117 (line 25) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #64 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #16 L[8]=_ L[9]=rsp + #24 L[10]=_ L[11]=rsp + #32 L[12]=_ L[13]=_ L[14]=_ L[15]=rsp + #44 STK[0]=rsp + #48 STK[1]=_ STK[2]=rsp + #56 STK[3]=_ STK[4]=rsp + #64 STK[5]=rsp + #44
        # OopMap {rbp=Oop [0]=Oop [64]=Oop off=1692/0x69c}
69c     stop	# ShouldNotReachHere

6b0     B41: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
6b0     xorl    R8, R8	# ptr
6b3     jmp     B4

6b8     B42: #	out( B7 ) <- in( B4 )  Freq: 0.000999986
6b8     xorl    RCX, RCX	# ptr
6ba     jmp     B7

6bf     B43: #	out( B10 ) <- in( B7 )  Freq: 0.000999985
6bf     xorl    R12, R12	# ptr
6c2     jmp     B10

6c7     B44: #	out( N634 ) <- in( B18 )  Freq: 1.01327e-06
6c7     stop	# ShouldNotReachHere

6db     B45: #	out( N634 ) <- in( B19 )  Freq: 1.01327e-06
6db     stop	# ShouldNotReachHere

6ef     B46: #	out( N634 ) <- in( B20 )  Freq: 1.01327e-06
6ef     stop	# ShouldNotReachHere

703     B47: #	out( N634 ) <- in( B21 )  Freq: 1.01327e-06
703     stop	# ShouldNotReachHere

717     B48: #	out( N634 ) <- in( B22 )  Freq: 1.01326e-06
717     stop	# ShouldNotReachHere

72b     B49: #	out( N634 ) <- in( B23 )  Freq: 1.01326e-06
72b     stop	# ShouldNotReachHere

73f     B50: #	out( N634 ) <- in( B2 B5 B8 )  Freq: 2.997e-06
73f     movl    RSI, #-115	# int
744     movq    [rsp + #0], R12	# spill
748     pushq   [rsp + #16]	# 64-bit mem-mem spill
	popq    [rsp + #8]
752     pushq   [rsp + #24]	# 64-bit mem-mem spill
	popq    [rsp + #16]
75c     movq    [rsp + #24], RBX	# spill
761     movq    [rsp + #32], R14	# spill
766     movl    [rsp + #40], R13	# spill
76b     movq    [rsp + #48], R10	# spill
770     call,static  wrapper for: uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:78 (line 23) L[0]=rsp + #48 L[1]=RBP L[2]=rsp + #0 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #8 L[8]=_ L[9]=rsp + #16 L[10]=_ L[11]=rsp + #24 L[12]=_ L[13]=rsp + #32 L[14]=_ L[15]=rsp + #40
        # OopMap {rbp=Oop [0]=Oop [48]=Oop off=1912/0x778}
778     stop	# ShouldNotReachHere

78c     B51: #	out( N634 ) <- in( B11 B10 )  Freq: 2.02655e-06
78c     movl    RSI, #-138	# int
791     movq    RBP, R8	# spill
794     movq    [rsp + #0], RCX	# spill
798     movq    [rsp + #8], R12	# spill
79d     movq    [rsp + #32], RBX	# spill
7a2     movq    [rsp + #40], R14	# spill
7a7     movl    [rsp + #48], R13	# spill
7ac     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:78 (line 23) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #16 L[8]=_ L[9]=rsp + #24 L[10]=_ L[11]=rsp + #32 L[12]=_ L[13]=rsp + #40 L[14]=_ L[15]=rsp + #48
        # OopMap {rbp=Oop [0]=Oop [8]=Oop off=1972/0x7b4}
7b4     stop	# ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    2591  977 %     4       org.jml.regression.linear.LongLinearRegression::fit @ 78 (155 bytes)
 total in heap  [0x00000001173cf810,0x00000001173d0668] = 3672
 relocation     [0x00000001173cf988,0x00000001173cfa30] = 168
 main code      [0x00000001173cfa40,0x00000001173d0220] = 2016
 stub code      [0x00000001173d0220,0x00000001173d0238] = 24
 oops           [0x00000001173d0238,0x00000001173d0240] = 8
 metadata       [0x00000001173d0240,0x00000001173d0258] = 24
 scopes data    [0x00000001173d0258,0x00000001173d03c8] = 368
 scopes pcs     [0x00000001173d03c8,0x00000001173d0648] = 640
 dependencies   [0x00000001173d0648,0x00000001173d0650] = 8
 nul chk table  [0x00000001173d0650,0x00000001173d0668] = 24

[Constant Pool (empty)]

[MachCode]
[Verified Entry Point]
  # {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
 ;; N634: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00000001173cfa40: ;   {runtime_call os::breakpoint()}
  0x00000001173cfa40: e85b 85aa | f290 9090 | 9090 9090 | 9090 9090 
 ;; B1: #	out( B41 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00000001173cfa50: 8984 2400 | a0fe ff55 | 4883 ec60 | 4c8b 5678 | 4c89 1424 | 488b 6e70 | 448b 2e4c | 8b66 684c 
  0x00000001173cfa70: 8b56 384c | 8954 2410 | 4c8b 5628 | 4c89 5424 | 1848 8b5e | 184c 8b76 | 0848 8bfe | c5f8 7749 
  0x00000001173cfa90: baa0 10f8 | 0901 0000 | 0041 ffd2 | 4c8b 1424 | 4d85 d20f | 8447 0600 | 0045 8b42 

  0x00000001173cfaac: ;   {metadata('org/jml/regression/linear/LongLinearRegression')}
  0x00000001173cfaac: 0841 81f8 | 201d da44 | 0f85 c506 | 0000 4d8b | c290 9090 | 4885 ed0f | 842f 0600 | 0044 8b5d 
  0x00000001173cfacc: ;   {metadata({type array long})}
  0x00000001173cfacc: 0841 81fb | c781 d844 | 0f85 a506 | 0000 488b | cd90 9090 | 4d85 e40f | 8416 0600 | 0045 8b5c 
  0x00000001173cfaec: ;   {metadata({type array long})}
  0x00000001173cfaec: 2408 4181 | fbc7 81d8 | 440f 8584 

  0x00000001173cfaf8: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@78 (line 23)
  0x00000001173cfaf8: 0600 0090 | 9090 9090 

  0x00000001173cfb00: ; implicit exception: dispatches to 0x00000001173d01cc
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@81 (line 23)
  0x00000001173cfb00: 8b79 0c41 

  0x00000001173cfb04: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
  0x00000001173cfb04: 8b6c 240c 
 ;; B12: #	out( B38 B13 ) <- in( B11 )  Freq: 0.999995
  0x00000001173cfb08: 443b ef0f | 8d1b 0500 

  0x00000001173cfb10: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
  0x00000001173cfb10: 00c4 c1f9 | 6ec0 458b | dc45 8bcd | 41ff c141 | c1eb 0341 | 83e3 0345 | 33d2 453b | ca45 0f4c 
  0x00000001173cfb30: ca44 3bcf | 440f 4fcf | 4503 d9be | 0200 0000 | 412b f383 | e603 4103 | f13b f70f 

  0x00000001173cfb4c: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
  0x00000001173cfb4c: 4ff7 443b | ef0f 8315 | 0500 004e | 8b5c e910 | 4c2b 5c24 

  0x00000001173cfb60: ;*lsub {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
  0x00000001173cfb60: 104d 8bc3 | 4d0f afc3 

  0x00000001173cfb68: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
  0x00000001173cfb68: 4903 d844 | 3bed 0f83 | 3805 0000 
 ;; B16: #	out( B14 B17 ) <- in( B15 )  Freq: 1.99998
  0x00000001173cfb74: 4f8b 44ec | 104c 2b44 | 2418 4d0f | afc3 4d03 

  0x00000001173cfb84: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
  0x00000001173cfb84: f041 ffc5 | 443b ee7c 

  0x00000001173cfb8c: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
  0x00000001173cfb8c: c13b fd44 | 8bdf 440f | 4fdd 458b | cb41 83c1 | f1be 0000 | 0080 453b | d944 0f4c | ce45 3be9 
  0x00000001173cfbac: 0f8d 2b04 | 0000 443b | ef0f 834c | 0500 0090 | 9090 9090 | 443b ed0f | 8352 0500 | 0045 8bc5 
  0x00000001173cfbcc: 4183 c00f | 443b c50f | 8356 0500 | 0044 3bed | 9090 9090 | 0f83 5d05 | 0000 443b | c70f 8368 
  0x00000001173cfbec: 0500 0044 | 3bef 0f83 | 7305 0000 
 ;; B24: #	out( B26 ) <- in( B23 )  Freq: 0.999983
  0x00000001173cfbf8: c4e2 7d59 | 7c24 10c4 | 627d 5944 | 2418 41b8 

  0x00000001173cfc08: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
  0x00000001173cfc08: 803e 0000 | eb18 498b | 9730 0100 

  0x00000001173cfc14: ; ImmutableOopMap {r12=Oop rcx=Oop xmm0=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
                      ;   {poll}
  0x00000001173cfc14: 0085 0245 | 3be9 9090 | 9090 9090 | 0f8d e502 | 0000 418b | d141 2bd5 | 453b cd41 | 0f4c d281 
  0x00000001173cfc34: fa80 3e00 | 0041 0f47 

  0x00000001173cfc3c: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
  0x00000001173cfc3c: d041 03d5 
 ;; B27: #	out( B27 B28 ) <- in( B26 B27 ) Loop( B27-B27 inner main of N201 strip mined) Freq: 9.99983e+11
  0x00000001173cfc40: c481 7e6f | 4cec 10c4 | a17e 6f54 | e910 c441 | 75fb c8c5 | 6dfb d749 | 63c5 c5fe | 6f4c c130 
  0x00000001173cfc60: c4c1 7e6f | 54c4 70c5 | fe6f 5cc1 | 50c5 fe6f | 64c1 70c4 | c17e 6f6c | c430 c4c1 | 7e6f 74c4 
  0x00000001173cfc80: 50c5 75fb | dfc4 c14d | fbf0 c4c1 | 55fb e8c5 | 5dfb e7c5 

  0x00000001173cfc94: ;*lsub {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
  0x00000001173cfc94: 65fb efc4 | c16d fbd8 | c4c1 7d70 | cab1 c4e2 | 2d40 c9c4 | e37d 39ca | 01c4 e275 | 02ca c4e2 
  0x00000001173cfcb4: 7d35 c9c5 | f573 f120 | c4c1 2df4 | d2c5 f5d4 | cac4 e37d | 39ca 01c5 | e9d4 d1c5 | 7970 fa0e 
  0x00000001173cfcd4: c501 d4fa | c4e1 f96e | d3c4 c169 | d4d7 c4e1 | f97e d3c4 | c17d 70cb | b1c4 e225 | 40c9 c4e3 
  0x00000001173cfcf4: 7d39 ca01 | c4e2 7502 | cac4 e27d | 35c9 c5f5 | 73f1 20c4 | c125 f4d3 | c5f5 d4ca | c4e3 7d39 
  0x00000001173cfd14: ca01 c5e9 | d4d1 c579 | 70fa 0ec5 | 01d4 fac4 | e1f9 6ed3 | c4c1 69d4 | d7c4 e1f9 | 7ed3 c4c1 
  0x00000001173cfd34: 7d70 cdb1 | c4e2 1540 | c9c4 e37d | 39ca 01c4 | e275 02ca | c4e2 7d35 | c9c5 f573 | f120 c4c1 
  0x00000001173cfd54: 15f4 d5c5 | f5d4 cac4 | e37d 39ca | 01c5 e9d4 | d1c5 7970 | fa0e c501 | d4fa c4e1 | f96e d3c4 
  0x00000001173cfd74: c169 d4d7 | c4e1 f97e | d3c4 c17d | 70cc b1c4 | e21d 40c9 | c4e3 7d39 | ca01 c4e2 | 7502 cac4 
  0x00000001173cfd94: e27d 35c9 | c5f5 73f1 | 20c4 c11d | f4d4 c5f5 | d4ca c4e3 | 7d39 ca01 | c5e9 d4d1 | c579 70fa 
  0x00000001173cfdb4: 0ec5 01d4 | fac4 e1f9 | 6ed3 c4c1 | 69d4 d7c4 

  0x00000001173cfdc4: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
  0x00000001173cfdc4: e1f9 7ed3 | c4c1 7d70 | cab1 c4e2 | 3540 c9c4 | e37d 39ca | 01c4 e275 | 02ca c4e2 | 7d35 c9c5 
  0x00000001173cfde4: f573 f120 | c4c1 35f4 | d2c5 f5d4 | cac4 e37d | 39ca 01c5 | e9d4 d1c5 | 7970 ca0e | c531 d4ca 
  0x00000001173cfe04: c4c1 f96e | d6c4 c169 | d4d1 c4e1 | f97e d0c4 | c17d 70cb | b1c4 e255 | 40c9 c4e3 | 7d39 ca01 
  0x00000001173cfe24: c4e2 7502 | cac4 e27d | 35c9 c5f5 | 73f1 20c4 | c155 f4d3 | c5f5 d4ca | c4e3 7d39 | ca01 c5e9 
  0x00000001173cfe44: d4d1 c5f9 | 70ea 0ec5 | d1d4 eac4 | e1f9 6ed0 | c5e9 d4d5 | c4e1 f97e | d0c4 c17d | 70cd b1c4 
  0x00000001173cfe64: e24d 40c9 | c4e3 7d39 | ca01 c4e2 | 7502 cac4 | e27d 35c9 | c5f5 73f1 | 20c4 c14d | f4d5 c5f5 
  0x00000001173cfe84: d4ca c4e3 | 7d39 ca01 | c5e9 d4d1 | c5f9 70ea | 0ec5 d1d4 | eac4 e1f9 | 6ed0 c5e9 | d4d5 c4e1 
  0x00000001173cfea4: f97e d0c4 | c17d 70cc | b1c4 e265 | 40c9 c4e3 | 7d39 ca01 | c4e2 7502 | cac4 e27d | 35c9 c5f5 
  0x00000001173cfec4: 73f1 20c4 | c165 f4d4 | c5f5 d4ca | c4c3 7d39 | ce01 c509 | d4f1 c4c1 | 7970 e60e | c4c1 59d4 
  0x00000001173cfee4: e6c4 61f9 | 6ef0 c509 | d4f4 c441 

  0x00000001173cfef0: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
  0x00000001173cfef0: f97e f641 

  0x00000001173cfef4: ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
  0x00000001173cfef4: 83c5 1044 | 3bea 9090 | 9090 9090 | 0f8c 3afd 

  0x00000001173cff04: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
  0x00000001173cff04: ffff e903 | fdff ff45 | 8bc3 4183 | c0fd 453b | d844 0f4c | c645 3be8 | 9090 9090 | 0f8d b700 
  0x00000001173cff24: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
  0x00000001173cff24: 0000 9090 
 ;; B31: #	out( B31 B32 ) <- in( B30 B31 ) Loop( B31-B31 inner post of N857) Freq: 0.999983
  0x00000001173cff28: c481 7e6f | 4cec 10c4 | a17e 6f54 | e910 c4c1 | 75fb c8c5 

  0x00000001173cff3c: ;*lsub {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
  0x00000001173cff3c: edfb d7c5 | fd70 eab1 | c4e2 6d40 | edc4 e37d | 39ee 01c4 | e255 02ee | c4e2 7d35 | edc5 d573 
  0x00000001173cff5c: f520 c5ed | f4f2 c5d5 | d4ee c4e3 | 7d39 ee01 | c5c9 d4f5 | c579 70ce | 0ec5 31d4 | cec4 e1f9 
  0x00000001173cff7c: 6ef3 c4c1 | 49d4 f1c4 

  0x00000001173cff84: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
  0x00000001173cff84: e1f9 7ef3 | c5fd 70ea | b1c4 e275 | 40ed c4e3 | 7d39 ee01 | c4e2 5502 | eec4 e27d | 35ed c5d5 
  0x00000001173cffa4: 73f5 20c5 | f5f4 f2c5 | d5d4 cec4 | e37d 39cc | 01c5 d9d4 | e1c5 f970 | dc0e c5e1 | d4dc c4c1 
  0x00000001173cffc4: f96e e6c5 | d9d4 e3c4 

  0x00000001173cffcc: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
  0x00000001173cffcc: c1f9 7ee6 

  0x00000001173cffd0: ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
  0x00000001173cffd0: 4183 c504 | 453b e80f | 8c4b ffff 

  0x00000001173cffdc: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
  0x00000001173cffdc: ff90 9090 | 443b ef7d 

  0x00000001173cffe4: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@90 (line 24)
  0x00000001173cffe4: 4290 9090 
 ;; B34: #	out( B39 B35 ) <- in( B33 B36 ) Loop( B34-B36 inner post of N443) Freq: 328960
  0x00000001173cffe8: 443b ef0f | 837b 0000 | 004e 8b5c | e910 4c2b 

  0x00000001173cfff8: ;*lsub {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
  0x00000001173cfff8: 5c24 104d | 8bd3 4d0f | afd3 4903 

  0x00000001173d0004: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
  0x00000001173d0004: da44 3bed | 0f83 9e00 | 0000 4f8b | 54ec 104c 

  0x00000001173d0014: ;   {no_reloc}
  0x00000001173d0014: 2b54 2418 | 4d0f afd3 

  0x00000001173d001c: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
  0x00000001173d001c: 4d03 f241 

  0x00000001173d0020: ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
  0x00000001173d0020: ffc5 443b | ef7c c1c4 

  0x00000001173d0028: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
  0x00000001173d0028: c1f9 7ec0 
 ;; B38: #	out( N634 ) <- in( B12 B37 )  Freq: 0.333329
  0x00000001173d002c: be45 ffff | ff49 8be8 | 4889 0c24 | 4c89 6424 | 0848 895c | 2420 4c89 | 7424 2844 | 896c 2434 
  0x00000001173d004c: 897c 2438 

  0x00000001173d0050: ;   {runtime_call UncommonTrapBlob}
  0x00000001173d0050: c5f8 77e8 

  0x00000001173d0054: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop }
                      ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
  0x00000001173d0054: e804 58f8 

  0x00000001173d0058: ;   {external_word}
  0x00000001173d0058: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173d0064: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d0064: e4f0 e8e5 | 0e91 f2f4 
 ;; B39: #	out( N634 ) <- in( B34 B14 )  Freq: 0.33333
  0x00000001173d006c: bee4 ffff | ffc4 e1f9 | 7ec5 4c89 | 6424 084c | 8974 2420 | 4889 5c24 | 3048 894c | 2438 4489 
  0x00000001173d008c: 6c24 2c90 

  0x00000001173d0090: ;   {runtime_call UncommonTrapBlob}
  0x00000001173d0090: c5f8 77e8 

  0x00000001173d0094: ; ImmutableOopMap {rbp=Oop [8]=Oop [56]=Oop }
                      ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@90 (line 24)
  0x00000001173d0094: a804 58f8 

  0x00000001173d0098: ;   {external_word}
  0x00000001173d0098: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173d00a4: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d00a4: e4f0 e8a5 | 0e91 f2f4 
 ;; B40: #	out( N634 ) <- in( B35 B15 )  Freq: 0.33333
  0x00000001173d00ac: bee4 ffff | ffc4 e1f9 | 7ec5 4889 | 0c24 4889 | 5c24 204c | 8974 2430 | 4c89 5c24 | 384c 8964 
  0x00000001173d00cc: 2440 4489 | 6c24 2c90 

  0x00000001173d00d4: ;   {runtime_call UncommonTrapBlob}
  0x00000001173d00d4: c5f8 77e8 

  0x00000001173d00d8: ; ImmutableOopMap {rbp=Oop [0]=Oop [64]=Oop }
                      ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
  0x00000001173d00d8: 6404 58f8 

  0x00000001173d00dc: ;   {external_word}
  0x00000001173d00dc: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173d00e8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d00e8: e4f0 e861 

  0x00000001173d00ec: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
  0x00000001173d00ec: 0e91 f2f4 
 ;; B41: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
  0x00000001173d00f0: 4533 c0e9 | c5f9 ffff 
 ;; B42: #	out( B7 ) <- in( B4 )  Freq: 0.000999986
  0x00000001173d00f8: 33c9 e9de | f9ff ff45 | 33e4 e9f4 

  0x00000001173d0104: ;   {external_word}
  0x00000001173d0104: f9ff ff48 | bfa6 2d42 | 0a01 0000 | 0048 83e4 

  0x00000001173d0114: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d0114: f0e8 360e 

  0x00000001173d0118: ;   {external_word}
  0x00000001173d0118: 91f2 f448 | bfa6 2d42 | 0a01 0000 | 0048 83e4 

  0x00000001173d0128: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d0128: f0e8 220e 

  0x00000001173d012c: ;   {external_word}
  0x00000001173d012c: 91f2 f448 | bf31 2542 | 0a01 0000 | 0048 83e4 

  0x00000001173d013c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d013c: f0e8 0e0e 

  0x00000001173d0140: ;   {external_word}
  0x00000001173d0140: 91f2 f448 | bf31 2542 | 0a01 0000 | 0048 83e4 

  0x00000001173d0150: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d0150: f0e8 fa0d 

  0x00000001173d0154: ;   {external_word}
  0x00000001173d0154: 91f2 f448 | bf31 2542 | 0a01 0000 | 0048 83e4 

  0x00000001173d0164: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d0164: f0e8 e60d 

  0x00000001173d0168: ;   {external_word}
  0x00000001173d0168: 91f2 f448 | bf31 2542 | 0a01 0000 | 0048 83e4 

  0x00000001173d0178: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d0178: f0e8 d20d | 91f2 f4be | 8dff ffff | 4c89 2424 | 48ff 7424 | 1048 8f44 | 2408 48ff | 7424 1848 
  0x00000001173d0198: 8f44 2410 | 4889 5c24 | 184c 8974 | 2420 4489 | 6c24 284c | 8954 2430 

  0x00000001173d01b0: ;   {runtime_call UncommonTrapBlob}
  0x00000001173d01b0: c5f8 77e8 

  0x00000001173d01b4: ; ImmutableOopMap {rbp=Oop [0]=Oop [48]=Oop }
                      ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@78 (line 23)
  0x00000001173d01b4: 8803 58f8 

  0x00000001173d01b8: ;   {external_word}
  0x00000001173d01b8: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173d01c4: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d01c4: e4f0 e885 | 0d91 f2f4 
 ;; B51: #	out( N634 ) <- in( B11 B10 )  Freq: 2.02655e-06
  0x00000001173d01cc: be76 ffff | ff49 8be8 | 4889 0c24 | 4c89 6424 | 0848 895c | 2420 4c89 | 7424 2844 | 896c 2430 
  0x00000001173d01ec: ;   {runtime_call UncommonTrapBlob}
  0x00000001173d01ec: c5f8 77e8 

  0x00000001173d01f0: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop }
                      ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@78 (line 23)
  0x00000001173d01f0: 4c03 58f8 

  0x00000001173d01f4: ;   {external_word}
  0x00000001173d01f4: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173d0200: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d0200: e4f0 e849 

  0x00000001173d0204: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@78 (line 23)
  0x00000001173d0204: 0d91 f2f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 
[Exception Handler]
  0x00000001173d0220: ;   {no_reloc}
  0x00000001173d0220: e9fb ae4c | f8e8 0000 | 0000 4883 

  0x00000001173d022c: ;   {runtime_call DeoptimizationBlob}
  0x00000001173d022c: 2c24 05e9 | 2c06 58f8 | f4f4 f4f4 
[/MachCode]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00000001173d0238:   0x000000011ed59890 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011ed59890}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00000001173d0240:   0x0000000226d0e900 'org/jml/regression/linear/LongLinearRegression'
  0x00000001173d0248:   0x0000000226c40e38 {type array long}
  0x00000001173d0250:   0x000000010ec8fa60 {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00000001173cfa3f offset=ffffffff bits=0):
PcDesc(pc=0x00000001173cfafb offset=bb bits=0):   org.jml.regression.linear.LongLinearRegression::fit@78 (line 23)
PcDesc(pc=0x00000001173cfb03 offset=c3 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@81 (line 23)
PcDesc(pc=0x00000001173cfb08 offset=c8 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
PcDesc(pc=0x00000001173cfb11 offset=d1 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
PcDesc(pc=0x00000001173cfb4e offset=10e bits=0):   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
PcDesc(pc=0x00000001173cfb61 offset=121 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
PcDesc(pc=0x00000001173cfb6b offset=12b bits=0):   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
PcDesc(pc=0x00000001173cfb85 offset=145 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
PcDesc(pc=0x00000001173cfb88 offset=148 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
PcDesc(pc=0x00000001173cfb8d offset=14d bits=0):   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
PcDesc(pc=0x00000001173cfc0c offset=1cc bits=0):   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
PcDesc(pc=0x00000001173cfc15 offset=1d5 bits=1):   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)  reexecute=true
   Locals
    - l0: reg xmm0 [48],oop
    - l1: reg rcx [2],oop
    - l2: reg r12 [24],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[16],long
    - l9: 0
    - l10: stack[24],long
    - l11: 0
    - l12: reg rbx [6],long
    - l13: 0
    - l14: reg r14 [28],long
    - l15: reg r13 [26],int
PcDesc(pc=0x00000001173cfc17 offset=1d7 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
PcDesc(pc=0x00000001173cfc40 offset=200 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
PcDesc(pc=0x00000001173cfc97 offset=257 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
PcDesc(pc=0x00000001173cfdc8 offset=388 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
PcDesc(pc=0x00000001173cfef3 offset=4b3 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
PcDesc(pc=0x00000001173cfef7 offset=4b7 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
PcDesc(pc=0x00000001173cff06 offset=4c6 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
PcDesc(pc=0x00000001173cff28 offset=4e8 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
PcDesc(pc=0x00000001173cff3f offset=4ff bits=0):   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
PcDesc(pc=0x00000001173cff88 offset=548 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
PcDesc(pc=0x00000001173cffd0 offset=590 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
PcDesc(pc=0x00000001173cffd4 offset=594 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
PcDesc(pc=0x00000001173cffdd offset=59d bits=0):   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
PcDesc(pc=0x00000001173cffe8 offset=5a8 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@90 (line 24)
PcDesc(pc=0x00000001173cfffb offset=5bb bits=0):   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
PcDesc(pc=0x00000001173d0005 offset=5c5 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
PcDesc(pc=0x00000001173d001f offset=5df bits=0):   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
PcDesc(pc=0x00000001173d0022 offset=5e2 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
PcDesc(pc=0x00000001173d002c offset=5ec bits=0):   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
PcDesc(pc=0x00000001173d0058 offset=618 bits=1):   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[16],long
    - l9: 0
    - l10: stack[24],long
    - l11: 0
    - l12: stack[32],long
    - l13: 0
    - l14: stack[40],long
    - l15: stack[52]
   Expression stack
    - @0: stack[52]
    - @1: stack[56]
PcDesc(pc=0x00000001173d0098 offset=658 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@90 (line 24)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[56],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[16],long
    - l9: 0
    - l10: stack[24],long
    - l11: empty
    - l12: empty
    - l13: 0
    - l14: stack[32],long
    - l15: stack[44]
   Expression stack
    - @0: 0
    - @1: stack[48],long
    - @2: stack[56],oop
    - @3: stack[44]
PcDesc(pc=0x00000001173d00dc offset=69c bits=0):   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[64],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[16],long
    - l9: 0
    - l10: stack[24],long
    - l11: 0
    - l12: stack[32],long
    - l13: empty
    - l14: empty
    - l15: stack[44]
   Expression stack
    - @0: 0
    - @1: stack[48],long
    - @2: 0
    - @3: stack[56],long
    - @4: stack[64],oop
    - @5: stack[44]
PcDesc(pc=0x00000001173d00f0 offset=6b0 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
PcDesc(pc=0x00000001173d01b8 offset=778 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@78 (line 23)
   Locals
    - l0: stack[48],oop
    - l1: reg rbp [10],oop
    - l2: stack[0],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[8],long
    - l9: 0
    - l10: stack[16],long
    - l11: 0
    - l12: stack[24],long
    - l13: 0
    - l14: stack[32],long
    - l15: stack[40]
PcDesc(pc=0x00000001173d01f4 offset=7b4 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@78 (line 23)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[16],long
    - l9: 0
    - l10: stack[24],long
    - l11: 0
    - l12: stack[32],long
    - l13: 0
    - l14: stack[40],long
    - l15: stack[48]
PcDesc(pc=0x00000001173d0208 offset=7c8 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@78 (line 23)
PcDesc(pc=0x00000001173d0239 offset=7f9 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 6 OopMaps

ImmutableOopMap {r12=Oop rcx=Oop xmm0=Oop } pc offsets: 469 
ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop } pc offsets: 1560 
ImmutableOopMap {rbp=Oop [8]=Oop [56]=Oop } pc offsets: 1624 
ImmutableOopMap {rbp=Oop [0]=Oop [64]=Oop } pc offsets: 1692 
ImmutableOopMap {rbp=Oop [0]=Oop [48]=Oop } pc offsets: 1912 
ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop } pc offsets: 1972 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00000001173cfafb offset=bb):
   org.jml.regression.linear.LongLinearRegression::fit@78 (line 23)
ScopeDesc(pc=0x00000001173cfb03 offset=c3):
   org.jml.regression.linear.LongLinearRegression::fit@81 (line 23)
ScopeDesc(pc=0x00000001173cfb08 offset=c8):
   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
ScopeDesc(pc=0x00000001173cfb11 offset=d1):
   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
ScopeDesc(pc=0x00000001173cfb4e offset=10e):
   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
ScopeDesc(pc=0x00000001173cfb61 offset=121):
   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
ScopeDesc(pc=0x00000001173cfb6b offset=12b):
   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
ScopeDesc(pc=0x00000001173cfb85 offset=145):
   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
ScopeDesc(pc=0x00000001173cfb88 offset=148):
   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
ScopeDesc(pc=0x00000001173cfb8d offset=14d):
   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
ScopeDesc(pc=0x00000001173cfc0c offset=1cc):
   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
ScopeDesc(pc=0x00000001173cfc15 offset=1d5):
   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)  reexecute=true
   Locals
    - l0: reg xmm0 [48],oop
    - l1: reg rcx [2],oop
    - l2: reg r12 [24],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[16],long
    - l9: 0
    - l10: stack[24],long
    - l11: 0
    - l12: reg rbx [6],long
    - l13: 0
    - l14: reg r14 [28],long
    - l15: reg r13 [26],int
ScopeDesc(pc=0x00000001173cfc17 offset=1d7):
   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
ScopeDesc(pc=0x00000001173cfc40 offset=200):
   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
ScopeDesc(pc=0x00000001173cfc97 offset=257):
   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
ScopeDesc(pc=0x00000001173cfdc8 offset=388):
   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
ScopeDesc(pc=0x00000001173cfef3 offset=4b3):
   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
ScopeDesc(pc=0x00000001173cfef7 offset=4b7):
   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
ScopeDesc(pc=0x00000001173cff06 offset=4c6):
   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
ScopeDesc(pc=0x00000001173cff28 offset=4e8):
   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
ScopeDesc(pc=0x00000001173cff3f offset=4ff):
   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
ScopeDesc(pc=0x00000001173cff88 offset=548):
   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
ScopeDesc(pc=0x00000001173cffd0 offset=590):
   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
ScopeDesc(pc=0x00000001173cffd4 offset=594):
   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
ScopeDesc(pc=0x00000001173cffdd offset=59d):
   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
ScopeDesc(pc=0x00000001173cffe8 offset=5a8):
   org.jml.regression.linear.LongLinearRegression::fit@90 (line 24)
ScopeDesc(pc=0x00000001173cfffb offset=5bb):
   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
ScopeDesc(pc=0x00000001173d0005 offset=5c5):
   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
ScopeDesc(pc=0x00000001173d001f offset=5df):
   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
ScopeDesc(pc=0x00000001173d0022 offset=5e2):
   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
ScopeDesc(pc=0x00000001173d002c offset=5ec):
   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
ScopeDesc(pc=0x00000001173d0058 offset=618):
   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[16],long
    - l9: 0
    - l10: stack[24],long
    - l11: 0
    - l12: stack[32],long
    - l13: 0
    - l14: stack[40],long
    - l15: stack[52]
   Expression stack
    - @0: stack[52]
    - @1: stack[56]
ScopeDesc(pc=0x00000001173d0098 offset=658):
   org.jml.regression.linear.LongLinearRegression::fit@90 (line 24)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[56],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[16],long
    - l9: 0
    - l10: stack[24],long
    - l11: empty
    - l12: empty
    - l13: 0
    - l14: stack[32],long
    - l15: stack[44]
   Expression stack
    - @0: 0
    - @1: stack[48],long
    - @2: stack[56],oop
    - @3: stack[44]
ScopeDesc(pc=0x00000001173d00dc offset=69c):
   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[64],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[16],long
    - l9: 0
    - l10: stack[24],long
    - l11: 0
    - l12: stack[32],long
    - l13: empty
    - l14: empty
    - l15: stack[44]
   Expression stack
    - @0: 0
    - @1: stack[48],long
    - @2: 0
    - @3: stack[56],long
    - @4: stack[64],oop
    - @5: stack[44]
ScopeDesc(pc=0x00000001173d00f0 offset=6b0):
   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
ScopeDesc(pc=0x00000001173d01b8 offset=778):
   org.jml.regression.linear.LongLinearRegression::fit@78 (line 23)
   Locals
    - l0: stack[48],oop
    - l1: reg rbp [10],oop
    - l2: stack[0],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[8],long
    - l9: 0
    - l10: stack[16],long
    - l11: 0
    - l12: stack[24],long
    - l13: 0
    - l14: stack[32],long
    - l15: stack[40]
ScopeDesc(pc=0x00000001173d01f4 offset=7b4):
   org.jml.regression.linear.LongLinearRegression::fit@78 (line 23)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[16],long
    - l9: 0
    - l10: stack[24],long
    - l11: 0
    - l12: stack[32],long
    - l13: 0
    - l14: stack[40],long
    - l15: stack[48]
ScopeDesc(pc=0x00000001173d0208 offset=7c8):
   org.jml.regression.linear.LongLinearRegression::fit@78 (line 23)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00000001173cf988: 6400
relocInfo@0x00000001173cf988 [type=6(runtime_call) addr=0x00000001173cfa40 offset=0 format=1] | [destination=0x0000000109e77fa0]
         @0x00000001173cf98a: f001cc6d
relocInfo@0x00000001173cf98c [type=12(metadata) addr=0x00000001173cfaad offset=109 format=3 data=1] | [metadata_addr=0x00000001173d0240 *=0x0000000226d0e900 offset=0]metadata_value=0x0000000226d0e900: 'org/jml/regression/linear/LongLinearRegression'
         @0x00000001173cf98e: f002cc20
relocInfo@0x00000001173cf990 [type=12(metadata) addr=0x00000001173cfacd offset=32 format=3 data=2] | [metadata_addr=0x00000001173d0248 *=0x0000000226c40e38 offset=0]metadata_value=0x0000000226c40e38: {type array long}
         @0x00000001173cf992: f002cc21
relocInfo@0x00000001173cf994 [type=12(metadata) addr=0x00000001173cfaee offset=33 format=3 data=2] | [metadata_addr=0x00000001173d0248 *=0x0000000226c40e38 offset=0]metadata_value=0x0000000226c40e38: {type array long}
         @0x00000001173cf996: a127
relocInfo@0x00000001173cf996 [type=10(poll) addr=0x00000001173cfc15 offset=295]
         @0x00000001173cf998: 03ff
relocInfo@0x00000001173cf998 [type=0(none) addr=0x00000001173d0014 offset=1023]
         @0x00000001173cf99a: 643f
relocInfo@0x00000001173cf99a [type=6(runtime_call) addr=0x00000001173d0053 offset=63 format=1] | [destination=0x000000010f950540]
         @0x00000001173cf99c: f8030a3a777700017005
relocInfo@0x00000001173cf9a4 [type=7(external_word) addr=0x00000001173d0058 offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173cf9a6: 640e
relocInfo@0x00000001173cf9a6 [type=6(runtime_call) addr=0x00000001173d0066 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173cf9a8: 642d
relocInfo@0x00000001173cf9a8 [type=6(runtime_call) addr=0x00000001173d0093 offset=45 format=1] | [destination=0x000000010f950540]
         @0x00000001173cf9aa: f8030a3a777700017005
relocInfo@0x00000001173cf9b2 [type=7(external_word) addr=0x00000001173d0098 offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173cf9b4: 640e
relocInfo@0x00000001173cf9b4 [type=6(runtime_call) addr=0x00000001173d00a6 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173cf9b6: 6431
relocInfo@0x00000001173cf9b6 [type=6(runtime_call) addr=0x00000001173d00d7 offset=49 format=1] | [destination=0x000000010f950540]
         @0x00000001173cf9b8: f8030a3a777700017005
relocInfo@0x00000001173cf9c0 [type=7(external_word) addr=0x00000001173d00dc offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173cf9c2: 640e
relocInfo@0x00000001173cf9c2 [type=6(runtime_call) addr=0x00000001173d00ea offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173cf9c4: f8030a422da60001701d
relocInfo@0x00000001173cf9cc [type=7(external_word) addr=0x00000001173d0107 offset=29 data={0a422da60001}] | [target=0x000000010a422da6]
         @0x00000001173cf9ce: 640e
relocInfo@0x00000001173cf9ce [type=6(runtime_call) addr=0x00000001173d0115 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173cf9d0: f8030a422da600017006
relocInfo@0x00000001173cf9d8 [type=7(external_word) addr=0x00000001173d011b offset=6 data={0a422da60001}] | [target=0x000000010a422da6]
         @0x00000001173cf9da: 640e
relocInfo@0x00000001173cf9da [type=6(runtime_call) addr=0x00000001173d0129 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173cf9dc: f8030a42253100017006
relocInfo@0x00000001173cf9e4 [type=7(external_word) addr=0x00000001173d012f offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173cf9e6: 640e
relocInfo@0x00000001173cf9e6 [type=6(runtime_call) addr=0x00000001173d013d offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173cf9e8: f8030a42253100017006
relocInfo@0x00000001173cf9f0 [type=7(external_word) addr=0x00000001173d0143 offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173cf9f2: 640e
relocInfo@0x00000001173cf9f2 [type=6(runtime_call) addr=0x00000001173d0151 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173cf9f4: f8030a42253100017006
relocInfo@0x00000001173cf9fc [type=7(external_word) addr=0x00000001173d0157 offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173cf9fe: 640e
relocInfo@0x00000001173cf9fe [type=6(runtime_call) addr=0x00000001173d0165 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173cfa00: f8030a42253100017006
relocInfo@0x00000001173cfa08 [type=7(external_word) addr=0x00000001173d016b offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173cfa0a: 640e
relocInfo@0x00000001173cfa0a [type=6(runtime_call) addr=0x00000001173d0179 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173cfa0c: 643a
relocInfo@0x00000001173cfa0c [type=6(runtime_call) addr=0x00000001173d01b3 offset=58 format=1] | [destination=0x000000010f950540]
         @0x00000001173cfa0e: f8030a3a777700017005
relocInfo@0x00000001173cfa16 [type=7(external_word) addr=0x00000001173d01b8 offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173cfa18: 640e
relocInfo@0x00000001173cfa18 [type=6(runtime_call) addr=0x00000001173d01c6 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173cfa1a: 6429
relocInfo@0x00000001173cfa1a [type=6(runtime_call) addr=0x00000001173d01ef offset=41 format=1] | [destination=0x000000010f950540]
         @0x00000001173cfa1c: f8030a3a777700017005
relocInfo@0x00000001173cfa24 [type=7(external_word) addr=0x00000001173d01f4 offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173cfa26: 640e
relocInfo@0x00000001173cfa26 [type=6(runtime_call) addr=0x00000001173d0202 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173cfa28: 001e
relocInfo@0x00000001173cfa28 [type=0(none) addr=0x00000001173d0220 offset=30]
         @0x00000001173cfa2a: 6400
relocInfo@0x00000001173cfa2a [type=6(runtime_call) addr=0x00000001173d0220 offset=0 format=1] | [destination=0x000000010f89b120]
         @0x00000001173cfa2c: 640f
relocInfo@0x00000001173cfa2c [type=6(runtime_call) addr=0x00000001173d022f offset=15 format=1] | [destination=0x000000010f950860]
         @0x00000001173cfa2e: 0000
relocInfo@0x00000001173cfa2e [type=0(none) addr=0x00000001173d022f offset=0]
         @0x00000001173cfa30: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type leaf_type
  context = org.jml.regression.linear.LongLinearRegression
   [nmethod<=klass]org.jml.regression.linear.LongLinearRegression
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 2 entries, 20 bytes):
{
   < 0x00000001173cfb00, 0x00000001173d01cc > < 0x00000001173cfb03, 0x00000001173d01cc > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 NULL-oop
#1: 0x000000011ed59890 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011ed59890}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
#0: 0x0000000000000000 NULL-oop
#1: 0x0000000226d0e900 'org/jml/regression/linear/LongLinearRegression'
#2: 0x0000000226c40e38 {type array long}
#3: 0x000000010ec8fa60 {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    2607 1001       3       org.jml.regression.linear.LongLinearRegression::fit (155 bytes)
 total in heap  [0x000000010ff57410,0x000000010ff58038] = 3112
 relocation     [0x000000010ff57588,0x000000010ff57650] = 200
 main code      [0x000000010ff57660,0x000000010ff57ba0] = 1344
 stub code      [0x000000010ff57ba0,0x000000010ff57c08] = 104
 oops           [0x000000010ff57c08,0x000000010ff57c10] = 8
 metadata       [0x000000010ff57c10,0x000000010ff57c18] = 8
 scopes data    [0x000000010ff57c18,0x000000010ff57d88] = 368
 scopes pcs     [0x000000010ff57d88,0x000000010ff58018] = 656
 dependencies   [0x000000010ff58018,0x000000010ff58020] = 8
 nul chk table  [0x000000010ff58020,0x000000010ff58038] = 24

[Constant Pool (empty)]

[MachCode]
[Entry Point]
  # {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
  # this:     rsi:rsi   = 'org/jml/regression/linear/LongLinearRegression'
  # parm0:    rdx:rdx   = '[J'
  # parm1:    rcx:rcx   = '[J'
  #           [sp+0xb0]  (sp of caller)
 ;;  block B9 [0, 0]
  0x000000010ff57660: 448b 5608 | 49c1 e203 

  0x000000010ff57668: ;   {runtime_call ic_miss_stub}
  0x000000010ff57668: 4c3b d00f | 85af 829f | ff90 9090 | 9090 9090 | 9090 9090 | 9090 9090 
[Verified Entry Point]
  0x000000010ff57680: 8984 2400 | a0fe ff55 | 4881 eca0 | 0000 0048 | 8974 2470 

  0x000000010ff57694: ;   {metadata(method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression')}
  0x000000010ff57694: 48bf 0000 | f00e 0100 | 0000 8b9f | 1c01 0000 | 83c3 0289 | 9f1c 0100 | 0081 e3fe | 0700 0083 
  0x000000010ff576b4: fb00 0f84 

  0x000000010ff576b8: ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@0 (line 9)
  0x000000010ff576b8: 3d03 0000 
 ;;  block B10 [0, 0]
 ;;  block B0 [0, 4]
  0x000000010ff576bc: ; implicit exception: dispatches to 0x000000010ff57a1a
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@1 (line 9)
  0x000000010ff576bc: 8b5a 0c8b 

  0x000000010ff576c0: ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@3 (line 9)
  0x000000010ff576c0: 790c 3bdf 

  0x000000010ff576c4: ;   {metadata(method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression')}
  0x000000010ff576c4: 48bf 0000 | f00e 0100 | 0000 48b8 | 7001 0000 | 0000 0000 | 0f85 0a00 | 0000 48b8 | 6001 0000 
  0x000000010ff576e4: 0000 0000 | 4c8b 0407 | 4d8d 4001 | 4c89 0407 
 ;;   50 branch [NE] [B1] 
  0x000000010ff576f4: 0f85 6302 

  0x000000010ff576f8: ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@4 (line 9)
  0x000000010ff576f8: 0000 bf00 | 0000 0048 | b800 0000 | 0000 0000 | 0049 b800 | 0000 0000 | 0000 00e9 

  0x000000010ff57714: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@25 (line 13)
  0x000000010ff57714: 6e00 0000 
 ;;  block B4 [32, 51]
  0x000000010ff57718: 4c63 cf4e 

  0x000000010ff5771c: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@36 (line 14)
  0x000000010ff5771c: 8b5c ca10 | 4d03 d83b | 790c 0f83 | 2003 0000 | 4c63 c74e 

  0x000000010ff57730: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
  0x000000010ff57730: 8b4c c110 | 4c03 c8ff 

  0x000000010ff57738: ;   {metadata(method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression')}
  0x000000010ff57738: c748 b800 | 00f0 0e01 | 0000 0044 | 8b80 2001 | 0000 4183 | c002 4489 | 8020 0100 | 0041 81e0 
  0x000000010ff57758: fe3f 0000 | 4183 f800 
 ;;  120 branch [EQ] [CounterOverflowStub: 0x00007f87cc83c8e0]
  0x000000010ff57760: 0f84 0803 

  0x000000010ff57764: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
  0x000000010ff57764: 0000 4d8b | 9730 0100 

  0x000000010ff5776c: ; ImmutableOopMap {rsi=Oop [112]=Oop rdx=Oop rcx=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
                      ;   {poll}
  0x000000010ff5776c: 0041 8502 

  0x000000010ff57770: ;   {metadata(method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression')}
  0x000000010ff57770: 48b8 0000 | f00e 0100 | 0000 ff80 | b001 0000 | 498b c14d 

  0x000000010ff57784: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
  0x000000010ff57784: 8bc3 3bfb 

  0x000000010ff57788: ;   {metadata(method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression')}
  0x000000010ff57788: 49b9 0000 | f00e 0100 | 0000 49bb | a001 0000 | 0000 0000 | 0f8c 0a00 | 0000 49bb | 9001 0000 
  0x000000010ff577a8: 0000 0000 | 4f8b 2c19 | 4d8d 6d01 | 4f89 2c19 
 ;;   78 branch [LT] [B4] 
  0x000000010ff577b8: 0f8c 5aff 

  0x000000010ff577bc: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
  0x000000010ff577bc: ffff 4889 | 4424 4848 | 894c 2468 | 4889 5424 | 604c 63cb | 498b f04d | 8bc1 498b | f849 83f8 
  0x000000010ff577dc: 000f 84ac | 0200 0089 | 5c24 584c | 894c 2450 

  0x000000010ff577ec: ;   {runtime_call SharedRuntime::ldiv(long, long)}
  0x000000010ff577ec: e8bf d901 

  0x000000010ff577f0: ;*ldiv {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@58 (line 18)
  0x000000010ff577f0: fa48 8944 | 2478 488b | 7424 484c | 8b4c 2450 | 498b f949 | 83f9 000f | 849b 0200 

  0x000000010ff5780c: ;   {runtime_call SharedRuntime::ldiv(long, long)}
  0x000000010ff5780c: 00e8 9ed9 

  0x000000010ff57810: ;*ldiv {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@66 (line 19)
  0x000000010ff57810: 01fa be00 | 0000 0048 | bf00 0000 | 0000 0000 | 0048 bb00 | 0000 0000 | 0000 004c | 8bc8 488b 
  0x000000010ff57830: 4424 788b | 5424 584c | 8b44 2468 | 488b 4c24 | 60e9 8b00 

  0x000000010ff57844: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@78 (line 23)
  0x000000010ff57844: 0000 9090 
 ;;  block B7 [85, 128]
  0x000000010ff57848: 4c63 de4e 

  0x000000010ff5784c: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@90 (line 24)
  0x000000010ff5784c: 8b6c d910 | 4c2b e84d | 8bdd 498b | c549 0faf | c34c 8bd8 | 4c03 db41 | 3b70 0c0f | 8354 0200 
  0x000000010ff5786c: 0048 63c6 | 498b 5cc0 

  0x000000010ff57874: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
  0x000000010ff57874: 1049 2bd9 | 488b c349 | 0faf c548 | 03c7 ffc6 

  0x000000010ff57884: ;   {metadata(method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression')}
  0x000000010ff57884: 48bf 0000 | f00e 0100 | 0000 8b9f | 2001 0000 | 83c3 0289 | 9f20 0100 | 0081 e3fe | 3f00 0083 
  0x000000010ff578a4: fb00 0f84 

  0x000000010ff578a8: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
  0x000000010ff578a8: 3702 0000 | 4d8b 9730 

  0x000000010ff578b0: ; ImmutableOopMap {[112]=Oop rcx=Oop r8=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
                      ;   {poll}
  0x000000010ff578b0: 0100 0041 

  0x000000010ff578b4: ;   {metadata(method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression')}
  0x000000010ff578b4: 8502 48bf | 0000 f00e | 0100 0000 | ff87 e801 | 0000 488b 

  0x000000010ff578c8: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
  0x000000010ff578c8: f849 8bdb | 488b 4424 

  0x000000010ff578d0: ;   {metadata(method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression')}
  0x000000010ff578d0: 783b f249 | bb00 00f0 | 0e01 0000 | 0049 bdd8 | 0100 0000 | 0000 000f | 8c0a 0000 | 0049 bdc8 
  0x000000010ff578f0: 0100 0000 | 0000 004f | 8b34 2b4d | 8d76 014f | 8934 2b0f | 8c3f ffff 

  0x000000010ff57908: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
  0x000000010ff57908: ff4c 898c | 2480 0000 | 0048 8bf7 | 488b fb48 | 83fb 000f | 84e3 0100 

  0x000000010ff57920: ;   {runtime_call SharedRuntime::ldiv(long, long)}
  0x000000010ff57920: 00e8 8ad8 

  0x000000010ff57924: ;*ldiv {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
  0x000000010ff57924: 01fa 488b | 7424 7048 

  0x000000010ff5792c: ;*putfield slope {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)
  0x000000010ff5792c: 8946 1848 | 8b54 2478 | 480f afc2 | 488b 9424 | 8000 0000 | 482b d048 

  0x000000010ff57944: ;*putfield intercept {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@151 (line 30)
  0x000000010ff57944: 8956 1048 | 81c4 a000 

  0x000000010ff5794c: ;   {poll_return}
  0x000000010ff5794c: 0000 5d49 | 3ba7 2801 | 0000 0f87 | c101 0000 

  0x000000010ff5795c: ;*return {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@154 (line 31)
  0x000000010ff5795c: c390 9090 

  0x000000010ff57960: ;   {no_reloc}
  0x000000010ff57960: e9dd 0100 | 0000 0000 | 0000 498b | 8748 0100 | 0048 8d78 | 3849 3bbf | 5801 0000 | 0f87 ca01 
  0x000000010ff57980: 0000 4989 | bf48 0100 | 0048 c700 | 0100 0000 | 488b ca48 | c1e9 0389 | 4808 4833 | c989 480c 
  0x000000010ff579a0: 4833 c948 | bf05 0000 | 0000 0000 | 0048 894c | f808 48ff 

  0x000000010ff579b4: ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@7 (line 9)
  0x000000010ff579b4: cf75 f648 

  0x000000010ff579b8: ;   {metadata(method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression')}
  0x000000010ff579b8: 8bd0 48be | 0000 f00e | 0100 0000 | 4883 8680 | 0100 0001 

  0x000000010ff579cc: ;   {oop("Arrays length are not equals"{0x0000000197f00000})}
  0x000000010ff579cc: 48ba 0000 | f097 0100 | 0000 488b 

  0x000000010ff579d8: ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@13 (line 9)
  0x000000010ff579d8: f048 8984 | 2488 0000 | 0090 9090 

  0x000000010ff579e4: ;   {optimized virtual_call}
  0x000000010ff579e4: 9090 90e8 

  0x000000010ff579e8: ; ImmutableOopMap {[136]=Oop }
                      ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@13 (line 9)
  0x000000010ff579e8: 3482 9fff | 488b 8424 | 8800 0000 | e97f 0100 

  0x000000010ff579f8: ;   {metadata({method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression')}
  0x000000010ff579f8: 0049 ba60 | fac8 0e01 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000010ff57a10: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000010ff57a10: e8ab cb93 

  0x000000010ff57a14: ; ImmutableOopMap {rsi=Oop [112]=Oop rdx=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - org.jml.regression.linear.LongLinearRegression::fit@-1 (line 9)
  0x000000010ff57a14: ffe9 a2fc 

  0x000000010ff57a18: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000010ff57a18: ffff e821 

  0x000000010ff57a1c: ; ImmutableOopMap {rsi=Oop [112]=Oop rdx=Oop rcx=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@1 (line 9)
                      ;   {external_word}
  0x000000010ff57a1c: 2b94 ff48 | bf69 6b32 | 0a01 0000 | 0048 83e4 

  0x000000010ff57a2c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000010ff57a2c: f0e8 1e95 

  0x000000010ff57a30: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000010ff57a30: d8f9 f4e8 

  0x000000010ff57a34: ; ImmutableOopMap {rsi=Oop [112]=Oop rdx=Oop rcx=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@3 (line 9)
  0x000000010ff57a34: 082b 94ff 

  0x000000010ff57a38: ;   {external_word}
  0x000000010ff57a38: 48bf 696b | 320a 0100 | 0000 4883 

  0x000000010ff57a44: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000010ff57a44: e4f0 e805 | 95d8 f9f4 
 ;; RangeCheckStub slow case
  0x000000010ff57a4c: 4889 3c24 | 4889 4c24 

  0x000000010ff57a54: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000010ff57a54: 08e8 e633 

  0x000000010ff57a58: ; ImmutableOopMap {rsi=Oop [112]=Oop rdx=Oop rcx=Oop }
                      ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
                      ;   {external_word}
  0x000000010ff57a58: 94ff 48bf | 696b 320a | 0100 0000 | 4883 e4f0 

  0x000000010ff57a68: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000010ff57a68: e8e3 94d8 

  0x000000010ff57a6c: ;   {metadata({method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression')}
  0x000000010ff57a6c: f9f4 49ba | 60fa c80e | 0100 0000 | 4c89 5424 | 0848 c704 | 2433 0000 

  0x000000010ff57a84: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000010ff57a84: 00e8 36cb 

  0x000000010ff57a88: ; ImmutableOopMap {rsi=Oop [112]=Oop rdx=Oop rcx=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
  0x000000010ff57a88: 93ff e9d7 

  0x000000010ff57a8c: ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x000000010ff57a8c: fcff ffe8 

  0x000000010ff57a90: ; ImmutableOopMap {[96]=Oop [104]=Oop [112]=Oop }
                      ;*ldiv {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@58 (line 18)
  0x000000010ff57a90: ac2d 94ff 

  0x000000010ff57a94: ;   {external_word}
  0x000000010ff57a94: 48bf 696b | 320a 0100 | 0000 4883 

  0x000000010ff57aa0: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000010ff57aa0: e4f0 e8a9 | 94d8 f9f4 
 ;; DivByZeroStub slow case
  0x000000010ff57aa8: ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x000000010ff57aa8: e893 2d94 

  0x000000010ff57aac: ; ImmutableOopMap {[112]=Oop [104]=Oop [96]=Oop }
                      ;*ldiv {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@66 (line 19)
                      ;   {external_word}
  0x000000010ff57aac: ff48 bf69 | 6b32 0a01 | 0000 0048 

  0x000000010ff57ab8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000010ff57ab8: 83e4 f0e8 | 9094 d8f9 | f448 8934 | 244c 8944 

  0x000000010ff57ac8: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000010ff57ac8: 2408 e871 

  0x000000010ff57acc: ; ImmutableOopMap {[112]=Oop rcx=Oop r8=Oop }
                      ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
                      ;   {external_word}
  0x000000010ff57acc: 3394 ff48 | bf69 6b32 | 0a01 0000 | 0048 83e4 

  0x000000010ff57adc: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000010ff57adc: f0e8 6e94 

  0x000000010ff57ae0: ;   {metadata({method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression')}
  0x000000010ff57ae0: d8f9 f449 | ba60 fac8 | 0e01 0000 | 004c 8954 | 2408 48c7 | 0424 8000 

  0x000000010ff57af8: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000010ff57af8: 0000 e8c1 

  0x000000010ff57afc: ; ImmutableOopMap {[112]=Oop rcx=Oop r8=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
  0x000000010ff57afc: ca93 ffe9 | a8fd ffff 
 ;; DivByZeroStub slow case
  0x000000010ff57b04: ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x000000010ff57b04: e837 2d94 

  0x000000010ff57b08: ; ImmutableOopMap {[112]=Oop }
                      ;*ldiv {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
                      ;   {external_word}
  0x000000010ff57b08: ff48 bf69 | 6b32 0a01 | 0000 0048 

  0x000000010ff57b14: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000010ff57b14: 83e4 f0e8 | 3494 d8f9 

  0x000000010ff57b1c: ;   {internal_word}
  0x000000010ff57b1c: f449 ba4f | 79f5 0f01 | 0000 004d | 8997 e803 

  0x000000010ff57b2c: ;   {runtime_call SafepointBlob}
  0x000000010ff57b2c: 0000 e9ed 

  0x000000010ff57b30: ;   {metadata(NULL)}
  0x000000010ff57b30: 969f ff48 | ba00 0000 | 0000 0000 | 00b8 000f 

  0x000000010ff57b40: ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000010ff57b40: 050a e839 

  0x000000010ff57b44: ; ImmutableOopMap {}
                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@7 (line 9)
  0x000000010ff57b44: dd93 ffe9 | 14fe ffff 
 ;; NewInstanceStub slow case
  0x000000010ff57b4c: ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000010ff57b4c: 488b d2e8 

  0x000000010ff57b50: ; ImmutableOopMap {}
                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@7 (line 9)
  0x000000010ff57b50: 6c1f 94ff | e95e feff | ff90 9049 | 8b87 5004 | 0000 49c7 | 8750 0400 | 0000 0000 | 0049 c787 
  0x000000010ff57b70: 5804 0000 | 0000 0000 | 4881 c4a0 | 0000 005d 

  0x000000010ff57b80: ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000010ff57b80: e9bb 3c94 | fff4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 
[Stub Code]
  0x000000010ff57ba0: ;   {no_reloc}
  0x000000010ff57ba0: 9090 9090 

  0x000000010ff57ba4: ;   {static_stub}
  0x000000010ff57ba4: 9048 bb00 | 0000 0000 

  0x000000010ff57bac: ;   {runtime_call}
  0x000000010ff57bac: 0000 00e9 | fbff ffff 
[Exception Handler]
  0x000000010ff57bb4: 48bb adde | 0000 0000 | 0000 48b9 | adde 0000 | 0000 0000 | 48be adde | 0000 0000 | 0000 48bf 
  0x000000010ff57bd4: adde 0000 | 0000 0000 

  0x000000010ff57bdc: ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000010ff57bdc: e8ff 0494 

  0x000000010ff57be0: ;   {external_word}
  0x000000010ff57be0: ff48 bf69 | 6b32 0a01 | 0000 0048 

  0x000000010ff57bec: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000010ff57bec: 83e4 f0e8 | 5c93 d8f9 

  0x000000010ff57bf4: ;   {section_word}
  0x000000010ff57bf4: f449 baf5 | 7bf5 0f01 | 0000 0041 

  0x000000010ff57c00: ;   {runtime_call DeoptimizationBlob}
  0x000000010ff57c00: 52e9 5a8c | 9fff f4f4 
[/MachCode]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x000000010ff57c08:   0x000000011ed59890 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011ed59890}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x000000010ff57c10:   0x000000010ec8fa60 {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x000000010ff5765f offset=ffffffff bits=0):
PcDesc(pc=0x000000010ff576bc offset=5c bits=0):   org.jml.regression.linear.LongLinearRegression::fit@0 (line 9)
PcDesc(pc=0x000000010ff576bf offset=5f bits=0):   org.jml.regression.linear.LongLinearRegression::fit@1 (line 9)
PcDesc(pc=0x000000010ff576c2 offset=62 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@3 (line 9)
PcDesc(pc=0x000000010ff576fa offset=9a bits=0):   org.jml.regression.linear.LongLinearRegression::fit@4 (line 9)
PcDesc(pc=0x000000010ff57718 offset=b8 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@25 (line 13)
PcDesc(pc=0x000000010ff57720 offset=c0 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@36 (line 14)
PcDesc(pc=0x000000010ff57734 offset=d4 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
PcDesc(pc=0x000000010ff57766 offset=106 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
PcDesc(pc=0x000000010ff5776d offset=10d bits=1):   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)  reexecute=true
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: reg r11 [22],long
    - l5: 0
    - l6: reg r9 [18],long
    - l7: reg rdi [14],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff57786 offset=126 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
PcDesc(pc=0x000000010ff577be offset=15e bits=0):   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
PcDesc(pc=0x000000010ff577f1 offset=191 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@58 (line 18)
PcDesc(pc=0x000000010ff57812 offset=1b2 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@66 (line 19)
PcDesc(pc=0x000000010ff57846 offset=1e6 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@78 (line 23)
PcDesc(pc=0x000000010ff57850 offset=1f0 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@90 (line 24)
PcDesc(pc=0x000000010ff57875 offset=215 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
PcDesc(pc=0x000000010ff578ac offset=24c bits=0):   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
PcDesc(pc=0x000000010ff578b3 offset=253 bits=1):   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)  reexecute=true
   Locals
    - l0: stack[112],oop
    - l1: reg rcx [2],oop
    - l2: reg r8 [16],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[120],long
    - l9: 0
    - l10: reg r9 [18],long
    - l11: 0
    - l12: reg r11 [22],long
    - l13: 0
    - l14: reg rax [0],long
    - l15: reg rsi [12],int
PcDesc(pc=0x000000010ff578cc offset=26c bits=0):   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
PcDesc(pc=0x000000010ff57909 offset=2a9 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
PcDesc(pc=0x000000010ff57926 offset=2c6 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
PcDesc(pc=0x000000010ff5792f offset=2cf bits=0):   org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)
PcDesc(pc=0x000000010ff57947 offset=2e7 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@151 (line 30)
PcDesc(pc=0x000000010ff5795d offset=2fd bits=0):   org.jml.regression.linear.LongLinearRegression::fit@154 (line 31)
PcDesc(pc=0x000000010ff579b7 offset=357 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@7 (line 9)
PcDesc(pc=0x000000010ff579d9 offset=379 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@13 (line 9)
PcDesc(pc=0x000000010ff579ec offset=38c bits=0):   org.jml.regression.linear.LongLinearRegression::fit@13 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: stack[136],oop
PcDesc(pc=0x000000010ff57a15 offset=3b5 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@-1 (line 9)
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff57a1f offset=3bf bits=0):   org.jml.regression.linear.LongLinearRegression::fit@1 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff57a38 offset=3d8 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@3 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff57a5a offset=3fa bits=0):   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff57a8a offset=42a bits=1):   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)  reexecute=true
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: reg r11 [22],long
    - l5: 0
    - l6: reg r9 [18],long
    - l7: reg rdi [14],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff57a94 offset=434 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@58 (line 18)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff57aad offset=44d bits=0):   org.jml.regression.linear.LongLinearRegression::fit@66 (line 19)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff57acf offset=46f bits=0):   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff57aff offset=49f bits=1):   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)  reexecute=true
   Locals
    - l0: stack[112],oop
    - l1: reg rcx [2],oop
    - l2: reg r8 [16],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[120],long
    - l9: 0
    - l10: reg r9 [18],long
    - l11: 0
    - l12: reg r11 [22],long
    - l13: 0
    - l14: reg rax [0],long
    - l15: reg rsi [12],int
PcDesc(pc=0x000000010ff57b09 offset=4a9 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff57b47 offset=4e7 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@7 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff57b54 offset=4f4 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@7 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x000000010ff57c09 offset=5a9 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 15 OopMaps

ImmutableOopMap {rsi=Oop [112]=Oop rdx=Oop rcx=Oop } pc offsets: 269 
ImmutableOopMap {[112]=Oop rcx=Oop r8=Oop } pc offsets: 595 
ImmutableOopMap {[136]=Oop } pc offsets: 908 
ImmutableOopMap {rsi=Oop [112]=Oop rdx=Oop rcx=Oop } pc offsets: 949 959 984 1018 1066 
ImmutableOopMap {[96]=Oop [104]=Oop [112]=Oop } pc offsets: 1076 
ImmutableOopMap {[112]=Oop [104]=Oop [96]=Oop } pc offsets: 1101 
ImmutableOopMap {[112]=Oop rcx=Oop r8=Oop } pc offsets: 1135 1183 
ImmutableOopMap {[112]=Oop } pc offsets: 1193 
ImmutableOopMap {} pc offsets: 1255 1268 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x000000010ff576bc offset=5c):
   org.jml.regression.linear.LongLinearRegression::fit@0 (line 9)
ScopeDesc(pc=0x000000010ff576bf offset=5f):
   org.jml.regression.linear.LongLinearRegression::fit@1 (line 9)
ScopeDesc(pc=0x000000010ff576c2 offset=62):
   org.jml.regression.linear.LongLinearRegression::fit@3 (line 9)
ScopeDesc(pc=0x000000010ff576fa offset=9a):
   org.jml.regression.linear.LongLinearRegression::fit@4 (line 9)
ScopeDesc(pc=0x000000010ff57718 offset=b8):
   org.jml.regression.linear.LongLinearRegression::fit@25 (line 13)
ScopeDesc(pc=0x000000010ff57720 offset=c0):
   org.jml.regression.linear.LongLinearRegression::fit@36 (line 14)
ScopeDesc(pc=0x000000010ff57734 offset=d4):
   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
ScopeDesc(pc=0x000000010ff57766 offset=106):
   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
ScopeDesc(pc=0x000000010ff5776d offset=10d):
   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)  reexecute=true
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: reg r11 [22],long
    - l5: 0
    - l6: reg r9 [18],long
    - l7: reg rdi [14],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x000000010ff57786 offset=126):
   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
ScopeDesc(pc=0x000000010ff577be offset=15e):
   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
ScopeDesc(pc=0x000000010ff577f1 offset=191):
   org.jml.regression.linear.LongLinearRegression::fit@58 (line 18)
ScopeDesc(pc=0x000000010ff57812 offset=1b2):
   org.jml.regression.linear.LongLinearRegression::fit@66 (line 19)
ScopeDesc(pc=0x000000010ff57846 offset=1e6):
   org.jml.regression.linear.LongLinearRegression::fit@78 (line 23)
ScopeDesc(pc=0x000000010ff57850 offset=1f0):
   org.jml.regression.linear.LongLinearRegression::fit@90 (line 24)
ScopeDesc(pc=0x000000010ff57875 offset=215):
   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
ScopeDesc(pc=0x000000010ff578ac offset=24c):
   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
ScopeDesc(pc=0x000000010ff578b3 offset=253):
   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)  reexecute=true
   Locals
    - l0: stack[112],oop
    - l1: reg rcx [2],oop
    - l2: reg r8 [16],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[120],long
    - l9: 0
    - l10: reg r9 [18],long
    - l11: 0
    - l12: reg r11 [22],long
    - l13: 0
    - l14: reg rax [0],long
    - l15: reg rsi [12],int
ScopeDesc(pc=0x000000010ff578cc offset=26c):
   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
ScopeDesc(pc=0x000000010ff57909 offset=2a9):
   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
ScopeDesc(pc=0x000000010ff57926 offset=2c6):
   org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
ScopeDesc(pc=0x000000010ff5792f offset=2cf):
   org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)
ScopeDesc(pc=0x000000010ff57947 offset=2e7):
   org.jml.regression.linear.LongLinearRegression::fit@151 (line 30)
ScopeDesc(pc=0x000000010ff5795d offset=2fd):
   org.jml.regression.linear.LongLinearRegression::fit@154 (line 31)
ScopeDesc(pc=0x000000010ff579b7 offset=357):
   org.jml.regression.linear.LongLinearRegression::fit@7 (line 9)
ScopeDesc(pc=0x000000010ff579d9 offset=379):
   org.jml.regression.linear.LongLinearRegression::fit@13 (line 9)
ScopeDesc(pc=0x000000010ff579ec offset=38c):
   org.jml.regression.linear.LongLinearRegression::fit@13 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: stack[136],oop
ScopeDesc(pc=0x000000010ff57a15 offset=3b5):
   org.jml.regression.linear.LongLinearRegression::fit@-1 (line 9)
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x000000010ff57a1f offset=3bf):
   org.jml.regression.linear.LongLinearRegression::fit@1 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x000000010ff57a38 offset=3d8):
   org.jml.regression.linear.LongLinearRegression::fit@3 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x000000010ff57a5a offset=3fa):
   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x000000010ff57a8a offset=42a):
   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)  reexecute=true
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: reg r11 [22],long
    - l5: 0
    - l6: reg r9 [18],long
    - l7: reg rdi [14],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x000000010ff57a94 offset=434):
   org.jml.regression.linear.LongLinearRegression::fit@58 (line 18)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x000000010ff57aad offset=44d):
   org.jml.regression.linear.LongLinearRegression::fit@66 (line 19)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x000000010ff57acf offset=46f):
   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x000000010ff57aff offset=49f):
   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)  reexecute=true
   Locals
    - l0: stack[112],oop
    - l1: reg rcx [2],oop
    - l2: reg r8 [16],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[120],long
    - l9: 0
    - l10: reg r9 [18],long
    - l11: 0
    - l12: reg r11 [22],long
    - l13: 0
    - l14: reg rax [0],long
    - l15: reg rsi [12],int
ScopeDesc(pc=0x000000010ff57b09 offset=4a9):
   org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x000000010ff57b47 offset=4e7):
   org.jml.regression.linear.LongLinearRegression::fit@7 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x000000010ff57b54 offset=4f4):
   org.jml.regression.linear.LongLinearRegression::fit@7 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x000000010ff57588: 600b
relocInfo@0x000000010ff57588 [type=6(runtime_call) addr=0x000000010ff5766b offset=11] | [destination=0x000000010f94f920]
         @0x000000010ff5758a: c029
relocInfo@0x000000010ff5758a [type=12(metadata) addr=0x000000010ff57694 offset=41] | [metadata_addr=0x000000010ff57696 *=0x000000010ef00000 offset=0]metadata_value=0x000000010ef00000: method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
         @0x000000010ff5758c: c030
relocInfo@0x000000010ff5758c [type=12(metadata) addr=0x000000010ff576c4 offset=48] | [metadata_addr=0x000000010ff576c6 *=0x000000010ef00000 offset=0]metadata_value=0x000000010ef00000: method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
         @0x000000010ff5758e: c075
relocInfo@0x000000010ff5758e [type=12(metadata) addr=0x000000010ff57739 offset=117] | [metadata_addr=0x000000010ff5773b *=0x000000010ef00000 offset=0]metadata_value=0x000000010ef00000: method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
         @0x000000010ff57590: a034
relocInfo@0x000000010ff57590 [type=10(poll) addr=0x000000010ff5776d offset=52]
         @0x000000010ff57592: c003
relocInfo@0x000000010ff57592 [type=12(metadata) addr=0x000000010ff57770 offset=3] | [metadata_addr=0x000000010ff57772 *=0x000000010ef00000 offset=0]metadata_value=0x000000010ef00000: method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
         @0x000000010ff57594: c018
relocInfo@0x000000010ff57594 [type=12(metadata) addr=0x000000010ff57788 offset=24] | [metadata_addr=0x000000010ff5778a *=0x000000010ef00000 offset=0]metadata_value=0x000000010ef00000: method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
         @0x000000010ff57596: 6464
relocInfo@0x000000010ff57596 [type=6(runtime_call) addr=0x000000010ff577ec offset=100 format=1] | [destination=0x0000000109f751b0]
         @0x000000010ff57598: 6421
relocInfo@0x000000010ff57598 [type=6(runtime_call) addr=0x000000010ff5780d offset=33 format=1] | [destination=0x0000000109f751b0]
         @0x000000010ff5759a: c077
relocInfo@0x000000010ff5759a [type=12(metadata) addr=0x000000010ff57884 offset=119] | [metadata_addr=0x000000010ff57886 *=0x000000010ef00000 offset=0]metadata_value=0x000000010ef00000: method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
         @0x000000010ff5759c: a02f
relocInfo@0x000000010ff5759c [type=10(poll) addr=0x000000010ff578b3 offset=47]
         @0x000000010ff5759e: c003
relocInfo@0x000000010ff5759e [type=12(metadata) addr=0x000000010ff578b6 offset=3] | [metadata_addr=0x000000010ff578b8 *=0x000000010ef00000 offset=0]metadata_value=0x000000010ef00000: method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
         @0x000000010ff575a0: c01d
relocInfo@0x000000010ff575a0 [type=12(metadata) addr=0x000000010ff578d3 offset=29] | [metadata_addr=0x000000010ff578d5 *=0x000000010ef00000 offset=0]metadata_value=0x000000010ef00000: method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
         @0x000000010ff575a2: 644e
relocInfo@0x000000010ff575a2 [type=6(runtime_call) addr=0x000000010ff57921 offset=78 format=1] | [destination=0x0000000109f751b0]
         @0x000000010ff575a4: b02e
relocInfo@0x000000010ff575a4 [type=11(poll_return) addr=0x000000010ff5794f offset=46]
         @0x000000010ff575a6: 0011
relocInfo@0x000000010ff575a6 [type=0(none) addr=0x000000010ff57960 offset=17]
         @0x000000010ff575a8: c05a
relocInfo@0x000000010ff575a8 [type=12(metadata) addr=0x000000010ff579ba offset=90] | [metadata_addr=0x000000010ff579bc *=0x000000010ef00000 offset=0]metadata_value=0x000000010ef00000: method data for {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
         @0x000000010ff575aa: 1012
relocInfo@0x000000010ff575aa [type=1(oop) addr=0x000000010ff579cc offset=18] | [oop_addr=0x000000010ff579ce *=0x0000000197f00000 offset=0]
         @0x000000010ff575ac: 341b
relocInfo@0x000000010ff575ac [type=3(opt_virtual_call) addr=0x000000010ff579e7 offset=27 format=1] | [destination=0x000000010f94fc20 metadata=0x0000000000000000]
         @0x000000010ff575ae: c012
relocInfo@0x000000010ff575ae [type=12(metadata) addr=0x000000010ff579f9 offset=18] | [metadata_addr=0x000000010ff579fb *=0x000000010ec8fa60 offset=0]metadata_value=0x000000010ec8fa60: {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
         @0x000000010ff575b0: 6417
relocInfo@0x000000010ff575b0 [type=6(runtime_call) addr=0x000000010ff57a10 offset=23 format=1] | [destination=0x000000010f8945c0]
         @0x000000010ff575b2: 640a
relocInfo@0x000000010ff575b2 [type=6(runtime_call) addr=0x000000010ff57a1a offset=10 format=1] | [destination=0x000000010f89a540]
         @0x000000010ff575b4: f8030a326b6900017005
relocInfo@0x000000010ff575bc [type=7(external_word) addr=0x000000010ff57a1f offset=5 data={0a326b690001}] | [target=0x000000010a326b69]
         @0x000000010ff575be: 640e
relocInfo@0x000000010ff575be [type=6(runtime_call) addr=0x000000010ff57a2d offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x000000010ff575c0: 6406
relocInfo@0x000000010ff575c0 [type=6(runtime_call) addr=0x000000010ff57a33 offset=6 format=1] | [destination=0x000000010f89a540]
         @0x000000010ff575c2: f8030a326b6900017005
relocInfo@0x000000010ff575ca [type=7(external_word) addr=0x000000010ff57a38 offset=5 data={0a326b690001}] | [target=0x000000010a326b69]
         @0x000000010ff575cc: 640e
relocInfo@0x000000010ff575cc [type=6(runtime_call) addr=0x000000010ff57a46 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x000000010ff575ce: 640f
relocInfo@0x000000010ff575ce [type=6(runtime_call) addr=0x000000010ff57a55 offset=15 format=1] | [destination=0x000000010f89ae40]
         @0x000000010ff575d0: f8030a326b6900017005
relocInfo@0x000000010ff575d8 [type=7(external_word) addr=0x000000010ff57a5a offset=5 data={0a326b690001}] | [target=0x000000010a326b69]
         @0x000000010ff575da: 640e
relocInfo@0x000000010ff575da [type=6(runtime_call) addr=0x000000010ff57a68 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x000000010ff575dc: c006
relocInfo@0x000000010ff575dc [type=12(metadata) addr=0x000000010ff57a6e offset=6] | [metadata_addr=0x000000010ff57a70 *=0x000000010ec8fa60 offset=0]metadata_value=0x000000010ec8fa60: {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
         @0x000000010ff575de: 6417
relocInfo@0x000000010ff575de [type=6(runtime_call) addr=0x000000010ff57a85 offset=23 format=1] | [destination=0x000000010f8945c0]
         @0x000000010ff575e0: 640a
relocInfo@0x000000010ff575e0 [type=6(runtime_call) addr=0x000000010ff57a8f offset=10 format=1] | [destination=0x000000010f89a840]
         @0x000000010ff575e2: f8030a326b6900017005
relocInfo@0x000000010ff575ea [type=7(external_word) addr=0x000000010ff57a94 offset=5 data={0a326b690001}] | [target=0x000000010a326b69]
         @0x000000010ff575ec: 640e
relocInfo@0x000000010ff575ec [type=6(runtime_call) addr=0x000000010ff57aa2 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x000000010ff575ee: 6406
relocInfo@0x000000010ff575ee [type=6(runtime_call) addr=0x000000010ff57aa8 offset=6 format=1] | [destination=0x000000010f89a840]
         @0x000000010ff575f0: f8030a326b6900017005
relocInfo@0x000000010ff575f8 [type=7(external_word) addr=0x000000010ff57aad offset=5 data={0a326b690001}] | [target=0x000000010a326b69]
         @0x000000010ff575fa: 640e
relocInfo@0x000000010ff575fa [type=6(runtime_call) addr=0x000000010ff57abb offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x000000010ff575fc: 640f
relocInfo@0x000000010ff575fc [type=6(runtime_call) addr=0x000000010ff57aca offset=15 format=1] | [destination=0x000000010f89ae40]
         @0x000000010ff575fe: f8030a326b6900017005
relocInfo@0x000000010ff57606 [type=7(external_word) addr=0x000000010ff57acf offset=5 d72.600 ms/op
ata={0a326b690001}] | [target=0x000000010a326b69]
         @0x000000010ff57608: 640e
relocInfo@0x000000010ff57608 [type=6(runtime_call) addr=0x000000010ff57add offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x000000010ff5760a: c006
relocInfo@0x000000010ff5760a [type=12(metadata) addr=0x000000010ff57ae3 offset=6] | [metadata_addr=0x000000010ff57ae5 *=0x000000010ec8fa60 offset=0]metadata_value=0x000000010ec8fa60: {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
         @0x000000010ff5760c: 6417
relocInfo@0x000000010ff5760c [type=6(runtime_call) addr=0x000000010ff57afa offset=23 format=1] | [destination=0x000000010f8945c0]
         @0x000000010ff5760e: 640a
relocInfo@0x000000010ff5760e [type=6(runtime_call) addr=0x000000010ff57b04 offset=10 format=1] | [destination=0x000000010f89a840]
         @0x000000010ff57610: f8030a326b6900017005
relocInfo@0x000000010ff57618 [type=7(external_word) addr=0x000000010ff57b09 offset=5 data={0a326b690001}] | [target=0x000000010a326b69]
         @0x000000010ff5761a: 640e
relocInfo@0x000000010ff5761a [type=6(runtime_call) addr=0x000000010ff57b17 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x000000010ff5761c: f1ce8006
relocInfo@0x000000010ff5761e [type=8(internal_word) addr=0x000000010ff57b1d offset=6 data=462] | [target=0x000000010ff5794f]
         @0x000000010ff57620: 6411
relocInfo@0x000000010ff57620 [type=6(runtime_call) addr=0x000000010ff57b2e offset=17 format=1] | [destination=0x000000010f951220]
         @0x000000010ff57622: c005
relocInfo@0x000000010ff57622 [type=12(metadata) addr=0x000000010ff57b33 offset=5] | [metadata_addr=0x000000010ff57b35 *=0x0000000000000000 offset=0]
         @0x000000010ff57624: 640f
relocInfo@0x000000010ff57624 [type=6(runtime_call) addr=0x000000010ff57b42 offset=15 format=1] | [destination=0x000000010f895880]
         @0x000000010ff57626: 640d
relocInfo@0x000000010ff57626 [type=6(runtime_call) addr=0x000000010ff57b4f offset=13 format=1] | [destination=0x000000010f899ac0]
         @0x000000010ff57628: 6431
relocInfo@0x000000010ff57628 [type=6(runtime_call) addr=0x000000010ff57b80 offset=49 format=1] | [destination=0x000000010f89b840]
         @0x000000010ff5762a: 0020
relocInfo@0x000000010ff5762a [type=0(none) addr=0x000000010ff57ba0 offset=32]
         @0x000000010ff5762c: f801fc795005
relocInfo@0x0# Warmup Iteration   2: 00000010ff57630 [type=5(static_stub) addr=0x000000010ff57ba5 offset=5 data=-903] | [static_call=0x000000010ff579e7]
         @0x000000010ff57632: c000
relocInfo@0x000000010ff57632 [type=12(metadata) addr=0x000000010ff57ba5 offset=0] | [metadata_addr=0x000000010ff57ba7 *=0x0000000000000000 offset=0]
         @0x000000010ff57634: 640a
relocInfo@0x000000010ff57634 [type=6(runtime_call) addr=0x000000010ff57baf offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000010ff57636: 642d
relocInfo@0x000000010ff57636 [type=6(runtime_call) addr=0x000000010ff57bdc offset=45 format=1] | [destination=0x000000010f8980e0]
         @0x000000010ff57638: f8030a326b6900017005
relocInfo@0x000000010ff57640 [type=7(external_word) addr=0x000000010ff57be1 offset=5 data={0a326b690001}] | [target=0x000000010a326b69]
         @0x000000010ff57642: 640e
relocInfo@0x000000010ff57642 [type=6(runtime_call) addr=0x000000010ff57bef offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x000000010ff57644: f801feae9006
relocInfo@0x000000010ff57648 [type=9(section_word) addr=0x000000010ff57bf5 offset=6 data=-338] | [target=0x000000010ff57bf5]
         @0x000000010ff5764a: 640c
relocInfo@0x000000010ff5764a [type=6(runtime_call) addr=0x000000010ff57c01 offset=12 format=1] | [destination=0x000000010f950860]
         @0x000000010ff5764c: 0000
relocInfo@0x000000010ff5764c [type=0(none) addr=0x000000010ff57c01 offset=0]
         @0x000000010ff5764e: 0000
relocInfo@0x000000010ff5764e [type=0(none) addr=0x000000010ff57c01 offset=0]
         @0x000000010ff57650: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 2 entries, 20 bytes):
{
   < 0x000000010ff576bc, 0x000000010ff57a1a > < 0x000000010ff576bf, 0x000000010ff57a33 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 NULL-oop
#1: 0x000000011ed59890 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011ed59890}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
#0: 0x0000000000000000 NULL-oop
#1: 0x000000010ec8fa60 {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

============================= C2-compiled nmethod ==============================
----------------------- MetaData before Compile_id = 1002 ------------------------
{method}
 - this oop:          0x000000010ec8fa60
 - method holder:     'org/jml/regression/linear/LongLinearRegression'
 - constants:         0x000000010ec8f518 constant pool [71]/operands[5] {0x000000010ec8f518} for 'org/jml/regression/linear/LongLinearRegression' cache=0x000000010ec8fe20
 - access:            0xc1000001  public 
 - name:              'fit'
 - signature:         '([J[J)V'
 - max stack:         9
 - max locals:        16
 - size of params:    3
 - method size:       13
 - highest level:     3
 - vtable index:      5
 - i2i entry:         0x000000010f847e20
 - adapters:          AHE@0x00007f87c7837270: 0xbbb00000 i2c: 0x000000010f8bfee0 c2i: 0x000000010f8bffbf c2iUV: 0x000000010f8bff92 c2iNCI: 0x000000010f8bfffc
 - compiled entry     0x000000010ff57680
 - code size:         155
 - code start:        0x000000010ec8f928
 - code end (excl):   0x000000010ec8f9c3
 - method data:       0x000000010ef00000
 - checked ex length: 0
 - linenumber start:  0x000000010ec8f9c3
 - localvar length:   11
 - localvar start:    0x000000010ec8f9da
 - compiled code: nmethod   2638 1001       3       org.jml.regression.linear.LongLinearRegression::fit (155 bytes)

------------------------ OptoAssembly for Compile_id = 1002 -----------------------
#
#  void ( rawptr:BotPTR )
#
#r018 rsi:rsi   : parm 0: rawptr:BotPTR
# -- Old rsp -- Framesize: 112 --
#r583 rsp+108: in_preserve
#r582 rsp+104: return address
#r581 rsp+100: in_preserve
#r580 rsp+96: saved fp register
#r579 rsp+92: pad2, stack alignment
#r578 rsp+88: pad2, stack alignment
#r577 rsp+84: Fixed slot 1
#r576 rsp+80: Fixed slot 0
#r603 rsp+76: spill
#r602 rsp+72: spill
#r601 rsp+68: spill
#r600 rsp+64: spill
#r599 rsp+60: spill
#r598 rsp+56: spill
#r597 rsp+52: spill
#r596 rsp+48: spill
#r595 rsp+44: spill
#r594 rsp+40: spill
#r593 rsp+36: spill
#r592 rsp+32: spill
#r591 rsp+28: spill
#r590 rsp+24: spill
#r589 rsp+20: spill
#r588 rsp+16: spill
#r587 rsp+12: spill
#r586 rsp+ 8: spill
#r585 rsp+ 4: spill
#r584 rsp+ 0: spill
#
000     N686: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # breakpoint
        nop 	# 11 bytes pad for loops and calls

010     B1: #	out( B42 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
010     # stack bang (288 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #96	# Create frame

01c     movq    R14, [RSI + #120 (8-bit)]	# ptr
020     movq    RBP, [RSI + #112 (8-bit)]	# ptr
024     movl    R12, [RSI]	# int
027     movq    R13, [RSI + #104 (8-bit)]	# ptr
02b     movq    R10, [RSI + #56 (8-bit)]	# long
02f     movq    [rsp + #32], R10	# spill
034     movq    R10, [RSI + #40 (8-bit)]	# long
038     movq    [rsp + #48], R10	# spill
03d     movq    RBX, [RSI + #24 (8-bit)]	# long
041     movq    R10, [RSI + #8 (8-bit)]	# long
045     movq    [rsp + #40], R10	# spill
04a     movq    RDI, RSI	# spill
04d     call_leaf,runtime  OSR_migration_end
        No JVM State Info
        # 
        nop 	# 3 bytes pad for loops and calls
060     testq   R14, R14	# ptr
063     je     B42  P=0.001000 C=-1.000000

069     B2: #	out( B60 B3 ) <- in( B1 )  Freq: 0.999
069     movl    R10, [R14 + #8 (8-bit)]	# compressed klass ptr
06d     cmpl    R10, narrowklass: precise klass org/jml/regression/linear/LongLinearRegression: 0x00007f87cc905a20:Constant:exact *	# compressed klass ptr
074     jne,u   B60  P=0.000001 C=-1.000000

07a     B3: #	out( B4 ) <- in( B2 )  Freq: 0.998999
07a     movq    R11, R14	# spill
07d     # checkcastPP of R11

07d     B4: #	out( B43 B5 ) <- in( B3 B42 )  Freq: 0.999999
        nop 	# 3 bytes pad for loops and calls
080     testq   RBP, RBP	# ptr
083     je     B43  P=0.001000 C=-1.000000

089     B5: #	out( B60 B6 ) <- in( B4 )  Freq: 0.998999
089     movl    R10, [RBP + #8 (8-bit)]	# compressed klass ptr
08d     cmpl    R10, narrowklass: precise klass [J: 0x00007f87cb813890:Constant:exact *	# compressed klass ptr
094     jne,u   B60  P=0.000001 C=-1.000000

09a     B6: #	out( B7 ) <- in( B5 )  Freq: 0.998998
09a     movq    RCX, RBP	# spill
09d     # checkcastPP of RCX

09d     B7: #	out( B44 B8 ) <- in( B6 B43 )  Freq: 0.999998
        nop 	# 3 bytes pad for loops and calls
0a0     testq   R13, R13	# ptr
0a3     je     B44  P=0.001000 C=-1.000000

0a9     B8: #	out( B60 B9 ) <- in( B7 )  Freq: 0.998998
0a9     movl    R10, [R13 + #8 (8-bit)]	# compressed klass ptr
0ad     cmpl    R10, narrowklass: precise klass [J: 0x00007f87cb813890:Constant:exact *	# compressed klass ptr
0b4     jne,u   B60  P=0.000001 C=-1.000000

0ba     B9: #	out( B10 ) <- in( B8 )  Freq: 0.998997
0ba     # checkcastPP of R13

0ba     B10: #	out( B61 B11 ) <- in( B9 B44 )  Freq: 0.999997
        nop 	# 6 bytes pad for loops and calls
0c0     movl    R8, [RCX + #12 (8-bit)]	# range
0c4     NullCheck RCX

0c4     B11: #	out( B62 B12 ) <- in( B10 )  Freq: 0.999996
0c4     movl    R14, [R13 + #12 (8-bit)]	# range
0c8     NullCheck R13

0c8     B12: #	out( B51 B13 ) <- in( B11 )  Freq: 0.999995
0c8     cmpl    R12, R8
0cb     jge     B51  P=0.000001 C=9515153.000000

0d1     B13: #	out( B14 ) <- in( B12 )  Freq: 0.999994
0d1     movl    R10, R13	# ptr -> int
0d4     movl    RDI, R12	# spill
0d7     incl    RDI	# int
0d9     shrl    R10, #3
0dd     andl    R10, #3	# int
0e1     xorl    R9, R9	# int
0e4     cmpl    RDI, R9
0e7     cmovllt RDI, R9	# max
0eb     cmpl    RDI, R8
0ee     cmovlgt RDI, R8	# min
0f2     addl    R10, RDI	# int
0f5     movl    RDX, #2	# int
0fa     subl    RDX, R10	# int
0fd     andl    RDX, #3	# int
100     addl    RDX, RDI	# int
102     cmpl    RDX, R8
105     cmovlgt RDX, R8	# min

109     B14: #	out( B45 B15 ) <- in( B13 B16 ) Loop( B14-B16 inner pre of N479) Freq: 1.99998
109     cmpl    R12, R8	# unsigned
10c     jnb,u   B45  P=0.000001 C=-1.000000

112     B15: #	out( B48 B16 ) <- in( B14 )  Freq: 1.99998
112     movq    RBP, [RCX + #16 + R12 << #3]	# long
117     subq    RBP, [RSP + #32 (32-bit)]	# long
11c     movq    R10, RBP	# spill
11f     imulq   R10, RBP	# long
123     addq    RBX, R10	# long
126     cmpl    R12, R14	# unsigned
129     jnb,u   B48  P=0.000001 C=-1.000000

12f     B16: #	out( B14 B17 ) <- in( B15 )  Freq: 1.99998
12f     movq    R10, [R13 + #16 + R12 << #3]	# long
134     subq    R10, [RSP + #48 (32-bit)]	# long
139     imulq   R10, RBP	# long
13d     movq    RDI, [rsp + #40]	# spill
142     addq    RDI, R10	# long
145     movq    [rsp + #40], RDI	# spill
14a     incl    R12	# int
14d     cmpl    R12, RDX
150     jl,s   B14	# loop end  P=0.500000 C=9515153.000000

152     B17: #	out( B52 B18 ) <- in( B16 )  Freq: 0.99999
152     cmpl    R8, R14
155     movl    R10, R8	# spill
158     cmovlgt R10, R14	# min
15c     movl    RDI, R10	# spill
15f     addl    RDI, #-15	# int
162     movl    RDX, #-2147483648	# int
167     cmpl    R10, RDI
16a     cmovll RDI, RDX	# signed, int
16d     cmpl    R12, RDI
170     jge     B52  P=0.000001 C=-1.000000

176     B18: #	out( B53 B19 ) <- in( B17 )  Freq: 0.999989
176     # castII of R12
176     cmpl    R12, R8	# unsigned
179     jnb,u   B53  P=0.000001 C=-1.000000

17f     B19: #	out( B54 B20 ) <- in( B18 )  Freq: 0.999988
        nop 	# 1 bytes pad for loops and calls
180     cmpl    R12, R14	# unsigned
183     jnb,u   B54  P=0.000001 C=-1.000000

189     B20: #	out( B55 B21 ) <- in( B19 )  Freq: 0.999987
189     movq    RBP, R11	# spill
18c     movl    RSI, R12	# spill
18f     addl    RSI, #15	# int
192     cmpl    RSI, R14	# unsigned
195     jnb,u   B55  P=0.000001 C=-1.000000

19b     B21: #	out( B56 B22 ) <- in( B20 )  Freq: 0.999986
        nop 	# 5 bytes pad for loops and calls
1a0     cmpl    R12, R14	# unsigned
1a3     jnb,u   B56  P=0.000001 C=-1.000000

1a9     B22: #	out( B57 B23 ) <- in( B21 )  Freq: 0.999985
1a9     cmpl    RSI, R8	# unsigned
1ac     jnb,u   B57  P=0.000001 C=-1.000000

1b2     B23: #	out( B58 B24 ) <- in( B22 )  Freq: 0.999984
1b2     cmpl    R12, R8	# unsigned
1b5     jnb,u   B58  P=0.000001 C=-1.000000

1bb     B24: #	out( B25 ) <- in( B23 )  Freq: 0.999983
1bb     replicateL XMM6,[RSP + #32 (32-bit)]
1c2     replicateL XMM7,[RSP + #48 (32-bit)]
1c9     movl    RSI, #16000	# int
1ce     # TLS is in R15

1ce     B25: #	out( B26 ) <- in( B24 B27 ) Loop( B25-B27 ) Freq: 986878
1ce     movl    R11, RDI	# spill
1d1     subl    R11, R12	# int
1d4     cmpl    RDI, R12
1d7     cmovll R11, R9	# signed, int
1db     cmpl    R11, #16000	# unsigned
1e2     cmovlnbe R11, RSI	# unsigned, int
1e6     addl    R11, R12	# int
        nop 	# 7 bytes pad for loops and calls

1f0     B26: #	out( B26 B27 ) <- in( B25 B26 ) Loop( B26-B26 inner main of N213 strip mined) Freq: 9.73945e+11
1f0     load_vector XMM0,[R13 + #16 + R12 << #3]
1f7     load_vector XMM1,[RCX + #16 + R12 << #3]
1fe     vpsubq  XMM8,XMM0,XMM7	! sub packedL
202     vpsubq  XMM9,XMM1,XMM6	! sub packedL
206     movslq  RAX, R12	# i2l
209     load_vector XMM0,[RCX + #48 + RAX << #3]
20f     load_vector XMM1,[R13 + #112 + RAX << #3]
216     load_vector XMM2,[RCX + #80 + RAX << #3]
21c     load_vector XMM3,[RCX + #112 + RAX << #3]
222     load_vector XMM4,[R13 + #48 + RAX << #3]
229     load_vector XMM5,[R13 + #80 + RAX << #3]
230     vpsubq  XMM10,XMM0,XMM6	! sub packedL
234     vpsubq  XMM5,XMM5,XMM7	! sub packedL
238     vpsubq  XMM4,XMM4,XMM7	! sub packedL
23c     vpsubq  XMM11,XMM3,XMM6	! sub packedL
240     vpsubq  XMM12,XMM2,XMM6	! sub packedL
244     vpsubq  XMM2,XMM1,XMM7	! sub packedL
248     vpshufd XMM0,XMM9
	vpmulld XMM0,XMM9,XMM0
	vphaddd XMM0,XMM0,XMM0
	vpmovzxdq XMM0,XMM0
	vpsllq XMM0,XMM0
	vpmuludq XMM1,XMM9,XMM9
	vpaddq XMM0,XMM0,XMM1	! mul packed4L
271     vector_reduction_long RBX,RBX,XMM0 ; using XMM1, XMM14 as TEMP
293     vpshufd XMM0,XMM10
	vpmulld XMM0,XMM10,XMM0
	vphaddd XMM0,XMM0,XMM0
	vpmovzxdq XMM0,XMM0
	vpsllq XMM0,XMM0
	vpmuludq XMM1,XMM10,XMM10
	vpaddq XMM0,XMM0,XMM1	! mul packed4L
2bc     vector_reduction_long RBX,RBX,XMM0 ; using XMM1, XMM14 as TEMP
2de     vpshufd XMM0,XMM12
	vpmulld XMM0,XMM12,XMM0
	vphaddd XMM0,XMM0,XMM0
	vpmovzxdq XMM0,XMM0
	vpsllq XMM0,XMM0
	vpmuludq XMM1,XMM12,XMM12
	vpaddq XMM0,XMM0,XMM1	! mul packed4L
307     vector_reduction_long RBX,RBX,XMM0 ; using XMM1, XMM14 as TEMP
329     vpshufd XMM0,XMM11
	vpmulld XMM0,XMM11,XMM0
	vphaddd XMM0,XMM0,XMM0
	vpmovzxdq XMM0,XMM0
	vpsllq XMM0,XMM0
	vpmuludq XMM1,XMM11,XMM11
	vpaddq XMM0,XMM0,XMM1	! mul packed4L
352     vector_reduction_long RBX,RBX,XMM0 ; using XMM1, XMM14 as TEMP
374     vpshufd XMM0,XMM9
	vpmulld XMM0,XMM8,XMM0
	vphaddd XMM0,XMM0,XMM0
	vpmovzxdq XMM0,XMM0
	vpsllq XMM0,XMM0
	vpmuludq XMM1,XMM8,XMM9
	vpaddq XMM0,XMM0,XMM1	! mul packed4L
39d     movq    RAX, [rsp + #40]	# spill
3a2     vector_reduction_long RAX,RAX,XMM0 ; using XMM1, XMM8 as TEMP
3c4     vpshufd XMM0,XMM10
	vpmulld XMM0,XMM4,XMM0
	vphaddd XMM0,XMM0,XMM0
	vpmovzxdq XMM0,XMM0
	vpsllq XMM0,XMM0
	vpmuludq XMM1,XMM4,XMM10
	vpaddq XMM0,XMM0,XMM1	! mul packed4L
3ed     vector_reduction_long RAX,RAX,XMM0 ; using XMM1, XMM4 as TEMP
40e     vpshufd XMM0,XMM12
	vpmulld XMM0,XMM5,XMM0
	vphaddd XMM0,XMM0,XMM0
	vpmovzxdq XMM0,XMM0
	vpsllq XMM0,XMM0
	vpmuludq XMM1,XMM5,XMM12
	vpaddq XMM0,XMM0,XMM1	! mul packed4L
437     vector_reduction_long RAX,RAX,XMM0 ; using XMM1, XMM4 as TEMP
458     vpshufd XMM0,XMM11
	vpmulld XMM0,XMM2,XMM0
	vphaddd XMM0,XMM0,XMM0
	vpmovzxdq XMM0,XMM0
	vpsllq XMM0,XMM0
	vpmuludq XMM1,XMM2,XMM11
	vpaddq XMM0,XMM0,XMM1	! mul packed4L
481     vector_reduction_long RAX,RAX,XMM0 ; using XMM13, XMM3 as TEMP
4a4     movq    [rsp + #40], RAX	# spill
4a9     addl    R12, #16	# int
4ad     cmpl    R12, R11
4b0     jl     B26	# loop end  P=0.999999 C=9515153.000000

4b6     B27: #	out( B25 B28 ) <- in( B26 )  Freq: 986878
4b6     movq    R11, [R15 + #304 (32-bit)]	# ptr
4bd     testl   rax, [R11]	# Safepoint: poll for GC        # org.jml.regression.linear.LongLinearRegression::fit @ bci:128 (line 23) L[0]=RBP L[1]=RCX L[2]=R13 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #32 L[8]=_ L[9]=rsp + #48 L[10]=_ L[11]=RBX L[12]=_ L[13]=RAX L[14]=_ L[15]=R12
        # OopMap {rcx=Oop rbp=Oop r13=Oop off=1213/0x4bd}
4c0     cmpl    R12, RDI
4c3     jl     B25  P=0.999999 C=9515153.000000

4c9     B28: #	out( B41 B29 ) <- in( B27 )  Freq: 0.999983
4c9     movl    R9, R10	# spill
4cc     addl    R9, #-3	# int
4d0     cmpl    R10, R9
4d3     cmovll R9, RDX	# signed, int
4d7     cmpl    R12, R9
        nop 	# 6 bytes pad for loops and calls
4e0     jge     B41  P=0.500000 C=-1.000000

4e6     B29: #	out( B30 ) <- in( B28 )  Freq: 0.499991
4e6     # castII of R12

4e6     B30: #	out( B32 B31 ) <- in( B29 B31 ) Loop( B30-B31 inner post of N895) Freq: 0.999983
4e6     load_vector XMM0,[R13 + #16 + R12 << #3]
4ed     load_vector XMM1,[RCX + #16 + R12 << #3]
4f4     vpsubq  XMM0,XMM0,XMM7	! sub packedL
4f8     vpsubq  XMM1,XMM1,XMM6	! sub packedL
4fc     vpshufd XMM4,XMM1
	vpmulld XMM4,XMM0,XMM4
	vphaddd XMM4,XMM4,XMM4
	vpmovzxdq XMM4,XMM4
	vpsllq XMM4,XMM4
	vpmuludq XMM5,XMM0,XMM1
	vpaddq XMM0,XMM4,XMM5	! mul packed4L
523     movq    R10, [rsp + #40]	# spill
528     vector_reduction_long R10,R10,XMM0 ; using XMM4, XMM5 as TEMP
549     vpshufd XMM0,XMM1
	vpmulld XMM0,XMM1,XMM0
	vphaddd XMM0,XMM0,XMM0
	vpmovzxdq XMM0,XMM0
	vpsllq XMM0,XMM0
	vpmuludq XMM4,XMM1,XMM1
	vpaddq XMM0,XMM0,XMM4	! mul packed4L
570     vector_reduction_long RBX,RBX,XMM0 ; using XMM3, XMM2 as TEMP
591     addl    R12, #4	# int
595     cmpl    R12, R9
598     jge,s   B32	# loop end  P=0.500000 C=9515153.000000

59a     B31: #	out( B30 ) <- in( B30 )  Freq: 0.499991
59a     movq    [rsp + #40], R10	# spill
        nop 	# 1 bytes pad for loops and calls
5a0     jmp     B30

5a5     B32: #	out( B33 ) <- in( B30 B41 )  Freq: 0.999983
5a5     movq    R11, RBP	# spill

5a8     B33: #	out( B38 B34 ) <- in( B52 B32 )  Freq: 0.999984
5a8     cmpl    R12, R8
5ab     jge,s   B38  P=0.500000 C=-1.000000

5ad     B34: #	out( B35 ) <- in( B33 )  Freq: 0.499992
5ad     # castII of R12
        nop 	# 3 bytes pad for loops and calls

5b0     B35: #	out( B46 B36 ) <- in( B34 B37 ) Loop( B35-B37 inner post of N479) Freq: 0.999982
5b0     cmpl    R12, R8	# unsigned
5b3     jnb,u   B46  P=0.000001 C=-1.000000

5b9     B36: #	out( B49 B37 ) <- in( B35 )  Freq: 0.999981
5b9     movq    RBP, [RCX + #16 + R12 << #3]	# long
5be     subq    RBP, [RSP + #32 (32-bit)]	# long
5c3     movq    R9, RBP	# spill
5c6     imulq   R9, RBP	# long
5ca     addq    RBX, R9	# long
5cd     cmpl    R12, R14	# unsigned
5d0     jnb,u   B49  P=0.000001 C=-1.000000

5d6     B37: #	out( B35 B38 ) <- in( B36 )  Freq: 0.99998
5d6     movq    R9, [R13 + #16 + R12 << #3]	# long
5db     subq    R9, [RSP + #48 (32-bit)]	# long
5e0     imulq   R9, RBP	# long
5e4     addq    R10, R9	# long
5e7     incl    R12	# int
5ea     cmpl    R12, R8
5ed     jl,s   B35	# loop end  P=0.500000 C=9515153.000000

5ef     B38: #	out( B59 B39 ) <- in( B51 B37 B33 )  Freq: 0.999983
5ef     testq   RBX, RBX
5f2     je     B59  P=0.000001 C=-1.000000

5f8     B39: #	out( B63 B40 ) <- in( B38 )  Freq: 0.999982
5f8     movq    RAX, R10	# spill
5fb     movq    rdx, 0x8000000000000000	# ldiv
	cmpq    rax, rdx
	jne,s   normal
	xorl    rdx, rdx
	cmpq    RBX, -1
	je,s    done
normal: cdqq
	idivq   RBX
done:
617     movq    [R11 + #24 (8-bit)], RAX	# long ! Field: org/jml/regression/linear/LongLinearRegression.slope
61b     NullCheck R11

61b     B40: #	out( N686 ) <- in( B39 )  Freq: 0.999981
61b     imulq   RAX, [RSP + #32 (32-bit)]	# long
621     movq    R10, [rsp + #48]	# spill
626     subq    R10, RAX	# long
629     movq    [R11 + #16 (8-bit)], R10	# long ! Field: org/jml/regression/linear/LongLinearRegression.intercept
62d     vzeroupper
	addq    rsp, 96	# Destroy frame
	popq    rbp
	cmpq     rsp, poll_offset[r15_thread] 
	ja       #safepoint_stub	# Safepoint: poll for GC

642     ret

643     B41: #	out( B32 ) <- in( B28 )  Freq: 0.499991
643     movq    R10, RAX	# spill
646     jmp     B32

64b     B42: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
64b     xorl    R11, R11	# ptr
64e     jmp     B4

653     B43: #	out( B7 ) <- in( B4 )  Freq: 0.000999986
653     xorl    RCX, RCX	# ptr
655     jmp     B7

65a     B44: #	out( B10 ) <- in( B7 )  Freq: 0.000999985
65a     xorl    R13, R13	# ptr
        nop 	# 3 bytes pad for loops and calls
660     jmp     B10

665     B45: #	out( B47 ) <- in( B14 )  Freq: 2.02654e-06
665     movq    RBP, [rsp + #40]	# spill
66a     jmp,s   B47

66c     B46: #	out( B47 ) <- in( B35 )  Freq: 1.01326e-06
66c     movq    RBP, R10	# spill

66f     B47: #	out( N686 ) <- in( B46 B45 )  Freq: 3.0398e-06
66f     movl    RSI, #-28	# int
674     movq    [rsp + #0], R11	# spill
678     movq    [rsp + #16], R13	# spill
67d     pushq   [rsp + #32]	# 64-bit mem-mem spill
	popq    [rsp + #24]
687     pushq   [rsp + #48]	# 64-bit mem-mem spill
	popq    [rsp + #32]
691     movq    [rsp + #48], RBX	# spill
696     movq    [rsp + #56], RCX	# spill
69b     movl    [rsp + #44], R12	# spill
6a0     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:90 (line 24) L[0]=rsp + #0 L[1]=rsp + #56 L[2]=rsp + #16 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #24 L[8]=_ L[9]=rsp + #32 L[10]=_ L[11]=_ L[12]=_ L[13]=RBP L[14]=_ L[15]=rsp + #44 STK[0]=rsp + #48 STK[1]=_ STK[2]=rsp + #56 STK[3]=rsp + #44
        # OopMap {[0]=Oop [16]=Oop [56]=Oop off=1704/0x6a8}
6a8     stop	# ShouldNotReachHere

6bc     B48: #	out( B50 ) <- in( B15 )  Freq: 2.02654e-06
6bc     movq    R10, [rsp + #40]	# spill
6c1     movq    [rsp + #0], R10	# spill
6c5     jmp,s   B50

6c7     B49: #	out( B50 ) <- in( B36 )  Freq: 1.01326e-06
6c7     movq    [rsp + #0], R10	# spill

6cb     B50: #	out( N686 ) <- in( B49 B48 )  Freq: 3.0398e-06
6cb     movl    RSI, #-28	# int
6d0     movq    [rsp + #8], R11	# spill
6d5     movq    [rsp + #16], RCX	# spill
6da     pushq   [rsp + #48]	# 64-bit mem-mem spill
	popq    [rsp + #40]
6e4     movq    [rsp + #48], RBX	# spill
6e9     movq    [rsp + #64], R13	# spill
6ee     movl    [rsp + #60], R12	# spill
        nop 	# 1 bytes pad for loops and calls
6f4     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:117 (line 25) L[0]=rsp + #8 L[1]=rsp + #16 L[2]=rsp + #64 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #32 L[8]=_ L[9]=rsp + #40 L[10]=_ L[11]=rsp + #48 L[12]=_ L[13]=_ L[14]=_ L[15]=rsp + #60 STK[0]=rsp + #0 STK[1]=_ STK[2]=RBP STK[3]=_ STK[4]=rsp + #64 STK[5]=rsp + #60
        # OopMap {[8]=Oop [16]=Oop [64]=Oop off=1788/0x6fc}
6fc     stop	# ShouldNotReachHere

710     B51: #	out( B38 ) <- in( B12 )  Freq: 1.01327e-06
710     movq    R10, [rsp + #40]	# spill
715     jmp     B38

71a     B52: #	out( B33 ) <- in( B17 )  Freq: 1.01327e-06
71a     movq    R10, [rsp + #40]	# spill
        nop 	# 1 bytes pad for loops and calls
720     jmp     B33

725     B53: #	out( N686 ) <- in( B18 )  Freq: 1.01327e-06
725     stop	# ShouldNotReachHere

739     B54: #	out( N686 ) <- in( B19 )  Freq: 1.01327e-06
739     stop	# ShouldNotReachHere

74d     B55: #	out( N686 ) <- in( B20 )  Freq: 1.01327e-06
74d     stop	# ShouldNotReachHere

761     B56: #	out( N686 ) <- in( B21 )  Freq: 1.01326e-06
761     stop	# ShouldNotReachHere

775     B57: #	out( N686 ) <- in( B22 )  Freq: 1.01326e-06
775     stop	# ShouldNotReachHere

789     B58: #	out( N686 ) <- in( B23 )  Freq: 1.01326e-06
789     stop	# ShouldNotReachHere

79d     B59: #	out( N686 ) <- in( B38 )  Freq: 1.01326e-06
79d     movl    RSI, #-122	# int
7a2     movq    RBP, R10	# spill
        nop 	# 3 bytes pad for loops and calls
7a8     call,static  wrapper for: uncommon_trap(reason='div0_check' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:136 (line 29) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ STK[0]=_ STK[1]=RBP STK[2]=_ STK[3]=#0 STK[4]=_
        # OopMap {off=1968/0x7b0}
7b0     stop	# ShouldNotReachHere

7c4     B60: #	out( N686 ) <- in( B2 B5 B8 )  Freq: 2.997e-06
7c4     movl    RSI, #-115	# int
7c9     movq    [rsp + #0], R13	# spill
7cd     pushq   [rsp + #32]	# 64-bit mem-mem spill
	popq    [rsp + #8]
7d7     pushq   [rsp + #48]	# 64-bit mem-mem spill
	popq    [rsp + #16]
7e1     movq    [rsp + #24], RBX	# spill
7e6     movq    R10, [rsp + #40]	# spill
7eb     movq    [rsp + #32], R10	# spill
7f0     movl    [rsp + #40], R12	# spill
7f5     movq    [rsp + #48], R14	# spill
        nop 	# 2 bytes pad for loops and calls
7fc     call,static  wrapper for: uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:78 (line 23) L[0]=rsp + #48 L[1]=RBP L[2]=rsp + #0 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #8 L[8]=_ L[9]=rsp + #16 L[10]=_ L[11]=rsp + #24 L[12]=_ L[13]=rsp + #32 L[14]=_ L[15]=rsp + #40
        # OopMap {rbp=Oop [0]=Oop [48]=Oop off=2052/0x804}
804     stop	# ShouldNotReachHere

818     B61: #	out( N686 ) <- in( B10 )  Freq: 1.01328e-06
818     movl    RSI, #-138	# int
81d     movq    RBP, R11	# spill
820     movq    [rsp + #0], RCX	# spill
824     movq    [rsp + #8], R13	# spill
829     pushq   [rsp + #32]	# 64-bit mem-mem spill
	popq    [rsp + #16]
833     pushq   [rsp + #48]	# 64-bit mem-mem spill
	popq    [rsp + #24]
83d     movq    [rsp + #32], RBX	# spill
842     movl    [rsp + #48], R12	# spill
        nop 	# 1 bytes pad for loops and calls
848     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:78 (line 23) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #16 L[8]=_ L[9]=rsp + #24 L[10]=_ L[11]=rsp + #32 L[12]=_ L[13]=rsp + #40 L[14]=_ L[15]=rsp + #48
        # OopMap {rbp=Oop [0]=Oop [8]=Oop off=2128/0x850}
850     stop	# ShouldNotReachHere

864     B62: #	out( N686 ) <- in( B11 )  Freq: 1.01327e-06
864     movl    RSI, #-66	# int
869     movq    RBP, R11	# spill
86c     movq    [rsp + #0], RCX	# spill
870     movq    [rsp + #8], R13	# spill
875     pushq   [rsp + #32]	# 64-bit mem-mem spill
	popq    [rsp + #16]
87f     pushq   [rsp + #48]	# 64-bit mem-mem spill
	popq    [rsp + #24]
889     movq    [rsp + #32], RBX	# spill
88e     movl    [rsp + #48], R12	# spill
        nop 	# 1 bytes pad for loops and calls
894     call,static  wrapper for: uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:78 (line 23) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #16 L[8]=_ L[9]=rsp + #24 L[10]=_ L[11]=rsp + #32 L[12]=_ L[13]=rsp + #40 L[14]=_ L[15]=rsp + #48
        # OopMap {rbp=Oop [0]=Oop [8]=Oop off=2204/0x89c}
89c     stop	# ShouldNotReachHere

8b0     B63: #	out( N686 ) <- in( B39 )  Freq: 1.01326e-06
8b0     movl    RSI, #-10	# int
8b5     movq    RBP, RAX	# spill
8b8     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:137 (line 29) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ STK[0]=#NULL STK[1]=RBP STK[2]=_
        # OopMap {off=2240/0x8c0}
8c0     stop	# ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    2644 1002 %     4       org.jml.regression.linear.LongLinearRegression::fit @ 78 (155 bytes)
 total in heap  [0x00000001173d5790,0x00000001173d67b8] = 4136
 relocation     [0x00000001173d5908,0x00000001173d59d8] = 208
 main code      [0x00000001173d59e0,0x00000001173d62e0] = 2304
 stub code      [0x00000001173d62e0,0x00000001173d62f8] = 24
 oops           [0x00000001173d62f8,0x00000001173d6300] = 8
 metadata       [0x00000001173d6300,0x00000001173d6318] = 24
 scopes data    [0x00000001173d6318,0x00000001173d64b0] = 408
 scopes pcs     [0x00000001173d64b0,0x00000001173d6790] = 736
 dependencies   [0x00000001173d6790,0x00000001173d6798] = 8
 nul chk table  [0x00000001173d6798,0x00000001173d67b8] = 32

[Constant Pool (empty)]

[MachCode]
[Verified Entry Point]
  # {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
 ;; N686: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00000001173d59e0: ;   {runtime_call os::breakpoint()}
  0x00000001173d59e0: e8bb 25aa | f290 9090 | 9090 9090 | 9090 9090 
 ;; B1: #	out( B42 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00000001173d59f0: 8984 2400 | a0fe ff55 | 4883 ec60 | 4c8b 7678 | 488b 6e70 | 448b 264c | 8b6e 684c | 8b56 384c 
  0x00000001173d5a10: 8954 2420 | 4c8b 5628 | 4c89 5424 | 3048 8b5e | 184c 8b56 | 084c 8954 | 2428 488b | fec5 f877 
  0x00000001173d5a30: 49ba a010 | f809 0100 | 0000 41ff | d290 9090 | 4d85 f60f | 84e2 0500 | 0045 8b56 

  0x00000001173d5a4c: ;   {metadata('org/jml/regression/linear/LongLinearRegression')}
  0x00000001173d5a4c: 0841 81fa | 201d da44 | 0f85 4a07 | 0000 4d8b | de90 9090 | 4885 ed0f | 84ca 0500 | 0044 8b55 
  0x00000001173d5a6c: ;   {metadata({type array long})}
  0x00000001173d5a6c: 0841 81fa | c781 d844 | 0f85 2a07 | 0000 488b | cd90 9090 | 4d85 ed0f | 84b1 0500 | 0045 8b55 
  0x00000001173d5a8c: ;   {metadata({type array long})}
  0x00000001173d5a8c: 0841 81fa | c781 d844 | 0f85 0a07 

  0x00000001173d5a98: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@78 (line 23)
  0x00000001173d5a98: 0000 9090 | 9090 9090 

  0x00000001173d5aa0: ; implicit exception: dispatches to 0x00000001173d61f8
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@81 (line 23)
  0x00000001173d5aa0: 448b 410c 
 ;; B11: #	out( B62 B12 ) <- in( B10 )  Freq: 0.999996
  0x00000001173d5aa4: ; implicit exception: dispatches to 0x00000001173d6244
                      ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
  0x00000001173d5aa4: 458b 750c 
 ;; B12: #	out( B51 B13 ) <- in( B11 )  Freq: 0.999995
  0x00000001173d5aa8: 453b e00f | 8d3f 0600 

  0x00000001173d5ab0: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
  0x00000001173d5ab0: 0045 8bd5 | 418b fcff | c741 c1ea | 0341 83e2 | 0345 33c9 | 413b f941 | 0f4c f941 | 3bf8 410f 
  0x00000001173d5ad0: 4ff8 4403 | d7ba 0200 | 0000 412b | d283 e203 | 03d7 413b | d041 0f4f 

  0x00000001173d5ae8: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
  0x00000001173d5ae8: d045 3be0 | 0f83 5305 | 0000 4a8b | 6ce1 1048 

  0x00000001173d5af8: ;*lsub {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
  0x00000001173d5af8: 2b6c 2420 | 4c8b d54c | 0faf d549 

  0x00000001173d5b04: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
  0x00000001173d5b04: 03da 453b | e60f 838d | 0500 004f | 8b54 e510 | 4c2b 5424 | 304c 0faf | d548 8b7c | 2428 4903 
  0x00000001173d5b24: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
  0x00000001173d5b24: fa48 897c | 2428 41ff 

  0x00000001173d5b2c: ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
  0x00000001173d5b2c: c444 3be2 

  0x00000001173d5b30: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
  0x00000001173d5b30: 7cb7 453b | c645 8bd0 | 450f 4fd6 | 418b fa83 | c7f1 ba00 | 0000 8044 | 3bd7 0f4c | fa44 3be7 
  0x00000001173d5b50: 0f8d a405 | 0000 453b | e00f 83a6 | 0500 0090 | 453b e60f | 83b0 0500 | 0049 8beb | 418b f483 
  0x00000001173d5b70: c60f 413b | f60f 83b2 | 0500 0090 | 9090 9090 | 453b e60f | 83b8 0500 | 0041 3bf0 | 0f83 c305 
  0x00000001173d5b90: 0000 453b | e00f 83ce | 0500 00c4 | e27d 5974 | 2420 c4e2 | 7d59 7c24 | 30be 803e | 0000 448b 
  0x00000001173d5bb0: df45 2bdc | 413b fc45 | 0f4c d941 | 81fb 803e | 0000 440f | 47de 4503 | dc90 9090 

  0x00000001173d5bcc: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
  0x00000001173d5bcc: 9090 9090 
 ;; B26: #	out( B26 B27 ) <- in( B25 B26 ) Loop( B26-B26 inner main of N213 strip mined) Freq: 9.73945e+11
  0x00000001173d5bd0: c481 7e6f | 44e5 10c4 | a17e 6f4c | e110 c57d | fbc7 c575 | fbce 4963 | c4c5 fe6f | 44c1 30c4 
  0x00000001173d5bf0: c17e 6f4c | c570 c5fe | 6f54 c150 | c5fe 6f5c | c170 c4c1 | 7e6f 64c5 | 30c4 c17e | 6f6c c550 
  0x00000001173d5c10: c57d fbd6 | c5d5 fbef | c5dd fbe7 | c565 fbde 

  0x00000001173d5c20: ;*lsub {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
  0x00000001173d5c20: c56d fbe6 | c5f5 fbd7 | c4c1 7d70 | c1b1 c4e2 | 3540 c0c4 | e37d 39c1 | 01c4 e27d | 02c1 c4e2 
  0x00000001173d5c40: 7d35 c0c5 | fd73 f020 | c4c1 35f4 | c9c5 fdd4 | c1c4 e37d | 39c1 01c5 | f1d4 c8c5 | 7970 f10e 
  0x00000001173d5c60: c509 d4f1 | c4e1 f96e | cbc4 c171 | d4ce c4e1 | f97e cbc4 | c17d 70c2 | b1c4 e22d | 40c0 c4e3 
  0x00000001173d5c80: 7d39 c101 | c4e2 7d02 | c1c4 e27d | 35c0 c5fd | 73f0 20c4 | c12d f4ca | c5fd d4c1 | c4e3 7d39 
  0x00000001173d5ca0: c101 c5f1 | d4c8 c579 | 70f1 0ec5 | 09d4 f1c4 | e1f9 6ecb | c4c1 71d4 | cec4 e1f9 | 7ecb c4c1 
  0x00000001173d5cc0: 7d70 c4b1 | c4e2 1d40 | c0c4 e37d | 39c1 01c4 | e27d 02c1 | c4e2 7d35 | c0c5 fd73 | f020 c4c1 
  0x00000001173d5ce0: 1df4 ccc5 | fdd4 c1c4 | e37d 39c1 | 01c5 f1d4 | c8c5 7970 | f10e c509 | d4f1 c4e1 | f96e cbc4 
  0x00000001173d5d00: c171 d4ce | c4e1 f97e | cbc4 c17d | 70c3 b1c4 | e225 40c0 | c4e3 7d39 | c101 c4e2 | 7d02 c1c4 
  0x00000001173d5d20: e27d 35c0 | c5fd 73f0 | 20c4 c125 | f4cb c5fd | d4c1 c4e3 | 7d39 c101 | c5f1 d4c8 | c579 70f1 
  0x00000001173d5d40: 0ec5 09d4 | f1c4 e1f9 | 6ecb c4c1 | 71d4 cec4 

  0x00000001173d5d50: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
  0x00000001173d5d50: e1f9 7ecb | c4c1 7d70 | c1b1 c4e2 | 3d40 c0c4 | e37d 39c1 | 01c4 e27d | 02c1 c4e2 | 7d35 c0c5 
  0x00000001173d5d70: fd73 f020 | c4c1 3df4 | c9c5 fdd4 | c148 8b44 | 2428 c4e3 | 7d39 c101 | c5f1 d4c8 | c579 70c1 
  0x00000001173d5d90: 0ec5 39d4 | c1c4 e1f9 | 6ec8 c4c1 | 71d4 c8c4 | e1f9 7ec8 | c4c1 7d70 | c2b1 c4e2 | 5d40 c0c4 
  0x00000001173d5db0: e37d 39c1 | 01c4 e27d | 02c1 c4e2 | 7d35 c0c5 | fd73 f020 | c4c1 5df4 | cac5 fdd4 | c1c4 e37d 
  0x00000001173d5dd0: 39c1 01c5 | f1d4 c8c5 | f970 e10e | c5d9 d4e1 | c4e1 f96e | c8c5 f1d4 | ccc4 e1f9 | 7ec8 c4c1 
  0x00000001173d5df0: 7d70 c4b1 | c4e2 5540 | c0c4 e37d | 39c1 01c4 | e27d 02c1 | c4e2 7d35 | c0c5 fd73 | f020 c4c1 
  0x00000001173d5e10: 55f4 ccc5 | fdd4 c1c4 | e37d 39c1 | 01c5 f1d4 | c8c5 f970 | e10e c5d9 | d4e1 c4e1 | f96e c8c5 
  0x00000001173d5e30: f1d4 ccc4 | e1f9 7ec8 | c4c1 7d70 | c3b1 c4e2 | 6d40 c0c4 | e37d 39c1 | 01c4 e27d | 02c1 c4e2 
  0x00000001173d5e50: 7d35 c0c5 | fd73 f020 | c4c1 6df4 | cbc5 fdd4 | c1c4 c37d | 39c5 01c5 | 11d4 e8c4 | c179 70dd 
  0x00000001173d5e70: 0ec4 c161 | d4dd c461 | f96e e8c5 | 11d4 ebc4 

  0x00000001173d5e80: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
  0x00000001173d5e80: 61f9 7ee8 | 4889 4424 | 2841 83c4 

  0x00000001173d5e8c: ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
                      ;   {no_reloc}
  0x00000001173d5e8c: 1045 3be3 | 0f8c 3afd 

  0x00000001173d5e94: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
  0x00000001173d5e94: ffff 4d8b | 9f30 0100 

  0x00000001173d5e9c: ; ImmutableOopMap {rcx=Oop rbp=Oop r13=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
                      ;   {poll}
  0x00000001173d5e9c: 0041 8503 | 443b e70f | 8c05 fdff | ff45 8bca | 4183 c1fd | 453b d144 | 0f4c ca45 | 3be1 9090 
  0x00000001173d5ebc: 9090 9090 | 0f8d 5d01 

  0x00000001173d5ec4: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
  0x00000001173d5ec4: 0000 c481 | 7e6f 44e5 | 10c4 a17e | 6f4c e110 | c5fd fbc7 

  0x00000001173d5ed8: ;*lsub {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
  0x00000001173d5ed8: c5f5 fbce | c5fd 70e1 | b1c4 e27d | 40e4 c4e3 | 7d39 e501 | c4e2 5d02 | e5c4 e27d | 35e4 c5dd 
  0x00000001173d5ef8: 73f4 20c5 | fdf4 e9c5 | ddd4 c54c | 8b54 2428 | c4e3 7d39 | c401 c5d9 | d4e0 c5f9 | 70ec 0ec5 
  0x00000001173d5f18: d1d4 ecc4 | c1f9 6ee2 | c5d9 d4e5 | c4c1 f97e 

  0x00000001173d5f28: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
  0x00000001173d5f28: e2c5 fd70 | c1b1 c4e2 | 7540 c0c4 | e37d 39c4 | 01c4 e27d | 02c4 c4e2 | 7d35 c0c5 | fd73 f020 
  0x00000001173d5f48: c5f5 f4e1 | c5fd d4c4 | c4e3 7d39 | c301 c5e1 | d4d8 c5f9 | 70d3 0ec5 | e9d4 d3c4 | e1f9 6edb 
  0x00000001173d5f68: c5e1 d4da | c4e1 f97e 

  0x00000001173d5f70: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
  0x00000001173d5f70: db41 83c4 

  0x00000001173d5f74: ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
  0x00000001173d5f74: 0445 3be1 

  0x00000001173d5f78: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
  0x00000001173d5f78: 7d0b 4c89 | 5424 2890 | e941 ffff | ff4c 8bdd 
 ;; B33: #	out( B38 B34 ) <- in( B52 B32 )  Freq: 0.999984
  0x00000001173d5f88: 453b e07d 

  0x00000001173d5f8c: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@90 (line 24)
  0x00000001173d5f8c: 4290 9090 
 ;; B35: #	out( B46 B36 ) <- in( B34 B37 ) Loop( B35-B37 inner post of N479) Freq: 0.999982
  0x00000001173d5f90: 453b e00f | 83b3 0000 | 004a 8b6c | e110 482b 

  0x00000001173d5fa0: ;*lsub {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
  0x00000001173d5fa0: 6c24 204c | 8bcd 4c0f | afcd 4903 

  0x00000001173d5fac: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
  0x00000001173d5fac: d945 3be6 | 0f83 f100 | 0000 4f8b | 4ce5 104c | 2b4c 2430 | 4c0f afcd 

  0x00000001173d5fc4: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
  0x00000001173d5fc4: 4d03 d141 

  0x00000001173d5fc8: ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
  0x00000001173d5fc8: ffc4 453b 

  0x00000001173d5fcc: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
  0x00000001173d5fcc: e07c c148 | 85db 0f84 | a501 0000 
 ;; B39: #	out( B63 B40 ) <- in( B38 )  Freq: 0.999982
  0x00000001173d5fd8: 498b c248 | ba00 0000 | 0000 0000 | 8048 39d0 | 7508 33d2 | 4883 fbff | 7405 4899 

  0x00000001173d5ff4: ;*ldiv {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
  0x00000001173d5ff4: 48f7 fb49 

  0x00000001173d5ff8: ;*putfield slope {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)
  0x00000001173d5ff8: 8943 1848 | 0faf 4424 | 204c 8b54 | 2430 4c2b | d04d 8953 

  0x00000001173d600c: ;*putfield intercept {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@151 (line 30)
  0x00000001173d600c: 10c5 f877 | 4883 c460 

  0x00000001173d6014: ;   {poll_return}
  0x00000001173d6014: 5d49 3ba7 | 2801 0000 | 0f87 9202 | 0000 c34c | 8bd0 e95a | ffff ff45 | 33db e92a | faff ff33 
  0x00000001173d6034: c9e9 43fa | ffff 4533 | ed90 9090 | e955 faff | ff48 8b6c | 2428 eb03 
 ;; B46: #	out( B47 ) <- in( B35 )  Freq: 1.01326e-06
  0x00000001173d604c: 498b eabe | e4ff ffff | 4c89 1c24 | 4c89 6c24 | 1048 ff74 | 2420 488f | 4424 1848 | ff74 2430 
  0x00000001173d606c: 488f 4424 | 2048 895c | 2430 4889 | 4c24 3844 | 8964 242c 

  0x00000001173d6080: ;   {runtime_call UncommonTrapBlob}
  0x00000001173d6080: c5f8 77e8 

  0x00000001173d6084: ; ImmutableOopMap {[0]=Oop [16]=Oop [56]=Oop }
                      ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@90 (line 24)
  0x00000001173d6084: b8a4 57f8 

  0x00000001173d6088: ;   {external_word}
  0x00000001173d6088: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173d6094: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d6094: e4f0 e8b5 

  0x00000001173d6098: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@90 (line 24)
  0x00000001173d6098: ae90 f2f4 
 ;; B48: #	out( B50 ) <- in( B15 )  Freq: 2.02654e-06
  0x00000001173d609c: 4c8b 5424 | 284c 8914 | 24eb 044c | 8914 24be | e4ff ffff | 4c89 5c24 | 0848 894c | 2410 48ff 
  0x00000001173d60bc: 7424 3048 | 8f44 2428 | 4889 5c24 | 304c 896c | 2440 4489 | 6424 3c90 

  0x00000001173d60d4: ;   {runtime_call UncommonTrapBlob}
  0x00000001173d60d4: c5f8 77e8 

  0x00000001173d60d8: ; ImmutableOopMap {[8]=Oop [16]=Oop [64]=Oop }
                      ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
  0x00000001173d60d8: 64a4 57f8 

  0x00000001173d60dc: ;   {external_word}
  0x00000001173d60dc: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173d60e8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d60e8: e4f0 e861 

  0x00000001173d60ec: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
  0x00000001173d60ec: ae90 f2f4 
 ;; B51: #	out( B38 ) <- in( B12 )  Freq: 1.01327e-06
  0x00000001173d60f0: 4c8b 5424 | 28e9 d5fe | ffff 4c8b | 5424 2890 | e983 feff 

  0x00000001173d6104: ;   {external_word}
  0x00000001173d6104: ff48 bfa6 | 2d42 0a01 | 0000 0048 

  0x00000001173d6110: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d6110: 83e4 f0e8 | 38ae 90f2 

  0x00000001173d6118: ;   {external_word}
  0x00000001173d6118: f448 bfa6 | 2d42 0a01 | 0000 0048 

  0x00000001173d6124: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d6124: 83e4 f0e8 | 24ae 90f2 

  0x00000001173d612c: ;   {external_word}
  0x00000001173d612c: f448 bf31 | 2542 0a01 | 0000 0048 

  0x00000001173d6138: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d6138: 83e4 f0e8 | 10ae 90f2 

  0x00000001173d6140: ;   {external_word}
  0x00000001173d6140: f448 bf31 | 2542 0a01 | 0000 0048 

  0x00000001173d614c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d614c: 83e4 f0e8 | fcad 90f2 

  0x00000001173d6154: ;   {external_word}
  0x00000001173d6154: f448 bf31 | 2542 0a01 | 0000 0048 

  0x00000001173d6160: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d6160: 83e4 f0e8 | e8ad 90f2 

  0x00000001173d6168: ;   {external_word}
  0x00000001173d6168: f448 bf31 | 2542 0a01 | 0000 0048 

  0x00000001173d6174: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d6174: 83e4 f0e8 | d4ad 90f2 | f4be 86ff | ffff 498b | ea90 9090 

  0x00000001173d6188: ;   {runtime_call UncommonTrapBlob}
  0x00000001173d6188: c5f8 77e8 

  0x00000001173d618c: ; ImmutableOopMap {}
                      ;*ldiv {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
  0x00000001173d618c: b0a3 57f8 

  0x00000001173d6190: ;   {external_word}
  0x00000001173d6190: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173d619c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d619c: e4f0 e8ad | ad90 f2f4 
 ;; B60: #	out( N686 ) <- in( B2 B5 B8 )  Freq: 2.997e-06
  0x00000001173d61a4: be8d ffff | ff4c 892c | 2448 ff74 | 2420 488f | 4424 0848 | ff74 2430 | 488f 4424 | 1048 895c 
  0x00000001173d61c4: 2418 4c8b | 5424 284c | 8954 2420 | 4489 6424 | 284c 8974 | 2430 9090 

  0x00000001173d61dc: ;   {runtime_call UncommonTrapBlob}
  0x00000001173d61dc: c5f8 77e8 

  0x00000001173d61e0: ; ImmutableOopMap {rbp=Oop [0]=Oop [48]=Oop }
                      ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@78 (line 23)
  0x00000001173d61e0: 5ca3 57f8 

  0x00000001173d61e4: ;   {external_word}
  0x00000001173d61e4: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173d61f0: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d61f0: e4f0 e859 | ad90 f2f4 
 ;; B61: #	out( N686 ) <- in( B10 )  Freq: 1.01328e-06
  0x00000001173d61f8: be76 ffff | ff49 8beb | 4889 0c24 | 4c89 6c24 | 0848 ff74 | 2420 488f | 4424 1048 | ff74 2430 
  0x00000001173d6218: 488f 4424 | 1848 895c | 2420 4489 | 6424 3090 

  0x00000001173d6228: ;   {runtime_call UncommonTrapBlob}
  0x00000001173d6228: c5f8 77e8 

  0x00000001173d622c: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop }
                      ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@78 (line 23)
  0x00000001173d622c: 10a3 57f8 

  0x00000001173d6230: ;   {external_word}
  0x00000001173d6230: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173d623c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d623c: e4f0 e80d | ad90 f2f4 
 ;; B62: #	out( N686 ) <- in( B11 )  Freq: 1.01327e-06
  0x00000001173d6244: bebe ffff | ff49 8beb | 4889 0c24 | 4c89 6c24 | 0848 ff74 | 2420 488f | 4424 1048 | ff74 2430 
  0x00000001173d6264: 488f 4424 | 1848 895c | 2420 4489 | 6424 3090 

  0x00000001173d6274: ;   {runtime_call UncommonTrapBlob}
  0x00000001173d6274: c5f8 77e8 

  0x00000001173d6278: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop }
                      ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@78 (line 23)
  0x00000001173d6278: c4a2 57f8 

  0x00000001173d627c: ;   {external_word}
  0x00000001173d627c: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173d6288: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d6288: e4f0 e8c1 

  0x00000001173d628c: ;*putfield slope {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)
  0x00000001173d628c: ac90 f2f4 
 ;; B63: #	out( N686 ) <- in( B39 )  Freq: 1.01326e-06
  0x00000001173d6290: bef6 ffff | ff48 8be8 

  0x00000001173d6298: ;   {runtime_call UncommonTrapBlob}
  0x00000001173d6298: c5f8 77e8 

  0x00000001173d629c: ; ImmutableOopMap {}
                      ;*putfield slope {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)
  0x00000001173d629c: a0a2 57f8 

  0x00000001173d62a0: ;   {external_word}
  0x00000001173d62a0: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173d62ac: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d62ac: e4f0 e89d 

  0x00000001173d62b0: ;*putfield slope {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)
  0x00000001173d62b0: ac90 f2f4 

  0x00000001173d62b4: ;   {internal_word}
  0x00000001173d62b4: 49ba 1560 | 3d17 0100 | 0000 4d89 | 97e8 0300 

  0x00000001173d62c4: ;   {runtime_call SafepointBlob}
  0x00000001173d62c4: 00e9 56af | 57f8 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 
[Exception Handler]
  0x00000001173d62e0: ;   {no_reloc}
  0x00000001173d62e0: e93b 4e4c | f8e8 0000 | 0000 4883 

  0x00000001173d62ec: ;   {runtime_call DeoptimizationBlob}
  0x00000001173d62ec: 2c24 05e9 | 6ca5 57f8 | f450.113 ms/op
f4 f4f4 
[/MachCode]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00000001173d62f8:   0x000000011ed59890 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011ed59890}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00000001173d6300:   0x0000000226d0e900 'org/jml/regression/linear/LongLinearRegression'
  0x00000001173d6308:   0x0000000226c40e38 {type array long}
  0x00000001173d6310:   0x000000010ec8fa60 {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00000001173d59df offset=ffffffff bits=0):
PcDesc(pc=0x00000001173d5a9a offset=ba bits=0):   org.jml.regression.linear.LongLinearRegression::fit@78 (line 23)
PcDesc(pc=0x00000001173d5aa4 offset=c4 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@81 (line 23)
PcDesc(pc=0x00000001173d5aa8 offset=c8 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
PcDesc(pc=0x00000001173d5ab1 offset=d1 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
PcDesc(pc=0x00000001173d5ae9 offset=109 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
PcDesc(pc=0x00000001173d5afc offset=11c bits=0):   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
PcDesc(pc=0x00000001173d5b06 offset=126 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
PcDesc(pc=0x00000001173d5b25 offset=145 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
PcDesc(pc=0x00000001173d5b2d offset=14d bits=0):   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
PcDesc(pc=0x00000001173d5b32 offset=152 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
PcDesc(pc=0x00000001173d5b# Warmup Iteration   3: d0 offset=1f0 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
PcDesc(pc=0x00000001173d5c24 offset=244 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
PcDesc(pc=0x00000001173d5d54 offset=374 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
PcDesc(pc=0x00000001173d5e84 offset=4a4 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
PcDesc(pc=0x00000001173d5e8d offset=4ad bits=0):   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
PcDesc(pc=0x00000001173d5e96 offset=4b6 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
PcDesc(pc=0x00000001173d5e9d offset=4bd bits=1):   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: reg rcx [2],oop
    - l2: reg r13 [26],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[32],long
    - l9: 0
    - l10: stack[48],long
    - l11: 0
    - l12: reg rbx [6],long
    - l13: 0
    - l14: reg rax [0],long
    - l15: reg r12 [24],int
PcDesc(pc=0x00000001173d5ea0 offset=4c0 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
PcDesc(pc=0x00000001173d5ec6 offset=4e6 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
PcDesc(pc=0x00000001173d5edc offset=4fc bits=0):   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
PcDesc(pc=0x00000001173d5f29 offset=549 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
PcDesc(pc=0x00000001173d5f71 offset=591 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
PcDesc(pc=0x00000001173d5f75 offset=595 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
PcDesc(pc=0x00000001173d5f7a offset=59a bits=0):   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
PcDesc(pc=0x00000001173d5f90 offset=5b0 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@90 (line 24)
PcDesc(pc=0x00000001173d5fa3 offset=5c3 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
PcDesc(pc=0x00000001173d5fad offset=5cd bits=0):   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
PcDesc(pc=0x00000001173d5fc7 offset=5e7 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
PcDesc(pc=0x00000001173d5fca offset=5ea bits=0):   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
PcDesc(pc=0x00000001173d5fcf offset=5ef bits=0):   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
PcDesc(pc=0x00000001173d5ff7 offset=617 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
PcDesc(pc=0x00000001173d5ffb offset=61b bits=0):   org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)
PcDesc(pc=0x00000001173d600d offset=62d bits=0):   org.jml.regression.linear.LongLinearRegression::fit@151 (line 30)
PcDesc(pc=0x00000001173d6088 offset=6a8 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@90 (line 24)
   Locals
    - l0: stack[0],oop
    - l1: stack[56],oop
    - l2: stack[16],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[24],long
    - l9: 0
    - l10: stack[32],long
    - l11: empty
    - l12: empty
    - l13: 0
    - l14: reg rbp [10],long
    - l15: stack[44]
   Expression stack
    - @0: 0
    - @1: stack[48],long
    - @2: stack[56],oop
    - @3: stack[44]
PcDesc(pc=0x00000001173d609c offset=6bc bits=0):   org.jml.regression.linear.LongLinearRegression::fit@90 (line 24)
PcDesc(pc=0x00000001173d60dc offset=6fc bits=0):   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
   Locals
    - l0: stack[8],oop
    - l1: stack[16],oop
    - l2: stack[64],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[32],long
    - l9: 0
    - l10: stack[40],long
    - l11: 0
    - l12: stack[48],long
    - l13: empty
    - l14: empty
    - l15: stack[60]
   Expression stack
    - @0: 0
    - @1: stack[0],long
    - @2: 0
    - @3: reg rbp [10],long
    - @4: stack[64],oop
    - @5: stack[60]
PcDesc(pc=0x00000001173d60f0 offset=710 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
PcDesc(pc=0x00000001173d6190 offset=7b0 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: empty
    - @1: 0
    - @2: reg rbp [10],long
    - @3: 0
    - @4: 0
PcDesc(pc=0x00000001173d61e4 offset=804 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@78 (line 23)
   Locals
    - l0: stack[48],oop
    - l1: reg rbp [10],oop
    - l2: stack[0],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[8],long
    - l9: 0
    - l10: stack[16],long
    - l11: 0
    - l12: stack[24],long
    - l13: 0
    - l14: stack[32],long
    - l15: stack[40]
PcDesc(pc=0x00000001173d6230 offset=850 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@78 (line 23)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[16],long
    - l9: 0
    - l10: stack[24],long
    - l11: 0
    - l12: stack[32],long
    - l13: 0
    - l14: stack[40],long
    - l15: stack[48]
PcDesc(pc=0x00000001173d627c offset=89c bits=0):   org.jml.regression.linear.LongLinearRegression::fit@78 (line 23)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[16],long
    - l9: 0
    - l10: stack[24],long
    - l11: 0
    - l12: stack[32],long
    - l13: 0
    - l14: stack[40],long
    - l15: stack[48]
PcDesc(pc=0x00000001173d6290 offset=8b0 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)
PcDesc(pc=0x00000001173d62a0 offset=8c0 bits=1):   org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: NULL
    - @1: 0
    - @2: reg rbp [10],long
PcDesc(pc=0x00000001173d62b4 offset=8d4 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)
PcDesc(pc=0x00000001173d62f9 offset=919 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 8 OopMaps

ImmutableOopMap {rcx=Oop rbp=Oop r13=Oop } pc offsets: 1213 
ImmutableOopMap {[0]=Oop [16]=Oop [56]=Oop } pc offsets: 1704 
ImmutableOopMap {[8]=Oop [16]=Oop [64]=Oop } pc offsets: 1788 
ImmutableOopMap {} pc offsets: 1968 
ImmutableOopMap {rbp=Oop [0]=Oop [48]=Oop } pc offsets: 2052 
ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop } pc offsets: 2128 2204 
ImmutableOopMap {} pc offsets: 2240 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00000001173d5a9a offset=ba):
   org.jml.regression.linear.LongLinearRegression::fit@78 (line 23)
ScopeDesc(pc=0x00000001173d5aa4 offset=c4):
   org.jml.regression.linear.LongLinearRegression::fit@81 (line 23)
ScopeDesc(pc=0x00000001173d5aa8 offset=c8):
   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
ScopeDesc(pc=0x00000001173d5ab1 offset=d1):
   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
ScopeDesc(pc=0x00000001173d5ae9 offset=109):
   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
ScopeDesc(pc=0x00000001173d5afc offset=11c):
   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
ScopeDesc(pc=0x00000001173d5b06 offset=126):
   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
ScopeDesc(pc=0x00000001173d5b25 offset=145):
   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
ScopeDesc(pc=0x00000001173d5b2d offset=14d):
   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
ScopeDesc(pc=0x00000001173d5b32 offset=152):
   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
ScopeDesc(pc=0x00000001173d5bd0 offset=1f0):
   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
ScopeDesc(pc=0x00000001173d5c24 offset=244):
   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
ScopeDesc(pc=0x00000001173d5d54 offset=374):
   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
ScopeDesc(pc=0x00000001173d5e84 offset=4a4):
   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
ScopeDesc(pc=0x00000001173d5e8d offset=4ad):
   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
ScopeDesc(pc=0x00000001173d5e96 offset=4b6):
   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
ScopeDesc(pc=0x00000001173d5e9d offset=4bd):
   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: reg rcx [2],oop
    - l2: reg r13 [26],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[32],long
    - l9: 0
    - l10: stack[48],long
    - l11: 0
    - l12: reg rbx [6],long
    - l13: 0
    - l14: reg rax [0],long
    - l15: reg r12 [24],int
ScopeDesc(pc=0x00000001173d5ea0 offset=4c0):
   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
ScopeDesc(pc=0x00000001173d5ec6 offset=4e6):
   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
ScopeDesc(pc=0x00000001173d5edc offset=4fc):
   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
ScopeDesc(pc=0x00000001173d5f29 offset=549):
   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
ScopeDesc(pc=0x00000001173d5f71 offset=591):
   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
ScopeDesc(pc=0x00000001173d5f75 offset=595):
   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
ScopeDesc(pc=0x00000001173d5f7a offset=59a):
   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
ScopeDesc(pc=0x00000001173d5f90 offset=5b0):
   org.jml.regression.linear.LongLinearRegression::fit@90 (line 24)
ScopeDesc(pc=0x00000001173d5fa3 offset=5c3):
   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
ScopeDesc(pc=0x00000001173d5fad offset=5cd):
   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
ScopeDesc(pc=0x00000001173d5fc7 offset=5e7):
   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
ScopeDesc(pc=0x00000001173d5fca offset=5ea):
   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
ScopeDesc(pc=0x00000001173d5fcf offset=5ef):
   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
ScopeDesc(pc=0x00000001173d5ff7 offset=617):
   org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
ScopeDesc(pc=0x00000001173d5ffb offset=61b):
   org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)
ScopeDesc(pc=0x00000001173d600d offset=62d):
   org.jml.regression.linear.LongLinearRegression::fit@151 (line 30)
ScopeDesc(pc=0x00000001173d6088 offset=6a8):
   org.jml.regression.linear.LongLinearRegression::fit@90 (line 24)
   Locals
    - l0: stack[0],oop
    - l1: stack[56],oop
    - l2: stack[16],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[24],long
    - l9: 0
    - l10: stack[32],long
    - l11: empty
    - l12: empty
    - l13: 0
    - l14: reg rbp [10],long
    - l15: stack[44]
   Expression stack
    - @0: 0
    - @1: stack[48],long
    - @2: stack[56],oop
    - @3: stack[44]
ScopeDesc(pc=0x00000001173d609c offset=6bc):
   org.jml.regression.linear.LongLinearRegression::fit@90 (line 24)
ScopeDesc(pc=0x00000001173d60dc offset=6fc):
   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
   Locals
    - l0: stack[8],oop
    - l1: stack[16],oop
    - l2: stack[64],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[32],long
    - l9: 0
    - l10: stack[40],long
    - l11: 0
    - l12: stack[48],long
    - l13: empty
    - l14: empty
    - l15: stack[60]
   Expression stack
    - @0: 0
    - @1: stack[0],long
    - @2: 0
    - @3: reg rbp [10],long
    - @4: stack[64],oop
    - @5: stack[60]
ScopeDesc(pc=0x00000001173d60f0 offset=710):
   org.jml.regression.linear.LongLinearRegression::fit@117 (line 25)
ScopeDesc(pc=0x00000001173d6190 offset=7b0):
   org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: empty
    - @1: 0
    - @2: reg rbp [10],long
    - @3: 0
    - @4: 0
ScopeDesc(pc=0x00000001173d61e4 offset=804):
   org.jml.regression.linear.LongLinearRegression::fit@78 (line 23)
   Locals
    - l0: stack[48],oop
    - l1: reg rbp [10],oop
    - l2: stack[0],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[8],long
    - l9: 0
    - l10: stack[16],long
    - l11: 0
    - l12: stack[24],long
    - l13: 0
    - l14: stack[32],long
    - l15: stack[40]
ScopeDesc(pc=0x00000001173d6230 offset=850):
   org.jml.regression.linear.LongLinearRegression::fit@78 (line 23)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[16],long
    - l9: 0
    - l10: stack[24],long
    - l11: 0
    - l12: stack[32],long
    - l13: 0
    - l14: stack[40],long
    - l15: stack[48]
ScopeDesc(pc=0x00000001173d627c offset=89c):
   org.jml.regression.linear.LongLinearRegression::fit@78 (line 23)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[16],long
    - l9: 0
    - l10: stack[24],long
    - l11: 0
    - l12: stack[32],long
    - l13: 0
    - l14: stack[40],long
    - l15: stack[48]
ScopeDesc(pc=0x00000001173d6290 offset=8b0):
   org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)
ScopeDesc(pc=0x00000001173d62a0 offset=8c0):
   org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: NULL
    - @1: 0
    - @2: reg rbp [10],long
ScopeDesc(pc=0x00000001173d62b4 offset=8d4):
   org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00000001173d5908: 6400
relocInfo@0x00000001173d5908 [type=6(runtime_call) addr=0x00000001173d59e0 offset=0 format=1] | [destination=0x0000000109e77fa0]
         @0x00000001173d590a: f001cc6d
relocInfo@0x00000001173d590c [type=12(metadata) addr=0x00000001173d5a4d offset=109 format=3 data=1] | [metadata_addr=0x00000001173d6300 *=0x0000000226d0e900 offset=0]metadata_value=0x0000000226d0e900: 'org/jml/regression/linear/LongLinearRegression'
         @0x00000001173d590e: f002cc20
relocInfo@0x00000001173d5910 [type=12(metadata) addr=0x00000001173d5a6d offset=32 format=3 data=2] | [metadata_addr=0x00000001173d6308 *=0x0000000226c40e38 offset=0]metadata_value=0x0000000226c40e38: {type array long}
         @0x00000001173d5912: f002cc20
relocInfo@0x00000001173d5914 [type=12(metadata) addr=0x00000001173d5a8d offset=32 format=3 data=2] | [metadata_addr=0x00000001173d6308 *=0x0000000226c40e38 offset=0]metadata_value=0x0000000226c40e38: {type array long}
         @0x00000001173d5916: 03ff
relocInfo@0x00000001173d5916 [type=0(none) addr=0x00000001173d5e8c offset=1023]
         @0x00000001173d5918: a011
relocInfo@0x00000001173d5918 [type=10(poll) addr=0x00000001173d5e9d offset=17]
         @0x00000001173d591a: b178
relocInfo@0x00000001173d591a [type=11(poll_return) addr=0x00000001173d6015 offset=376]
         @0x00000001173d591c: 646e
relocInfo@0x00000001173d591c [type=6(runtime_call) addr=0x00000001173d6083 offset=110 format=1] | [destination=0x000000010f950540]
         @0x00000001173d591e: f8030a3a777700017005
relocInfo@0x00000001173d5926 [type=7(external_word) addr=0x00000001173d6088 offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173d5928: 640e
relocInfo@0x00000001173d5928 [type=6(runtime_call) addr=0x00000001173d6096 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d592a: 6441
relocInfo@0x00000001173d592a [type=6(runtime_call) addr=0x00000001173d60d7 offset=65 format=1] | [destination=0x000000010f950540]
         @0x00000001173d592c: f8030a3a777700017005
relocInfo@0x00000001173d5934 [type=7(external_word) addr=0x00000001173d60dc offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173d5936: 640e
relocInfo@0x00000001173d5936 [type=6(runtime_call) addr=0x00000001173d60ea offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d5938: f8030a422da60001701b
relocInfo@0x00000001173d5940 [type=7(external_word) addr=0x00000001173d6105 offset=27 data={0a422da60001}] | [target=0x000000010a422da6]
         @0x00000001173d5942: 640e
relocInfo@0x00000001173d5942 [type=6(runtime_call) addr=0x00000001173d6113 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d5944: f8030a422da600017006
relocInfo@0x00000001173d594c [type=7(external_word) addr=0x00000001173d6119 offset=6 data={0a422da60001}] | [target=0x000000010a422da6]
         @0x00000001173d594e: 640e
relocInfo@0x00000001173d594e [type=6(runtime_call) addr=0x00000001173d6127 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d5950: f8030a42253100017006
relocInfo@0x00000001173d5958 [type=7(external_word) addr=0x00000001173d612d offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173d595a: 640e
relocInfo@0x00000001173d595a [type=6(runtime_call) addr=0x00000001173d613b offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d595c: f8030a42253100017006
relocInfo@0x00000001173d5964 [type=7(external_word) addr=0x00000001173d6141 offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173d5966: 640e
relocInfo@0x00000001173d5966 [type=6(runtime_call) addr=0x00000001173d614f offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d5968: f8030a42253100017006
relocInfo@0x00000001173d5970 [type=7(external_word) addr=0x00000001173d6155 offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173d5972: 640e
relocInfo@0x00000001173d5972 [type=6(runtime_call) addr=0x00000001173d6163 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d5974: f8030a42253100017006
relocInfo@0x00000001173d597c [type=7(external_word) addr=0x00000001173d6169 offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173d597e: 640e
relocInfo@0x00000001173d597e [type=6(runtime_call) addr=0x00000001173d6177 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d5980: 6414
relocInfo@0x00000001173d5980 [type=6(runtime_call) addr=0x00000001173d618b offset=20 format=1] | [destination=0x000000010f950540]
         @0x00000001173d5982: f8030a3a777700017005
relocInfo@0x00000001173d598a [type=7(external_word) addr=0x00000001173d6190 offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173d598c: 640e
relocInfo@0x00000001173d598c [type=6(runtime_call) addr=0x00000001173d619e offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d598e: 6441
relocInfo@0x00000001173d598e [type=6(runtime_call) addr=0x00000001173d61df offset=65 format=1] | [destination=0x000000010f950540]
         @0x00000001173d5990: f8030a3a777700017005
relocInfo@0x00000001173d5998 [type=7(external_word) addr=0x00000001173d61e4 offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173d599a: 640e
relocInfo@0x00000001173d599a [type=6(runtime_call) addr=0x00000001173d61f2 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d599c: 6439
relocInfo@0x00000001173d599c [type=6(runtime_call) addr=0x00000001173d622b offset=57 format=1] | [destination=0x000000010f950540]
         @0x00000001173d599e: f8030a3a777700017005
relocInfo@0x00000001173d59a6 [type=7(external_word) addr=0x00000001173d6230 offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173d59a8: 640e
relocInfo@0x00000001173d59a8 [type=6(runtime_call) addr=0x00000001173d623e offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d59aa: 6439
relocInfo@0x00000001173d59aa [type=6(runtime_call) addr=0x00000001173d6277 offset=57 format=1] | [destination=0x000000010f950540]
         @0x00000001173d59ac: f8030a3a777700017005
relocInfo@0x00000001173d59b4 [type=7(external_word) addr=0x00000001173d627c offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173d59b6: 640e
relocInfo@0x00000001173d59b6 [type=6(runtime_call) addr=0x00000001173d628a offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d59b8: 6411
relocInfo@0x00000001173d59b8 [type=6(runtime_call) addr=0x00000001173d629b offset=17 format=1] | [destination=0x000000010f950540]
         @0x00000001173d59ba: f8030a3a777700017005
relocInfo@0x00000001173d59c2 [type=7(external_word) addr=0x00000001173d62a0 offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173d59c4: 640e
relocInfo@0x00000001173d59c4 [type=6(runtime_call) addr=0x00000001173d62ae offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d59c6: f29f8006
relocInfo@0x00000001173d59c8 [type=8(internal_word) addr=0x00000001173d62b4 offset=6 data=671] | [target=0x00000001173d6015]
         @0x00000001173d59ca: 6411
relocInfo@0x00000001173d59ca [type=6(runtime_call) addr=0x00000001173d62c5 offset=17 format=1] | [destination=0x000000010f951220]
         @0x00000001173d59cc: 001b
relocInfo@0x00000001173d59cc [type=0(none) addr=0x00000001173d62e0 offset=27]
         @0x00000001173d59ce: 6400
relocInfo@0x00000001173d59ce [type=6(runtime_call) addr=0x00000001173d62e0 offset=0 format=1] | [destination=0x000000010f89b120]
         @0x00000001173d59d0: 640f
relocInfo@0x00000001173d59d0 [type=6(runtime_call) addr=0x00000001173d62ef offset=15 format=1] | [destination=0x000000010f950860]
         @0x00000001173d59d2: 0000
relocInfo@0x00000001173d59d2 [type=0(none) addr=0x00000001173d62ef offset=0]
         @0x00000001173d59d4: 0000
relocInfo@0x00000001173d59d4 [type=0(none) addr=0x00000001173d62ef offset=0]
         @0x00000001173d59d6: 0000
relocInfo@0x00000001173d59d6 [type=0(none) addr=0x00000001173d62ef offset=0]
         @0x00000001173d59d8: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type leaf_type
  context = org.jml.regression.linear.LongLinearRegression
   [nmethod<=klass]org.jml.regression.linear.LongLinearRegression
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 3 entries, 28 bytes):
{
   < 0x00000001173d5aa0, 0x00000001173d61f8 > < 0x00000001173d5aa4, 0x00000001173d6244 > < 0x00000001173d5ff7, 0x00000001173d6290 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 NULL-oop
#1: 0x000000011ed59890 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011ed59890}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
#0: 0x0000000000000000 NULL-oop
#1: 0x0000000226d0e900 'org/jml/regression/linear/LongLinearRegression'
#2: 0x0000000226c40e38 {type array long}
#3: 0x000000010ec8fa60 {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

============================= C2-compiled nmethod ==============================
----------------------- MetaData before Compile_id = 1006 ------------------------
{method}
 - this oop:          0x000000010ec8fa60
 - method holder:     'org/jml/regression/linear/LongLinearRegression'
 - constants:         0x000000010ec8f518 constant pool [71]/operands[5] {0x000000010ec8f518} for 'org/jml/regression/linear/LongLinearRegression' cache=0x000000010ec8fe20
 - access:            0xc1000001  public 
 - name:              'fit'
 - signature:         '([J[J)V'
 - max stack:         9
 - max locals:        16
 - size of params:    3
 - method size:       13
 - highest level:     3
 - vtable index:      5
 - i2i entry:         0x000000010f847e20
 - adapters:          AHE@0x00007f87c7837270: 0xbbb00000 i2c: 0x000000010f8bfee0 c2i: 0x000000010f8bffbf c2iUV: 0x000000010f8bff92 c2iNCI: 0x000000010f8bfffc
 - compiled entry     0x000000010ff57680
 - code size:         155
 - code start:        0x000000010ec8f928
 - code end (excl):   0x000000010ec8f9c3
 - method data:       0x000000010ef00000
 - checked ex length: 0
 - linenumber start:  0x000000010ec8f9c3
 - localvar length:   11
 - localvar start:    0x000000010ec8f9da
 - compiled code: nmethod   2680 1001       3       org.jml.regression.linear.LongLinearRegression::fit (155 bytes)

------------------------ OptoAssembly for Compile_id = 1006 -----------------------
#
#  void ( rawptr:BotPTR )
#
#r018 rsi:rsi   : parm 0: rawptr:BotPTR
# -- Old rsp -- Framesize: 80 --
#r583 rsp+76: in_preserve
#r582 rsp+72: return address
#r581 rsp+68: in_preserve
#r580 rsp+64: saved fp register
#r579 rsp+60: pad2, stack alignment
#r578 rsp+56: pad2, stack alignment
#r577 rsp+52: Fixed slot 1
#r576 rsp+48: Fixed slot 0
#r595 rsp+44: spill
#r594 rsp+40: spill
#r593 rsp+36: spill
#r592 rsp+32: spill
#r591 rsp+28: spill
#r590 rsp+24: spill
#r589 rsp+20: spill
#r588 rsp+16: spill
#r587 rsp+12: spill
#r586 rsp+ 8: spill
#r585 rsp+ 4: spill
#r584 rsp+ 0: spill
#
000     N935: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # breakpoint
        nop 	# 11 bytes pad for loops and calls

010     B1: #	out( B63 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
010     # stack bang (288 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #64	# Create frame

01c     movq    R13, [RSI + #120 (8-bit)]	# ptr
020     movq    RBP, [RSI + #112 (8-bit)]	# ptr
024     movl    R12, [RSI + #64 (8-bit)]	# int
028     movq    RBX, [RSI + #104 (8-bit)]	# ptr
02c     movq    R10, [RSI + #88 (8-bit)]	# long
030     movq    [rsp + #16], R10	# spill
035     movq    R10, [RSI + #72 (8-bit)]	# long
039     movq    [rsp + #24], R10	# spill
03e     movq    RDI, RSI	# spill
041     call_leaf,runtime  OSR_migration_end
        No JVM State Info
        # 
051     testq   R13, R13	# ptr
054     je     B63  P=0.001000 C=-1.000000

05a     B2: #	out( B90 B3 ) <- in( B1 )  Freq: 0.999
05a     movl    R11, [R13 + #8 (8-bit)]	# compressed klass ptr
        nop 	# 2 bytes pad for loops and calls
060     cmpl    R11, narrowklass: precise klass org/jml/regression/linear/LongLinearRegression: 0x00007f87cbf4ea20:Constant:exact *	# compressed klass ptr
067     jne,u   B90  P=0.000001 C=-1.000000

06d     B3: #	out( B4 ) <- in( B2 )  Freq: 0.998999
06d     movq    R9, R13	# spill
070     # checkcastPP of R9

070     B4: #	out( B64 B5 ) <- in( B3 B63 )  Freq: 0.999999
070     testq   RBP, RBP	# ptr
073     je     B64  P=0.001000 C=-1.000000

079     B5: #	out( B90 B6 ) <- in( B4 )  Freq: 0.998999
079     movl    R10, [RBP + #8 (8-bit)]	# compressed klass ptr
        nop 	# 3 bytes pad for loops and calls
080     cmpl    R10, narrowklass: precise klass [J: 0x00007f87cb813890:Constant:exact *	# compressed klass ptr
087     jne,u   B90  P=0.000001 C=-1.000000

08d     B6: #	out( B7 ) <- in( B5 )  Freq: 0.998998
08d     movq    R11, RBP	# spill
090     # checkcastPP of R11

090     B7: #	out( B65 B8 ) <- in( B6 B64 )  Freq: 0.999998
090     testq   RBX, RBX	# ptr
093     je     B65  P=0.001000 C=-1.000000

099     B8: #	out( B90 B9 ) <- in( B7 )  Freq: 0.998998
099     movl    R8, [RBX + #8 (8-bit)]	# compressed klass ptr
        nop 	# 3 bytes pad for loops and calls
0a0     cmpl    R8, narrowklass: precise klass [J: 0x00007f87cb813890:Constant:exact *	# compressed klass ptr
0a7     jne,u   B90  P=0.000001 C=-1.000000

0ad     B9: #	out( B10 ) <- in( B8 )  Freq: 0.998997
0ad     # checkcastPP of RBX

0ad     B10: #	out( B91 B11 ) <- in( B9 B65 )  Freq: 0.999997
0ad     movl    RCX, [R11 + #12 (8-bit)]	# range
0b1     NullCheck R11

0b1     B11: #	out( B92 B12 ) <- in( B10 )  Freq: 0.999996
0b1     movl    RSI, [RBX + #12 (8-bit)]	# range
0b4     NullCheck RBX

0b4     B12: #	out( B72 B13 ) <- in( B11 )  Freq: 0.999995
0b4     # TLS is in R15
0b4     xorl    R14, R14	# int
0b7     cmpl    R12, RCX
        nop 	# 6 bytes pad for loops and calls
0c0     jge     B72  P=0.000001 C=11401499.000000

0c6     B13: #	out( B14 ) <- in( B12 )  Freq: 0.999994
0c6     movl    R10, R12	# spill
0c9     incl    R10	# int
0cc     cmpl    R10, R14
0cf     cmovllt R10, R14	# max
0d3     cmpl    R10, RCX
0d6     cmovlgt R10, RCX	# min

0da     B14: #	out( B66 B15 ) <- in( B13 B17 ) Loop( B14-B17 inner pre of N750) Freq: 1.99998
        nop 	# 6 bytes pad for loops and calls
0e0     cmpl    R12, RCX	# unsigned
0e3     jnb,u   B66  P=0.000001 C=-1.000000

0e9     B15: #	out( B69 B16 ) <- in( B14 )  Freq: 1.99998
0e9     movq    R13, [rsp + #16]	# spill
0ee     addq    R13, [R11 + #16 + R12 << #3]	# long
0f3     cmpl    R12, RSI	# unsigned
0f6     jnb,u   B69  P=0.000001 C=-1.000000

0fc     B16: #	out( B18 B17 ) <- in( B15 )  Freq: 1.99998
0fc     movq    RBP, [rsp + #24]	# spill
101     addq    RBP, [RBX + #16 + R12 << #3]	# long
106     incl    R12	# int
109     cmpl    R12, R10
10c     jge,s   B18	# loop end  P=0.500000 C=11401499.000000

10e     B17: #	out( B14 ) <- in( B16 )  Freq: 0.99999
10e     movq    [rsp + #16], R13	# spill
113     movq    [rsp + #24], RBP	# spill
118     jmp,s   B14

11a     B18: #	out( B29 B19 ) <- in( B16 )  Freq: 0.99999
11a     cmpl    RCX, RSI
11c     movl    R10, RCX	# spill
11f     cmovlgt R10, RSI	# min
123     movl    RDI, R10	# spill
126     addl    RDI, #-7	# int
129     movl    R8, #-2147483648	# int
12f     cmpl    R10, RDI
132     cmovll RDI, R8	# signed, int
136     cmpl    R12, RDI
139     jge     B29  P=0.000001 C=-1.000000

13f     B19: #	out( B73 B20 ) <- in( B18 )  Freq: 0.999989
13f     # castII of R12
        nop 	# 1 bytes pad for loops and calls
140     cmpl    R12, RCX	# unsigned
143     jnb,u   B73  P=0.000001 C=-1.000000

149     B20: #	out( B74 B21 ) <- in( B19 )  Freq: 0.999988
149     cmpl    R12, RSI	# unsigned
14c     jnb,u   B74  P=0.000001 C=-1.000000

152     B21: #	out( B75 B22 ) <- in( B20 )  Freq: 0.999987
152     movl    R10, R12	# spill
155     addl    R10, #7	# int
159     cmpl    R10, RSI	# unsigned
        nop 	# 4 bytes pad for loops and calls
160     jnb,u   B75  P=0.000001 C=-1.000000

166     B22: #	out( B76 B23 ) <- in( B21 )  Freq: 0.999986
166     cmpl    R12, RSI	# unsigned
169     jnb,u   B76  P=0.000001 C=-1.000000

16f     B23: #	out( B77 B24 ) <- in( B22 )  Freq: 0.999985
16f     cmpl    R10, RCX	# unsigned
172     jnb,u   B77  P=0.000001 C=-1.000000

178     B24: #	out( B78 B25 ) <- in( B23 )  Freq: 0.999984
178     cmpl    R12, RCX	# unsigned
        nop 	# 5 bytes pad for loops and calls
180     jnb,u   B78  P=0.000001 C=-1.000000

186     B25: #	out( B26 ) <- in( B24 )  Freq: 0.999983
186     movl    R10, #8000	# int

18c     B26: #	out( B27 ) <- in( B25 B28 ) Loop( B26-B28 ) Freq: 986878
18c     movl    R8, RDI	# spill
18f     subl    R8, R12	# int
192     cmpl    RDI, R12
195     cmovll R8, R14	# signed, int
199     cmpl    R8, #8000	# unsigned
1a0     cmovlnbe R8, R10	# unsigned, int
1a4     addl    R8, R12	# int
        nop 	# 9 bytes pad for loops and calls

1b0     B27: #	out( B27 B28 ) <- in( B26 B27 ) Loop( B27-B27 inner main of N229 strip mined) Freq: 9.73945e+11
1b0     addq    RBP, [RBX + #16 + R12 << #3]	# long
1b5     addq    R13, [R11 + #16 + R12 << #3]	# long
1ba     movslq  RDX, R12	# i2l
1bd     addq    R13, [R11 + #24 + RDX << #3]	# long
1c2     addq    RBP, [RBX + #24 + RDX << #3]	# long
1c7     addq    R13, [R11 + #32 + RDX << #3]	# long
1cc     addq    RBP, [RBX + #32 + RDX << #3]	# long
1d1     addq    R13, [R11 + #40 + RDX << #3]	# long
1d6     addq    RBP, [RBX + #40 + RDX << #3]	# long
1db     addq    R13, [R11 + #48 + RDX << #3]	# long
1e0     addq    RBP, [RBX + #48 + RDX << #3]	# long
1e5     addq    R13, [R11 + #56 + RDX << #3]	# long
1ea     addq    RBP, [RBX + #56 + RDX << #3]	# long
1ef     addq    R13, [R11 + #64 + RDX << #3]	# long
1f4     addq    RBP, [RBX + #64 + RDX << #3]	# long
1f9     addq    R13, [R11 + #72 + RDX << #3]	# long
1fe     addq    RBP, [RBX + #72 + RDX << #3]	# long
203     addl    R12, #8	# int
207     cmpl    R12, R8
20a     jl,s   B27	# loop end  P=0.999999 C=11401499.000000

20c     B28: #	out( B26 B29 ) <- in( B27 )  Freq: 986878
20c     movq    RAX, [R15 + #304 (32-bit)]	# ptr
213     testl   rax, [RAX]	# Safepoint: poll for GC        # org.jml.regression.linear.LongLinearRegression::fit @ bci:51 (line 13) L[0]=R9 L[1]=R11 L[2]=RBX L[3]=R13 L[4]=_ L[5]=RBP L[6]=_ L[7]=R12 L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_
        # OopMap {r11=Oop r9=Oop rbx=Oop off=531/0x213}
215     cmpl    R12, RDI
218     jl     B26  P=0.999999 C=11401499.000000

21e     B29: #	out( B34 B30 ) <- in( B18 B28 )  Freq: 0.999984
        nop 	# 2 bytes pad for loops and calls
220     cmpl    R12, RCX
223     jge,s   B34  P=0.500000 C=-1.000000

225     B30: #	out( B31 ) <- in( B29 )  Freq: 0.499992
225     # castII of R12
        nop 	# 3 bytes pad for loops and calls

228     B31: #	out( B67 B32 ) <- in( B30 B33 ) Loop( B31-B33 inner post of N750) Freq: 0.999982
228     cmpl    R12, RCX	# unsigned
22b     jnb,u   B67  P=0.000001 C=-1.000000

231     B32: #	out( B70 B33 ) <- in( B31 )  Freq: 0.999981
231     addq    R13, [R11 + #16 + R12 << #3]	# long
236     cmpl    R12, RSI	# unsigned
239     jnb,u   B70  P=0.000001 C=-1.000000

23f     B33: #	out( B31 B34 ) <- in( B32 )  Freq: 0.99998
23f     addq    RBP, [RBX + #16 + R12 << #3]	# long
244     incl    R12	# int
247     cmpl    R12, RCX
24a     jl,s   B31	# loop end  P=0.500000 C=11401499.000000

24c     B34: #	out( B89 B35 ) <- in( B72 B33 B29 )  Freq: 0.999983
24c     testl   RCX, RCX	# unsigned
24e     jbe,u   B89  P=0.000001 C=-1.000000

254     B35: #	out( B79 B36 ) <- in( B34 )  Freq: 0.999982
254     movslq  R10, RCX	# i2l
257     movq    RAX, R13	# spill
25a     movq    rdx, 0x8000000000000000	# ldiv
	cmpq    rax, rdx
	jne,s   normal
	xorl    rdx, rdx
	cmpq    R10, -1
	je,s    done
normal: cdqq
	idivq   R10
done:
276     movq    [rsp + #16], RAX	# spill
27b     movq    RAX, RBP	# spill
27e     movq    rdx, 0x8000000000000000	# ldiv
	cmpq    rax, rdx
	jne,s   normal
	xorl    rdx, rdx
	cmpq    R10, -1
	je,s    done
normal: cdqq
	idivq   R10
done:
29a     movq    [rsp + #24], RAX	# spill
29f     movl    R10, RCX	# spill
2a2     decl    R10	# int
2a5     cmpl    R10, RCX	# unsigned
2a8     jnb,u   B79  P=0.000001 C=-1.000000

2ae     B36: #	out( B79 B37 ) <- in( B35 )  Freq: 0.999981
2ae     testl   RSI, RSI	# unsigned
2b0     jbe,u   B79  P=0.000001 C=-1.000000

2b6     B37: #	out( B79 B38 ) <- in( B36 )  Freq: 0.99998
2b6     cmpl    R10, RSI	# unsigned
2b9     jnb,u   B79  P=0.000001 C=-1.000000

2bf     B38: #	out( B39 ) <- in( B37 )  Freq: 0.999979
2bf     movl    R10, RBX	# ptr -> int
2c2     shrl    R10, #3
2c6     andl    R10, #3	# int
2ca     xorl    R13, R13	# long
2cd     movl    R12, #1	# int
2d3     subl    R12, R10	# int
2d6     andl    R12, #3	# int
2da     incl    R12	# int
2dd     cmpl    R12, RCX
2e0     cmovlgt R12, RCX	# min
2e4     xorl    R10, R10	# int
2e7     xorl    RAX, RAX	# long

2e9     B39: #	out( B41 B40 ) <- in( B38 B40 ) Loop( B39-B40 inner pre of N582) Freq: 1.99996
2e9     movq    R8, [RBX + #16 + R10 << #3]	# long
2ee     movq    RDI, [R11 + #16 + R10 << #3]	# long
2f3     subq    R8, [RSP + #24 (32-bit)]	# long
2f8     subq    RDI, [RSP + #16 (32-bit)]	# long
2fd     imulq   R8, RDI	# long
301     imulq   RDI, RDI	# long
305     addq    RAX, R8	# long
308     addq    R13, RDI	# long
30b     movl    RDI, R10	# spill
30e     incl    RDI	# int
310     cmpl    RDI, R12
313     jge,s   B41	# loop end  P=0.500000 C=10165631.000000

315     B40: #	out( B39 ) <- in( B39 )  Freq: 0.999979
315     movl    R10, RDI	# spill
318     jmp,s   B39

31a     B41: #	out( B57 B42 ) <- in( B39 )  Freq: 0.999979
31a     movl    R12, RCX	# spill
31d     addl    R12, #-15	# int
321     cmpl    RDI, R12
324     jge     B57  P=0.000001 C=-1.000000

32a     B42: #	out( B80 B43 ) <- in( B41 )  Freq: 0.999978
32a     cmpl    RDI, RSI	# unsigned
32c     jnb,u   B80  P=0.000001 C=-1.000000

332     B43: #	out( B81 B44 ) <- in( B42 )  Freq: 0.999977
332     cmpl    RDI, RSI	# unsigned
334     jnb,u   B81  P=0.000001 C=-1.000000

33a     B44: #	out( B82 B45 ) <- in( B43 )  Freq: 0.999976
33a     cmpl    RDI, RCX	# unsigned
        nop 	# 4 bytes pad for loops and calls
340     jnb,u   B82  P=0.000001 C=-1.000000

346     B45: #	out( B83 B46 ) <- in( B44 )  Freq: 0.999975
346     cmpl    RDI, RCX	# unsigned
348     jnb,u   B83  P=0.000001 C=-1.000000

34e     B46: #	out( B84 B47 ) <- in( B45 )  Freq: 0.999974
34e     cmpl    RDI, RCX	# unsigned
350     jnb,u   B84  P=0.000001 C=-1.000000

356     B47: #	out( B85 B48 ) <- in( B46 )  Freq: 0.999973
356     addl    R10, #16	# int
        nop 	# 6 bytes pad for loops and calls
360     cmpl    R10, RCX	# unsigned
363     jnb,u   B85  P=0.000001 C=-1.000000

369     B48: #	out( B86 B49 ) <- in( B47 )  Freq: 0.999972
369     cmpl    RDI, RSI	# unsigned
36b     jnb,u   B86  P=0.000001 C=-1.000000

371     B49: #	out( B87 B50 ) <- in( B48 )  Freq: 0.999971
371     cmpl    R10, RSI	# unsigned
374     jnb,u   B87  P=0.000001 C=-1.000000

37a     B50: #	out( B51 ) <- in( B49 )  Freq: 0.99997
37a     replicateL XMM7,[RSP + #24 (32-bit)]
381     replicateL XMM8,[RSP + #16 (32-bit)]
388     movl    RSI, #16000	# int

38d     B51: #	out( B52 ) <- in( B50 B53 ) Loop( B51-B53 ) Freq: 986865
38d     movl    R10, RCX	# spill
390     subl    R10, RDI	# int
393     addl    R10, #-15	# int
397     cmpl    R12, RDI
39a     cmovll R10, R14	# signed, int
39e     cmpl    R10, #16000	# unsigned
3a5     cmovlnbe R10, RSI	# unsigned, int
3a9     addl    R10, RDI	# int
        nop 	# 4 bytes pad for loops and calls

3b0     B52: #	out( B52 B53 ) <- in( B51 B52 ) Loop( B52-B52 inner main of N324 strip mined) Freq: 9.73932e+11
3b0     load_vector XMM0,[RBX + #112 + RDI << #3]
3b6     load_vector XMM9,[RBX + #80 + RDI << #3]
3bc     load_vector XMM1,[RBX + #48 + RDI << #3]
3c2     load_vector XMM2,[RBX + #16 + RDI << #3]
3c8     load_vector XMM3,[R11 + #112 + RDI << #3]
3cf     load_vector XMM4,[R11 + #80 + RDI << #3]
3d6     load_vector XMM5,[R11 + #48 + RDI << #3]
3dd     load_vector XMM6,[R11 + #16 + RDI << #3]
3e4     vpsubq  XMM10,XMM0,XMM7	! sub packedL
3e8     vpsubq  XMM6,XMM6,XMM8	! sub packedL
3ed     vpsubq  XMM5,XMM5,XMM8	! sub packedL
3f2     vpsubq  XMM4,XMM4,XMM8	! sub packedL
3f7     vpsubq  XMM11,XMM3,XMM8	! sub packedL
3fc     vpsubq  XMM12,XMM2,XMM7	! sub packedL
400     vpsubq  XMM13,XMM1,XMM7	! sub packedL
404     vpsubq  XMM2,XMM9,XMM7	! sub packedL
408     vpshufd XMM0,XMM6
	vpmulld XMM0,XMM6,XMM0
	vphaddd XMM0,XMM0,XMM0
	vpmovzxdq XMM0,XMM0
	vpsllq XMM0,XMM0
	vpmuludq XMM1,XMM6,XMM6
	vpaddq XMM0,XMM0,XMM1	! mul packed4L
42f     vector_reduction_long R8,R13,XMM0 ; using XMM1, XMM14 as TEMP
451     vpshufd XMM0,XMM5
	vpmulld XMM0,XMM5,XMM0
	vphaddd XMM0,XMM0,XMM0
	vpmovzxdq XMM0,XMM0
	vpsllq XMM0,XMM0
	vpmuludq XMM1,XMM5,XMM5
	vpaddq XMM0,XMM0,XMM1	! mul packed4L
478     vector_reduction_long R8,R8,XMM0 ; using XMM1, XMM14 as TEMP
49a     vpshufd XMM0,XMM4
	vpmulld XMM0,XMM4,XMM0
	vphaddd XMM0,XMM0,XMM0
	vpmovzxdq XMM0,XMM0
	vpsllq XMM0,XMM0
	vpmuludq XMM1,XMM4,XMM4
	vpaddq XMM0,XMM0,XMM1	! mul packed4L
4c1     vector_reduction_long R8,R8,XMM0 ; using XMM1, XMM14 as TEMP
4e3     vpshufd XMM0,XMM11
	vpmulld XMM0,XMM11,XMM0
	vphaddd XMM0,XMM0,XMM0
	vpmovzxdq XMM0,XMM0
	vpsllq XMM0,XMM0
	vpmuludq XMM1,XMM11,XMM11
	vpaddq XMM0,XMM0,XMM1	! mul packed4L
50c     vector_reduction_long R13,R8,XMM0 ; using XMM1, XMM14 as TEMP
52e     vpshufd XMM0,XMM6
	vpmulld XMM0,XMM12,XMM0
	vphaddd XMM0,XMM0,XMM0
	vpmovzxdq XMM0,XMM0
	vpsllq XMM0,XMM0
	vpmuludq XMM1,XMM12,XMM6
	vpaddq XMM0,XMM0,XMM1	! mul packed4L
555     vector_reduction_long R8,RAX,XMM0 ; using XMM1, XMM6 as TEMP
576     vpshufd XMM0,XMM5
	vpmulld XMM0,XMM13,XMM0
	vphaddd XMM0,XMM0,XMM0
	vpmovzxdq XMM0,XMM0
	vpsllq XMM0,XMM0
	vpmuludq XMM1,XMM13,XMM5
	vpaddq XMM0,XMM0,XMM1	! mul packed4L
59d     vector_reduction_long R8,R8,XMM0 ; using XMM1, XMM5 as TEMP
5be     vpshufd XMM0,XMM4
	vpmulld XMM0,XMM2,XMM0
	vphaddd XMM0,XMM0,XMM0
	vpmovzxdq XMM0,XMM0
	vpsllq XMM0,XMM0
	vpmuludq XMM1,XMM2,XMM4
	vpaddq XMM0,XMM0,XMM1	! mul packed4L
5e5     vector_reduction_long R8,R8,XMM0 ; using XMM1, XMM2 as TEMP
606     vpshufd XMM0,XMM11
	vpmulld XMM0,XMM10,XMM0
	vphaddd XMM0,XMM0,XMM0
	vpmovzxdq XMM0,XMM0
	vpsllq XMM0,XMM0
	vpmuludq XMM1,XMM10,XMM11
	vpaddq XMM0,XMM0,XMM1	! mul packed4L
62f     vector_reduction_long RAX,R8,XMM0 ; using XMM9, XMM3 as TEMP
652     addl    RDI, #16	# int
655     cmpl    RDI, R10
658     jl     B52	# loop end  P=0.999999 C=10165631.000000

65e     B53: #	out( B51 B54 ) <- in( B52 )  Freq: 986865
65e     movq    R8, [R15 + #304 (32-bit)]	# ptr
665     testl   rax, [R8]	# Safepoint: poll for GC        # org.jml.regression.linear.LongLinearRegression::fit @ bci:128 (line 23) L[0]=R9 L[1]=R11 L[2]=RBX L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #16 L[8]=_ L[9]=rsp + #24 L[10]=_ L[11]=R13 L[12]=_ L[13]=RAX L[14]=_ L[15]=RDI
        # OopMap {r11=Oop r9=Oop rbx=Oop off=1637/0x665}
668     cmpl    RDI, R12
66b     jl     B51  P=0.999999 C=10165631.000000

671     B54: #	out( B57 B55 ) <- in( B53 )  Freq: 0.99997
671     movl    R8, RCX	# spill
674     addl    R8, #-3	# int
678     cmpl    RDI, R8
        nop 	# 5 bytes pad for loops and calls
680     jge     B57  P=0.500000 C=-1.000000

686     B55: #	out( B56 ) <- in( B54 )  Freq: 0.499985
686     # castII of RDI
        nop 	# 2 bytes pad for loops and calls

688     B56: #	out( B56 B57 ) <- in( B55 B56 ) Loop( B56-B56 inner post of N1464) Freq: 0.99997
688     load_vector XMM0,[RBX + #16 + RDI << #3]
68e     load_vector XMM1,[R11 + #16 + RDI << #3]
695     vpsubq  XMM0,XMM0,XMM7	! sub packedL
699     vpsubq  XMM1,XMM1,XMM8	! sub packedL
69e     vpshufd XMM6,XMM1
	vpmulld XMM6,XMM1,XMM6
	vphaddd XMM6,XMM6,XMM6
	vpmovzxdq XMM6,XMM6
	vpsllq XMM6,XMM6
	vpmuludq XMM3,XMM1,XMM1
	vpaddq XMM3,XMM6,XMM3	! mul packed4L
6c5     vector_reduction_long R13,R13,XMM3 ; using XMM4, XMM5 as TEMP
6e6     vpshufd XMM4,XMM1
	vpmulld XMM4,XMM0,XMM4
	vphaddd XMM4,XMM4,XMM4
	vpmovzxdq XMM4,XMM4
	vpsllq XMM4,XMM4
	vpmuludq XMM5,XMM0,XMM1
	vpaddq XMM0,XMM4,XMM5	! mul packed4L
70d     vector_reduction_long RAX,RAX,XMM0 ; using XMM3, XMM2 as TEMP
72e     addl    RDI, #4	# int
731     cmpl    RDI, R8
734     jl     B56	# loop end  P=0.500000 C=10165631.000000

73a     B57: #	out( B60 B58 ) <- in( B41 B56 B54 )  Freq: 0.999971
73a     cmpl    RDI, RCX
73c     jge,s   B60  P=0.500000 C=-1.000000

73e     B58: #	out( B59 ) <- in( B57 )  Freq: 0.499985
73e     # castII of RDI
        nop 	# 2 bytes pad for loops and calls

740     B59: #	out( B59 B60 ) <- in( B58 B59 ) Loop( B59-B59 inner post of N582) Freq: 0.999971
740     movq    R10, [RBX + #16 + RDI << #3]	# long
745     movq    R8, [R11 + #16 + RDI << #3]	# long
74a     subq    R10, [RSP + #24 (32-bit)]	# long
74f     subq    R8, [RSP + #16 (32-bit)]	# long
754     imulq   R10, R8	# long
758     imulq   R8, R8	# long
75c     addq    RAX, R10	# long
75f     addq    R13, R8	# long
762     incl    RDI	# int
764     cmpl    RDI, RCX
766     jl,s   B59	# loop end  P=0.500000 C=10165631.000000

768     B60: #	out( B88 B61 ) <- in( B59 B57 )  Freq: 0.999971
768     testq   R13, R13
76b     je     B88  P=0.000001 C=-1.000000

771     B61: #	out( B93 B62 ) <- in( B60 )  Freq: 0.99997
771     movq    rdx, 0x8000000000000000	# ldiv
	cmpq    rax, rdx
	jne,s   normal
	xorl    rdx, rdx
	cmpq    R13, -1
	je,s    done
normal: cdqq
	idivq   R13
done:
78d     movq    [R9 + #24 (8-bit)], RAX	# long ! Field: org/jml/regression/linear/LongLinearRegression.slope
791     NullCheck R9

791     B62: #	out( N935 ) <- in( B61 )  Freq: 0.999969
791     movq    R10, [rsp + #16]	# spill
796     imulq   R10, RAX	# long
79a     movq    R11, [rsp + #24]	# spill
79f     subq    R11, R10	# long
7a2     movq    [R9 + #16 (8-bit)], R11	# long ! Field: org/jml/regression/linear/LongLinearRegression.intercept
7a6     vzeroupper
	addq    rsp, 64	# Destroy frame
	popq    rbp
	cmpq     rsp, poll_offset[r15_thread] 
	ja       #safepoint_stub	# Safepoint: poll for GC

7bb     ret

7bc     B63: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
7bc     xorl    R9, R9	# ptr
        nop 	# 1 bytes pad for loops and calls
7c0     jmp     B4

7c5     B64: #	out( B7 ) <- in( B4 )  Freq: 0.000999986
7c5     xorl    R11, R11	# ptr
7c8     jmp     B7

7cd     B65: #	out( B10 ) <- in( B7 )  Freq: 0.000999985
7cd     xorl    RBX, RBX	# ptr
7cf     jmp     B10

7d4     B66: #	out( B68 ) <- in( B14 )  Freq: 2.02654e-06
7d4     pushq   [rsp + #16]	# 64-bit mem-mem spill
	popq    [rsp + #0]
7dd     movq    RBP, [rsp + #24]	# spill
7e2     jmp,s   B68

7e4     B67: #	out( B68 ) <- in( B31 )  Freq: 1.01326e-06
7e4     movq    [rsp + #0], R13	# spill

7e8     B68: #	out( N935 ) <- in( B67 B66 )  Freq: 3.0398e-06
7e8     movl    RSI, #-28	# int
7ed     movq    [rsp + #8], R9	# spill
7f2     movq    [rsp + #24], RBX	# spill
7f7     movq    [rsp + #40], R11	# spill
7fc     movl    [rsp + #36], R12	# spill
        nop 	# 3 bytes pad for loops and calls
804     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:36 (line 14) L[0]=rsp + #8 L[1]=rsp + #40 L[2]=rsp + #24 L[3]=_ L[4]=_ L[5]=RBP L[6]=_ L[7]=rsp + #36 L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ STK[0]=rsp + #0 STK[1]=_ STK[2]=rsp + #40 STK[3]=rsp + #36
        # OopMap {[8]=Oop [24]=Oop [40]=Oop off=2060/0x80c}
80c     stop	# ShouldNotReachHere

820     B69: #	out( B71 ) <- in( B15 )  Freq: 2.02654e-06
820     movq    R10, [rsp + #24]	# spill
825     movq    [rsp + #0], R10	# spill
829     movq    RBP, R13	# spill
82c     jmp,s   B71

82e     B70: #	out( B71 ) <- in( B32 )  Freq: 1.01326e-06
82e     movq    [rsp + #0], RBP	# spill
832     movq    RBP, R13	# spill

835     B71: #	out( N935 ) <- in( B70 B69 )  Freq: 3.0398e-06
835     movl    RSI, #-28	# int
83a     movq    [rsp + #8], R9	# spill
83f     movq    [rsp + #16], R11	# spill
844     movq    [rsp + #40], RBX	# spill
849     movl    [rsp + #36], R12	# spill
        nop 	# 2 bytes pad for loops and calls
850     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:44 (line 15) L[0]=rsp + #8 L[1]=rsp + #16 L[2]=rsp + #40 L[3]=RBP L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #36 L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ STK[0]=rsp + #0 STK[1]=_ STK[2]=rsp + #40 STK[3]=rsp + #36
        # OopMap {[8]=Oop [16]=Oop [40]=Oop off=2136/0x858}
858     stop	# ShouldNotReachHere

86c     B72: #	out( B34 ) <- in( B12 )  Freq: 1.01327e-06
86c     movq    R13, [rsp + #16]	# spill
871     movq    RBP, [rsp + #24]	# spill
876     jmp     B34

87b     B73: #	out( N935 ) <- in( B19 )  Freq: 1.01327e-06
87b     stop	# ShouldNotReachHere

88f     B74: #	out( N935 ) <- in( B20 )  Freq: 1.01327e-06
88f     stop	# ShouldNotReachHere

8a3     B75: #	out( N935 ) <- in( B21 )  Freq: 1.01327e-06
8a3     stop	# ShouldNotReachHere

8b7     B76: #	out( N935 ) <- in( B22 )  Freq: 1.01326e-06
8b7     stop	# ShouldNotReachHere

8cb     B77: #	out( N935 ) <- in( B23 )  Freq: 1.01326e-06
8cb     stop	# ShouldNotReachHere

8df     B78: #	out( N935 ) <- in( B24 )  Freq: 1.01326e-06
8df     stop	# ShouldNotReachHere

8f3     B79: #	out( N935 ) <- in( B37 B36 B35 )  Freq: 3.0265e-06
8f3     movl    RSI, #-138	# int
8f8     movq    RBP, R9	# spill
8fb     movq    [rsp + #0], R11	# spill
8ff     movq    [rsp + #8], RBX	# spill
904     movl    [rsp + #32], RCX	# spill
908     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:82 (line 23) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #16 L[8]=_ L[9]=rsp + #24 L[10]=_ L[11]=#0 L[12]=_ L[13]=#0 L[14]=_ L[15]=#0 STK[0]=#0 STK[1]=rsp + #32
        # OopMap {rbp=Oop [0]=Oop [8]=Oop off=2320/0x910}
910     stop	# ShouldNotReachHere

924     B80: #	out( N935 ) <- in( B42 )  Freq: 1.01326e-06
924     stop	# ShouldNotReachHere

938     B81: #	out( N935 ) <- in( B43 )  Freq: 1.01326e-06
938     stop	# ShouldNotReachHere

94c     B82: #	out( N935 ) <- in( B44 )  Freq: 1.01325e-06
94c     stop	# ShouldNotReachHere

960     B83: #	out( N935 ) <- in( B45 )  Freq: 1.01325e-06
960     stop	# ShouldNotReachHere

974     B84: #	out( N935 ) <- in( B46 )  Freq: 1.01325e-06
974     stop	# ShouldNotReachHere

988     B85: #	out( N935 ) <- in( B47 )  Freq: 1.01325e-06
988     stop	# ShouldNotReachHere

99c     B86: #	out( N935 ) <- in( B48 )  Freq: 1.01325e-06
99c     stop	# ShouldNotReachHere

9b0     B87: #	out( N935 ) <- in( B49 )  Freq: 1.01325e-06
9b0     stop	# ShouldNotReachHere

9c4     B88: #	out( N935 ) <- in( B60 )  Freq: 1.01325e-06
9c4     movl    RSI, #-122	# int
9c9     movq    RBP, RAX	# spill
9cc     call,static  wrapper for: uncommon_trap(reason='div0_check' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:136 (line 29) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ STK[0]=_ STK[1]=RBP STK[2]=_ STK[3]=#0 STK[4]=_
        # OopMap {off=2516/0x9d4}
9d4     stop	# ShouldNotReachHere

9e8     B89: #	out( N935 ) <- in( B34 )  Freq: 9.99983e-07
9e8     movl    RSI, #-122	# int
9ed     movq    RBP, R13	# spill
9f0     call,static  wrapper for: uncommon_trap(reason='div0_check' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:58 (line 18) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ STK[0]=RBP STK[1]=_ STK[2]=#0 STK[3]=_
        # OopMap {off=2552/0x9f8}
9f8     stop	# ShouldNotReachHere

a0c     B90: #	out( N935 ) <- in( B2 B5 B8 )  Freq: 2.997e-06
a0c     movl    RSI, #-115	# int
a11     movq    [rsp + #0], RBX	# spill
a15     pushq   [rsp + #16]	# 64-bit mem-mem spill
	popq    [rsp + #8]
a1f     movq    R10, [rsp + #24]	# spill
a24     movq    [rsp + #16], R10	# spill
a29     movl    [rsp + #24], R12	# spill
a2e     movq    [rsp + #32], R13	# spill
        nop 	# 1 bytes pad for loops and calls
a34     call,static  wrapper for: uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:25 (line 13) L[0]=rsp + #32 L[1]=RBP L[2]=rsp + #0 L[3]=rsp + #8 L[4]=_ L[5]=rsp + #16 L[6]=_ L[7]=rsp + #24 L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_
        # OopMap {rbp=Oop [0]=Oop [32]=Oop off=2620/0xa3c}
a3c     stop	# ShouldNotReachHere

a50     B91: #	out( N935 ) <- in( B10 )  Freq: 1.01328e-06
a50     movl    RSI, #-138	# int
a55     movq    RBP, R9	# spill
a58     movq    [rsp + #0], R11	# spill
a5c     movq    [rsp + #8], RBX	# spill
a61     movl    [rsp + #32], R12	# spill
        nop 	# 2 bytes pad for loops and calls
a68     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:25 (line 13) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=rsp + #16 L[4]=_ L[5]=rsp + #24 L[6]=_ L[7]=rsp + #32 L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_
        # OopMap {rbp=Oop [0]=Oop [8]=Oop off=2672/0xa70}
a70     stop	# ShouldNotReachHere

a84     B92: #	out( N935 ) <- in( B11 )  Freq: 1.01327e-06
a84     movl    RSI, #-66	# int
a89     movq    RBP, R9	# spill
a8c     movq    [rsp + #0], R11	# spill
a90     movq    [rsp + #8], RBX	# spill
a95     movl    [rsp + #32], R12	# spill
        nop 	# 2 bytes pad for loops and calls
a9c     call,static  wrapper for: uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:25 (line 13) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=rsp + #16 L[4]=_ L[5]=rsp + #24 L[6]=_ L[7]=rsp + #32 L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_
        # OopMap {rbp=Oop [0]=Oop [8]=Oop off=2724/0xaa4}
aa4     stop	# ShouldNotReachHere

ab8     B93: #	out( N935 ) <- in( B61 )  Freq: 1.01325e-06
ab8     movl    RSI, #-10	# int
abd     movq    RBP, RAX	# spill
ac0     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:137 (line 29) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ STK[0]=#NULL STK[1]=RBP STK[2]=_
        # OopMap {off=2760/0xac8}
ac8     stop	# ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    2689 1006 %     4       org.jml.regression.linear.LongLinearRegression::fit @ 25 (155 bytes)
 total in heap  [0x00000001173d6810,0x00000001173d7cf8] = 5352
 relocation     [0x00000001173d6988,0x00000001173d6ad0] = 328
 main code      [0x00000001173d6ae0,0x00000001173d75e0] = 2816
 stub code      [0x00000001173d75e0,0x00000001173d75f8] = 24
 oops           [0x00000001173d75f8,0x00000001173d7600] = 8
 metadata       [0x00000001173d7600,0x00000001173d7618] = 24
 scopes data    [0x00000001173d7618,0x00000001173d7840] = 552
 scopes pcs     [0x00000001173d7840,0x00000001173d7cd0] = 1168
 dependencies   [0x00000001173d7cd0,0x00000001173d7cd8] = 8
 nul chk table  [0x00000001173d7cd8,0x00000001173d7cf8] = 32

[Constant Pool (empty)]

[MachCode]
[Verified Entry Point]
  # {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
 ;; N935: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00000001173d6ae0: ;   {runtime_call os::breakpoint()}
  0x00000001173d6ae0: e8bb 14aa | f290 9090 | 9090 9090 | 9090 9090 
 ;; B1: #	out( B63 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00000001173d6af0: 8984 2400 | a0fe ff55 | 4883 ec40 | 4c8b 6e78 | 488b 6e70 | 448b 6640 | 488b 5e68 | 4c8b 5658 
  0x00000001173d6b10: 4c89 5424 | 104c 8b56 | 484c 8954 | 2418 488b | fec5 f877 | 49ba a010 | f809 0100 | 0000 41ff 
  0x00000001173d6b30: d24d 85ed | 0f84 6207 | 0000 458b | 5d08 9090 

  0x00000001173d6b40: ;   {metadata('org/jml/regression/linear/LongLinearRegression')}
  0x00000001173d6b40: 4181 fb20 | 1dda 440f | 859f 0900 | 004d 8bcd 
 ;; B4: #	out( B64 B5 ) <- in( B3 B63 )  Freq: 0.999999
  0x00000001173d6b50: 4885 ed0f | 844c 0700 | 0044 8b55 | 0890 9090 

  0x00000001173d6b60: ;   {metadata({type array long})}
  0x00000001173d6b60: 4181 fac7 | 81d8 440f | 857f 0900 | 004c 8bdd 
 ;; B7: #	out( B65 B8 ) <- in( B6 B64 )  Freq: 0.999998
  0x00000001173d6b70: 4885 db0f | 8434 0700 | 0044 8b43 | 0890 9090 

  0x00000001173d6b80: ;   {metadata({type array long})}
  0x00000001173d6b80: 4181 f8c7 | 81d8 440f | 855f 0900 

  0x00000001173d6b8c: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@25 (line 13)
  0x00000001173d6b8c: 0041 8b4b 

  0x00000001173d6b90: ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@28 (line 13)
  0x00000001173d6b90: 0c8b 730c 
 ;; B12: #	out( B72 B13 ) <- in( B11 )  Freq: 0.999995
  0x00000001173d6b94: 4533 f644 | 3be1 9090 | 9090 9090 | 0f8d a607 

  0x00000001173d6ba4: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
  0x00000001173d6ba4: 0000 458b | d441 ffc2 | 453b d645 | 0f4c d644 | 3bd1 440f 

  0x00000001173d6bb8: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
  0x00000001173d6bb8: 4fd1 9090 | 9090 9090 | 443b e10f | 83eb 0600 | 004c 8b6c | 2410 4f03 

  0x00000001173d6bd0: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@37 (line 14)
  0x00000001173d6bd0: 6ce3 1044 | 3be6 0f83 | 2407 0000 
 ;; B16: #	out( B18 B17 ) <- in( B15 )  Freq: 1.99998
  0x00000001173d6bdc: 488b 6c24 | 184a 036c 

  0x00000001173d6be4: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@45 (line 15)
  0x00000001173d6be4: e310 41ff 

  0x00000001173d6be8: ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@48 (line 13)
  0x00000001173d6be8: c445 3be2 

  0x00000001173d6bec: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
  0x00000001173d6bec: 7d0c 4c89 | 6c24 1048 | 896c 2418 | ebc0 3bce | 448b d144 | 0f4f d641 | 8bfa 83c7 | f941 b800 
  0x00000001173d6c0c: 0000 8044 | 3bd7 410f | 4cf8 443b | e70f 8ddf | 0000 0090 | 443b e10f | 8332 0700 | 0044 3be6 
  0x00000001173d6c2c: 0f83 3d07 | 0000 458b | d441 83c2 | 0744 3bd6 | 9090 9090 | 0f83 3d07 | 0000 443b | e60f 8348 
  0x00000001173d6c4c: 0700 0044 | 3bd1 0f83 | 5307 0000 
 ;; B24: #	out( B78 B25 ) <- in( B23 )  Freq: 0.999984
  0x00000001173d6c58: 443b e190 | 9090 9090 | 0f83 5907 

  0x00000001173d6c64: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
  0x00000001173d6c64: 0000 41ba | 401f 0000 
 ;; B26: #	out( B27 ) <- in( B25 B28 ) Loop( B26-B28 ) Freq: 986878
  0x00000001173d6c6c: 448b c745 | 2bc4 413b | fc45 0f4c | c641 81f8 | 401f 0000 | 450f 47c2 | 4503 c490 | 9090 9090 
  0x00000001173d6c8c: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@36 (line 14)
  0x00000001173d6c8c: 9090 9090 
 ;; B27: #	out( B27 B28 ) <- in( B26 B27 ) Loop( B27-B27 inner main of N229 strip mined) Freq: 9.73945e+11
  0x00000001173d6c90: 4a03 6ce3 | 104f 036c | e310 4963 | d44d 036c | d318 4803 | 6cd3 184d | 036c d320 | 4803 6cd3 
  0x00000001173d6cb0: 204d 036c | d328 4803 | 6cd3 284d | 036c d330 | 4803 6cd3 | 304d 036c | d338 4803 | 6cd3 384d 
  0x00000001173d6cd0: 036c d340 | 4803 6cd3 | 404d 036c 

  0x00000001173d6cdc: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@37 (line 14)
  0x00000001173d6cdc: d348 4803 

  0x00000001173d6ce0: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@45 (line 15)
  0x00000001173d6ce0: 6cd3 4841 

  0x00000001173d6ce4: ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@48 (line 13)
  0x00000001173d6ce4: 83c4 0845 

  0x00000001173d6ce8: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
  0x00000001173d6ce8: 3be0 7ca4 
 ;; B28: #	out( B26 B29 ) <- in( B27 )  Freq: 986878
  0x00000001173d6cec: 498b 8730 

  0x00000001173d6cf0: ; ImmutableOopMap {r11=Oop r9=Oop rbx=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
                      ;   {poll}
  0x00000001173d6cf0: 0100 0085 

  0x00000001173d6cf4: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
  0x00000001173d6cf4: 0044 3be7 | 0f8c 6eff | ffff 9090 | 443b e17d 

  0x00000001173d6d04: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
  0x00000001173d6d04: 2790 9090 
 ;; B31: #	out( B67 B32 ) <- in( B30 B33 ) Loop( B31-B33 inner post of N750) Freq: 0.999982
  0x00000001173d6d08: 443b e10f | 83b3 0500 | 004f 036c 

  0x00000001173d6d14: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@37 (line 14)
  0x00000001173d6d14: e310 443b | e60f 83ef | 0500 004a 

  0x00000001173d6d20: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@45 (line 15)
  0x00000001173d6d20: 036c e310 

  0x00000001173d6d24: ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@48 (line 13)
  0x00000001173d6d24: 41ff c444 

  0x00000001173d6d28: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
  0x00000001173d6d28: 3be1 7cdc 
 ;; B34: #	out( B89 B35 ) <- in( B72 B33 B29 )  Freq: 0.999983
  0x00000001173d6d2c: 85c9 0f86 

  0x00000001173d6d30: ;*ldiv {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@58 (line 18)
  0x00000001173d6d30: 9407 0000 
 ;; B35: #	out( B79 B36 ) <- in( B34 )  Freq: 0.999982
  0x00000001173d6d34: ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@57 (line 18)
  0x00000001173d6d34: 4c63 d149 | 8bc5 48ba | 0000 0000 | 0000 0080 | 4839 d075 | 0833 d249 | 83fa ff74 | 0548 9949 
  0x00000001173d6d54: ;*ldiv {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@58 (line 18)
  0x00000001173d6d54: f7fa 4889 | 4424 1048 | 8bc5 48ba | 0000 0000 | 0000 0080 | 4839 d075 | 0833 d249 | 83fa ff74 
  0x00000001173d6d74: 0548 9949 

  0x00000001173d6d78: ;*ldiv {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@66 (line 19)
  0x00000001173d6d78: f7fa 4889 | 4424 1844 | 8bd1 41ff | ca44 3bd1 | 0f83 4506 | 0000 85f6 | 0f86 3d06 | 0000 443b 
  0x00000001173d6d98: d60f 8334 | 0600 0044 | 8bd3 41c1 | ea03 4183 | e203 4533 | ed41 bc01 | 0000 0045 | 2be2 4183 
  0x00000001173d6db8: e403 41ff | c444 3be1 | 440f 4fe1 | 4533 d233 

  0x00000001173d6dc8: ;*lload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@85 (line 24)
  0x00000001173d6dc8: c04e 8b44 | d310 4b8b | 7cd3 104c | 2b44 2418 | 482b 7c24 

  0x00000001173d6ddc: ;*lsub {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
  0x00000001173d6ddc: 104c 0faf | c748 0faf 

  0x00000001173d6de4: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
  0x00000001173d6de4: ff49 03c0 

  0x00000001173d6de8: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
  0x00000001173d6de8: 4c03 ef41 

  0x00000001173d6dec: ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
  0x00000001173d6dec: 8bfa ffc7 | 413b fc7d 

  0x00000001173d6df4: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
  0x00000001173d6df4: 0544 8bd7 | ebcf 448b | e141 83c4 | f141 3bfc | 0f8d 1004 | 0000 3bfe | 0f83 f205 | 0000 3bfe 
  0x00000001173d6e14: 0f83 fe05 | 0000 3bf9 | 9090 9090 | 0f83 0606 | 0000 3bf9 | 0f83 1206 | 0000 3bf9 | 0f83 1e06 
  0x00000001173d6e34: 0000 4183 | c210 9090 | 9090 9090 | 443b d10f | 831f 0600 | 003b fe0f | 832b 0600 | 0044 3bd6 
  0x00000001173d6e54: 0f83 3606 

  0x00000001173d6e58: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
  0x00000001173d6e58: 0000 c4e2 | 7d59 7c24 | 18c4 627d | 5944 2410 | be80 3e00 | 0044 8bd1 | 442b d741 | 83c2 f144 
  0x00000001173d6e78: 3be7 450f | 4cd6 4181 | fa80 3e00 | 0044 0f47 | d644 03d7 

  0x00000001173d6e8c: ;*lload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@85 (line 24)
  0x00000001173d6e8c: 9090 9090 
 ;; B52: #	out( B52 B53 ) <- in( B51 B52 ) Loop( B52-B52 inner main of N324 strip mined) Freq: 9.73932e+11
  0x00000001173d6e90: c5fe 6f44 | fb70 c57e | 6f4c fb50 | c5fe 6f4c | fb30 c5fe | 6f54 fb10 | c4c1 7e6f | 5cfb 70c4 
  0x00000001173d6eb0: c17e 6f64 | fb50 c4c1 | 7e6f 6cfb | 30c4 c17e | 6f74 fb10 | c57d fbd7 | c4c1 4dfb | f0c4 c155 
  0x00000001173d6ed0: fbe8 c4c1 | 5dfb e0c4 

  0x00000001173d6ed8: ;*lsub {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
  0x00000001173d6ed8: 4165 fbd8 | c56d fbe7 | c575 fbef | c5b5 fbd7 | c5fd 70c6 | b1c4 e24d | 40c0 c4e3 | 7d39 c101 
  0x00000001173d6ef8: c4e2 7d02 | c1c4 e27d | 35c0 c5fd | 73f0 20c5 | cdf4 cec5 | fdd4 c1c4 | e37d 39c1 | 01c5 f1d4 
  0x00000001173d6f18: c8c5 7970 | f10e c509 | d4f1 c4c1 | f96e cdc4 | c171 d4ce | c4c1 f97e | c8c5 fd70 | c5b1 c4e2 
  0x00000001173d6f38: 5540 c0c4 | e37d 39c1 | 01c4 e27d | 02c1 c4e2 | 7d35 c0c5 | fd73 f020 | c5d5 f4cd | c5fd d4c1 
  0x00000001173d6f58: c4e3 7d39 | c101 c5f1 | d4c8 c579 | 70f1 0ec5 | 09d4 f1c4 | c1f9 6ec8 | c4c1 71d4 | cec4 c1f9 
  0x00000001173d6f78: 7ec8 c5fd | 70c4 b1c4 | e25d 40c0 | c4e3 7d39 | c101 c4e2 | 7d02 c1c4 | e27d 35c0 | c5fd 73f0 
  0x00000001173d6f98: 20c5 ddf4 | ccc5 fdd4 | c1c4 e37d | 39c1 01c5 | f1d4 c8c5 | 7970 f10e | c509 d4f1 | c4c1 f96e 
  0x00000001173d6fb8: c8c4 c171 | d4ce c4c1 | f97e c8c4 | c17d 70c3 | b1c4 e225 | 40c0 c4e3 | 7d39 c101 | c4e2 7d02 
  0x00000001173d6fd8: c1c4 e27d | 35c0 c5fd | 73f0 20c4 | c125 f4cb | c5fd d4c1 | c4e3 7d39 | c101 c5f1 | d4c8 c579 
  0x00000001173d6ff8: 70f1 0ec5 | 09d4 f1c4 | c1f9 6ec8 | c4c1 71d4 | cec4 c1f9 

  0x00000001173d700c: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
  0x00000001173d700c: 7ecd c5fd | 70c6 b1c4 | e21d 40c0 | c4e3 7d39 | c101 c4e2 | 7d02 c1c4 | e27d 35c0 | c5fd 73f0 
  0x00000001173d702c: 20c5 9df4 | cec5 fdd4 | c1c4 e37d | 39c1 01c5 | f1d4 c8c5 | f970 f10e | c5c9 d4f1 | c4e1 f96e 
  0x00000001173d704c: c8c5 f1d4 | cec4 c1f9 | 7ec8 c5fd | 70c5 b1c4 | e215 40c0 | c4e3 7d39 | c101 c4e2 | 7d02 c1c4 
  0x00000001173d706c: e27d 35c0 | c5fd 73f0 | 20c5 95f4 | cdc5 fdd4 | c1c4 e37d | 39c1 01c5 | f1d4 c8c5 | f970 e90e 
  0x00000001173d708c: c5d1 d4e9 | c4c1 f96e | c8c5 f1d4 | cdc4 c1f9 | 7ec8 c5fd | 70c4 b1c4 | e26d 40c0 | c4e3 7d39 
  0x00000001173d70ac: c101 c4e2 | 7d02 c1c4 | e27d 35c0 | c5fd 73f0 | 20c5 edf4 | ccc5 fdd4 | c1c4 e37d | 39c1 01c5 
  0x00000001173d70cc: f1d4 c8c5 | f970 d10e | c5e9 d4d1 | c4c1 f96e | c8c5 f1d4 | cac4 c1f9 | 7ec8 c4c1 | 7d70 c3b1 
  0x00000001173d70ec: c4e2 2d40 

  0x00000001173d70f0: ;   {no_reloc}
  0x00000001173d70f0: c0c4 e37d | 39c1 01c4 | e27d 02c1 | c4e2 7d35 | c0c5 fd73 | f020 c4c1 | 2df4 cbc5 | fdd4 c1c4 
  0x00000001173d7110: c37d 39c1 | 01c5 31d4 | c8c4 c179 | 70d9 0ec4 | c161 d4d9 | c441 f96e | c8c5 31d4 | cbc4 61f9 
  0x00000001173d7130: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
  0x00000001173d7130: 7ec8 83c7 

  0x00000001173d7134: ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
  0x00000001173d7134: 1041 3bfa | 0f8c 52fd 

  0x00000001173d713c: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
  0x00000001173d713c: ffff 4d8b | 8730 0100 

  0x00000001173d7144: ; ImmutableOopMap {r11=Oop r9=Oop rbx=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
                      ;   {poll}
  0x00000001173d7144: 0041 8500 | 413b fc0f | 8c1c fdff | ff44 8bc1 | 4183 c0fd | 413b f890 | 9090 9090 | 0f8d b400 
  0x00000001173d7164: ;*lload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@85 (line 24)
  0x00000001173d7164: 0000 9090 
 ;; B56: #	out( B56 B57 ) <- in( B55 B56 ) Loop( B56-B56 inner post of N1464) Freq: 0.99997
  0x00000001173d7168: c5fe 6f44 | fb10 c4c1 | 7e6f 4cfb | 10c5 fdfb | c7c4 c175 

  0x00000001173d717c: ;*lsub {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
  0x00000001173d717c: fbc8 c5fd | 70f1 b1c4 | e275 40f6 | c4e3 7d39 | f301 c4e2 | 4d02 f3c4 | e27d 35f6 | c5cd 73f6 
  0x00000001173d719c: 20c5 f5f4 | d9c5 cdd4 | dbc4 e37d | 39dc 01c5 | d9d4 e3c5 | f970 ec0e | c5d1 d4ec | c4c1 f96e 
  0x00000001173d71bc: e5c5 d9d4 | e5c4 c1f9 

  0x00000001173d71c4: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
  0x00000001173d71c4: 7ee5 c5fd | 70e1 b1c4 | e27d 40e4 | c4e3 7d39 | e501 c4e2 | 5d02 e5c4 | e27d 35e4 | c5dd 73f4 
  0x00000001173d71e4: 20c5 fdf4 | e9c5 ddd4 | c5c4 e37d | 39c3 01c5 | e1d4 d8c5 | f970 d30e | c5e9 d4d3 | c4e1 f96e 
  0x00000001173d7204: d8c5 e1d4 | dac4 e1f9 

  0x00000001173d720c: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
  0x00000001173d720c: 7ed8 83c7 

  0x00000001173d7210: ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
  0x00000001173d7210: 0441 3bf8 | 0f8c 4eff 

  0x00000001173d7218: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
  0x00000001173d7218: ffff 3bf9 

  0x00000001173d721c: ;*lload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@85 (line 24)
  0x00000001173d721c: 7d2a 9090 
 ;; B59: #	out( B59 B60 ) <- in( B58 B59 ) Loop( B59-B59 inner post of N582) Freq: 0.999971
  0x00000001173d7220: 4c8b 54fb | 104d 8b44 | fb10 4c2b | 5424 184c 

  0x00000001173d7230: ;*lsub {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
  0x00000001173d7230: 2b44 38.250 ms/op
2410 | 4d0f afd0 | 4d0f afc0 

  0x00000001173d723c: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
  0x00000001173d723c: 4903 c24d 

  0x00000001173d7240: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
  0x00000001173d7240: 03e8 ffc7 

  0x00000001173d7244: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
  0x00000001173d7244: 3bf9 7cd8 
 ;; B60: #	out( B88 B61 ) <- in( B59 B57 )  Freq: 0.999971
  0x00000001173d7248: 4d85 ed0f | 8453 0200 | 0048 ba00 | 0000 0000 | 0000 # Warmup Iteration   4: 8048 | 39d0 7508 | 33d2 4983 | fdff 7405 
  0x00000001173d7268: 4899 49f7 

  0x00000001173d726c: ;*ldiv {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
  0x00000001173d726c: fd49 8941 

  0x00000001173d7270: ;*putfield slope {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)
  0x00000001173d7270: 184c 8b54 | 2410 4c0f | afd0 4c8b | 5c24 184d | 2bda 4d89 

  0x00000001173d7284: ;*putfield intercept {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@151 (line 30)
  0x00000001173d7284: 5910 c5f8 | 7748 83c4 

  0x00000001173d728c: ;   {poll_return}
  0x00000001173d728c: 405d 493b | a728 0100 | 000f 8721 | 0300 00c3 
 ;; B63: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
  0x00000001173d729c: 4533 c990 | e9ab f8ff | ff45 33db | e9c3 f8ff | ff33 dbe9 | d9f8 ffff 
 ;; B66: #	out( B68 ) <- in( B14 )  Freq: 2.02654e-06
  0x00000001173d72b4: 48ff 7424 | 1048 8f04 | 2448 8b6c | 2418 eb04 
 ;; B67: #	out( B68 ) <- in( B31 )  Freq: 1.01326e-06
  0x00000001173d72c4: 4c89 2c24 
 ;; B68: #	out( N935 ) <- in( B67 B66 )  Freq: 3.0398e-06
  0x00000001173d72c8: bee4 ffff | ff4c 894c | 2408 4889 | 5c24 184c | 895c 2428 | 4489 6424 | 2490 9090 

  0x00000001173d72e4: ;   {runtime_call UncommonTrapBlob}
  0x00000001173d72e4: c5f8 77e8 

  0x00000001173d72e8: ; ImmutableOopMap {[8]=Oop [24]=Oop [40]=Oop }
                      ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@36 (line 14)
  0x00000001173d72e8: 5492 57f8 

  0x00000001173d72ec: ;   {external_word}
  0x00000001173d72ec: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173d72f8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d72f8: e4f0 e851 

  0x00000001173d72fc: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@36 (line 14)
  0x00000001173d72fc: 9c90 f2f4 
 ;; B69: #	out( B71 ) <- in( B15 )  Freq: 2.02654e-06
  0x00000001173d7300: 4c8b 5424 | 184c 8914 | 2449 8bed | eb07 4889 | 2c24 498b | edbe e4ff | ffff 4c89 | 4c24 084c 
  0x00000001173d7320: 895c 2410 | 4889 5c24 | 2844 8964 | 2424 9090 

  0x00000001173d7330: ;   {runtime_call UncommonTrapBlob}
  0x00000001173d7330: c5f8 77e8 

  0x00000001173d7334: ; ImmutableOopMap {[8]=Oop [16]=Oop [40]=Oop }
                      ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
  0x00000001173d7334: 0892 57f8 

  0x00000001173d7338: ;   {external_word}
  0x00000001173d7338: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173d7344: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d7344: e4f0 e805 

  0x00000001173d7348: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
  0x00000001173d7348: 9c90 f2f4 
 ;; B72: #	out( B34 ) <- in( B12 )  Freq: 1.01327e-06
  0x00000001173d734c: 4c8b 6c24 | 1048 8b6c | 2418 e9d1 

  0x00000001173d7358: ;   {external_word}
  0x00000001173d7358: f9ff ff48 | bfa6 2d42 | 0a01 0000 | 0048 83e4 

  0x00000001173d7368: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d7368: f0e8 e29b 

  0x00000001173d736c: ;   {external_word}
  0x00000001173d736c: 90f2 f448 | bfa6 2d42 | 0a01 0000 | 0048 83e4 

  0x00000001173d737c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d737c: f0e8 ce9b 

  0x00000001173d7380: ;   {external_word}
  0x00000001173d7380: 90f2 f448 | bf31 2542 | 0a01 0000 | 0048 83e4 

  0x00000001173d7390: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d7390: f0e8 ba9b 

  0x00000001173d7394: ;   {external_word}
  0x00000001173d7394: 90f2 f448 | bf31 2542 | 0a01 0000 | 0048 83e4 

  0x00000001173d73a4: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d73a4: f0e8 a69b 

  0x00000001173d73a8: ;   {external_word}
  0x00000001173d73a8: 90f2 f448 | bf31 2542 | 0a01 0000 | 0048 83e4 

  0x00000001173d73b8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d73b8: f0e8 929b 

  0x00000001173d73bc: ;   {external_word}
  0x00000001173d73bc: 90f2 f448 | bf31 2542 | 0a01 0000 | 0048 83e4 

  0x00000001173d73cc: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d73cc: f0e8 7e9b 

  0x00000001173d73d0: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
  0x00000001173d73d0: 90f2 f4be | 76ff ffff | 498b e94c | 891c 2448 | 895c 2408 | 894c 2420 

  0x00000001173d73e8: ;   {runtime_call UncommonTrapBlob}
  0x00000001173d73e8: c5f8 77e8 

  0x00000001173d73ec: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop }
                      ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
  0x00000001173d73ec: 5091 57f8 

  0x00000001173d73f0: ;   {external_word}
  0x00000001173d73f0: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173d73fc: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d73fc: e4f0 e84d 

  0x00000001173d7400: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
  0x00000001173d7400: 9b90 f2f4 
 ;; B80: #	out( N935 ) <- in( B42 )  Freq: 1.01326e-06
  0x00000001173d7404: ;   {external_word}
  0x00000001173d7404: 48bf 3125 | 420a 0100 | 0000 4883 

  0x00000001173d7410: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d7410: e4f0 e839 | 9b90 f2f4 
 ;; B81: #	out( N935 ) <- in( B43 )  Freq: 1.01326e-06
  0x00000001173d7418: ;   {external_word}
  0x00000001173d7418: 48bf 3125 | 420a 0100 | 0000 4883 

  0x00000001173d7424: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d7424: e4f0 e825 | 9b90 f2f4 
 ;; B82: #	out( N935 ) <- in( B44 )  Freq: 1.01325e-06
  0x00000001173d742c: ;   {external_word}
  0x00000001173d742c: 48bf 3125 | 420a 0100 | 0000 4883 

  0x00000001173d7438: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d7438: e4f0 e811 | 9b90 f2f4 
 ;; B83: #	out( N935 ) <- in( B45 )  Freq: 1.01325e-06
  0x00000001173d7440: ;   {external_word}
  0x00000001173d7440: 48bf 3125 | 420a 0100 | 0000 4883 

  0x00000001173d744c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d744c: e4f0 e8fd | 9a90 f2f4 
 ;; B84: #	out( N935 ) <- in( B46 )  Freq: 1.01325e-06
  0x00000001173d7454: ;   {external_word}
  0x00000001173d7454: 48bf 3125 | 420a 0100 | 0000 4883 

  0x00000001173d7460: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d7460: e4f0 e8e9 | 9a90 f2f4 
 ;; B85: #	out( N935 ) <- in( B47 )  Freq: 1.01325e-06
  0x00000001173d7468: ;   {external_word}
  0x00000001173d7468: 48bf 3125 | 420a 0100 | 0000 4883 

  0x00000001173d7474: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d7474: e4f0 e8d5 | 9a90 f2f4 
 ;; B86: #	out( N935 ) <- in( B48 )  Freq: 1.01325e-06
  0x00000001173d747c: ;   {external_word}
  0x00000001173d747c: 48bf 3125 | 420a 0100 | 0000 4883 

  0x00000001173d7488: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d7488: e4f0 e8c1 | 9a90 f2f4 
 ;; B87: #	out( N935 ) <- in( B49 )  Freq: 1.01325e-06
  0x00000001173d7490: ;   {external_word}
  0x00000001173d7490: 48bf 3125 | 420a 0100 | 0000 4883 

  0x00000001173d749c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d749c: e4f0 e8ad | 9a90 f2f4 
 ;; B88: #	out( N935 ) <- in( B60 )  Freq: 1.01325e-06
  0x00000001173d74a4: be86 ffff | ff48 8be8 

  0x00000001173d74ac: ;   {runtime_call UncommonTrapBlob}
  0x00000001173d74ac: c5f8 77e8 

  0x00000001173d74b0: ; ImmutableOopMap {}
                      ;*ldiv {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
  0x00000001173d74b0: 8c90 57f8 

  0x00000001173d74b4: ;   {external_word}
  0x00000001173d74b4: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173d74c0: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d74c0: e4f0 e889 | 9a90 f2f4 
 ;; B89: #	out( N935 ) <- in( B34 )  Freq: 9.99983e-07
  0x00000001173d74c8: be86 ffff | ff49 8bed 

  0x00000001173d74d0: ;   {runtime_call UncommonTrapBlob}
  0x00000001173d74d0: c5f8 77e8 

  0x00000001173d74d4: ; ImmutableOopMap {}
                      ;*ldiv {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@58 (line 18)
  0x00000001173d74d4: 6890 57f8 

  0x00000001173d74d8: ;   {external_word}
  0x00000001173d74d8: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173d74e4: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d74e4: e4f0 e865 | 9a90 f2f4 
 ;; B90: #	out( N935 ) <- in( B2 B5 B8 )  Freq: 2.997e-06
  0x00000001173d74ec: be8d ffff | ff48 891c | 2448 ff74 | 2410 488f | 4424 084c | 8b54 2418 | 4c89 5424 | 1044 8964 
  0x00000001173d750c: 2418 4c89 | 6c24 2090 

  0x00000001173d7514: ;   {runtime_call UncommonTrapBlob}
  0x00000001173d7514: c5f8 77e8 

  0x00000001173d7518: ; ImmutableOopMap {rbp=Oop [0]=Oop [32]=Oop }
                      ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@25 (line 13)
  0x00000001173d7518: 2490 57f8 

  0x00000001173d751c: ;   {external_word}
  0x00000001173d751c: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173d7528: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d7528: e4f0 e821 | 9a90 f2f4 
 ;; B91: #	out( N935 ) <- in( B10 )  Freq: 1.01328e-06
  0x00000001173d7530: be76 ffff | ff49 8be9 | 4c89 1c24 | 4889 5c24 | 0844 8964 | 2420 9090 

  0x00000001173d7548: ;   {runtime_call UncommonTrapBlob}
  0x00000001173d7548: c5f8 77e8 

  0x00000001173d754c: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop }
                      ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@25 (line 13)
  0x00000001173d754c: f08f 57f8 

  0x00000001173d7550: ;   {external_word}
  0x00000001173d7550: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173d755c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d755c: e4f0 e8ed | 9990 f2f4 
 ;; B92: #	out( N935 ) <- in( B11 )  Freq: 1.01327e-06
  0x00000001173d7564: bebe ffff | ff49 8be9 | 4c89 1c24 | 4889 5c24 | 0844 8964 | 2420 9090 

  0x00000001173d757c: ;   {runtime_call UncommonTrapBlob}
  0x00000001173d757c: c5f8 77e8 

  0x00000001173d7580: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop }
                      ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@25 (line 13)
  0x00000001173d7580: bc8f 57f8 

  0x00000001173d7584: ;   {external_word}
  0x00000001173d7584: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173d7590: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d7590: e4f0 e8b9 

  0x00000001173d7594: ;*putfield slope {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)
  0x00000001173d7594: 9990 f2f4 
 ;; B93: #	out( N935 ) <- in( B61 )  Freq: 1.01325e-06
  0x00000001173d7598: bef6 ffff | ff48 8be8 

  0x00000001173d75a0: ;   {runtime_call UncommonTrapBlob}
  0x00000001173d75a0: c5f8 77e8 

  0x00000001173d75a4: ; ImmutableOopMap {}
                      ;*putfield slope {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)
  0x00000001173d75a4: 988f 57f8 

  0x00000001173d75a8: ;   {external_word}
  0x00000001173d75a8: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173d75b4: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d75b4: e4f0 e895 

  0x00000001173d75b8: ;*putfield slope {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)
  0x00000001173d75b8: 9990 f2f4 

  0x00000001173d75bc: ;   {internal_word}
  0x00000001173d75bc: 49ba 8e72 | 3d17 0100 | 0000 4d89 | 97e8 0300 

  0x00000001173d75cc: ;   {runtime_call SafepointBlob}
  0x00000001173d75cc: 00e9 4e9c | 57f8 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 
[Exception Handler]
  0x00000001173d75e0: ;   {no_reloc}
  0x00000001173d75e0: e93b 3b4c | f8e8 0000 | 0000 4883 

  0x00000001173d75ec: ;   {runtime_call DeoptimizationBlob}
  0x00000001173d75ec: 2c24 05e9 | 6c92 57f8 | f4f4 f4f4 
[/MachCode]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00000001173d75f8:   0x000000011ed59890 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011ed59890}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00000001173d7600:   0x0000000226d0e900 'org/jml/regression/linear/LongLinearRegression'
  0x00000001173d7608:   0x0000000226c40e38 {type array long}
  0x00000001173d7610:   0x000000010ec8fa60 {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00000001173d6adf offset=ffffffff bits=0):
PcDesc(pc=0x00000001173d6b8d offset=ad bits=0):   org.jml.regression.linear.LongLinearRegression::fit@25 (line 13)
PcDesc(pc=0x00000001173d6b91 offset=b1 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@28 (line 13)
PcDesc(pc=0x00000001173d6b94 offset=b4 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
PcDesc(pc=0x00000001173d6ba6 offset=c6 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
PcDesc(pc=0x00000001173d6bba offset=da bits=0):   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
PcDesc(pc=0x00000001173d6bd3 offset=f3 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@37 (line 14)
PcDesc(pc=0x00000001173d6be6 offset=106 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@45 (line 15)
PcDesc(pc=0x00000001173d6be9 offset=109 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@48 (line 13)
PcDesc(pc=0x00000001173d6bee offset=10e bits=0):   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
PcDesc(pc=0x00000001173d6c66 offset=186 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
PcDesc(pc=0x00000001173d6c90 offset=1b0 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@36 (line 14)
PcDesc(pc=0x00000001173d6cde offset=1fe bits=0):   org.jml.regression.linear.LongLinearRegression::fit@37 (line 14)
PcDesc(pc=0x00000001173d6ce3 offset=203 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@45 (line 15)
PcDesc(pc=0x00000001173d6ce7 offset=207 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@48 (line 13)
PcDesc(pc=0x00000001173d6cec offset=20c bits=0):   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
PcDesc(pc=0x00000001173d6cf3 offset=213 bits=1):   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)  reexecute=true
   Locals
    - l0: reg r9 [18],oop
    - l1: reg r11 [22],oop
    - l2: reg rbx [6],oop
    - l3: 0
    - l4: reg r13 [26],long
    - l5: 0
    - l6: reg rbp [10],long
    - l7: reg r12 [24],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x00000001173d6cf5 offset=215 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
PcDesc(pc=0x00000001173d6d08 offset=228 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
PcDesc(pc=0x00000001173d6d16 offset=236 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@37 (line 14)
PcDesc(pc=0x00000001173d6d24 offset=244 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@45 (line 15)
PcDesc(pc=0x00000001173d6d27 offset=247 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@48 (line 13)
PcDesc(pc=0x00000001173d6d2c offset=24c bits=0):   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
PcDesc(pc=0x00000001173d6d34 offset=254 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@58 (line 18)
PcDesc(pc=0x00000001173d6d37 offset=257 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@57 (line 18)
PcDesc(pc=0x00000001173d6d56 offset=276 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@58 (line 18)
PcDesc(pc=0x00000001173d6d7a offset=29a bits=0):   org.jml.regression.linear.LongLinearRegression::fit@66 (line 19)
PcDesc(pc=0x00000001173d6dc9 offset=2e9 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@85 (line 24)
PcDesc(pc=0x00000001173d6ddd offset=2fd bits=0):   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
PcDesc(pc=0x00000001173d6de8 offset=308 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
PcDesc(pc=0x00000001173d6deb offset=30b bits=0):   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
PcDesc(pc=0x00000001173d6df0 offset=310 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
PcDesc(pc=0x00000001173d6df5 offset=315 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
PcDesc(pc=0x00000001173d6e5a offset=37a bits=0):   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
PcDesc(pc=0x00000001173d6e90 offset=3b0 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@85 (line 24)
PcDesc(pc=0x00000001173d6edc offset=3fc bits=0):   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
PcDesc(pc=0x00000001173d700e offset=52e bits=0):   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
PcDesc(pc=0x00000001173d7132 offset=652 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
PcDesc(pc=0x00000001173d7135 offset=655 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
PcDesc(pc=0x00000001173d713e offset=65e bits=0):   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
PcDesc(pc=0x00000001173d7145 offset=665 bits=1):   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)  reexecute=true
   Locals
    - l0: reg r9 [18],oop
    - l1: reg r11 [22],oop
    - l2: reg rbx [6],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[16],long
    - l9: 0
    - l10: stack[24],long
    - l11: 0
    - l12: reg r13 [26],long
    - l13: 0
    - l14: reg rax [0],long
    - l15: reg rdi [14],int
PcDesc(pc=0x00000001173d7148 offset=668 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
PcDesc(pc=0x00000001173d7168 offset=688 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@85 (line 24)
PcDesc(pc=0x00000001173d717e offset=69e bits=0):   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
PcDesc(pc=0x00000001173d71c6 offset=6e6 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
PcDesc(pc=0x00000001173d720e offset=72e bits=0):   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
PcDesc(pc=0x00000001173d7211 offset=731 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
PcDesc(pc=0x00000001173d721a offset=73a bits=0):   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
PcDesc(pc=0x00000001173d7220 offset=740 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@85 (line 24)
PcDesc(pc=0x00000001173d7234 offset=754 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
PcDesc(pc=0x00000001173d723f offset=75f bits=0):   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
PcDesc(pc=0x00000001173d7242 offset=762 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
PcDesc(pc=0x00000001173d7244 offset=764 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
PcDesc(pc=0x00000001173d7248 offset=768 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
PcDesc(pc=0x00000001173d726d offset=78d bits=0):   org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
PcDesc(pc=0x00000001173d7271 offset=791 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)
PcDesc(pc=0x00000001173d7286 offset=7a6 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@151 (line 30)
PcDesc(pc=0x00000001173d72ec offset=80c bits=0):   org.jml.regression.linear.LongLinearRegression::fit@36 (line 14)
   Locals
    - l0: stack[8],oop
    - l1: stack[40],oop
    - l2: stack[24],oop
    - l3: empty
    - l4: empty
    - l5: 0
    - l6: reg rbp [10],long
    - l7: stack[36]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: 0
    - @1: stack[0],long
    - @2: stack[40],oop
    - @3: stack[36]
PcDesc(pc=0x00000001173d7300 offset=820 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@36 (line 14)
PcDesc(pc=0x00000001173d7338 offset=858 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
   Locals
    - l0: stack[8],oop
    - l1: stack[16],oop
    - l2: stack[40],oop
    - l3: 0
    - l4: reg rbp [10],long
    - l5: empty
    - l6: empty
    - l7: stack[36]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: 0
    - @1: stack[0],long
    - @2: stack[40],oop
    - @3: stack[36]
PcDesc(pc=0x00000001173d734c offset=86c bits=0):   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
PcDesc(pc=0x00000001173d73d3 offset=8f3 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
PcDesc(pc=0x00000001173d73f0 offset=910 bits=1):   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[16],long
    - l9: 0
    - l10: stack[24],long
    - l11: 0
    - l12: 0
    - l13: 0
    - l14: 0
    - l15: 0
   Expression stack
    - @0: 0
    - @1: stack[32]
PcDesc(pc=0x00000001173d7404 offset=924 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
PcDesc(pc=0x00000001173d74b4 offset=9d4 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: empty
    - @1: 0
    - @2: reg rbp [10],long
    - @3: 0
    - @4: 0
PcDesc(pc=0x00000001173d74d8 offset=9f8 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@58 (line 18)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: 0
    - @1: reg rbp [10],long
    - @2: 0
    - @3: 0
PcDesc(pc=0x00000001173d751c offset=a3c bits=0):   org.jml.regression.linear.LongLinearRegression::fit@25 (line 13)
   Locals
    - l0: stack[32],oop
    - l1: reg rbp [10],oop
    - l2: stack[0],oop
    - l3: 0
    - l4: stack[8],long
    - l5: 0
    - l6: stack[16],long
    - l7: stack[24]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x00000001173d7550 offset=a70 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@25 (line 13)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[16],long
    - l5: 0
    - l6: stack[24],long
    - l7: stack[32]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x00000001173d7584 offset=aa4 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@25 (line 13)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[16],long
    - l5: 0
    - l6: stack[24],long
    - l7: stack[32]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x00000001173d7598 offset=ab8 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)
PcDesc(pc=0x00000001173d75a8 offset=ac8 bits=1):   org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: NULL
    - @1: 0
    - @2: reg rbp [10],long
PcDesc(pc=0x00000001173d75bc offset=adc bits=0):   org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)
PcDesc(pc=0x00000001173d75f9 offset=b19 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 11 OopMaps

ImmutableOopMap {r11=Oop r9=Oop rbx=Oop } pc offsets: 531 1637 
ImmutableOopMap {[8]=Oop [24]=Oop [40]=Oop } pc offsets: 2060 
ImmutableOopMap {[8]=Oop [16]=Oop [40]=Oop } pc offsets: 2136 
ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop } pc offsets: 2320 
ImmutableOopMap {} pc offsets: 2516 2552 
ImmutableOopMap {rbp=Oop [0]=Oop [32]=Oop } pc offsets: 2620 
ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop } pc offsets: 2672 2724 
ImmutableOopMap {} pc offsets: 2760 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00000001173d6b8d offset=ad):
   org.jml.regression.linear.LongLinearRegression::fit@25 (line 13)
ScopeDesc(pc=0x00000001173d6b91 offset=b1):
   org.jml.regression.linear.LongLinearRegression::fit@28 (line 13)
ScopeDesc(pc=0x00000001173d6b94 offset=b4):
   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
ScopeDesc(pc=0x00000001173d6ba6 offset=c6):
   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
ScopeDesc(pc=0x00000001173d6bba offset=da):
   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
ScopeDesc(pc=0x00000001173d6bd3 offset=f3):
   org.jml.regression.linear.LongLinearRegression::fit@37 (line 14)
ScopeDesc(pc=0x00000001173d6be6 offset=106):
   org.jml.regression.linear.LongLinearRegression::fit@45 (line 15)
ScopeDesc(pc=0x00000001173d6be9 offset=109):
   org.jml.regression.linear.LongLinearRegression::fit@48 (line 13)
ScopeDesc(pc=0x00000001173d6bee offset=10e):
   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
ScopeDesc(pc=0x00000001173d6c66 offset=186):
   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
ScopeDesc(pc=0x00000001173d6c90 offset=1b0):
   org.jml.regression.linear.LongLinearRegression::fit@36 (line 14)
ScopeDesc(pc=0x00000001173d6cde offset=1fe):
   org.jml.regression.linear.LongLinearRegression::fit@37 (line 14)
ScopeDesc(pc=0x00000001173d6ce3 offset=203):
   org.jml.regression.linear.LongLinearRegression::fit@45 (line 15)
ScopeDesc(pc=0x00000001173d6ce7 offset=207):
   org.jml.regression.linear.LongLinearRegression::fit@48 (line 13)
ScopeDesc(pc=0x00000001173d6cec offset=20c):
   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
ScopeDesc(pc=0x00000001173d6cf3 offset=213):
   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)  reexecute=true
   Locals
    - l0: reg r9 [18],oop
    - l1: reg r11 [22],oop
    - l2: reg rbx [6],oop
    - l3: 0
    - l4: reg r13 [26],long
    - l5: 0
    - l6: reg rbp [10],long
    - l7: reg r12 [24],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x00000001173d6cf5 offset=215):
   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
ScopeDesc(pc=0x00000001173d6d08 offset=228):
   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
ScopeDesc(pc=0x00000001173d6d16 offset=236):
   org.jml.regression.linear.LongLinearRegression::fit@37 (line 14)
ScopeDesc(pc=0x00000001173d6d24 offset=244):
   org.jml.regression.linear.LongLinearRegression::fit@45 (line 15)
ScopeDesc(pc=0x00000001173d6d27 offset=247):
   org.jml.regression.linear.LongLinearRegression::fit@48 (line 13)
ScopeDesc(pc=0x00000001173d6d2c offset=24c):
   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
ScopeDesc(pc=0x00000001173d6d34 offset=254):
   org.jml.regression.linear.LongLinearRegression::fit@58 (line 18)
ScopeDesc(pc=0x00000001173d6d37 offset=257):
   org.jml.regression.linear.LongLinearRegression::fit@57 (line 18)
ScopeDesc(pc=0x00000001173d6d56 offset=276):
   org.jml.regression.linear.LongLinearRegression::fit@58 (line 18)
ScopeDesc(pc=0x00000001173d6d7a offset=29a):
   org.jml.regression.linear.LongLinearRegression::fit@66 (line 19)
ScopeDesc(pc=0x00000001173d6dc9 offset=2e9):
   org.jml.regression.linear.LongLinearRegression::fit@85 (line 24)
ScopeDesc(pc=0x00000001173d6ddd offset=2fd):
   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
ScopeDesc(pc=0x00000001173d6de8 offset=308):
   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
ScopeDesc(pc=0x00000001173d6deb offset=30b):
   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
ScopeDesc(pc=0x00000001173d6df0 offset=310):
   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
ScopeDesc(pc=0x00000001173d6df5 offset=315):
   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
ScopeDesc(pc=0x00000001173d6e5a offset=37a):
   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
ScopeDesc(pc=0x00000001173d6e90 offset=3b0):
   org.jml.regression.linear.LongLinearRegression::fit@85 (line 24)
ScopeDesc(pc=0x00000001173d6edc offset=3fc):
   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
ScopeDesc(pc=0x00000001173d700e offset=52e):
   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
ScopeDesc(pc=0x00000001173d7132 offset=652):
   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
ScopeDesc(pc=0x00000001173d7135 offset=655):
   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
ScopeDesc(pc=0x00000001173d713e offset=65e):
   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
ScopeDesc(pc=0x00000001173d7145 offset=665):
   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)  reexecute=true
   Locals
    - l0: reg r9 [18],oop
    - l1: reg r11 [22],oop
    - l2: reg rbx [6],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[16],long
    - l9: 0
    - l10: stack[24],long
    - l11: 0
    - l12: reg r13 [26],long
    - l13: 0
    - l14: reg rax [0],long
    - l15: reg rdi [14],int
ScopeDesc(pc=0x00000001173d7148 offset=668):
   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
ScopeDesc(pc=0x00000001173d7168 offset=688):
   org.jml.regression.linear.LongLinearRegression::fit@85 (line 24)
ScopeDesc(pc=0x00000001173d717e offset=69e):
   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
ScopeDesc(pc=0x00000001173d71c6 offset=6e6):
   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
ScopeDesc(pc=0x00000001173d720e offset=72e):
   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
ScopeDesc(pc=0x00000001173d7211 offset=731):
   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
ScopeDesc(pc=0x00000001173d721a offset=73a):
   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
ScopeDesc(pc=0x00000001173d7220 offset=740):
   org.jml.regression.linear.LongLinearRegression::fit@85 (line 24)
ScopeDesc(pc=0x00000001173d7234 offset=754):
   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
ScopeDesc(pc=0x00000001173d723f offset=75f):
   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
ScopeDesc(pc=0x00000001173d7242 offset=762):
   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
ScopeDesc(pc=0x00000001173d7244 offset=764):
   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
ScopeDesc(pc=0x00000001173d7248 offset=768):
   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
ScopeDesc(pc=0x00000001173d726d offset=78d):
   org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
ScopeDesc(pc=0x00000001173d7271 offset=791):
   org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)
ScopeDesc(pc=0x00000001173d7286 offset=7a6):
   org.jml.regression.linear.LongLinearRegression::fit@151 (line 30)
ScopeDesc(pc=0x00000001173d72ec offset=80c):
   org.jml.regression.linear.LongLinearRegression::fit@36 (line 14)
   Locals
    - l0: stack[8],oop
    - l1: stack[40],oop
    - l2: stack[24],oop
    - l3: empty
    - l4: empty
    - l5: 0
    - l6: reg rbp [10],long
    - l7: stack[36]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: 0
    - @1: stack[0],long
    - @2: stack[40],oop
    - @3: stack[36]
ScopeDesc(pc=0x00000001173d7300 offset=820):
   org.jml.regression.linear.LongLinearRegression::fit@36 (line 14)
ScopeDesc(pc=0x00000001173d7338 offset=858):
   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
   Locals
    - l0: stack[8],oop
    - l1: stack[16],oop
    - l2: stack[40],oop
    - l3: 0
    - l4: reg rbp [10],long
    - l5: empty
    - l6: empty
    - l7: stack[36]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: 0
    - @1: stack[0],long
    - @2: stack[40],oop
    - @3: stack[36]
ScopeDesc(pc=0x00000001173d734c offset=86c):
   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
ScopeDesc(pc=0x00000001173d73d3 offset=8f3):
   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
ScopeDesc(pc=0x00000001173d73f0 offset=910):
   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: stack[16],long
    - l9: 0
    - l10: stack[24],long
    - l11: 0
    - l12: 0
    - l13: 0
    - l14: 0
    - l15: 0
   Expression stack
    - @0: 0
    - @1: stack[32]
ScopeDesc(pc=0x00000001173d7404 offset=924):
   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
ScopeDesc(pc=0x00000001173d74b4 offset=9d4):
   org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: empty
    - @1: 0
    - @2: reg rbp [10],long
    - @3: 0
    - @4: 0
ScopeDesc(pc=0x00000001173d74d8 offset=9f8):
   org.jml.regression.linear.LongLinearRegression::fit@58 (line 18)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: 0
    - @1: reg rbp [10],long
    - @2: 0
    - @3: 0
ScopeDesc(pc=0x00000001173d751c offset=a3c):
   org.jml.regression.linear.LongLinearRegression::fit@25 (line 13)
   Locals
    - l0: stack[32],oop
    - l1: reg rbp [10],oop
    - l2: stack[0],oop
    - l3: 0
    - l4: stack[8],long
    - l5: 0
    - l6: stack[16],long
    - l7: stack[24]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x00000001173d7550 offset=a70):
   org.jml.regression.linear.LongLinearRegression::fit@25 (line 13)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[16],long
    - l5: 0
    - l6: stack[24],long
    - l7: stack[32]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x00000001173d7584 offset=aa4):
   org.jml.regression.linear.LongLinearRegression::fit@25 (line 13)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[16],long
    - l5: 0
    - l6: stack[24],long
    - l7: stack[32]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x00000001173d7598 offset=ab8):
   org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)
ScopeDesc(pc=0x00000001173d75a8 offset=ac8):
   org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: NULL
    - @1: 0
    - @2: reg rbp [10],long
ScopeDesc(pc=0x00000001173d75bc offset=adc):
   org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00000001173d6988: 6400
relocInfo@0x00000001173d6988 [type=6(runtime_call) addr=0x00000001173d6ae0 offset=0 format=1] | [destination=0x0000000109e77fa0]
         @0x00000001173d698a: f001cc60
relocInfo@0x00000001173d698c [type=12(metadata) addr=0x00000001173d6b40 offset=96 format=3 data=1] | [metadata_addr=0x00000001173d7600 *=0x0000000226d0e900 offset=0]metadata_value=0x0000000226d0e900: 'org/jml/regression/linear/LongLinearRegression'
         @0x00000001173d698e: f002cc20
relocInfo@0x00000001173d6990 [type=12(metadata) addr=0x00000001173d6b60 offset=32 format=3 data=2] | [metadata_addr=0x00000001173d7608 *=0x0000000226c40e38 offset=0]metadata_value=0x0000000226c40e38: {type array long}
         @0x00000001173d6992: f002cc20
relocInfo@0x00000001173d6994 [type=12(metadata) addr=0x00000001173d6b80 offset=32 format=3 data=2] | [metadata_addr=0x00000001173d7608 *=0x0000000226c40e38 offset=0]metadata_value=0x0000000226c40e38: {type array long}
         @0x00000001173d6996: a173
relocInfo@0x00000001173d6996 [type=10(poll) addr=0x00000001173d6cf3 offset=371]
         @0x00000001173d6998: 03ff
relocInfo@0x00000001173d6998 [type=0(none) addr=0x00000001173d70f2 offset=1023]
         @0x00000001173d699a: a053
relocInfo@0x00000001173d699a [type=10(poll) addr=0x00000001173d7145 offset=83]
         @0x00000001173d699c: b149
relocInfo@0x00000001173d699c [type=11(poll_return) addr=0x00000001173d728e offset=329]
         @0x00000001173d699e: 6459
relocInfo@0x00000001173d699e [type=6(runtime_call) addr=0x00000001173d72e7 offset=89 format=1] | [destination=0x000000010f950540]
         @0x00000001173d69a0: f8030a3a777700017005
relocInfo@0x00000001173d69a8 [type=7(external_word) addr=0x00000001173d72ec offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173d69aa: 640e
relocInfo@0x00000001173d69aa [type=6(runtime_call) addr=0x00000001173d72fa offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d69ac: 6439
relocInfo@0x00000001173d69ac [type=6(runtime_call) addr=0x00000001173d7333 offset=57 format=1] | [destination=0x000000010f950540]
         @0x00000001173d69ae: f8030a3a777700017005
relocInfo@0x00000001173d69b6 [type=7(external_word) addr=0x00000001173d7338 offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173d69b8: 640e
relocInfo@0x00000001173d69b8 [type=6(runtime_call) addr=0x00000001173d7346 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d69ba: f8030a422da600017015
relocInfo@0x00000001173d69c2 [type=7(external_word) addr=0x00000001173d735b offset=21 data={0a422da60001}] | [target=0x000000010a422da6]
         @0x00000001173d69c4: 640e
relocInfo@0x00000001173d69c4 [type=6(runtime_call) addr=0x00000001173d7369 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d69c6: f8030a422da600017006
relocInfo@0x00000001173d69ce [type=7(external_word) addr=0x00000001173d736f offset=6 data={0a422da60001}] | [target=0x000000010a422da6]
         @0x00000001173d69d0: 640e
relocInfo@0x00000001173d69d0 [type=6(runtime_call) addr=0x00000001173d737d offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d69d2: f8030a42253100017006
relocInfo@0x00000001173d69da [type=7(external_word) addr=0x00000001173d7383 offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173d69dc: 640e
relocInfo@0x00000001173d69dc [type=6(runtime_call) addr=0x00000001173d7391 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d69de: f8030a42253100017006
relocInfo@0x00000001173d69e6 [type=7(external_word) addr=0x00000001173d7397 offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173d69e8: 640e
relocInfo@0x00000001173d69e8 [type=6(runtime_call) addr=0x00000001173d73a5 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d69ea: f8030a42253100017006
relocInfo@0x00000001173d69f2 [type=7(external_word) addr=0x00000001173d73ab offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173d69f4: 640e
relocInfo@0x00000001173d69f4 [type=6(runtime_call) addr=0x00000001173d73b9 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d69f6: f8030a42253100017006
relocInfo@0x00000001173d69fe [type=7(external_word) addr=0x00000001173d73bf offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173d6a00: 640e
relocInfo@0x00000001173d6a00 [type=6(runtime_call) addr=0x00000001173d73cd offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d6a02: 641e
relocInfo@0x00000001173d6a02 [type=6(runtime_call) addr=0x00000001173d73eb offset=30 format=1] | [destination=0x000000010f950540]
         @0x00000001173d6a04: f8030a3a777700017005
relocInfo@0x00000001173d6a0c [type=7(external_word) addr=0x00000001173d73f0 offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173d6a0e: 640e
relocInfo@0x00000001173d6a0e [type=6(runtime_call) addr=0x00000001173d73fe offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d6a10: f8030a42253100017006
relocInfo@0x00000001173d6a18 [type=7(external_word) addr=0x00000001173d7404 offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173d6a1a: 640e
relocInfo@0x00000001173d6a1a [type=6(runtime_call) addr=0x00000001173d7412 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d6a1c: f8030a42253100017006
relocInfo@0x00000001173d6a24 [type=7(external_word) addr=0x00000001173d7418 offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173d6a26: 640e
relocInfo@0x00000001173d6a26 [type=6(runtime_call) addr=0x00000001173d7426 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d6a28: f8030a42253100017006
relocInfo@0x00000001173d6a30 [type=7(external_word) addr=0x00000001173d742c offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173d6a32: 640e
relocInfo@0x00000001173d6a32 [type=6(runtime_call) addr=0x00000001173d743a offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d6a34: f8030a42253100017006
relocInfo@0x00000001173d6a3c [type=7(external_word) addr=0x00000001173d7440 offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173d6a3e: 640e
relocInfo@0x00000001173d6a3e [type=6(runtime_call) addr=0x00000001173d744e offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d6a40: f8030a42253100017006
relocInfo@0x00000001173d6a48 [type=7(external_word) addr=0x00000001173d7454 offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173d6a4a: 640e
relocInfo@0x00000001173d6a4a [type=6(runtime_call) addr=0x00000001173d7462 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d6a4c: f8030a42253100017006
relocInfo@0x00000001173d6a54 [type=7(external_word) addr=0x00000001173d7468 offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173d6a56: 640e
relocInfo@0x00000001173d6a56 [type=6(runtime_call) addr=0x00000001173d7476 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d6a58: f8030a42253100017006
relocInfo@0x00000001173d6a60 [type=7(external_word) addr=0x00000001173d747c offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173d6a62: 640e
relocInfo@0x00000001173d6a62 [type=6(runtime_call) addr=0x00000001173d748a offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d6a64: f8030a42253100017006
relocInfo@0x00000001173d6a6c [type=7(external_word) addr=0x00000001173d7490 offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173d6a6e: 640e
relocInfo@0x00000001173d6a6e [type=6(runtime_call) addr=0x00000001173d749e offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d6a70: 6411
relocInfo@0x00000001173d6a70 [type=6(runtime_call) addr=0x00000001173d74af offset=17 format=1] | [destination=0x000000010f950540]
         @0x00000001173d6a72: f8030a3a777700017005
relocInfo@0x00000001173d6a7a [type=7(external_word) addr=0x00000001173d74b4 offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173d6a7c: 640e
relocInfo@0x00000001173d6a7c [type=6(runtime_call) addr=0x00000001173d74c2 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d6a7e: 6411
relocInfo@0x00000001173d6a7e [type=6(runtime_call) addr=0x00000001173d74d3 offset=17 format=1] | [destination=0x000000010f950540]
         @0x00000001173d6a80: f8030a3a777700017005
relocInfo@0x00000001173d6a88 [type=7(external_word) addr=0x00000001173d74d8 offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173d6a8a: 640e
relocInfo@0x00000001173d6a8a [type=6(runtime_call) addr=0x00000001173d74e6 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d6a8c: 6431
relocInfo@0x00000001173d6a8c [type=6(runtime_call) addr=0x00000001173d7517 offset=49 format=1] | [destination=0x000000010f950540]
         @0x00000001173d6a8e: f8030a3a777700017005
relocInfo@0x00000001173d6a96 [type=7(external_word) addr=0x00000001173d751c offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173d6a98: 640e
relocInfo@0x00000001173d6a98 [type=6(runtime_call) addr=0x00000001173d752a offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d6a9a: 6421
relocInfo@0x00000001173d6a9a [type=6(runtime_call) addr=0x00000001173d754b offset=33 format=1] | [destination=0x000000010f950540]
         @0x00000001173d6a9c: f8030a3a777700017005
relocInfo@0x00000001173d6aa4 [type=7(external_word) addr=0x00000001173d7550 offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173d6aa6: 640e
relocInfo@0x00000001173d6aa6 [type=6(runtime_call) addr=0x00000001173d755e offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d6aa8: 6421
relocInfo@0x00000001173d6aa8 [type=6(runtime_call) addr=0x00000001173d757f offset=33 format=1] | [destination=0x000000010f950540]
         @0x00000001173d6aaa: f8030a3a777700017005
relocInfo@0x00000001173d6ab2 [type=7(external_word) addr=0x00000001173d7584 offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173d6ab4: 640e
relocInfo@0x00000001173d6ab4 [type=6(runtime_call) addr=0x00000001173d7592 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d6ab6: 6411
relocInfo@0x00000001173d6ab6 [type=6(runtime_call) addr=0x00000001173d75a3 offset=17 format=1] | [destination=0x000000010f950540]
         @0x00000001173d6ab8: f8030a3a777700017005
relocInfo@0x00000001173d6ac0 [type=7(external_word) addr=0x00000001173d75a8 offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173d6ac2: 640e
relocInfo@0x00000001173d6ac2 [type=6(runtime_call) addr=0x00000001173d75b6 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d6ac4: f32e8006
relocInfo@0x00000001173d6ac6 [type=8(internal_word) addr=0x00000001173d75bc offset=6 data=814] | [target=0x00000001173d728e]
         @0x00000001173d6ac8: 6411
relocInfo@0x00000001173d6ac8 [type=6(runtime_call) addr=0x00000001173d75cd offset=17 format=1] | [destination=0x000000010f951220]
         @0x00000001173d6aca: 0013
relocInfo@0x00000001173d6aca [type=0(none) addr=0x00000001173d75e0 offset=19]
         @0x00000001173d6acc: 6400
relocInfo@0x00000001173d6acc [type=6(runtime_call) addr=0x00000001173d75e0 offset=0 format=1] | [destination=0x000000010f89b120]
         @0x00000001173d6ace: 640f
relocInfo@0x00000001173d6ace [type=6(runtime_call) addr=0x00000001173d75ef offset=15 format=1] | [destination=0x000000010f950860]
         @0x00000001173d6ad0: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type leaf_type
  context = org.jml.regression.linear.LongLinearRegression
   [nmethod<=klass]org.jml.regression.linear.LongLinearRegression
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 3 entries, 28 bytes):
{
   < 0x00000001173d6b8d, 0x00000001173d7530 > < 0x00000001173d6b91, 0x00000001173d7564 > < 0x00000001173d726d, 0x00000001173d7598 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 NULL-oop
#1: 0x000000011ed59890 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011ed59890}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
#0: 0x0000000000000000 NULL-oop
#1: 0x0000000226d0e900 'org/jml/regression/linear/LongLinearRegression'
#2: 0x0000000226c40e38 {type array long}
#3: 0x000000010ec8fa60 {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
21.615 ms/op
# Warmup Iteration   5: 
============================= C2-compiled nmethod ==============================
----------------------- MetaData before Compile_id = 1013 ------------------------
{method}
 - this oop:          0x000000010ec8fa60
 - method holder:     'org/jml/regression/linear/LongLinearRegression'
 - constants:         0x000000010ec8f518 constant pool [71]/operands[5] {0x000000010ec8f518} for 'org/jml/regression/linear/LongLinearRegression' cache=0x000000010ec8fe20
 - access:            0xc1000001  public 
 - name:              'fit'
 - signature:         '([J[J)V'
 - max stack:         9
 - max locals:        16
 - size of params:    3
 - method size:       13
 - highest level:     3
 - vtable index:      5
 - i2i entry:         0x000000010f847e20
 - adapters:          AHE@0x00007f87c7837270: 0xbbb00000 i2c: 0x000000010f8bfee0 c2i: 0x000000010f8bffbf c2iUV: 0x000000010f8bff92 c2iNCI: 0x000000010f8bfffc
 - compiled entry     0x000000010ff57680
 - code size:         155
 - code start:        0x000000010ec8f928
 - code end (excl):   0x000000010ec8f9c3
 - method data:       0x000000010ef00000
 - checked ex length: 0
 - linenumber start:  0x000000010ec8f9c3
 - localvar length:   11
 - localvar start:    0x000000010ec8f9da
 - compiled code: nmethod   2735 1001       3       org.jml.regression.linear.LongLinearRegression::fit (155 bytes)

------------------------ OptoAssembly for Compile_id = 1013 -----------------------
#
#  void ( org/jml/regression/linear/LongLinearRegression:NotNull *, long[int:>=0]:exact *, long[int:>=0]:exact * )
#
#r018 rsi:rsi   : parm 0: org/jml/regression/linear/LongLinearRegression:NotNull *
#r016 rdx:rdx   : parm 1: long[int:>=0]:exact *
#r010 rcx:rcx   : parm 2: long[int:>=0]:exact *
# -- Old rsp -- Framesize: 64 --
#r583 rsp+60: in_preserve
#r582 rsp+56: return address
#r581 rsp+52: in_preserve
#r580 rsp+48: saved fp register
#r579 rsp+44: pad2, stack alignment
#r578 rsp+40: pad2, stack alignment
#r577 rsp+36: Fixed slot 1
#r576 rsp+32: Fixed slot 0
#r591 rsp+28: spill
#r590 rsp+24: spill
#r589 rsp+20: spill
#r588 rsp+16: spill
#r587 rsp+12: spill
#r586 rsp+ 8: spill
#r585 rsp+ 4: spill
#r584 rsp+ 0: spill
#
000     N688: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     movl    rscratch1, [j_rarg0 + oopDesc::klass_offset_in_bytes()]	# compressed klass
	decode_klass_not_null rscratch1, rscratch1
	cmpq    rax, rscratch1	 # Inline cache check
	jne     SharedRuntime::_ic_miss_stub
	nop	# nops to align entry point

        nop 	# 12 bytes pad for loops and calls

020     B1: #	out( B61 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
020     # stack bang (288 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #48	# Create frame

02c     movdq   XMM0, RSI	# spill
031     movq    RBP, RDX	# spill
034     movl    R9, [RDX + #12 (8-bit)]	# range
038     NullCheck RDX

038     B2: #	out( B62 B3 ) <- in( B1 )  Freq: 0.999999
038     movl    RDI, [RCX + #12 (8-bit)]	# range
03b     NullCheck RCX

03b     B3: #	out( B54 B4 ) <- in( B2 )  Freq: 0.999998
        nop 	# 5 bytes pad for loops and calls
040     cmpl    R9, RDI
043     jne     B54  P=0.000001 C=-1.000000

049     B4: #	out( B55 B5 ) <- in( B3 )  Freq: 0.999997
049     testl   R9, R9	# unsigned
04c     jbe,u   B55  P=0.000001 C=19896576.000000

052     B5: #	out( B44 B6 ) <- in( B4 )  Freq: 0.999996
052     movl    R10, R9	# spill
055     decl    R10	# int
058     cmpl    R10, R9	# unsigned
        nop 	# 5 bytes pad for loops and calls
060     jnb,u   B44  P=0.000001 C=-1.000000

066     B6: #	out( B44 B7 ) <- in( B5 )  Freq: 0.999995
066     testl   RDI, RDI	# unsigned
068     jbe,u   B44  P=0.000001 C=-1.000000

06e     B7: #	out( B44 B8 ) <- in( B6 )  Freq: 0.999994
06e     cmpl    R10, RDI	# unsigned
071     jnb,u   B44  P=0.000001 C=-1.000000

077     B8: #	out( B45 B9 ) <- in( B7 )  Freq: 0.999993
077     movq    R13, [RCX + #16 (8-bit)]	# long
07b     movq    RSI, [RDX + #16 (8-bit)]	# long
07f     movl    R10, R9	# spill
082     addl    R10, #-7	# int
086     # TLS is in R15
086     movl    R12, #1	# int
08c     xorl    RBX, RBX	# int
08e     cmpl    R10, #1
092     jle     B45  P=0.000001 C=-1.000000

098     B9: #	out( B56 B10 ) <- in( B8 )  Freq: 0.999992
098     cmpl    RDI, #1	# unsigned
        nop 	# 5 bytes pad for loops and calls
0a0     jbe,u   B56  P=0.000001 C=-1.000000

0a6     B10: #	out( B57 B11 ) <- in( B9 )  Freq: 0.999991
0a6     cmpl    R9, #1	# unsigned
0aa     jbe,u   B57  P=0.000001 C=-1.000000

0b0     B11: #	out( B58 B12 ) <- in( B10 )  Freq: 0.99999
0b0     cmpl    R9, #8	# unsigned
0b4     jbe,u   B58  P=0.000001 C=-1.000000

0ba     B12: #	out( B59 B13 ) <- in( B11 )  Freq: 0.999989
        nop 	# 6 bytes pad for loops and calls
0c0     cmpl    RDI, #1	# unsigned
0c3     jbe,u   B59  P=0.000001 C=-1.000000

0c9     B13: #	out( B60 B14 ) <- in( B12 )  Freq: 0.999988
0c9     cmpl    RDI, #8	# unsigned
0cc     jbe,u   B60  P=0.000001 C=-1.000000

0d2     B14: #	out( B15 ) <- in( B13 )  Freq: 0.999987
0d2     movl    R8, #8000	# int
0d8     movl    R11, #1	# int

0de     B15: #	out( B16 ) <- in( B14 B17 ) Loop( B15-B17 ) Freq: 986882
0de     movl    RDX, R9	# spill
0e1     subl    RDX, R11	# int
0e4     addl    RDX, #-7	# int
0e7     cmpl    R10, R11
0ea     cmovll RDX, RBX	# signed, int
0ed     cmpl    RDX, #8000	# unsigned
0f3     cmovlnbe RDX, R8	# unsigned, int
0f7     addl    RDX, R11	# int
        nop 	# 6 bytes pad for loops and calls

100     B16: #	out( B16 B17 ) <- in( B15 B16 ) Loop( B16-B16 inner main of N123 strip mined) Freq: 9.73949e+11
100     addq    R13, [RCX + #16 + R11 << #3]	# long
105     addq    RSI, [RBP + #16 + R11 << #3]	# long
10a     addq    R13, [RCX + #24 + R11 << #3]	# long
10f     addq    RSI, [RBP + #24 + R11 << #3]	# long
114     addq    R13, [RCX + #32 + R11 << #3]	# long
119     addq    RSI, [RBP + #32 + R11 << #3]	# long
11e     addq    R13, [RCX + #40 + R11 << #3]	# long
123     addq    RSI, [RBP + #40 + R11 << #3]	# long
128     addq    R13, [RCX + #48 + R11 << #3]	# long
12d     addq    RSI, [RBP + #48 + R11 << #3]	# long
132     addq    R13, [RCX + #56 + R11 << #3]	# long
137     addq    RSI, [RBP + #56 + R11 << #3]	# long
13c     addq    R13, [RCX + #64 + R11 << #3]	# long
141     addq    RSI, [RBP + #64 + R11 << #3]	# long
146     addq    R13, [RCX + #72 + R11 << #3]	# long
14b     addq    RSI, [RBP + #72 + R11 << #3]	# long
150     addl    R11, #8	# int
154     cmpl    R11, RDX
157     jl,s   B16	# loop end  P=0.999999 C=19896574.000000

159     B17: #	out( B15 B18 ) <- in( B16 )  Freq: 986882
159     movq    RAX, [R15 + #304 (32-bit)]	# ptr
160     movq    RDX, RBP	# spill
163     testl   rax, [RAX]	# Safepoint: poll for GC        # org.jml.regression.linear.LongLinearRegression::fit @ bci:51 (line 13) L[0]=XMM0 L[1]=RDX L[2]=RCX L[3]=RSI L[4]=_ L[5]=R13 L[6]=_ L[7]=R11 L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_
        # OopMap {rcx=Oop rdx=Oop rbp=Oop xmm0=Oop off=355/0x163}
165     cmpl    R11, R10
168     jl     B15  P=0.999999 C=19896574.000000

16e     B18: #	out( B21 B19 ) <- in( B45 B17 )  Freq: 0.999988
16e     cmpl    R11, R9
171     jge,s   B21  P=0.500000 C=-1.000000

173     B19: #	out( B20 ) <- in( B18 )  Freq: 0.499994
173     # castII of R11
        nop 	# 1 bytes pad for loops and calls

174     B20: #	out( B20 B21 ) <- in( B19 B20 ) Loop( B20-B20 inner post of N470) Freq: 0.999988
174     addq    RSI, [RBP + #16 + R11 << #3]	# long
179     addq    R13, [RCX + #16 + R11 << #3]	# long
17e     incl    R11	# int
181     cmpl    R11, R9
184     jl,s   B20	# loop end  P=0.500000 C=19896574.000000

186     B21: #	out( B22 ) <- in( B20 B18 )  Freq: 0.999988
186     movslq  R10, R9	# i2l
189     movq    RAX, RSI	# spill
18c     movq    rdx, 0x8000000000000000	# ldiv
	cmpq    rax, rdx
	jne,s   normal
	xorl    rdx, rdx
	cmpq    R10, -1
	je,s    done
normal: cdqq
	idivq   R10
done:
1a8     movq    R14, RAX	# spill
1ab     movq    RAX, R13	# spill
1ae     movq    rdx, 0x8000000000000000	# ldiv
	cmpq    rax, rdx
	jne,s   normal
	xorl    rdx, rdx
	cmpq    R10, -1
	je,s    done
normal: cdqq
	idivq   R10
done:
1ca     movq    R13, RAX	# spill
1cd     movl    R11, RBP	# ptr -> int
1d0     shrl    R11, #3
1d4     andl    R11, #3	# int
1d8     subl    R12, R11	# int
1db     andl    R12, #3	# int
1df     incl    R12	# int
1e2     cmpl    R12, R9
1e5     cmovlgt R12, R9	# min
1e9     xorl    RSI, RSI	# long
1eb     xorl    R8, R8	# int
1ee     xorl    RAX, RAX	# long

1f0     B22: #	out( B24 B23 ) <- in( B21 B23 ) Loop( B22-B23 inner pre of N480) Freq: 1.99998
1f0     movq    R11, [RCX + #16 + R8 << #3]	# long
1f5     movq    R10, [RBP + #16 + R8 << #3]	# long
1fa     subq    R11, R13	# long
1fd     subq    R10, R14	# long
200     imulq   R11, R10	# long
204     imulq   R10, R10	# long
208     addq    RAX, R11	# long
20b     addq    RSI, R10	# long
20e     movl    RDX, R8	# spill
211     incl    RDX	# int
213     cmpl    RDX, R12
216     jge,s   B24	# loop end  P=0.500000 C=10169086.000000

218     B23: #	out( B22 ) <- in( B22 )  Freq: 0.999988
218     movl    R8, RDX	# spill
21b     jmp,s   B22

21d     B24: #	out( B39 B25 ) <- in( B22 )  Freq: 0.999988
21d     movl    R10, R9	# spill
220     addl    R10, #-15	# int
224     cmpl    RDX, R10
227     jge     B39  P=0.000001 C=-1.000000

22d     B25: #	out( B46 B26 ) <- in( B24 )  Freq: 0.999987
22d     cmpl    RDX, RDI	# unsigned
22f     jnb,u   B46  P=0.000001 C=-1.000000

235     B26: #	out( B47 B27 ) <- in( B25 )  Freq: 0.999986
235     cmpl    RDX, RDI	# unsigned
237     jnb,u   B47  P=0.000001 C=-1.000000

23d     B27: #	out( B48 B28 ) <- in( B26 )  Freq: 0.999985
        nop 	# 3 bytes pad for loops and calls
240     cmpl    RDX, R9	# unsigned
243     jnb,u   B48  P=0.000001 C=-1.000000

249     B28: #	out( B49 B29 ) <- in( B27 )  Freq: 0.999984
249     cmpl    RDX, R9	# unsigned
24c     jnb,u   B49  P=0.000001 C=-1.000000

252     B29: #	out( B50 B30 ) <- in( B28 )  Freq: 0.999983
252     addl    R8, #16	# int
256     cmpl    R8, R9	# unsigned
259     jnb,u   B50  P=0.000001 C=-1.000000

25f     B30: #	out( B51 B31 ) <- in( B29 )  Freq: 0.999982
        nop 	# 1 bytes pad for loops and calls
260     cmpl    RDX, RDI	# unsigned
262     jnb,u   B51  P=0.000001 C=-1.000000

268     B31: #	out( B52 B32 ) <- in( B30 )  Freq: 0.999981
268     cmpl    R8, RDI	# unsigned
26b     jnb,u   B52  P=0.000001 C=-1.000000

271     B32: #	out( B33 ) <- in( B31 )  Freq: 0.99998
271     replicateL XMM6,R13
27b     replicateL XMM7,R14
285     movl    R11, #16000	# int

28b     B33: #	out( B34 ) <- in( B32 B35 ) Loop( B33-B35 ) Freq: 986875
28b     movl    R8, R9	# spill
28e     subl    R8, RDX	# int
291     addl    R8, #-15	# int
295     cmpl    R10, RDX
298     cmovll R8, RBX	# signed, int
29c     cmpl    R8, #16000	# unsigned
2a3     cmovlnbe R8, R11	# unsigned, int
2a7     addl    R8, RDX	# int
        nop 	# 6 bytes pad for loops and calls

2b0     B34: #	out( B34 B35 ) <- in( B33 B34 ) Loop( B34-B34 inner main of N269 strip mined) Freq: 9.73942e+11
2b0     load_vector XMM1,[RCX + #112 + RDX << #3]
2b6     load_vector XMM8,[RCX + #80 + RDX << #3]
2bc     load_vector XMM9,[RCX + #48 + RDX << #3]
2c2     load_vector XMM10,[RCX + #16 + RDX << #3]
2c8     load_vector XMM2,[RBP + #112 + RDX << #3]
2ce     load_vector XMM3,[RBP + #80 + RDX << #3]
2d4     load_vector XMM4,[RBP + #48 + RDX << #3]
2da     load_vector XMM5,[RBP + #16 + RDX << #3]
2e0     vpsubq  XMM11,XMM1,XMM6	! sub packedL
2e4     vpsubq  XMM5,XMM5,XMM7	! sub packedL
2e8     vpsubq  XMM12,XMM4,XMM7	! sub packedL
2ec     vpsubq  XMM13,XMM3,XMM7	! sub packedL
2f0     vpsubq  XMM14,XMM2,XMM7	! sub packedL
2f4     vpsubq  XMM10,XMM10,XMM6	! sub packedL
2f8     vpsubq  XMM9,XMM9,XMM6	! sub packedL
2fc     vpsubq  XMM3,XMM8,XMM6	! sub packedL
300     vpshufd XMM1,XMM5
	vpmulld XMM1,XMM5,XMM1
	vphaddd XMM1,XMM1,XMM1
	vpmovzxdq XMM1,XMM1
	vpsllq XMM1,XMM1
	vpmuludq XMM2,XMM5,XMM5
	vpaddq XMM1,XMM1,XMM2	! mul packed4L
327     vector_reduction_long R12,RSI,XMM1 ; using XMM2, XMM15 as TEMP
349     vpshufd XMM1,XMM12
	vpmulld XMM1,XMM12,XMM1
	vphaddd XMM1,XMM1,XMM1
	vpmovzxdq XMM1,XMM1
	vpsllq XMM1,XMM1
	vpmuludq XMM2,XMM12,XMM12
	vpaddq XMM1,XMM1,XMM2	! mul packed4L
372     vector_reduction_long R12,R12,XMM1 ; using XMM2, XMM15 as TEMP
394     vpshufd XMM1,XMM13
	vpmulld XMM1,XMM13,XMM1
	vphaddd XMM1,XMM1,XMM1
	vpmovzxdq XMM1,XMM1
	vpsllq XMM1,XMM1
	vpmuludq XMM2,XMM13,XMM13
	vpaddq XMM1,XMM1,XMM2	! mul packed4L
3bd     vector_reduction_long R12,R12,XMM1 ; using XMM2, XMM15 as TEMP
3df     vpshufd XMM1,XMM14
	vpmulld XMM1,XMM14,XMM1
	vphaddd XMM1,XMM1,XMM1
	vpmovzxdq XMM1,XMM1
	vpsllq XMM1,XMM1
	vpmuludq XMM2,XMM14,XMM14
	vpaddq XMM1,XMM1,XMM2	! mul packed4L
408     vector_reduction_long RSI,R12,XMM1 ; using XMM2, XMM15 as TEMP
42a     vpshufd XMM1,XMM10
	vpmulld XMM1,XMM5,XMM1
	vphaddd XMM1,XMM1,XMM1
	vpmovzxdq XMM1,XMM1
	vpsllq XMM1,XMM1
	vpmuludq XMM2,XMM5,XMM10
	vpaddq XMM1,XMM1,XMM2	! mul packed4L
453     vector_reduction_long R12,RAX,XMM1 ; using XMM2, XMM5 as TEMP
474     vpshufd XMM1,XMM9
	vpmulld XMM1,XMM12,XMM1
	vphaddd XMM1,XMM1,XMM1
	vpmovzxdq XMM1,XMM1
	vpsllq XMM1,XMM1
	vpmuludq XMM2,XMM12,XMM9
	vpaddq XMM1,XMM1,XMM2	! mul packed4L
49d     vector_reduction_long R12,R12,XMM1 ; using XMM2, XMM5 as TEMP
4be     vpshufd XMM1,XMM3
	vpmulld XMM1,XMM13,XMM1
	vphaddd XMM1,XMM1,XMM1
	vpmovzxdq XMM1,XMM1
	vpsllq XMM1,XMM1
	vpmuludq XMM2,XMM13,XMM3
	vpaddq XMM1,XMM1,XMM2	! mul packed4L
4e5     vector_reduction_long R12,R12,XMM1 ; using XMM2, XMM3 as TEMP
506     vpshufd XMM1,XMM11
	vpmulld XMM1,XMM14,XMM1
	vphaddd XMM1,XMM1,XMM1
	vpmovzxdq XMM1,XMM1
	vpsllq XMM1,XMM1
	vpmuludq XMM2,XMM14,XMM11
	vpaddq XMM1,XMM1,XMM2	! mul packed4L
52f     vector_reduction_long RAX,R12,XMM1 ; using XMM8, XMM4 as TEMP
552     addl    RDX, #16	# int
555     cmpl    RDX, R8
558     jl     B34	# loop end  P=0.999999 C=10169086.000000

55e     B35: #	out( B33 B36 ) <- in( B34 )  Freq: 986875
55e     movq    RDI, [R15 + #304 (32-bit)]	# ptr
565     testl   rax, [RDI]	# Safepoint: poll for GC        # org.jml.regression.linear.LongLinearRegression::fit @ bci:128 (line 23) L[0]=XMM0 L[1]=RBP L[2]=RCX L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=R14 L[8]=_ L[9]=R13 L[10]=_ L[11]=RSI L[12]=_ L[13]=RAX L[14]=_ L[15]=RDX
        # OopMap {rcx=Oop rbp=Oop xmm0=Oop off=1381/0x565}
567     cmpl    RDX, R10
56a     jl     B33  P=0.999999 C=10169086.000000

570     B36: #	out( B39 B37 ) <- in( B35 )  Freq: 0.99998
570     movl    R11, R9	# spill
573     addl    R11, #-3	# int
577     cmpl    RDX, R11
        nop 	# 6 bytes pad for loops and calls
580     jge     B39  P=0.500000 C=-1.000000

586     B37: #	out( B38 ) <- in( B36 )  Freq: 0.49999
586     # castII of RDX
        nop 	# 2 bytes pad for loops and calls

588     B38: #	out( B38 B39 ) <- in( B37 B38 ) Loop( B38-B38 inner post of N1255) Freq: 0.99998
588     load_vector XMM1,[RCX + #16 + RDX << #3]
58e     load_vector XMM2,[RBP + #16 + RDX << #3]
594     vpsubq  XMM1,XMM1,XMM6	! sub packedL
598     vpsubq  XMM2,XMM2,XMM7	! sub packedL
59c     vpshufd XMM3,XMM1
	vpmulld XMM3,XMM2,XMM3
	vphaddd XMM3,XMM3,XMM3
	vpmovzxdq XMM3,XMM3
	vpsllq XMM3,XMM3
	vpmuludq XMM5,XMM2,XMM1
	vpaddq XMM1,XMM3,XMM5	! mul packed4L
5c3     vpshufd XMM3,XMM2
	vpmulld XMM3,XMM2,XMM3
	vphaddd XMM3,XMM3,XMM3
	vpmovzxdq XMM3,XMM3
	vpsllq XMM3,XMM3
	vpmuludq XMM5,XMM2,XMM2
	vpaddq XMM2,XMM3,XMM5	! mul packed4L
5ea     vector_reduction_long RSI,RSI,XMM2 ; using XMM3, XMM5 as TEMP
60b     vector_reduction_long RAX,RAX,XMM1 ; using XMM4, XMM2 as TEMP
62c     addl    RDX, #4	# int
62f     cmpl    RDX, R11
632     jl     B38	# loop end  P=0.500000 C=10169086.000000

638     B39: #	out( B42 B40 ) <- in( B24 B38 B36 )  Freq: 0.999981
638     cmpl    RDX, R9
63b     jge,s   B42  P=0.500000 C=-1.000000

63d     B40: #	out( B41 ) <- in( B39 )  Freq: 0.49999
63d     # castII of RDX
        nop 	# 3 bytes pad for loops and calls

640     B41: #	out( B41 B42 ) <- in( B40 B41 ) Loop( B41-B41 inner post of N480) Freq: 0.999981
640     movq    R10, [RCX + #16 + RDX << #3]	# long
645     movq    R11, [RBP + #16 + RDX << #3]	# long
64a     subq    R10, R13	# long
64d     subq    R11, R14	# long
650     imulq   R10, R11	# long
654     imulq   R11, R11	# long
658     addq    RAX, R10	# long
65b     addq    RSI, R11	# long
65e     incl    RDX	# int
660     cmpl    RDX, R9
663     jl,s   B41	# loop end  P=0.500000 C=10169086.000000

665     B42: #	out( B53 B43 ) <- in( B41 B39 )  Freq: 0.999981
665     testq   RSI, RSI
668     je     B53  P=0.000001 C=-1.000000

66e     B43: #	out( N688 ) <- in( B42 )  Freq: 0.99998
66e     movq    rdx, 0x8000000000000000	# ldiv
	cmpq    rax, rdx
	jne,s   normal
	xorl    rdx, rdx
	cmpq    RSI, -1
	je,s    done
normal: cdqq
	idivq   RSI
done:
68a     movdq   R10, XMM0	# spill
68f     movq    [R10 + #24 (8-bit)], RAX	# long ! Field: org/jml/regression/linear/LongLinearRegression.slope
69321.768 ms/op
     imulq   R14, RAX	# long
697     subq    R13, R14	# long
69a     movq    [R10 + #16 (8-bit)], R13	# long ! Field: org/jml/regression/linear/LongLinearRegression.intercept
69e     vzeroupper
	addq    rsp, 48	# Destroy frame
	popq    rbp
	cmpq     rsp, poll_offset[r15_thread] 
	ja       #safepoint_stub	# Safepoint: poll for GC

6b3     ret

6b4     B44: #	out( N688 ) <- in( B7 B6 B5 )  Freq: 3.02654e-06
6b4     movl    RSI, #-138	# int
6b9     movsd   [rsp + #0], XMM0	# spill
6be     movq    [rsp + #8], RCX	# spill
6c3     movl    [rsp + #16], R9	# spill
6c8     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:29 (line 13)# Warmup Iteration   6:  L[0]=rsp + #0 L[1]=RBP L[2]=rsp + #8 L[3]=#0 L[4]=_ L[5]=#0 L[6]=_ L[7]=#0 L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ STK[0]=#0 STK[1]=rsp + #16
        # OopMap {rbp=Oop [0]=Oop [8]=Oop off=1744/0x6d0}
6d0     stop	# ShouldNotReachHere

6e4     B45: #	out( B18 ) <- in( B8 )  Freq: 1.01327e-06
6e4     movl    R11, #1	# int
6ea     jmp     B18

6ef     B46: #	out( N688 ) <- in( B25 )  Freq: 1.01327e-06
6ef     stop	# ShouldNotReachHere

703     B47: #	out( N688 ) <- in( B26 )  Freq: 1.01326e-06
703     stop	# ShouldNotReachHere

717     B48: #	out( N688 ) <- in( B27 )  Freq: 1.01326e-06
717     stop	# ShouldNotReachHere

72b     B49: #	out( N688 ) <- in( B28 )  Freq: 1.01326e-06
72b     stop	# ShouldNotReachHere

73f     B50: #	out( N688 ) <- in( B29 )  Freq: 1.01326e-06
73f     stop	# ShouldNotReachHere

753     B51: #	out( N688 ) <- in( B30 )  Freq: 1.01326e-06
753     stop	# ShouldNotReachHere

767     B52: #	out( N688 ) <- in( B31 )  Freq: 1.01326e-06
767     stop	# ShouldNotReachHere

77b     B53: #	out( N688 ) <- in( B42 )  Freq: 1.01326e-06
77b     movl    RSI, #-122	# int
780     movq    RBP, RAX	# spill
        nop 	# 1 bytes pad for loops and calls
784     call,static  wrapper for: uncommon_trap(reason='div0_check' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:136 (line 29) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ STK[0]=_ STK[1]=RBP STK[2]=_ STK[3]=#0 STK[4]=_
        # OopMap {off=1932/0x78c}
78c     stop	# ShouldNotReachHere

7a0     B54: #	out( N688 ) <- in( B3 )  Freq: 9.99998e-07
7a0     movl    RSI, #7	# int
        nop 	# 3 bytes pad for loops and calls
7a8     call,static  wrapper for: uncommon_trap(reason='unloaded' action='reinterpret' index='7' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:7 (line 9) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_
        # OopMap {off=1968/0x7b0}
7b0     stop	# ShouldNotReachHere

7c4     B55: #	out( N688 ) <- in( B4 )  Freq: 9.99997e-07
7c4     movl    RSI, #-122	# int
        nop 	# 3 bytes pad for loops and calls
7cc     call,static  wrapper for: uncommon_trap(reason='div0_check' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:58 (line 18) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ STK[0]=#0 STK[1]=_ STK[2]=#0 STK[3]=_
        # OopMap {off=2004/0x7d4}
7d4     stop	# ShouldNotReachHere

7e8     B56: #	out( N688 ) <- in( B9 )  Freq: 9.99992e-07
7e8     stop	# ShouldNotReachHere

7fc     B57: #	out( N688 ) <- in( B10 )  Freq: 9.99991e-07
7fc     stop	# ShouldNotReachHere

810     B58: #	out( N688 ) <- in( B11 )  Freq: 9.9999e-07
810     stop	# ShouldNotReachHere

824     B59: #	out( N688 ) <- in( B12 )  Freq: 9.99989e-07
824     stop	# ShouldNotReachHere

838     B60: #	out( N688 ) <- in( B13 )  Freq: 9.99988e-07
838     stop	# ShouldNotReachHere

84c     B61: #	out( N688 ) <- in( B1 )  Freq: 1.01328e-06
84c     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
854     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:1 (line 9) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ STK[0]=#NULL
        # OopMap {off=2140/0x85c}
85c     stop	# ShouldNotReachHere

870     B62: #	out( N688 ) <- in( B2 )  Freq: 1.01328e-06
870     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
878     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.LongLinearRegression::fit @ bci:3 (line 9) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ STK[0]=_ STK[1]=#NULL
        # OopMap {off=2176/0x880}
880     stop	# ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    2742 1013       4       org.jml.regression.linear.LongLinearRegression::fit (155 bytes)
 total in heap  [0x00000001173d8b90,0x00000001173d9ce0] = 4432
 relocation     [0x00000001173d8d08,0x00000001173d8e08] = 256
 main code      [0x00000001173d8e20,0x00000001173d96e0] = 2240
 stub code      [0x00000001173d96e0,0x00000001173d96f8] = 24
 oops           [0x00000001173d96f8,0x00000001173d9700] = 8
 metadata       [0x00000001173d9700,0x00000001173d9708] = 8
 scopes data    [0x00000001173d9708,0x00000001173d9890] = 392
 scopes pcs     [0x00000001173d9890,0x00000001173d9cc0] = 1072
 dependencies   [0x00000001173d9cc0,0x00000001173d9cc8] = 8
 nul chk table  [0x00000001173d9cc8,0x00000001173d9ce0] = 24

[Constant Pool (empty)]

[MachCode]
[Entry Point]
  # {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
  # this:     rsi:rsi   = 'org/jml/regression/linear/LongLinearRegression'
  # parm0:    rdx:rdx   = '[J'
  # parm1:    rcx:rcx   = '[J'
  #           [sp+0x40]  (sp of caller)
 ;; N688: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00000001173d8e20: 448b 5608 | 49c1 e203 

  0x00000001173d8e28: ;   {runtime_call ic_miss_stub}
  0x00000001173d8e28: 493b c20f | 85ef 6a57 | f890 9090 | 9090 9090 | 9090 9090 | 9090 9090 
[Verified Entry Point]
 ;; B1: #	out( B61 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00000001173d8e40: 8984 2400 | a0fe ff55 

  0x00000001173d8e48: ;*synchronization entry
                      ; - org.jml.regression.linear.LongLinearRegression::fit@-1 (line 9)
  0x00000001173d8e48: 4883 ec30 | c4e1 f96e | c648 8bea 

  0x00000001173d8e54: ; implicit exception: dispatches to 0x00000001173d966c
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@1 (line 9)
  0x00000001173d8e54: 448b 4a0c 
 ;; B2: #	out( B62 B3 ) <- in( B1 )  Freq: 0.999999
  0x00000001173d8e58: ; implicit exception: dispatches to 0x00000001173d9690
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@3 (line 9)
  0x00000001173d8e58: 8b79 0c90 | 9090 9090 | 443b cf0f | 8557 0700 

  0x00000001173d8e68: ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@4 (line 9)
  0x00000001173d8e68: 0045 85c9 | 0f86 7207 

  0x00000001173d8e70: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
  0x00000001173d8e70: 0000 458b | d141 ffca | 453b d190 | 9090 9090 | 0f83 4e06 | 0000 85ff | 0f86 4606 | 0000 443b 
  0x00000001173d8e90: d70f 833d | 0600 004c 

  0x00000001173d8e98: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
  0x00000001173d8e98: 8b69 1048 

  0x00000001173d8e9c: ;*laload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@36 (line 14)
  0x00000001173d8e9c: 8b72 1045 | 8bd1 4183 

  0x00000001173d8ea4: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
  0x00000001173d8ea4: c2f9 41bc | 0100 0000 | 33db 4183 | fa01 0f8e | 4c06 0000 
 ;; B9: #	out( B56 B10 ) <- in( B8 )  Freq: 0.999992
  0x00000001173d8eb8: 83ff 0190 | 9090 9090 | 0f86 4207 | 0000 4183 | f901 0f86 | 4c07 0000 
 ;; B11: #	out( B58 B12 ) <- in( B10 )  Freq: 0.99999
  0x00000001173d8ed0: 4183 f908 | 0f86 5607 | 0000 9090 | 9090 9090 | 83ff 010f | 865b 0700 | 0083 ff08 | 0f86 6607 
  0x00000001173d8ef0: 0000 41b8 | 401f 0000 | 41bb 0100 | 0000 418b | d141 2bd3 | 83c2 f945 | 3bd3 0f4c | d381 fa40 
  0x00000001173d8f10: 1f00 0041 | 0f47 d041 | 03d3 9090 

  0x00000001173d8f1c: ;*lload_3 {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@32 (line 14)
  0x00000001173d8f1c: 9090 9090 
 ;; B16: #	out( B16 B17 ) <- in( B15 B16 ) Loop( B16-B16 inner main of N123 strip mined) Freq: 9.73949e+11
  0x00000001173d8f20: 4e03 6cd9 | 104a 0374 | dd10 4e03 | 6cd9 184a | 0374 dd18 | 4e03 6cd9 | 204a 0374 | dd20 4e03 
  0x00000001173d8f40: 6cd9 284a | 0374 dd28 | 4e03 6cd9 | 304a 0374 | dd30 4e03 | 6cd9 384a | 0374 dd38 | 4e03 6cd9 
  0x00000001173d8f60: 404a 0374 | dd40 4e03 

  0x00000001173d8f68: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@45 (line 15)
  0x00000001173d8f68: 6cd9 484a 

  0x00000001173d8f6c: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@37 (line 14)
  0x00000001173d8f6c: 0374 dd48 

  0x00000001173d8f70: ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@48 (line 13)
  0x00000001173d8f70: 4183 c308 | 443b da7c 

  0x00000001173d8f78: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
  0x00000001173d8f78: a749 8b87 | 3001 0000 

  0x00000001173d8f80: ; ImmutableOopMap {rcx=Oop rdx=Oop rbp=Oop xmm0=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
                      ;   {poll}
  0x00000001173d8f80: 488b d585 

  0x00000001173d8f84: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
  0x00000001173d8f84: 0045 3bda | 0f8c 70ff | ffff 453b 

  0x00000001173d8f90: ;*lload_3 {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@32 (line 14)
  0x00000001173d8f90: d97d 1390 
 ;; B20: #	out( B20 B21 ) <- in( B19 B20 ) Loop( B20-B20 inner post of N470) Freq: 0.999988
  0x00000001173d8f94: 4a03 74dd 

  0x00000001173d8f98: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@37 (line 14)
  0x00000001173d8f98: 104e 036c 

  0x00000001173d8f9c: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@45 (line 15)
  0x00000001173d8f9c: d910 41ff 

  0x00000001173d8fa0: ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@48 (line 13)
  0x00000001173d8fa0: c345 3bd9 

  0x00000001173d8fa4: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
  0x00000001173d8fa4: 7cee 4d63 

  0x00000001173d8fa8: ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@57 (line 18)
  0x00000001173d8fa8: d148 8bc6 | 48ba 0000 | 0000 0000 | 0080 4839 | d075 0833 | d249 83fa | ff74 0548 

  0x00000001173d8fc4: ;*ldiv {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@58 (line 18)
  0x00000001173d8fc4: 9949 f7fa | 4c8b f049 | 8bc5 48ba | 0000 0000 | 0000 0080 | 4839 d075 | 0833 d249 | 83fa ff74 
  0x00000001173d8fe4: 0548 9949 

  0x00000001173d8fe8: ;*ldiv {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@66 (line 19)
  0x00000001173d8fe8: f7fa 4c8b | e844 8bdd | 41c1 eb03 | 4183 e303 | 452b e341 | 83e4 0341 | ffc4 453b | e145 0f4f 
  0x00000001173d9008: e133 f645 

  0x00000001173d900c: ;*lload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@85 (line 24)
  0x00000001173d900c: 33c0 33c0 
 ;; B22: #	out( B24 B23 ) <- in( B21 B23 ) Loop( B22-B23 inner pre of N480) Freq: 1.99998
  0x00000001173d9010: 4e8b 5cc1 | 104e 8b54 | c510 4d2b 

  0x00000001173d901c: ;*lsub {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
  0x00000001173d901c: dd4d 2bd6 | 4d0f afda | 4d0f afd2 

  0x00000001173d9028: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
  0x00000001173d9028: 4903 c349 

  0x00000001173d902c: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
  0x00000001173d902c: 03f2 418b 

  0x00000001173d9030: ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
  0x00000001173d9030: d0ff c241 

  0x00000001173d9034: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
  0x00000001173d9034: 3bd4 7d05 
 ;; B23: #	out( B22 ) <- in( B22 )  Freq: 0.999988
  0x00000001173d9038: 448b c2eb | d345 8bd1 | 4183 c2f1 | 413b d20f | 8d0b 0400 | 003b d70f | 83ba 0400 | 003b d70f 
  0x00000001173d9058: 83c6 0400 | 0090 9090 | 413b d10f | 83ce 0400 | 0041 3bd1 | 0f83 d904 | 0000 4183 | c010 453b 
  0x00000001173d9078: c10f 83e0 | 0400 0090 | 3bd7 0f83 | eb04 0000 
 ;; B31: #	out( B52 B32 ) <- in( B30 )  Freq: 0.999981
  0x00000001173d9088: 443b c70f | 83f6 0400 | 00c4 c1f9 | 6ef5 c4e2 | 7d59 f6c4 | c1f9 6efe | c4e2 7d59 | ff41 bb80 
  0x00000001173d90a8: 3e00 0045 | 8bc1 442b | c241 83c0 | f144 3bd2 | 440f 4cc3 | 4181 f880 | 3e00 0045 | 0f47 c344 
  0x00000001173d90c8: 03c2 9090 

  0x00000001173d90cc: ;*lload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@85 (line 24)
  0x00000001173d90cc: 9090 9090 
 ;; B34: #	out( B34 B35 ) <- in( B33 B34 ) Loop( B34-B34 inner main of N269 strip mined) Freq: 9.73942e+11
  0x00000001173d90d0: c5fe 6f4c | d170 c57e | 6f44 d150 | c57e 6f4c | d130 c57e | 6f54 d110 | c5fe 6f54 | d570 c5fe 
  0x00000001173d90f0: 6f5c d550 | c5fe 6f64 | d530 c5fe | 6f6c d510 | c575 fbde | c5d5 fbef | c55d fbe7 | c565 fbef 
  0x00000001173d9110: ;*lsub {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
  0x00000001173d9110: c56d fbf7 | c52d fbd6 | c535 fbce | c5bd fbde | c5fd 70cd | b1c4 e255 | 40c9 c4e3 | 7d39 ca01 
  0x00000001173d9130: c4e2 7502 | cac4 e27d | 35c9 c5f5 | 73f1 20c5 | d5f4 d5c5 | f5d4 cac4 | e37d 39ca | 01c5 e9d4 
  0x00000001173d9150: d1c5 7970 | fa0e c501 | d4fa c4e1 | f96e d6c4 | c169 d4d7 | c4c1 f97e | d4c4 c17d | 70cc b1c4 
  0x00000001173d9170: e21d 40c9 | c4e3 7d39 | ca01 c4e2 | 7502 cac4 | e27d 35c9 | c5f5 73f1 | 20c4 c11d | f4d4 c5f5 
  0x00000001173d9190: d4ca c4e3 | 7d39 ca01 | c5e9 d4d1 | c579 70fa | 0ec5 01d4 | fac4 c1f9 | 6ed4 c4c1 | 69d4 d7c4 
  0x00000001173d91b0: c1f9 7ed4 | c4c1 7d70 | cdb1 c4e2 | 1540 c9c4 | e37d 39ca | 01c4 e275 | 02ca c4e2 | 7d35 c9c5 
  0x00000001173d91d0: f573 f120 | c4c1 15f4 | d5c5 f5d4 | cac4 e37d | 39ca 01c5 | e9d4 d1c5 | 7970 fa0e | c501 d4fa 
  0x00000001173d91f0: c4c1 f96e | d4c4 c169 | d4d7 c4c1 | f97e d4c4 | c17d 70ce | b1c4 e20d | 40c9 c4e3 | 7d39 ca01 
  0x00000001173d9210: c4e2 7502 | cac4 e27d | 35c9 c5f5 | 73f1 20c4 | c10d f4d6 | c5f5 d4ca | c4e3 7d39 | ca01 c5e9 
  0x00000001173d9230: d4d1 c579 | 70fa 0ec5 | 01d4 fac4 | c1f9 6ed4 | c4c1 69d4 | d7c4 e1f9 

  0x00000001173d9248: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
  0x00000001173d9248: 7ed6 c4c1 | 7d70 cab1 | c4e2 5540 | c9c4 e37d | 39ca 01c4 | e275 02ca | c4e2 7d35 | c9c5 f573 
  0x00000001173d9268: f120 c4c1 | 55f4 d2c5 | f5d4 cac4 | e37d 39ca | 01c5 e9d4 | d1c5 f970 | ea0e c5d1 | d4ea c4e1 
  0x00000001173d9288: f96e d0c5 | e9d4 d5c4 | c1f9 7ed4 | c4c1 7d70 | c9b1 c4e2 | 1d40 c9c4 | e37d 39ca | 01c4 e275 
  0x00000001173d92a8: 02ca c4e2 | 7d35 c9c5 | f573 f120 | c4c1 1df4 | d1c5 f5d4 | cac4 e37d | 39ca 01c5 | e9d4 d1c5 
  0x00000001173d92c8: f970 ea0e | c5d1 d4ea | c4c1 f96e | d4c5 e9d4 | d5c4 c1f9 | 7ed4 c5fd | 70cb b1c4 | e215 40c9 
  0x00000001173d92e8: c4e3 7d39 | ca01 c4e2 | 7502 cac4 | e27d 35c9 | c5f5 73f1 | 20c5 95f4 | d3c5 f5d4 | cac4 e37d 
  0x00000001173d9308: 39ca 01c5 | e9d4 d1c5 | f970 da0e | c5e1 d4da | c4c1 f96e | d4c5 e9d4 | d3c4 c1f9 | 7ed4 c4c1 
  0x00000001173d9328: 7d70 cbb1 | c4e2 0d40 | c9c4 e37d | 39ca 01c4 | e275 02ca | c4e2 7d35 | c9c5 f573 | f120 c4c1 
  0x00000001173d9348: 0df4 d3c5 | f5d4 cac4 | c37d 39c8 | 01c5 39d4 | c1c4 c179 | 70e0 0ec4 | c159 d4e0 | c441 f96e 
  0x00000001173d9368: c4c5 39d4 | c4c4 61f9 

  0x00000001173d9370: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
  0x00000001173d9370: 7ec0 83c2 

  0x00000001173d9374: ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
  0x00000001173d9374: 1041 3bd0 | 0f8c 52fd 

  0x00000001173d937c: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
  0x00000001173d937c: ffff 498b 

  0x00000001173d9380: ;   {no_reloc}
  0x00000001173d9380: bf30 0100 

  0x00000001173d9384: ; ImmutableOopMap {rcx=Oop rbp=Oop xmm0=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
                      ;   {poll}
  0x00000001173d9384: 0085 0741 | 3bd2 0f8c | 1bfd ffff 
 ;; B36: #	out( B39 B37 ) <- in( B35 )  Freq: 0.99998
  0x00000001173d9390: 458b d941 | 83c3 fd41 | 3bd3 9090 | 9090 9090 | 0f8d b200 

  0x00000001173d93a4: ;*lload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@85 (line 24)
  0x00000001173d93a4: 0000 9090 
 ;; B38: #	out( B38 B39 ) <- in( B37 B38 ) Loop( B38-B38 inner post of N1255) Freq: 0.99998
  0x00000001173d93a8: c5fe 6f4c | d110 c5fe | 6f54 d510 | c5f5 fbce 

  0x00000001173d93b8: ;*lsub {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
  0x00000001173d93b8: c5ed fbd7 | c5fd 70d9 | b1c4 e26d | 40db c4e3 | 7d39 dd01 | c4e2 6502 | ddc4 e27d | 35db c5e5 
  0x00000001173d93d8: 73f3 20c5 | edf4 e9c5 | e5d4 cdc5 | fd70 dab1 | c4e2 6d40 | dbc4 e37d | 39dd 01c4 | e265 02dd 
  0x00000001173d93f8: c4e2 7d35 | dbc5 e573 | f320 c5ed | f4ea c5e5 | d4d5 c4e3 | 7d39 d301 | c5e1 d4da | c5f9 70eb 
  0x00000001173d9418: 0ec5 d1d4 | ebc4 e1f9 | 6ede c5e1 | d4dd c4e1 

  0x00000001173d9428: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
  0x00000001173d9428: f97e dec4 | e37d 39cc | 01c5 d9d4 | e1c5 f970 | d40e c5e9 | d4d4 c4e1 | f96e e0c5 | d9d4 e2c4 
  0x00000001173d9448: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
  0x00000001173d9448: e1f9 7ee0 

  0x00000001173d944c: ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
  0x00000001173d944c: 83c2 0441 | 3bd3 0f8c 

  0x00000001173d9454: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
  0x00000001173d9454: 50ff ffff 
 ;; B39: #	out( B42 B40 ) <- in( B24 B38 B36 )  Freq: 0.999981
  0x00000001173d9458: 413b d17d 

  0x00000001173d945c: ;*lload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@85 (line 24)
  0x00000001173d945c: 2890 9090 
 ;; B41: #	out( B41 B42 ) <- in( B40 B41 ) Loop( B41-B41 inner post of N480) Freq: 0.999981
  0x00000001173d9460: 4c8b 54d1 | 104c 8b5c | d510 4d2b 

  0x00000001173d946c: ;*lsub {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
  0x00000001173d946c: d54d 2bde | 4d0f afd3 | 4d0f afdb 

  0x00000001173d9478: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
  0x00000001173d9478: 4903 c249 

  0x00000001173d947c: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
  0x00000001173d947c: 03f3 ffc2 | 413b d17c 

  0x00000001173d9484: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
  0x00000001173d9484: db48 85f6 | 0f84 0d01 | 0000 48ba | 0000 0000 | 0000 0080 | 4839 d075 | 0833 d248 | 83fe ff74 
  0x00000001173d94a4: 0548 9948 

  0x00000001173d94a8: ;*ldiv {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
  0x00000001173d94a8: f7fe c4c1 | f97e c249 

  0x00000001173d94b0: ;*putfield slope {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)
  0x00000001173d94b0: 8942 184c | 0faf f04d | 2bee 4d89 

  0x00000001173d94bc: ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@3 (line 9)
  0x00000001173d94bc: 6a10 c5f8 | 7748 83c4 

  0x00000001173d94c4: ;   {poll_return}
  0x00000001173d94c4: 305d 493b | a728 0100 | 000f 87e1 

  0x00000001173d94d0: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
  0x00000001173d94d0: 0100 00c3 
 ;; B44: #	out( N688 ) <- in( B7 B6 B5 )  Freq: 3.02654e-06
  0x00000001173d94d4: be76 ffff | ffc5 fb11 | 0424 4889 | 4c24 0844 | 894c 2410 

  0x00000001173d94e8: ;   {runtime_call UncommonTrapBlob}
  0x00000001173d94e8: c5f8 77e8 

  0x00000001173d94ec: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop }
                      ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
  0x00000001173d94ec: 5070 57f8 

  0x00000001173d94f0: ;   {external_word}
  0x00000001173d94f0: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173d94fc: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d94fc: e4f0 e84d 

  0x00000001173d9500: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
  0x00000001173d9500: 7a90 f2f4 
 ;; B45: #	out( B18 ) <- in( B8 )  Freq: 1.01327e-06
  0x00000001173d9504: 41bb 0100 | 0000 e97f 

  0x00000001173d950c: ;   {external_word}
  0x00000001173d950c: faff ff48 | bf31 2542 | 0a01 0000 | 0048 83e4 

  0x00000001173d951c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d951c: f0e8 2e7a 

  0x00000001173d9520: ;   {external_word}
  0x00000001173d9520: 90f2 f448 | bf31 2542 | 0a01 0000 | 0048 83e4 

  0x00000001173d9530: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d9530: f0e8 1a7a 

  0x00000001173d9534: ;   {external_word}
  0x00000001173d9534: 90f2 f448 | bf31 2542 | 0a01 0000 | 0048 83e4 

  0x00000001173d9544: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d9544: f0e8 067a 

  0x00000001173d9548: ;   {external_word}
  0x00000001173d9548: 90f2 f448 | bf31 2542 | 0a01 0000 | 0048 83e4 

  0x00000001173d9558: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d9558: f0e8 f279 

  0x00000001173d955c: ;   {external_word}
  0x00000001173d955c: 90f2 f448 | bf31 2542 | 0a01 0000 | 0048 83e4 

  0x00000001173d956c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d956c: f0e8 de79 

  0x00000001173d9570: ;   {external_word}
  0x00000001173d9570: 90f2 f448 | bf31 2542 | 0a01 0000 | 0048 83e4 

  0x00000001173d9580: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d9580: f0e8 ca79 

  0x00000001173d9584: ;   {external_word}
  0x00000001173d9584: 90f2 f448 | bf31 2542 | 0a01 0000 | 0048 83e4 

  0x00000001173d9594: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d9594: f0e8 b679 | 90f2 f4be | 86ff ffff | 488b e890 

  0x00000001173d95a4: ;   {runtime_call UncommonTrapBlob}
  0x00000001173d95a4: c5f8 77e8 

  0x00000001173d95a8: ; ImmutableOopMap {}
                      ;*ldiv {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
  0x00000001173d95a8: 946f 57f8 

  0x00000001173d95ac: ;   {external_word}
  0x00000001173d95ac: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173d95b8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d95b8: e4f0 e891 

  0x00000001173d95bc: ;*ldiv {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
  0x00000001173d95bc: 7990 f2f4 
 ;; B54: #	out( N688 ) <- in( B3 )  Freq: 9.99998e-07
  0x00000001173d95c0: be07 0000 | 0090 9090 

  0x00000001173d95c8: ;   {runtime_call UncommonTrapBlob}
  0x00000001173d95c8: c5f8 77e8 

  0x00000001173d95cc: ; ImmutableOopMap {}
                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@7 (line 9)
  0x00000001173d95cc: 706f 57f8 

  0x00000001173d95d0: ;   {external_word}
  0x00000001173d95d0: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173d95dc: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d95dc: e4f0 e86d 

  0x00000001173d95e0: ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@7 (line 9)
  0x00000001173d95e0: 7990 f2f4 
 ;; B55: #	out( N688 ) <- in( B4 )  Freq: 9.99997e-07
  0x00000001173d95e4: be86 ffff | ff90 9090 

  0x00000001173d95ec: ;   {runtime_call UncommonTrapBlob}
  0x00000001173d95ec: c5f8 77e8 

  0x00000001173d95f0: ; ImmutableOopMap {}
                      ;*ldiv {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@58 (line 18)
  0x00000001173d95f0: 4c6f 57f8 

  0x00000001173d95f4: ;   {external_word}
  0x00000001173d95f4: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173d9600: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d9600: e4f0 e849 

  0x00000001173d9604: ;*ldiv {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@58 (line 18)
  0x00000001173d9604: 7990 f2f4 
 ;; B56: #	out( N688 ) <- in( B9 )  Freq: 9.99992e-07
  0x00000001173d9608: ;   {external_word}
  0x00000001173d9608: 48bf 3125 | 420a 0100 | 0000 4883 

  0x00000001173d9614: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d9614: e4f0 e835 | 7990 f2f4 
 ;; B57: #	out( N688 ) <- in( B10 )  Freq: 9.99991e-07
  0x00000001173d961c: ;   {external_word}
  0x00000001173d961c: 48bf 3125 | 420a 0100 | 0000 4883 

  0x00000001173d9628: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d9628: e4f0 e821 | 7990 f2f4 
 ;; B58: #	out( N688 ) <- in( B11 )  Freq: 9.9999e-07
  0x00000001173d9630: ;   {external_word}
  0x00000001173d9630: 48bf 3125 | 420a 0100 | 0000 4883 

  0x00000001173d963c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d963c: e4f0 e80d | 7990 f2f4 
 ;; B59: #	out( N688 ) <- in( B12 )  Freq: 9.99989e-07
  0x00000001173d9644: ;   {external_word}
  0x00000001173d9644: 48bf 3125 | 420a 0100 | 0000 4883 

  0x00000001173d9650: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d9650: e4f0 e8f9 | 7890 f2f4 
 ;; B60: #	out( N688 ) <- in( B13 )  Freq: 9.99988e-07
  0x00000001173d9658: ;   {external_word}
  0x00000001173d9658: 48bf 3125 | 420a 0100 | 0000 4883 

  0x00000001173d9664: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d9664: e4f0 e8e5 | 7890 f2f4 
 ;; B61: #	out( N688 ) <- in( B1 )  Freq: 1.01328e-06
  0x00000001173d966c: bef6 ffff | ff90 9090 

  0x00000001173d9674: ;   {runtime_call UncommonTrapBlob}
  0x00000001173d9674: c5f8 77e8 

  0x00000001173d9678: ; ImmutableOopMap {}
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@1 (line 9)
  0x00000001173d9678: c46e 57f8 

  0x00000001173d967c: ;   {external_word}
  0x00000001173d967c: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173d9688: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d9688: e4f0 e8c1 

  0x00000001173d968c: ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@1 (line 9)
  0x00000001173d968c: 7890 f2f4 
 ;; B62: #	out( N688 ) <- in( B2 )  Freq: 1.01328e-06
  0x00000001173d9690: bef6 ffff | ff90 9090 

  0x00000001173d9698: ;   {runtime_call UncommonTrapBlob}
  0x00000001173d9698: c5f8 77e8 

  0x00000001173d969c: ; ImmutableOopMap {}
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@3 (line 9)
  0x00000001173d969c: a06e 57f8 

  0x00000001173d96a0: ;   {external_word}
  0x00000001173d96a0: 48bf 7777 | 3a0a 0100 | 0000 4883 

  0x00000001173d96ac: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001173d96ac: e4f0 e89d 

  0x00000001173d96b0: ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.LongLinearRegression::fit@3 (line 9)
  0x00000001173d96b0: 7890 f2f4 

  0x00000001173d96b4: ;   {internal_word}
  0x00000001173d96b4: 49ba c694 | 3d17 0100 | 0000 4d89 | 97e8 0300 

  0x00000001173d96c4: ;   {runtime_call SafepointBlob}
  0x00000001173d96c4: 00e9 567b | 57f8 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 
[Exception Handler]
  0x00000001173d96e0: ;   {no_reloc}
  0x00000001173d96e0: e93b 1a4c | f8e8 0000 | 0000 4883 

  0x00000001173d96ec: ;   {runtime_call DeoptimizationBlob}
  0x00000001173d96ec: 2c24 05e9 | 6c71 57f8 | f4f4 f4f4 
[/MachCode]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00000001173d96f8:   0x000000011ed59890 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011ed59890}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00000001173d9700:   0x000000010ec8fa60 {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00000001173d8e1f offset=ffffffff bits=0):
PcDesc(pc=0x00000001173d8e4c offset=2c bits=0):   org.jml.regression.linear.LongLinearRegression::fit@-1 (line 9)
PcDesc(pc=0x00000001173d8e58 offset=38 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@1 (line 9)
PcDesc(pc=0x00000001173d8e5b offset=3b bits=0):   org.jml.regression.linear.LongLinearRegression::fit@3 (line 9)
PcDesc(pc=0x00000001173d8e69 offset=49 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@4 (line 9)
PcDesc(pc=0x00000001173d8e72 offset=52 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
PcDesc(pc=0x00000001173d8e9b offset=7b bits=0):   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
PcDesc(pc=0x00000001173d8e9f offset=7f bits=0):   org.jml.regression.linear.LongLinearRegression::fit@36 (line 14)
PcDesc(pc=0x00000001173d8ea6 offset=86 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
PcDesc(pc=0x00000001173d8f20 offset=100 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@32 (line 14)
PcDesc(pc=0x00000001173d8f6b offset=14b bits=0):   org.jml.regression.linear.LongLinearRegression::fit@45 (line 15)
PcDesc(pc=0x00000001173d8f70 offset=150 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@37 (line 14)
PcDesc(pc=0x00000001173d8f74 offset=154 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@48 (line 13)
PcDesc(pc=0x00000001173d8f79 offset=159 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
PcDesc(pc=0x00000001173d8f83 offset=163 bits=1):   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)  reexecute=true
   Locals
    - l0: reg xmm0 [48],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: reg rsi [12],long
    - l5: 0
    - l6: reg r13 [26],long
    - l7: reg r11 [22],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x00000001173d8f85 offset=165 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
PcDesc(pc=0x00000001173d8f94 offset=174 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@32 (line 14)
PcDesc(pc=0x00000001173d8f99 offset=179 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@37 (line 14)
PcDesc(pc=0x00000001173d8f9e offset=17e bits=0):   org.jml.regression.linear.LongLinearRegression::fit@45 (line 15)
PcDesc(pc=0x00000001173d8fa1 offset=181 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@48 (line 13)
PcDesc(pc=0x00000001173d8fa6 offset=186 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
PcDesc(pc=0x00000001173d8fa9 offset=189 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@57 (line 18)
PcDesc(pc=0x00000001173d8fc8 offset=1a8 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@58 (line 18)
PcDesc(pc=0x00000001173d8fea offset=1ca bits=0):   org.jml.regression.linear.LongLinearRegression::fit@66 (line 19)
PcDesc(pc=0x00000001173d9010 offset=1f0 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@85 (line 24)
PcDesc(pc=0x00000001173d9020 offset=200 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
PcDesc(pc=0x00000001173d902b offset=20b bits=0):   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
PcDesc(pc=0x00000001173d902e offset=20e bits=0):   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
PcDesc(pc=0x00000001173d9033 offset=213 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
PcDesc(pc=0x00000001173d9038 offset=218 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
PcDesc(pc=0x00000001173d90d0 offset=2b0 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@85 (line 24)
PcDesc(pc=0x00000001173d9114 offset=2f4 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
PcDesc(pc=0x00000001173d924a offset=42a bits=0):   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
PcDesc(pc=0x00000001173d9372 offset=552 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
PcDesc(pc=0x00000001173d9375 offset=555 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
PcDesc(pc=0x00000001173d937e offset=55e bits=0):   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
PcDesc(pc=0x00000001173d9385 offset=565 bits=1):   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)  reexecute=true
   Locals
    - l0: reg xmm0 [48],oop
    - l1: reg rbp [10],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: reg r14 [28],long
    - l9: 0
    - l10: reg r13 [26],long
    - l11: 0
    - l12: reg rsi [12],long
    - l13: 0
    - l14: reg rax [0],long
    - l15: reg rdx [4],int
PcDesc(pc=0x00000001173d9387 offset=567 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
PcDesc(pc=0x00000001173d93a8 offset=588 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@85 (line 24)
PcDesc(pc=0x00000001173d93bc offset=59c bits=0):   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
PcDesc(pc=0x00000001173d942b offset=60b bits=0):   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
PcDesc(pc=0x00000001173d944c offset=62c bits=0):   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
PcDesc(pc=0x00000001173d944f offset=62f bits=0):   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
PcDesc(pc=0x00000001173d9458 offset=638 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
PcDesc(pc=0x00000001173d9460 offset=640 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@85 (line 24)
PcDesc(pc=0x00000001173d9470 offset=650 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
PcDesc(pc=0x00000001173d947b offset=65b bits=0):   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
PcDesc(pc=0x00000001173d947e offset=65e bits=0):   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
PcDesc(pc=0x00000001173d9480 offset=660 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
PcDesc(pc=0x00000001173d9485 offset=665 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
PcDesc(pc=0x00000001173d94aa offset=68a bits=0):   org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
PcDesc(pc=0x00000001173d94b3 offset=693 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)
PcDesc(pc=0x00000001173d94be offset=69e bits=0):   org.jml.regression.linear.LongLinearRegression::fit@3 (line 9)
PcDesc(pc=0x00000001173d94d4 offset=6b4 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
PcDesc(pc=0x00000001173d94f0 offset=6d0 bits=1):   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)  reexecute=true
   Locals
    - l0: stack[0],oop
    - l1: reg rbp [10],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: 0
    - @1: stack[16]
PcDesc(pc=0x00000001173d9504 offset=6e4 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
PcDesc(pc=0x00000001173d95ac offset=78c bits=0):   org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: empty
    - @1: 0
    - @2: reg rbp [10],long
    - @3: 0
    - @4: 0
PcDesc(pc=0x00000001173d95c0 offset=7a0 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
PcDesc(pc=0x00000001173d95d0 offset=7b0 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@7 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
PcDesc(pc=0x00000001173d95e4 offset=7c4 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@7 (line 9)
PcDesc(pc=0x00000001173d95f4 offset=7d4 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@58 (line 18)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: 0
    - @1: 0
    - @2: 0
    - @3: 0
PcDesc(pc=0x00000001173d9608 offset=7e8 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@58 (line 18)
PcDesc(pc=0x00000001173d967c offset=85c bits=0):   org.jml.regression.linear.LongLinearRegression::fit@1 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: NULL
PcDesc(pc=0x00000001173d9690 offset=870 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@1 (line 9)
PcDesc(pc=0x00000001173d96a0 offset=880 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@3 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: empty
    - @1: NULL
PcDesc(pc=0x00000001173d96b4 offset=894 bits=0):   org.jml.regression.linear.LongLinearRegression::fit@3 (line 9)
PcDesc(pc=0x00000001173d96f9 offset=8d9 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 8 OopMaps

ImmutableOopMap {rcx=Oop rdx=Oop rbp=Oop xmm0=Oop } pc offsets: 355 
ImmutableOopMap {rcx=Oop rbp=Oop xmm0=Oop } pc offsets: 1381 
ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop } pc offsets: 1744 
ImmutableOopMap {} pc offsets: 1932 1968 2004 2140 2176 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00000001173d8e4c offset=2c):
   org.jml.regression.linear.LongLinearRegression::fit@-1 (line 9)
ScopeDesc(pc=0x00000001173d8e58 offset=38):
   org.jml.regression.linear.LongLinearRegression::fit@1 (line 9)
ScopeDesc(pc=0x00000001173d8e5b offset=3b):
   org.jml.regression.linear.LongLinearRegression::fit@3 (line 9)
ScopeDesc(pc=0x00000001173d8e69 offset=49):
   org.jml.regression.linear.LongLinearRegression::fit@4 (line 9)
ScopeDesc(pc=0x00000001173d8e72 offset=52):
   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
ScopeDesc(pc=0x00000001173d8e9b offset=7b):
   org.jml.regression.linear.LongLinearRegression::fit@44 (line 15)
ScopeDesc(pc=0x00000001173d8e9f offset=7f):
   org.jml.regression.linear.LongLinearRegression::fit@36 (line 14)
ScopeDesc(pc=0x00000001173d8ea6 offset=86):
   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
ScopeDesc(pc=0x00000001173d8f20 offset=100):
   org.jml.regression.linear.LongLinearRegression::fit@32 (line 14)
ScopeDesc(pc=0x00000001173d8f6b offset=14b):
   org.jml.regression.linear.LongLinearRegression::fit@45 (line 15)
ScopeDesc(pc=0x00000001173d8f70 offset=150):
   org.jml.regression.linear.LongLinearRegression::fit@37 (line 14)
ScopeDesc(pc=0x00000001173d8f74 offset=154):
   org.jml.regression.linear.LongLinearRegression::fit@48 (line 13)
ScopeDesc(pc=0x00000001173d8f79 offset=159):
   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
ScopeDesc(pc=0x00000001173d8f83 offset=163):
   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)  reexecute=true
   Locals
    - l0: reg xmm0 [48],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: reg rsi [12],long
    - l5: 0
    - l6: reg r13 [26],long
    - l7: reg r11 [22],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x00000001173d8f85 offset=165):
   org.jml.regression.linear.LongLinearRegression::fit@51 (line 13)
ScopeDesc(pc=0x00000001173d8f94 offset=174):
   org.jml.regression.linear.LongLinearRegression::fit@32 (line 14)
ScopeDesc(pc=0x00000001173d8f99 offset=179):
   org.jml.regression.linear.LongLinearRegression::fit@37 (line 14)
ScopeDesc(pc=0x00000001173d8f9e offset=17e):
   org.jml.regression.linear.LongLinearRegression::fit@45 (line 15)
ScopeDesc(pc=0x00000001173d8fa1 offset=181):
   org.jml.regression.linear.LongLinearRegression::fit@48 (line 13)
ScopeDesc(pc=0x00000001173d8fa6 offset=186):
   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
ScopeDesc(pc=0x00000001173d8fa9 offset=189):
   org.jml.regression.linear.LongLinearRegression::fit@57 (line 18)
ScopeDesc(pc=0x00000001173d8fc8 offset=1a8):
   org.jml.regression.linear.LongLinearRegression::fit@58 (line 18)
ScopeDesc(pc=0x00000001173d8fea offset=1ca):
   org.jml.regression.linear.LongLinearRegression::fit@66 (line 19)
ScopeDesc(pc=0x00000001173d9010 offset=1f0):
   org.jml.regression.linear.LongLinearRegression::fit@85 (line 24)
ScopeDesc(pc=0x00000001173d9020 offset=200):
   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
ScopeDesc(pc=0x00000001173d902b offset=20b):
   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
ScopeDesc(pc=0x00000001173d902e offset=20e):
   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
ScopeDesc(pc=0x00000001173d9033 offset=213):
   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
ScopeDesc(pc=0x00000001173d9038 offset=218):
   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
ScopeDesc(pc=0x00000001173d90d0 offset=2b0):
   org.jml.regression.linear.LongLinearRegression::fit@85 (line 24)
ScopeDesc(pc=0x00000001173d9114 offset=2f4):
   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
ScopeDesc(pc=0x00000001173d924a offset=42a):
   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
ScopeDesc(pc=0x00000001173d9372 offset=552):
   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
ScopeDesc(pc=0x00000001173d9375 offset=555):
   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
ScopeDesc(pc=0x00000001173d937e offset=55e):
   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
ScopeDesc(pc=0x00000001173d9385 offset=565):
   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)  reexecute=true
   Locals
    - l0: reg xmm0 [48],oop
    - l1: reg rbp [10],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: reg r14 [28],long
    - l9: 0
    - l10: reg r13 [26],long
    - l11: 0
    - l12: reg rsi [12],long
    - l13: 0
    - l14: reg rax [0],long
    - l15: reg rdx [4],int
ScopeDesc(pc=0x00000001173d9387 offset=567):
   org.jml.regression.linear.LongLinearRegression::fit@128 (line 23)
ScopeDesc(pc=0x00000001173d93a8 offset=588):
   org.jml.regression.linear.LongLinearRegression::fit@85 (line 24)
ScopeDesc(pc=0x00000001173d93bc offset=59c):
   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
ScopeDesc(pc=0x00000001173d942b offset=60b):
   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
ScopeDesc(pc=0x00000001173d944c offset=62c):
   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
ScopeDesc(pc=0x00000001173d944f offset=62f):
   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
ScopeDesc(pc=0x00000001173d9458 offset=638):
   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
ScopeDesc(pc=0x00000001173d9460 offset=640):
   org.jml.regression.linear.LongLinearRegression::fit@85 (line 24)
ScopeDesc(pc=0x00000001173d9470 offset=650):
   org.jml.regression.linear.LongLinearRegression::fit@93 (line 24)
ScopeDesc(pc=0x00000001173d947b offset=65b):
   org.jml.regression.linear.LongLinearRegression::fit@122 (line 25)
ScopeDesc(pc=0x00000001173d947e offset=65e):
   org.jml.regression.linear.LongLinearRegression::fit@102 (line 24)
ScopeDesc(pc=0x00000001173d9480 offset=660):
   org.jml.regression.linear.LongLinearRegression::fit@125 (line 23)
ScopeDesc(pc=0x00000001173d9485 offset=665):
   org.jml.regression.linear.LongLinearRegression::fit@82 (line 23)
ScopeDesc(pc=0x00000001173d94aa offset=68a):
   org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
ScopeDesc(pc=0x00000001173d94b3 offset=693):
   org.jml.regression.linear.LongLinearRegression::fit@137 (line 29)
ScopeDesc(pc=0x00000001173d94be offset=69e):
   org.jml.regression.linear.LongLinearRegression::fit@3 (line 9)
ScopeDesc(pc=0x00000001173d94d4 offset=6b4):
   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
ScopeDesc(pc=0x00000001173d94f0 offset=6d0):
   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)  reexecute=true
   Locals
    - l0: stack[0],oop
    - l1: reg rbp [10],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: 0
    - @1: stack[16]
ScopeDesc(pc=0x00000001173d9504 offset=6e4):
   org.jml.regression.linear.LongLinearRegression::fit@29 (line 13)
ScopeDesc(pc=0x00000001173d95ac offset=78c):
   org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: empty
    - @1: 0
    - @2: reg rbp [10],long
    - @3: 0
    - @4: 0
ScopeDesc(pc=0x00000001173d95c0 offset=7a0):
   org.jml.regression.linear.LongLinearRegression::fit@136 (line 29)
ScopeDesc(pc=0x00000001173d95d0 offset=7b0):
   org.jml.regression.linear.LongLinearRegression::fit@7 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
ScopeDesc(pc=0x00000001173d95e4 offset=7c4):
   org.jml.regression.linear.LongLinearRegression::fit@7 (line 9)
ScopeDesc(pc=0x00000001173d95f4 offset=7d4):
   org.jml.regression.linear.LongLinearRegression::fit@58 (line 18)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: 0
    - @1: 0
    - @2: 0
    - @3: 0
ScopeDesc(pc=0x00000001173d9608 offset=7e8):
   org.jml.regression.linear.LongLinearRegression::fit@58 (line 18)
ScopeDesc(pc=0x00000001173d967c offset=85c):
   org.jml.regression.linear.LongLinearRegression::fit@1 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: NULL
ScopeDesc(pc=0x00000001173d9690 offset=870):
   org.jml.regression.linear.LongLinearRegression::fit@1 (line 9)
ScopeDesc(pc=0x00000001173d96a0 offset=880):
   org.jml.regression.linear.LongLinearRegression::fit@3 (line 9)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
   Expression stack
    - @0: empty
    - @1: NULL
ScopeDesc(pc=0x00000001173d96b4 offset=894):
   org.jml.regression.linear.LongLinearRegression::fit@3 (line 9)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00000001173d8d08: 600b
relocInfo@0x00000001173d8d08 [type=6(runtime_call) addr=0x00000001173d8e2b offset=11] | [destination=0x000000010f94f920]
         @0x00000001173d8d0a: a158
relocInfo@0x00000001173d8d0a [type=10(poll) addr=0x00000001173d8f83 offset=344]
         @0x00000001173d8d0c: 03ff
relocInfo@0x00000001173d8d0c [type=0(none) addr=0x00000001173d9382 offset=1023]
         @0x00000001173d8d0e: a003
relocInfo@0x00000001173d8d0e [type=10(poll) addr=0x00000001173d9385 offset=3]
         @0x00000001173d8d10: b141
relocInfo@0x00000001173d8d10 [type=11(poll_return) addr=0x00000001173d94c6 offset=321]
         @0x00000001173d8d12: 6425
relocInfo@0x00000001173d8d12 [type=6(runtime_call) addr=0x00000001173d94eb offset=37 format=1] | [destination=0x000000010f950540]
         @0x00000001173d8d14: f8030a3a777700017005
relocInfo@0x00000001173d8d1c [type=7(external_word) addr=0x00000001173d94f0 offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173d8d1e: 640e
relocInfo@0x00000001173d8d1e [type=6(runtime_call) addr=0x00000001173d94fe offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d8d20: f8030a42253100017011
relocInfo@0x00000001173d8d28 [type=7(external_word) addr=0x00000001173d950f offset=17 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173d8d2a: 640e
relocInfo@0x00000001173d8d2a [type=6(runtime_call) addr=0x00000001173d951d offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d8d2c: f8030a42253100017006
relocInfo@0x00000001173d8d34 [type=7(external_word) addr=0x00000001173d9523 offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173d8d36: 640e
relocInfo@0x00000001173d8d36 [type=6(runtime_call) addr=0x00000001173d9531 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d8d38: f8030a42253100017006
relocInfo@0x00000001173d8d40 [type=7(external_word) addr=0x00000001173d9537 offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173d8d42: 640e
relocInfo@0x00000001173d8d42 [type=6(runtime_call) addr=0x00000001173d9545 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d8d44: f8030a42253100017006
relocInfo@0x00000001173d8d4c [type=7(external_word) addr=0x00000001173d954b offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173d8d4e: 640e
relocInfo@0x00000001173d8d4e [type=6(runtime_call) addr=0x00000001173d9559 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d8d50: f8030a42253100017006
relocInfo@0x00000001173d8d58 [type=7(external_word) addr=0x00000001173d955f offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173d8d5a: 640e
relocInfo@0x00000001173d8d5a [type=6(runtime_call) addr=0x00000001173d956d offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d8d5c: f8030a42253100017006
relocInfo@0x00000001173d8d64 [type=7(external_word) addr=0x00000001173d9573 offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173d8d66: 640e
relocInfo@0x00000001173d8d66 [type=6(runtime_call) addr=0x00000001173d9581 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d8d68: f8030a42253100017006
relocInfo@0x00000001173d8d70 [type=7(external_word) addr=0x00000001173d9587 offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173d8d72: 640e
relocInfo@0x00000001173d8d72 [type=6(runtime_call) addr=0x00000001173d9595 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d8d74: 6412
relocInfo@0x00000001173d8d74 [type=6(runtime_call) addr=0x00000001173d95a7 offset=18 format=1] | [destination=0x000000010f950540]
         @0x00000001173d8d76: f8030a3a777700017005
relocInfo@0x00000001173d8d7e [type=7(external_word) addr=0x00000001173d95ac offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173d8d80: 640e
relocInfo@0x00000001173d8d80 [type=6(runtime_call) addr=0x00000001173d95ba offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d8d82: 6411
relocInfo@0x00000001173d8d82 [type=6(runtime_call) addr=0x00000001173d95cb offset=17 format=1] | [destination=0x000000010f950540]
         @0x00000001173d8d84: f8030a3a777700017005
relocInfo@0x00000001173d8d8c [type=7(external_word) addr=0x00000001173d95d0 offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173d8d8e: 640e
relocInfo@0x00000001173d8d8e [type=6(runtime_call) addr=0x00000001173d95de offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d8d90: 6411
relocInfo@0x00000001173d8d90 [type=6(runtime_call) addr=0x00000001173d95ef offset=17 format=1] | [destination=0x000000010f950540]
         @0x00000001173d8d92: f8030a3a777700017005
relocInfo@0x00000001173d8d9a [type=7(external_word) addr=0x00000001173d95f4 offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173d8d9c: 640e
relocInfo@0x00000001173d8d9c [type=6(runtime_call) addr=0x00000001173d9602 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d8d9e: f8030a42253100017006
relocInfo@0x00000001173d8da6 [type=7(external_word) addr=0x00000001173d9608 offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173d8da8: 640e
relocInfo@0x00000001173d8da8 [type=6(runtime_call) addr=0x00000001173d9616 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d8daa: f8030a42253100017006
relocInfo@0x00000001173d8db2 [type=7(external_word) addr=0x00000001173d961c offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173d8db4: 640e
relocInfo@0x00000001173d8db4 [type=6(runtime_call) addr=0x00000001173d962a offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d8db6: f8030a42253100017006
relocInfo@0x00000001173d8dbe [type=7(external_word) addr=0x00000001173d9630 offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173d8dc0: 640e
relocInfo@0x00000001173d8dc0 [type=6(runtime_call) addr=0x00000001173d963e offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d8dc2: f8030a42253100017006
relocInfo@0x00000001173d8dca [type=7(external_word) addr=0x00000001173d9644 offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173d8dcc: 640e
relocInfo@0x00000001173d8dcc [type=6(runtime_call) addr=0x00000001173d9652 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d8dce: f8030a42253100017006
relocInfo@0x00000001173d8dd6 [type=7(external_word) addr=0x00000001173d9658 offset=6 data={0a4225310001}] | [target=0x000000010a422531]
         @0x00000001173d8dd8: 640e
relocInfo@0x00000001173d8dd8 [type=6(runtime_call) addr=0x00000001173d9666 offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d8dda: 6411
relocInfo@0x00000001173d8dda [type=6(runtime_call) addr=0x00000001173d9677 offset=17 format=1] | [destination=0x000000010f950540]
         @0x00000001173d8ddc: f8030a3a777700017005
relocInfo@0x00000001173d8de4 [type=7(external_word) addr=0x00000001173d967c offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173d8de6: 640e
relocInfo@0x00000001173d8de6 [type=6(runtime_call) addr=0x00000001173d968a offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d8de8: 6411
relocInfo@0x00000001173d8de8 [type=6(runtime_call) addr=0x00000001173d969b offset=17 format=1] | [destination=0x000000010f950540]
         @0x00000001173d8dea: f8030a3a777700017005
relocInfo@0x00000001173d8df2 [type=7(external_word) addr=0x00000001173d96a0 offset=5 data={0a3a77770001}] | [target=0x000000010a3a7777]
         @0x00000001173d8df4: 640e
relocInfo@0x00000001173d8df4 [type=6(runtime_call) addr=0x00000001173d96ae offset=14 format=1] | [destination=0x0000000109ce0f50]
         @0x00000001173d8df6: f1ee8006
relocInfo@0x00000001173d8df8 [type=8(internal_word) addr=0x00000001173d96b4 offset=6 data=494] | [target=0x00000001173d94c6]
         @0x00000001173d8dfa: 6411
relocInfo@0x00000001173d8dfa [type=6(runtime_call) addr=0x00000001173d96c5 offset=17 format=1] | [destination=0x000000010f951220]
         @0x00000001173d8dfc: 001b
relocInfo@0x00000001173d8dfc [type=0(none) addr=0x00000001173d96e0 offset=27]
         @0x00000001173d8dfe: 6400
relocInfo@0x00000001173d8dfe [type=6(runtime_call) addr=0x00000001173d96e0 offset=0 format=1] | [destination=0x000000010f89b120]
         @0x00000001173d8e00: 640f
relocInfo@0x00000001173d8e00 [type=6(runtime_call) addr=0x00000001173d96ef offset=15 format=1] | [destination=0x000000010f950860]
         @0x00000001173d8e02: 0000
relocInfo@0x00000001173d8e02 [type=0(none) addr=0x00000001173d96ef offset=0]
         @0x00000001173d8e04: 0000
relocInfo@0x00000001173d8e04 [type=0(none) addr=0x00000001173d96ef offset=0]
         @0x00000001173d8e06: 0000
relocInfo@0x00000001173d8e06 [type=0(none) addr=0x00000001173d96ef offset=0]
         @0x00000001173d8e08: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 2 entries, 20 bytes):
{
   < 0x00000001173d8e54, 0x00000001173d966c > < 0x00000001173d8e58, 0x00000001173d9690 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 NULL-oop
#1: 0x000000011ed59890 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011ed59890}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
#0: 0x0000000000000000 NULL-oop
#1: 0x000000010ec8fa60 {method} {0x000000010ec8fa60} 'fit' '([J[J)V' in 'org/jml/regression/linear/LongLinearRegression'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
21.570 ms/op
# Warmup Iteration   7: 22.847 ms/op
# Warmup Iteration   8: 23.781 ms/op
# Warmup Iteration   9: 23.787 ms/op
# Warmup Iteration  10: 23.845 ms/op
# Warmup Iteration  11: 25.449 ms/op
# Warmup Iteration  12: 24.768 ms/op
# Warmup Iteration  13: 24.056 ms/op
# Warmup Iteration  14: 23.884 ms/op
# Warmup Iteration  15: 23.760 ms/op
# Warmup Iteration  16: 23.880 ms/op
# Warmup Iteration  17: 24.212 ms/op
# Warmup Iteration  18: 23.893 ms/op
# Warmup Iteration  19: 23.977 ms/op
# Warmup Iteration  20: 23.641 ms/op
# Warmup Iteration  21: 23.603 ms/op
# Warmup Iteration  22: 23.883 ms/op
# Warmup Iteration  23: 25.028 ms/op
# Warmup Iteration  24: 24.720 ms/op
# Warmup Iteration  25: 25.404 ms/op
# Warmup Iteration  26: 23.972 ms/op
# Warmup Iteration  27: 23.701 ms/op
# Warmup Iteration  28: 25.164 ms/op
# Warmup Iteration  29: 23.767 ms/op
# Warmup Iteration  30: 23.711 ms/op
# Warmup Iteration  31: 23.680 ms/op
# Warmup Iteration  32: 23.913 ms/op
# Warmup Iteration  33: 23.337 ms/op
# Warmup Iteration  34: 23.679 ms/op
# Warmup Iteration  35: 23.761 ms/op
# Warmup Iteration  36: 24.986 ms/op
# Warmup Iteration  37: 23.741 ms/op
# Warmup Iteration  38: 24.373 ms/op
# Warmup Iteration  39: 23.432 ms/op
# Warmup Iteration  40: 23.690 ms/op
# Warmup Iteration  41: 25.208 ms/op
# Warmup Iteration  42: 24.285 ms/op
# Warmup Iteration  43: 24.036 ms/op
# Warmup Iteration  44: 24.067 ms/op
# Warmup Iteration  45: 24.642 ms/op
# Warmup Iteration  46: 23.974 ms/op
# Warmup Iteration  47: 23.922 ms/op
# Warmup Iteration  48: 24.214 ms/op
# Warmup Iteration  49: 23.879 ms/op
# Warmup Iteration  50: 25.258 ms/op
# Warmup Iteration  51: 25.269 ms/op
# Warmup Iteration  52: 25.366 ms/op
# Warmup Iteration  53: 23.954 ms/op
# Warmup Iteration  54: 24.006 ms/op
# Warmup Iteration  55: 25.120 ms/op
# Warmup Iteration  56: 23.840 ms/op
# Warmup Iteration  57: 23.965 ms/op
# Warmup Iteration  58: 24.286 ms/op
# Warmup Iteration  59: 24.065 ms/op
# Warmup Iteration  60: 24.549 ms/op
# Warmup Iteration  61: 23.742 ms/op
# Warmup Iteration  62: 23.745 ms/op
# Warmup Iteration  63: 23.742 ms/op
# Warmup Iteration  64: 23.773 ms/op
# Warmup Iteration  65: 24.853 ms/op
# Warmup Iteration  66: 25.007 ms/op
# Warmup Iteration  67: 24.957 ms/op
# Warmup Iteration  68: 25.355 ms/op
# Warmup Iteration  69: 23.741 ms/op
# Warmup Iteration  70: 23.680 ms/op
# Warmup Iteration  71: 23.853 ms/op
# Warmup Iteration  72: 23.847 ms/op
# Warmup Iteration  73: 23.888 ms/op
# Warmup Iteration  74: 23.818 ms/op
# Warmup Iteration  75: 23.773 ms/op
# Warmup Iteration  76: 23.871 ms/op
# Warmup Iteration  77: 23.673 ms/op
# Warmup Iteration  78: 24.587 ms/op
# Warmup Iteration  79: 23.677 ms/op
# Warmup Iteration  80: 24.361 ms/op
# Warmup Iteration  81: 23.777 ms/op
# Warmup Iteration  82: 23.741 ms/op
# Warmup Iteration  83: 25.097 ms/op
# Warmup Iteration  84: 25.202 ms/op
# Warmup Iteration  85: 23.703 ms/op
# Warmup Iteration  86: 23.775 ms/op
# Warmup Iteration  87: 23.741 ms/op
# Warmup Iteration  88: 23.738 ms/op
# Warmup Iteration  89: 23.893 ms/op
# Warmup Iteration  90: 23.320 ms/op
# Warmup Iteration  91: 25.547 ms/op
# Warmup Iteration  92: 23.973 ms/op
# Warmup Iteration  93: 25.316 ms/op
# Warmup Iteration  94: 24.643 ms/op
# Warmup Iteration  95: 24.014 ms/op
# Warmup Iteration  96: 23.788 ms/op
# Warmup Iteration  97: 23.739 ms/op
# Warmup Iteration  98: 25.335 ms/op
# Warmup Iteration  99: 24.175 ms/op
# Warmup Iteration 100: 24.261 ms/op
Iteration   1: 23.957 ms/op
Iteration   2: 23.962 ms/op
Iteration   3: 24.735 ms/op
Iteration   4: 25.030 ms/op
Iteration   5: 25.024 ms/op
Iteration   6: 23.750 ms/op
Iteration   7: 24.099 ms/op
Iteration   8: 24.036 ms/op
Iteration   9: 23.885 ms/op
Iteration  10: 23.822 ms/op
------------------------------------------------------------------------
org.jml.regression.linear.LongLinearRegression::fit([J[J)V
  interpreter_invocation_count:        6 
  invocation_counter:                  6 
  backedge_counter:             30194688 
  mdo size: 600 bytes

0 aload_1
1 arraylength
2 aload_2
3 arraylength
4 if_icmpeq 17
  0   bci: 4    BranchData          taken(5) displacement(48)
                                    not taken(0)
7 new 7 <java/lang/IllegalArgumentException>
10 dup
11 fast_aldc Arrays length are not equals
13 invokespecial 11 <java/lang/IllegalArgumentException.<init>(Ljava/lang/String;)V> 
  32  bci: 13   CounterData         count(0)
16 athrow
17 lconst_0
18 lstore_3
19 lconst_0
20 lstore #5
22 iconst_0
23 istore #7
25 fast_iload #7
27 aload_1
28 arraylength
29 if_icmpge 54
  48  bci: 29   BranchData          trap(intrinsic_or_type_checked_inlining recompiled) taken(3) displacement(56)
                                    not taken(19904765)
32 lload_3
33 aload_1
34 fast_iload #7
36 laload
37 ladd
38 lstore_3
39 lload #5
41 aload_2
42 fast_iload #7
44 laload
45 ladd
46 lstore #5
48 iinc #7 1
51 goto 25
  80  bci: 51   JumpData            taken(19904765) displacement(-32)
54 lload_3
55 aload_1
56 arraylength
57 i2l
58 ldiv
59 lstore #7
61 lload #5
63 aload_1
64 arraylength
65 i2l
66 ldiv
67 lstore #9
69 lconst_0
70 lstore #11
72 lconst_0
73 lstore #13
75 iconst_0
76 istore #15
78 fast_iload #15
80 aload_1
81 arraylength
82 if_icmpge 131
  104 bci: 82   BranchData          trap(intrinsic_or_type_checked_inlining recompiled) taken(1) displacement(56)
                                    not taken(10169086)
85 lload #11
87 aload_1
88 fast_iload #15
90 laload
91 lload #7
93 lsub
94 aload_1
95 fast_iload #15
97 laload
98 lload #7
100 lsub
101 lmul
102 ladd
103 lstore #11
105 lload #13
107 aload_1
108 fast_iload #15
110 laload
111 lload #7
113 lsub
114 aload_2
115 fast_iload #15
117 laload
118 lload #9
120 lsub
121 lmul
122 ladd
123 lstore #13
125 iinc #15 1
128 goto 78
  136 bci: 128  JumpData            taken(10169086) displacement(-32)
131 fast_aload_0
132 lload #13
134 lload #11
136 ldiv
137 fast_lputfield 14 <org/jml/regression/linear/LongLinearRegression.slope/J> 
140 fast_aload_0
141 lload #9
143 aload_0
144 fast_lgetfield 14 <org/jml/regression/linear/LongLinearRegression.slope/J> 
147 lload #7
149 lmul
150 lsub
151 fast_lputfield 20 <org/jml/regression/linear/LongLinearRegression.intercept/J> 
154 return
------------------------------------------------------------------------
Total MDO size: 600 bytes


Result "org.jml.regression.linear.BenchmarkLinearRegression.testLongLinearRegression":
  N = 10
  mean =     24.230 ±(99.9%) 0.755 ms/op

  Histogram, ms/op:
    [23.000, 23.250) = 0 
    [23.250, 23.500) = 0 
    [23.500, 23.750) = 1 
    [23.750, 24.000) = 4 
    [24.000, 24.250) = 2 
    [24.250, 24.500) = 0 
    [24.500, 24.750) = 1 
    [24.750, 25.000) = 0 
    [25.000, 25.250) = 2 
    [25.250, 25.500) = 0 
    [25.500, 25.750) = 0 

  Percentiles, ms/op:
      p(0.0000) =     23.750 ms/op
     p(50.0000) =     23.999 ms/op
     p(90.0000) =     25.029 ms/op
     p(95.0000) =     25.030 ms/op
     p(99.0000) =     25.030 ms/op
     p(99.9000) =     25.030 ms/op
     p(99.9900) =     25.030 ms/op
     p(99.9990) =     25.030 ms/op
     p(99.9999) =     25.030 ms/op
    p(100.0000) =     25.030 ms/op


# JMH version: 1.32
# VM version: JDK 16-internal, OpenJDK 64-Bit Server VM, 16-internal+0-adhoc.ominil.jdk16
# VM invoker: /Library/Java/JavaVirtualMachines/macosx-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector -XX:+UnlockDiagnosticVMOptions -XX:CompileCommand=print,*LongLinearRegression::fit -XX:PrintAssemblyOptions=intel -XX:-UseCompressedOops
# Blackhole mode: full + dont-inline hint
# Warmup: 100 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: org.jml.regression.linear.BenchmarkLinearRegression.testLongVectorLinearRegression

# Run progress: 50.00% complete, ETA 00:00:05
# Fork: 1 of 1
CompileCommand: print *LongLinearRegression.fit bool print = true
OpenJDK 64-Bit Server VM warning: printing of assembly code is enabled; turning on DebugNonSafepoints to gain additional output
# Warmup Iteration   1: 494.500 ms/op
# Warmup Iteration   2: 201.224 ms/op
# Warmup Iteration   3: 18.098 ms/op
# Warmup Iteration   4: 20.832 ms/op
# Warmup Iteration   5: 19.525 ms/op
# Warmup Iteration   6: 19.805 ms/op
# Warmup Iteration   7: 19.196 ms/op
# Warmup Iteration   8: 19.720 ms/op
# Warmup Iteration   9: 19.635 ms/op
# Warmup Iteration  10: 19.298 ms/op
# Warmup Iteration  11: 20.844 ms/op
# Warmup Iteration  12: 20.806 ms/op
# Warmup Iteration  13: 19.659 ms/op
# Warmup Iteration  14: 19.738 ms/op
# Warmup Iteration  15: 19.934 ms/op
# Warmup Iteration  16: 20.104 ms/op
# Warmup Iteration  17: 22.454 ms/op
# Warmup Iteration  18: 21.437 ms/op
# Warmup Iteration  19: 20.282 ms/op
# Warmup Iteration  20: 19.174 ms/op
# Warmup Iteration  21: 19.689 ms/op
# Warmup Iteration  22: 19.620 ms/op
# Warmup Iteration  23: 19.427 ms/op
# Warmup Iteration  24: 21.167 ms/op
# Warmup Iteration  25: 21.142 ms/op
# Warmup Iteration  26: 21.127 ms/op
# Warmup Iteration  27: 19.940 ms/op
# Warmup Iteration  28: 19.668 ms/op
# Warmup Iteration  29: 19.355 ms/op
# Warmup Iteration  30: 19.717 ms/op
# Warmup Iteration  31: 21.777 ms/op
# Warmup Iteration  32: 19.721 ms/op
# Warmup Iteration  33: 19.556 ms/op
# Warmup Iteration  34: 19.811 ms/op
# Warmup Iteration  35: 22.626 ms/op
# Warmup Iteration  36: 21.680 ms/op
# Warmup Iteration  37: 20.098 ms/op
# Warmup Iteration  38: 19.864 ms/op
# Warmup Iteration  39: 19.680 ms/op
# Warmup Iteration  40: 19.451 ms/op
# Warmup Iteration  41: 19.524 ms/op
# Warmup Iteration  42: 19.528 ms/op
# Warmup Iteration  43: 21.061 ms/op
# Warmup Iteration  44: 19.923 ms/op
# Warmup Iteration  45: 19.837 ms/op
# Warmup Iteration  46: 21.314 ms/op
# Warmup Iteration  47: 20.772 ms/op
# Warmup Iteration  48: 19.145 ms/op
# Warmup Iteration  49: 19.086 ms/op
# Warmup Iteration  50: 19.093 ms/op
# Warmup Iteration  51: 19.305 ms/op
# Warmup Iteration  52: 19.210 ms/op
# Warmup Iteration  53: 19.100 ms/op
# Warmup Iteration  54: 19.168 ms/op
# Warmup Iteration  55: 19.144 ms/op
# Warmup Iteration  56: 20.613 ms/op
# Warmup Iteration  57: 19.259 ms/op
# Warmup Iteration  58: 18.530 ms/op
# Warmup Iteration  59: 18.471 ms/op
# Warmup Iteration  60: 23.067 ms/op
# Warmup Iteration  61: 19.907 ms/op
# Warmup Iteration  62: 20.809 ms/op
# Warmup Iteration  63: 19.860 ms/op
# Warmup Iteration  64: 19.132 ms/op
# Warmup Iteration  65: 20.969 ms/op
# Warmup Iteration  66: 21.607 ms/op
# Warmup Iteration  67: 21.937 ms/op
# Warmup Iteration  68: 20.921 ms/op
# Warmup Iteration  69: 19.412 ms/op
# Warmup Iteration  70: 20.961 ms/op
# Warmup Iteration  71: 20.474 ms/op
# Warmup Iteration  72: 20.918 ms/op
# Warmup Iteration  73: 20.406 ms/op
# Warmup Iteration  74: 19.539 ms/op
# Warmup Iteration  75: 21.595 ms/op
# Warmup Iteration  76: 21.086 ms/op
# Warmup Iteration  77: 21.639 ms/op
# Warmup Iteration  78: 19.304 ms/op
# Warmup Iteration  79: 18.724 ms/op
# Warmup Iteration  80: 19.515 ms/op
# Warmup Iteration  81: 20.017 ms/op
# Warmup Iteration  82: 22.335 ms/op
# Warmup Iteration  83: 19.810 ms/op
# Warmup Iteration  84: 21.224 ms/op
# Warmup Iteration  85: 21.971 ms/op
# Warmup Iteration  86: 22.128 ms/op
# Warmup Iteration  87: 19.868 ms/op
# Warmup Iteration  88: 20.011 ms/op
# Warmup Iteration  89: 20.803 ms/op
# Warmup Iteration  90: 22.296 ms/op
# Warmup Iteration  91: 20.158 ms/op
# Warmup Iteration  92: 20.287 ms/op
# Warmup Iteration  93: 19.893 ms/op
# Warmup Iteration  94: 19.962 ms/op
# Warmup Iteration  95: 19.734 ms/op
# Warmup Iteration  96: 20.514 ms/op
# Warmup Iteration  97: 21.466 ms/op
# Warmup Iteration  98: 22.260 ms/op
# Warmup Iteration  99: 19.776 ms/op
# Warmup Iteration 100: 19.179 ms/op
Iteration   1: 18.819 ms/op
Iteration   2: 18.825 ms/op
Iteration   3: 18.801 ms/op
Iteration   4: 19.287 ms/op
Iteration   5: 21.240 ms/op
Iteration   6: 19.200 ms/op
Iteration   7: 18.779 ms/op
Iteration   8: 22.595 ms/op
Iteration   9: 19.778 ms/op
Iteration  10: 21.848 ms/op


Result "org.jml.regression.linear.BenchmarkLinearRegression.testLongVectorLinearRegression":
  N = 10
  mean =     19.917 ±(99.9%) 2.169 ms/op

  Histogram, ms/op:
    [18.000, 18.500) = 0 
    [18.500, 19.000) = 4 
    [19.000, 19.500) = 2 
    [19.500, 20.000) = 1 
    [20.000, 20.500) = 0 
    [20.500, 21.000) = 0 
    [21.000, 21.500) = 1 
    [21.500, 22.000) = 1 
    [22.000, 22.500) = 0 

  Percentiles, ms/op:
      p(0.0000) =     18.779 ms/op
     p(50.0000) =     19.243 ms/op
     p(90.0000) =     22.521 ms/op
     p(95.0000) =     22.595 ms/op
     p(99.0000) =     22.595 ms/op
     p(99.9000) =     22.595 ms/op
     p(99.9900) =     22.595 ms/op
     p(99.9990) =     22.595 ms/op
     p(99.9999) =     22.595 ms/op
    p(100.0000) =     22.595 ms/op


# Run complete. Total time: 00:00:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                 Mode  Cnt   Score   Error  Units
BenchmarkLinearRegression.testLongLinearRegression          ss   10  24.230 ± 0.755  ms/op
BenchmarkLinearRegression.testLongVectorLinearRegression    ss   10  19.917 ± 2.169  ms/op
