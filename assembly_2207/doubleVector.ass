CompileCommand: print *DoubleVectorLinearRegression.fit bool print = true
# JMH version: 1.32
# VM version: JDK 16-internal, OpenJDK 64-Bit Server VM, 16-internal+0-adhoc.ominil.jdk16
# VM invoker: /Library/Java/JavaVirtualMachines/macosx-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector -XX:+UnlockDiagnosticVMOptions -XX:CompileCommand=print,*DoubleVectorLinearRegression::fit -XX:PrintAssemblyOptions=intel -XX:-UseCompressedOops
# Blackhole mode: full + dont-inline hint
# Warmup: 100 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: org.jml.regression.linear.BenchmarkLinearRegression.testDoubleLinearRegression

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
CompiOlpeeCnoJmDmKa n6d4:- Bpirti nSte r*vDeoru bVlMe VweacrtnoirnLgi:n eparriRnetgirnegs soifo na.sfsietm bbloyo lc opdrei nit s enabled; turning on DebugNonSafepoints to gain addi=ti otnraule out
put
# Warmup Iteration   1: 42.592 ms/op
# Warmup Iteration   2: 32.253 ms/op
# Warmup Iteration   3: 34.563 ms/op
# Warmup Iteration   4: 22.699 ms/op
# Warmup Iteration   5: 25.367 ms/op
# Warmup Iteration   6: 25.595 ms/op
# Warmup Iteration   7: 25.505 ms/op
# Warmup Iteration   8: 25.494 ms/op
# Warmup Iteration   9: 25.518 ms/op
# Warmup Iteration  10: 25.729 ms/op
# Warmup Iteration  11: 25.573 ms/op
# Warmup Iteration  12: 25.546 ms/op
# Warmup Iteration  13: 25.517 ms/op
# Warmup Iteration  14: 25.547 ms/op
# Warmup Iteration  15: 25.558 ms/op
# Warmup Iteration  16: 25.549 ms/op
# Warmup Iteration  17: 25.533 ms/op
# Warmup Iteration  18: 25.503 ms/op
# Warmup Iteration  19: 25.582 ms/op
# Warmup Iteration  20: 25.599 ms/op
# Warmup Iteration  21: 25.683 ms/op
# Warmup Iteration  22: 25.647 ms/op
# Warmup Iteration  23: 25.598 ms/op
# Warmup Iteration  24: 25.536 ms/op
# Warmup Iteration  25: 25.595 ms/op
# Warmup Iteration  26: 25.572 ms/op
# Warmup Iteration  27: 25.517 ms/op
# Warmup Iteration  28: 25.499 ms/op
# Warmup Iteration  29: 25.507 ms/op
# Warmup Iteration  30: 25.484 ms/op
# Warmup Iteration  31: 25.477 ms/op
# Warmup Iteration  32: 25.580 ms/op
# Warmup Iteration  33: 25.500 ms/op
# Warmup Iteration  34: 25.516 ms/op
# Warmup Iteration  35: 25.617 ms/op
# Warmup Iteration  36: 25.490 ms/op
# Warmup Iteration  37: 25.500 ms/op
# Warmup Iteration  38: 25.484 ms/op
# Warmup Iteration  39: 25.523 ms/op
# Warmup Iteration  40: 25.524 ms/op
# Warmup Iteration  41: 25.716 ms/op
# Warmup Iteration  42: 25.647 ms/op
# Warmup Iteration  43: 25.547 ms/op
# Warmup Iteration  44: 25.618 ms/op
# Warmup Iteration  45: 25.521 ms/op
# Warmup Iteration  46: 25.505 ms/op
# Warmup Iteration  47: 25.548 ms/op
# Warmup Iteration  48: 25.577 ms/op
# Warmup Iteration  49: 25.500 ms/op
# Warmup Iteration  50: 25.506 ms/op
# Warmup Iteration  51: 25.511 ms/op
# Warmup Iteration  52: 25.607 ms/op
# Warmup Iteration  53: 25.550 ms/op
# Warmup Iteration  54: 25.504 ms/op
# Warmup Iteration  55: 25.493 ms/op
# Warmup Iteration  56: 25.547 ms/op
# Warmup Iteration  57: 25.551 ms/op
# Warmup Iteration  58: 25.617 ms/op
# Warmup Iteration  59: 25.726 ms/op
# Warmup Iteration  60: 25.588 ms/op
# Warmup Iteration  61: 25.790 ms/op
# Warmup Iteration  62: 25.546 ms/op
# Warmup Iteration  63: 25.530 ms/op
# Warmup Iteration  64: 25.604 ms/op
# Warmup Iteration  65: 25.506 ms/op
# Warmup Iteration  66: 25.496 ms/op
# Warmup Iteration  67: 25.512 ms/op
# Warmup Iteration  68: 25.496 ms/op
# Warmup Iteration  69: 25.504 ms/op
# Warmup Iteration  70: 25.514 ms/op
# Warmup Iteration  71: 25.517 ms/op
# Warmup Iteration  72: 25.512 ms/op
# Warmup Iteration  73: 25.508 ms/op
# Warmup Iteration  74: 25.653 ms/op
# Warmup Iteration  75: 25.519 ms/op
# Warmup Iteration  76: 25.554 ms/op
# Warmup Iteration  77: 25.501 ms/op
# Warmup Iteration  78: 25.392 ms/op
# Warmup Iteration  79: 25.506 ms/op
# Warmup Iteration  80: 25.702 ms/op
# Warmup Iteration  81: 25.647 ms/op
# Warmup Iteration  82: 25.539 ms/op
# Warmup Iteration  83: 25.542 ms/op
# Warmup Iteration  84: 25.522 ms/op
# Warmup Iteration  85: 25.539 ms/op
# Warmup Iteration  86: 25.536 ms/op
# Warmup Iteration  87: 25.652 ms/op
# Warmup Iteration  88: 25.511 ms/op
# Warmup Iteration  89: 25.523 ms/op
# Warmup Iteration  90: 25.573 ms/op
# Warmup Iteration  91: 25.539 ms/op
# Warmup Iteration  92: 25.501 ms/op
# Warmup Iteration  93: 25.487 ms/op
# Warmup Iteration  94: 25.508 ms/op
# Warmup Iteration  95: 25.507 ms/op
# Warmup Iteration  96: 25.483 ms/op
# Warmup Iteration  97: 25.807 ms/op
# Warmup Iteration  98: 25.551 ms/op
# Warmup Iteration  99: 25.535 ms/op
# Warmup Iteration 100: 25.593 ms/op
Iteration   1: 25.575 ms/op
Iteration   2: 25.645 ms/op
Iteration   3: 25.601 ms/op
Iteration   4: 25.617 ms/op
Iteration   5: 25.580 ms/op
Iteration   6: 25.500 ms/op
Iteration   7: 25.490 ms/op
Iteration   8: 25.499 ms/op
Iteration   9: 25.541 ms/op
Iteration  10: 26.255 ms/op


Result "org.jml.regression.linear.BenchmarkLinearRegression.testDoubleLinearRegression":
  N = 10
  mean =     25.631 Â±(99.9%) 0.341 ms/op

  Histogram, ms/op:
    [25.400, 25.450) = 0 
    [25.450, 25.500) = 2 
    [25.500, 25.550) = 2 
    [25.550, 25.600) = 2 
    [25.600, 25.650) = 3 
    [25.650, 25.700) = 0 
    [25.700, 25.750) = 0 
    [25.750, 25.800) = 0 
    [25.800, 25.850) = 0 
    [25.850, 25.900) = 0 
    [25.900, 25.950) = 0 
    [25.950, 26.000) = 0 
    [26.000, 26.050) = 0 
    [26.050, 26.100) = 0 
    [26.100, 26.150) = 0 
    [26.150, 26.200) = 0 
    [26.200, 26.250) = 0 

  Percentiles, ms/op:
      p(0.0000) =     25.490 ms/op
     p(50.0000) =     25.578 ms/op
     p(90.0000) =     26.194 ms/op
     p(95.0000) =     26.255 ms/op
     p(99.0000) =     26.255 ms/op
     p(99.9000) =     26.255 ms/op
     p(99.9900) =     26.255 ms/op
     p(99.9990) =     26.255 ms/op
     p(99.9999) =     26.255 ms/op
    p(100.0000) =     26.255 ms/op


# JMH version: 1.32
# VM version: JDK 16-internal, OpenJDK 64-Bit Server VM, 16-internal+0-adhoc.ominil.jdk16
# VM invoker: /Library/Java/JavaVirtualMachines/macosx-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector -XX:+UnlockDiagnosticVMOptions -XX:CompileCommand=print,*DoubleVectorLinearRegression::fit -XX:PrintAssemblyOptions=intel -XX:-UseCompressedOops
# Blackhole mode: full + dont-inline hint
# Warmup: 100 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: org.jml.regression.linear.BenchmarkLinearRegression.testDoubleVectorLinearRegression

# Run progress: 50.00% complete, ETA 00:00:05
# Fork: 1 of 1
CompileCommand: print *DoubleVecOtpoernLJiDnKe a6r4R-egresBsiiotn .Sfeirtv ebro oVlM  pwrairnnti n=g :t rpurei
nting of assembly code is enabled; turning on DebugNonSafepoints to gain additional output
# Warmup Iteration   1: 
============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    2512 1091 %     3       org.jml.regression.linear.DoubleVectorLinearRegression::fit @ 54 (378 bytes)
 total in heap  [0x000000011123c810,0x0000000111245120] = 35088
 relocation     [0x000000011123c988,0x000000011123d208] = 2176
 constants      [0x000000011123d220,0x000000011123d240] = 32
 main code      [0x000000011123d240,0x0000000111242540] = 21248
 stub code      [0x0000000111242540,0x0000000111242748] = 520
 oops           [0x0000000111242748,0x0000000111242798] = 80
 metadata       [0x0000000111242798,0x0000000111242848] = 176
 scopes data    [0x0000000111242848,0x0000000111243f78] = 5936
 scopes pcs     [0x0000000111243f78,0x0000000111245028] = 4272
 dependencies   [0x0000000111245028,0x0000000111245030] = 8
 nul chk table  [0x0000000111245030,0x0000000111245120] = 240


[Constant Pool]
             Address          hex4                    hex8      
  0x000000011123d220:   0x00000000      0x0000000000000000      
  0x000000011123d224:   0x00000000                              
  0x000000011123d228:   0x00000000      0x0000000000000000      
  0x000000011123d22c:   0x00000000                              
  0x000000011123d230:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x000000011123d234:   0xf4f4f4f4                              
  0x000000011123d238:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x000000011123d23c:   0xf4f4f4f4                              

[MachCode]
[Entry Point]
  # {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
 ;;  block B254 [0, 0]
  0x000000011123d240: ;   {no_reloc}
  0x000000011123d240: 448b 5608 | 49c1 e203 

  0x000000011123d248: ;   {runtime_call ic_miss_stub}
  0x000000011123d248: 4c3b d00f | 85cf c69b | ff90 9090 | 9090 9090 | 9090 9090 | 9090 9090 
[Verified Entry Point]
  0x000000011123d260: 8984 2400 | a0fe ff55 | 4881 ecc0 

  0x000000011123d26c: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011123d26c: 0200 0049 | b840 46a0 | 6702 0000 | 0045 8b88 | 1c01 0000 | 4183 c102 | 4589 881c | 0100 0041 
  0x000000011123d28c: 81e1 fe07 | 0000 4183 | f900 0f84 

  0x000000011123d298: ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@0 (line 15)
  0x000000011123d298: e240 0000 
 ;;  block B255 [0, 0]
 ;;  block B0 [0, 4]
  0x000000011123d29c: ; implicit exception: dispatches to 0x000000011124139f
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@1 (line 15)
  0x000000011123d29c: 448b 420c 

  0x000000011123d2a0: ; implicit exception: dispatches to 0x00000001112413b8
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@3 (line 15)
  0x000000011123d2a0: 448b 490c 

  0x000000011123d2a4: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011123d2a4: 453b c149 | b940 46a0 | 6702 0000 | 0048 bf70 | 0100 0000 | 0000 000f | 850a 0000 | 0048 bf60 
  0x000000011123d2c4: 0100 0000 | 0000 0049 | 8b1c 3948 | 8d5b 0149 | 891c 390f | 85d7 3e00 

  0x000000011123d2dc: ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@4 (line 15)
                      ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8})}
  0x000000011123d2dc: 0049 b9e8 | 8061 9701 

  0x000000011123d2e4: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011123d2e4: 0000 0048 | bf40 46a0 | 6702 0000 | 0045 8b49 | 0849 c1e1 | 034c 3b8f | a001 0000 | 750d 4883 
  0x000000011123d304: 87a8 0100 | 0001 e966 | 0000 004c | 3b8f b001 | 0000 750d | 4883 87b8 | 0100 0001 | e950 0000 
  0x000000011123d324: 0048 81bf | a001 0000 | 0000 0000 | 7517 4c89 | 8fa0 0100 | 0048 c787 | a801 0000 | 0100 0000 
  0x000000011123d344: e92c 0000 | 0048 81bf | b001 0000 | 0000 0000 | 7517 4c89 | 8fb0 0100 | 0048 c787 | b801 0000 
  0x000000011123d364: 0100 0000 | e908 0000 | 0048 8387 | 9001 0000 

  0x000000011123d374: ;   {metadata(method data for {method} {0x0000000267b3fa08} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011123d374: 0149 b918 | dca9 6702 | 0000 0041 | 8bb9 1c01 | 0000 83c7 | 0241 89b9 | 1c01 0000 | 81e7 feff 
  0x000000011123d394: 1f00 83ff | 000f 8432 

  0x000000011123d39c: ;   {metadata(method data for {method} {0x0000000267b3fa08} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011123d39c: 4000 0049 | b918 dca9 | 6702 0000 | 0049 8381 | 6001 0000 

  0x000000011123d3b0: ;   {metadata(method data for {method} {0x0000000267b96588} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x000000011123d3b0: 0149 b9d0 | dda9 6702 | 0000 0041 | 8bb9 1c01 | 0000 83c7 | 0241 89b9 | 1c01 0000 | 81e7 feff 
  0x000000011123d3d0: 1f00 83ff | 000f 8417 

  0x000000011123d3d8: ;   {metadata(method data for {method} {0x0000000267b96588} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x000000011123d3d8: 4000 0049 | b9d0 dda9 | 6702 0000 | 0041 ff81 

  0x000000011123d3e8: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorIntrinsics::roundDown@5 (line 106)
                      ; - jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
  0x000000011123d3e8: 7001 0000 
 ;;  block B19 [8, 8]
  0x000000011123d3ec: 4183 e0fc 
 ;;  block B17 [8, 35]
  0x000000011123d3f0: 4889 8c24 | 1001 0000 | 4889 9424 | 1801 0000 | 4889 b424 | 2001 0000 
 ;;  block B15 [35, 54]
  0x000000011123d408: c4c1 7b2a 

  0x000000011123d40c: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011123d40c: c049 b840 | 46a0 6702 | 0000 0049 | 8380 c801 

  0x000000011123d41c: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123d41c: 0000 0149 | b8a8 dfa9 | 6702 0000 | 0045 8b88 | 1c01 0000 | 4183 c102 | 4589 881c | 0100 0041 
  0x000000011123d43c: 81e1 feff | 1f00 4183 | f900 0f84 | c73f 0000 

  0x000000011123d44c: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8})}
  0x000000011123d44c: 48bb e880 | 6197 0100 | 0000 4c8b 

  0x000000011123d458: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123d458: c349 b9a8 | dfa9 6702 | 0000 0049 | 8381 9801 | 0000 014c 

  0x000000011123d46c: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123d46c: 8bc3 49b9 | a8df a967 | 0200 0000 | 458b 4008 | 49c1 e003 | 4d3b 81e0 | 0100 0075 | 0d49 8381 
  0x000000011123d48c: e801 0000 | 01e9 6600 | 0000 4d3b | 81f0 0100 | 0075 0d49 | 8381 f801 | 0000 01e9 | 5000 0000 
  0x000000011123d4ac: 4981 b9e0 | 0100 0000 | 0000 0075 | 174d 8981 | e001 0000 | 49c7 81e8 | 0100 0001 | 0000 00e9 
  0x000000011123d4cc: 2c00 0000 | 4981 b9f0 | 0100 0000 | 0000 0075 | 174d 8981 | f001 0000 | 49c7 81f8 | 0100 0001 
  0x000000011123d4ec: 0000 00e9 | 0800 0000 | 4983 81d0 | 0100 0001 

  0x000000011123d4fc: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123d4fc: 49b8 a8df | a967 0200 | 0000 4983 | 8008 0200 

  0x000000011123d50c: ;   {metadata(method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123d50c: 0001 49b8 | 68e2 a967 | 0200 0000 | 458b 881c | 0100 0041 | 83c1 0245 | 8988 1c01 | 0000 4181 
  0x000000011123d52c: e1fe ff1f | 0041 83f9 | 000f 84f9 

  0x000000011123d538: ;   {metadata(method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123d538: 3e00 0049 | b868 e2a9 | 6702 0000 | 0049 8380 | 6001 0000 

  0x000000011123d54c: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011123d54c: 0149 b808 | ad40 1001 | 0000 004d | 8d80 3802 

  0x000000011123d55c: ;   {oop(a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019762aea0})}
  0x000000011123d55c: 0000 48b8 | a0ae 6297 | 0100 0000 | 4c8b c84d | 85c9 7507 | 4981 0801 

  0x000000011123d574: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123d574: 0000 0049 | b8a8 dfa9 | 6702 0000 | 0049 8380 | 1802 0000 

  0x000000011123d588: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011123d588: 0149 b808 | ad40 1001 | 0000 0045 | 8b88 1c01 | 0000 4183 | c102 4589 | 881c 0100 | 0041 81e1 
  0x000000011123d5a8: feff 1f00 | 4183 f900 
 ;;  188 branch [EQ] [CounterOverflowStub: 0x00007f8467f66000]
  0x000000011123d5b0: 0f84 9f3e 

  0x000000011123d5b4: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011123d5b4: 0000 49b8 | 089d 4010 | 0100 0000 | 4d8d 80f0 | 0100 004c | 8bc8 4d85 | c975 0749 | 8108 0100 
  0x000000011123d5d4: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011123d5d4: 0000 49b8 | 08ad 4010 | 0100 0000 | 4983 8098 | 0100 0001 

  0x000000011123d5e8: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011123d5e8: 49b8 089d | 4010 0100 | 0000 458b | 881c 0100 | 0041 83c1 | 0245 8988 | 1c01 0000 | 4181 e1fe 
  0x000000011123d608: ff1f 0041 | 83f9 000f | 8461 3e00 

  0x000000011123d614: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011123d614: 0049 b808 | ad40 1001 | 0000 004d | 8d80 d001 

  0x000000011123d624: ;   {oop(a 'jdk/incubator/vector/DoubleVector$$Lambda$87+0x0000000225d54960'{0x000000019762ac90})}
  0x000000011123d624: 0000 49bb | 90ac 6297 | 0100 0000 | 4d8b cb4d | 85c9 7507 | 4981 0801 

  0x000000011123d63c: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123d63c: 0000 0049 | b8a8 dfa9 | 6702 0000 | 004d 8d80 | 2802 0000 | 4d8b cb4d | 85c9 750c | 4981 0801 
  0x000000011123d65c: 0000 00e9 | 7d00 0000 | 458b 4908 | 49c1 e103 

  0x000000011123d66c: ;   {metadata('jdk/incubator/vector/DoubleVector$$Lambda$87+0x0000000225d54960')}
  0x000000011123d66c: 4151 49b9 | 6049 d525 | 0200 0000 | 4c3b 0c24 | 0f84 1400 

  0x000000011123d680: ;   {external_word}
  0x000000011123d680: 0000 48bf | 771f b309 | 0100 0000 | 4883 e4f0 

  0x000000011123d690: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011123d690: e8bb 382a | f8f4 4159 

  0x000000011123d698: ;   {metadata('jdk/incubator/vector/DoubleVector$$Lambda$87+0x0000000225d54960')}
  0x000000011123d698: 49b9 6049 | d525 0200 | 0000 4d33 | 0849 f7c1 | fcff ffff | 7433 49f7 | c102 0000 | 0075 2a49 
  0x000000011123d6b8: 8138 0000 | 0000 741e | 4981 3801 | 0000 0074 | 154d 3308 | 49f7 c1fc | ffff ff74 | 0c49 8108 
  0x000000011123d6d8: 0200 0000 | eb03 4d89 

  0x000000011123d6e0: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123d6e0: 0849 b8a8 | dfa9 6702 | 0000 0049 | 8380 3802 

  0x000000011123d6f0: ;   {oop(a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector')}
  0x000000011123d6f0: 0000 0149 | bd58 8161 | 9701 0000 

  0x000000011123d6fc: ;   {oop(a 'java/lang/Class'{0x000000011ff8c550} = double)}
  0x000000011123d6fc: 0049 be50 | c5f8 1f01 | 0000 0049 | bc00 0000 | 0000 0000 | 0049 8bf5 | 498b d6b9 | 0400 0000 
  0x000000011123d71c: 4d8b c44c | 8bcb 498b 

  0x000000011123d724: ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@28 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x000000011123d724: fb4c 89a4 | 2450 0100 | 004c 89b4 | 2448 0100 | 004c 89ac | 2440 0100 | 004c 899c | 2438 0100 
  0x000000011123d744: 0048 8984 | 2430 0100 | 0048 899c | 2428 0100 | 00c5 fb11 | 8424 5802 

  0x000000011123d75c: ;   {static_call}
  0x000000011123d75c: 0000 90e8 

  0x000000011123d760: ; ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [320]=Oop [304]=Oop [312]=Oop [328]=Oop [296]=Oop }
                      ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@28 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x000000011123d760: bcca 9bff | 4883 f800 

  0x000000011123d768: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123d768: 7516 48b9 | a8df a967 | 0200 0000 | 8089 4102 | 0000 01e9 | c100 0000 

  0x000000011123d780: ;   {metadata('jdk/incubator/vector/DoubleVector')}
  0x000000011123d780: 48ba 30ce | d425 0200 | 0000 8b48 | 0848 c1e1 | 0348 3b51 | 600f 858a 

  0x000000011123d798: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123d798: 0000 0048 | b9a8 dfa9 | 6702 0000 | 008b 5008 | 48c1 e203 | 483b 9158 | 0200 0075 | 0d48 8381 
  0x000000011123d7b8: 6002 0000 | 01e9 7f00 | 0000 483b | 9168 0200 | 0075 0d48 | 8381 7002 | 0000 01e9 | 6900 0000 
  0x000000011123d7d8: 4881 b958 | 0200 0000 | 0000 0075 | 1748 8991 | 5802 0000 | 48c7 8160 | 0200 0001 | 0000 00e9 
  0x000000011123d7f8: 4500 0000 | 4881 b968 | 0200 0000 | 0000 0075 | 1748 8991 | 6802 0000 | 48c7 8170 | 0200 0001 
  0x000000011123d818: 0000 00e9 | 2100 0000 | e91c 0000 

  0x000000011123d824: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123d824: 0048 b9a8 | dfa9 6702 | 0000 0048 | 83a9 4802 | 0000 01e9 | 5b3c 0000 | e900 0000 

  0x000000011123d840: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@31 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x000000011123d840: 0048 8bd8 

  0x000000011123d844: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011123d844: 48be 4046 | a067 0200 | 0000 4883 | 86d8 0100 

  0x000000011123d854: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123d854: 0001 48be | a8df a967 | 0200 0000 | 8b96 1c01 | 0000 83c2 | 0289 961c | 0100 0081 | e2fe ff1f 
  0x000000011123d874: 0083 fa00 
 ;;  270 branch [EQ] [CounterOverflowStub: 0x00007f8467f682e0]
  0x000000011123d878: 0f84 363c | 0000 488b | b424 2801 

  0x000000011123d884: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123d884: 0000 48ba | a8df a967 | 0200 0000 | 4883 8298 | 0100 0001 | 488b b424 | 2801 0000 

  0x000000011123d8a0: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123d8a0: 48ba a8df | a967 0200 | 0000 8b76 | 0848 c1e6 | 0348 3bb2 | e001 0000 | 750d 4883 | 82e8 0100 
  0x000000011123d8c0: 0001 e966 | 0000 0048 | 3bb2 f001 | 0000 750d | 4883 82f8 | 0100 0001 | e950 0000 | 0048 81ba 
  0x000000011123d8e0: e001 0000 | 0000 0000 | 7517 4889 | b2e0 0100 | 0048 c782 | e801 0000 | 0100 0000 | e92c 0000 
  0x000000011123d900: 0048 81ba | f001 0000 | 0000 0000 | 7517 4889 | b2f0 0100 | 0048 c782 | f801 0000 | 0100 0000 
  0x000000011123d920: e908 0000 | 0048 8382 | d001 0000 

  0x000000011123d92c: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123d92c: 0148 bea8 | dfa9 6702 | 0000 0048 | 8386 0802 

  0x000000011123d93c: ;   {metadata(method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123d93c: 0000 0148 | be68 e2a9 | 6702 0000 | 008b 961c | 0100 0083 | c202 8996 | 1c01 0000 | 81e2 feff 
  0x000000011123d95c: 1f00 83fa | 000f 846e 

  0x000000011123d964: ;   {metadata(method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123d964: 3b00 0048 | be68 e2a9 | 6702 0000 | 0048 8386 | 6001 0000 

  0x000000011123d978: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011123d978: 0148 be08 | ad40 1001 | 0000 0048 | 8db6 3802 | 0000 488b | 8424 3001 | 0000 488b | d048 85d2 
  0x000000011123d998: 7507 4881 | 0e01 0000 

  0x000000011123d9a0: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123d9a0: 0048 bea8 | dfa9 6702 | 0000 0048 | 8386 1802 

  0x000000011123d9b0: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011123d9b0: 0000 0148 | be08 ad40 | 1001 0000 | 008b 961c | 0100 0083 | c202 8996 | 1c01 0000 | 81e2 feff 
  0x000000011123d9d0: 1f00 83fa | 000f 841b 

  0x000000011123d9d8: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011123d9d8: 3b00 0048 | be08 9d40 | 1001 0000 | 0048 8db6 | f001 0000 | 488b d048 | 85d2 7507 | 4881 0e01 
  0x000000011123d9f8: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011123d9f8: 0000 0048 | be08 ad40 | 1001 0000 | 0048 8386 | 9801 0000 

  0x000000011123da0c: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011123da0c: 0148 be08 | 9d40 1001 | 0000 008b | 961c 0100 | 0083 c202 | 8996 1c01 | 0000 81e2 | feff 1f00 
  0x000000011123da2c: 83fa 000f | 84e2 3a00 

  0x000000011123da34: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011123da34: 0048 be08 | ad40 1001 | 0000 0048 | 8db6 d001 | 0000 4c8b | 9c24 3801 | 0000 498b | d348 85d2 
  0x000000011123da54: 7507 4881 | 0e01 0000 

  0x000000011123da5c: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123da5c: 0048 bea8 | dfa9 6702 | 0000 0048 | 8db6 2802 | 0000 498b | d348 85d2 | 750c 4881 | 0e01 0000 
  0x000000011123da7c: 00e9 7a00 | 0000 8b52 | 0848 c1e2 

  0x000000011123da88: ;   {metadata('jdk/incubator/vector/DoubleVector$$Lambda$87+0x0000000225d54960')}
  0x000000011123da88: 0352 48ba | 6049 d525 | 0200 0000 | 483b 1424 | 0f84 1400 

  0x000000011123da9c: ;   {external_word}
  0x000000011123da9c: 0000 48bf | 771f b309 | 0100 0000 | 4883 e4f0 

  0x000000011123daac: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011123daac: e89f 342a 

  0x000000011123dab0: ;   {metadata('jdk/incubator/vector/DoubleVector$$Lambda$87+0x0000000225d54960')}
  0x000000011123dab0: f8f4 5a48 | ba60 49d5 | 2502 0000 | 0048 3316 | 48f7 c2fc | ffff ff74 | 3348 f7c2 | 0200 0000 
  0x000000011123dad0: 752a 4881 | 3e00 0000 | 0074 1e48 | 813e 0100 | 0000 7415 | 4833 1648 | f7c2 fcff | ffff 740c 
  0x000000011123daf0: 4881 0e02 | 0000 00eb | 0348 8916 

  0x000000011123dafc: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123dafc: 48be a8df | a967 0200 | 0000 4883 | 8638 0200 | 0001 488b | b424 4001 | 0000 488b | 9424 4801 
  0x000000011123db1c: 0000 b904 | 0000 004c | 8b84 2450 | 0100 004c | 8b8c 2428 | 0100 0049 

  0x000000011123db34: ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@28 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
  0x000000011123db34: 8bfb 4889 | 9c24 5801 

  0x000000011123db3c: ;   {static_call}
  0x000000011123db3c: 0000 90e8 

  0x000000011123db40: ; ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [344]=Oop }
                      ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@28 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
  0x000000011123db40: dcc6 9bff | 4883 f800 

  0x000000011123db48: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123db48: 7516 48be | a8df a967 | 0200 0000 | 808e 4102 | 0000 01e9 | c100 0000 

  0x000000011123db60: ;   {metadata('jdk/incubator/vector/DoubleVector')}
  0x000000011123db60: 48bb 30ce | d425 0200 | 0000 8b70 | 0848 c1e6 | 0348 3b5e | 600f 858a 

  0x000000011123db78: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123db78: 0000 0048 | bea8 dfa9 | 6702 0000 | 008b 5808 | 48c1 e303 | 483b 9e58 | 0200 0075 | 0d48 8386 
  0x000000011123db98: 6002 0000 | 01e9 7f00 | 0000 483b | 9e68 0200 | 0075 0d48 | 8386 7002 | 0000 01e9 | 6900 0000 
  0x000000011123dbb8: 4881 be58 | 0200 0000 | 0000 0075 | 1748 899e | 5802 0000 | 48c7 8660 | 0200 0001 | 0000 00e9 
  0x000000011123dbd8: 4500 0000 | 4881 be68 | 0200 0000 | 0000 0075 | 1748 899e | 6802 0000 | 48c7 8670 | 0200 0001 
  0x000000011123dbf8: 0000 00e9 | 2100 0000 | e91c 0000 

  0x000000011123dc04: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123dc04: 0048 bea8 | dfa9 6702 | 0000 0048 | 83ae 4802 | 0000 01e9 | 1c39 0000 | e900 0000 

  0x000000011123dc20: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@31 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
  0x000000011123dc20: 0048 8bf0 | 488b 9c24 | 5801 0000 | c5fb 1084 | 2458 0200 | 0048 8b8c | 2410 0100 | 0048 8b94 
  0x000000011123dc40: 2418 0100 | 0048 8b84 | 2420 0100 | 0041 bb00 | 0000 00c5 | f157 c9c5 

  0x000000011123dc58: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x000000011123dc58: e957 d248 | 89b4 24a8 | 0100 0048 | 899c 2498 | 0100 00c5 | fb11 8c24 | 8802 0000 | c5fb 1194 
  0x000000011123dc78: 2480 0200 | 0048 898c | 24a0 0100 | 0048 8984 | 24b8 0100 | 0090 9090 
 ;;  block B1 [54, 60]
  0x000000011123dc90: c4c1 632a | dbc5 f92e | d841 b801 | 0000 000f | 8a15 0000 | 000f 870f | 0000 0041 | b800 0000 
  0x000000011123dcb0: 000f 8403 | 0000 0041 

  0x000000011123dcb8: ;*dcmpg {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@59 (line 24)
  0x000000011123dcb8: ffc8 4183 

  0x000000011123dcbc: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011123dcbc: f800 49b8 | 4046 a067 | 0200 0000 | 49b9 e801 | 0000 0000 | 0000 0f8d | 0a00 0000 | 49b9 f801 
  0x000000011123dcdc: 0000 0000 | 0000 4b8b | 3c08 488d | 7f01 4b89 | 3c08 0f8d 

  0x000000011123dcf0: ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@60 (line 24)
  0x000000011123dcf0: 8f0f 0000 
 ;;  block B4 [63, 3]
  0x000000011123dcf4: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011123dcf4: 49b8 4046 | a067 0200 | 0000 4983 | 8008 0200 

  0x000000011123dd04: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123dd04: 0001 49b8 | 905a a967 | 0200 0000 | 458b 881c | 0100 0041 | 83c1 0245 | 8988 1c01 | 0000 4181 
  0x000000011123dd24: e1fe ff1f | 0041 83f9 | 000f 8422 

  0x000000011123dd30: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8})}
  0x000000011123dd30: 3800 0049 | b8e8 8061 | 9701 0000 

  0x000000011123dd3c: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123dd3c: 0049 b990 | 5aa9 6702 | 0000 0045 | 8b40 0849 | c1e0 034d | 3b81 7001 | 0000 750d | 4983 8178 
  0x000000011123dd5c: 0100 0001 | e966 0000 | 004d 3b81 | 8001 0000 | 750d 4983 | 8188 0100 | 0001 e950 | 0000 0049 
  0x000000011123dd7c: 81b9 7001 | 0000 0000 | 0000 7517 | 4d89 8170 | 0100 0049 | c781 7801 | 0000 0100 | 0000 e92c 
  0x000000011123dd9c: 0000 0049 | 81b9 8001 | 0000 0000 | 0000 7517 | 4d89 8180 | 0100 0049 | c781 8801 | 0000 0100 
  0x000000011123ddbc: 0000 e908 | 0000 0049 | 8381 6001 | 0000 0144 

  0x000000011123ddcc: ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
                      ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123ddcc: 8b42 0c49 | b990 5aa9 | 6702 0000 | 0049 8381 | 9801 0000 

  0x000000011123dde0: ;   {metadata(method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x000000011123dde0: 0149 b930 | 5da9 6702 | 0000 0041 | 8bb9 1c01 | 0000 83c7 | 0241 89b9 | 1c01 0000 | 81e7 feff 
  0x000000011123de00: 1f00 83ff | 000f 8484 | 3700 0041 

  0x000000011123de0c: ;   {metadata(method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x000000011123de0c: 83e8 0349 | b930 5da9 | 6702 0000 | 0049 8381 | c001 0000 

  0x000000011123de20: ;   {metadata(method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x000000011123de20: 0149 b918 | 4c9f 6702 | 0000 0041 | 8bb9 1c01 | 0000 83c7 | 0241 89b9 | 1c01 0000 | 81e7 feff 
  0x000000011123de40: 1f00 83ff | 000f 8465 

  0x000000011123de48: ;   {metadata(method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x000000011123de48: 3700 0049 | b918 4c9f | 6702 0000 | 0049 8381 | 6001 0000 

  0x000000011123de5c: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011123de5c: 0149 b9d0 | 4d9f 6702 | 0000 0041 | 8bb9 1c01 | 0000 83c7 | 0241 89b9 | 1c01 0000 | 81e7 feff 
  0x000000011123de7c: 1f00 83ff | 000f 844a | 3700 0041 

  0x000000011123de88: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011123de88: 83fb 0049 | b9d0 4d9f | 6702 0000 | 0048 bf60 | 0100 0000 | 0000 000f | 8c0a 0000 | 0048 bf70 
  0x000000011123dea8: 0100 0000 | 0000 004d | 8b2c 394d | 8d6d 014d | 892c 390f | 8c63 3200 

  0x000000011123dec0: ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@1 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011123dec0: 0045 3bd8 

  0x000000011123dec4: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011123dec4: 49b9 d04d | 9f67 0200 | 0000 48bf | 9001 0000 | 0000 0000 | 0f8d 0a00 | 0000 48bf | 8001 0000 
  0x000000011123dee4: 0000 0000 | 4d8b 2c39 | 4d8d 6d01 | 4d89 2c39 
 ;;  592 branch [GE] [B61] 
  0x000000011123def4: 0f8d 2a32 

  0x000000011123def8: ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@6 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
                      ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8})}
  0x000000011123def8: 0000 49b8 | e880 6197 | 0100 0000 

  0x000000011123df04: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123df04: 4d8b c848 | bf90 5aa9 | 6702 0000 | 0048 8387 | e001 0000 

  0x000000011123df18: ;   {metadata(method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011123df18: 0149 b9b0 | 48a9 6702 | 0000 0041 | 8bb9 1c01 | 0000 83c7 | 0241 89b9 | 1c01 0000 | 81e7 feff 
  0x000000011123df38: 1f00 83ff | 000f 84af 

  0x000000011123df40: ;   {metadata(method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011123df40: 3600 0049 | b9b0 48a9 | 6702 0000 | 0049 8381 | 6001 0000 

  0x000000011123df54: ;   {metadata(method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011123df54: 0149 b898 | 4aa9 6702 | 0000 0045 | 8b88 1c01 | 0000 4183 | c102 4589 | 881c 0100 | 0041 81e1 
  0x000000011123df74: feff 1f00 | 4183 f900 
 ;;  648 branch [EQ] [CounterOverflowStub: 0x00007f846c5364e0]
  0x000000011123df7c: 0f84 9136 

  0x000000011123df80: ;   {metadata(method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011123df80: 0000 49b8 | 984a a967 | 0200 0000 | 41ff 8070 

  0x000000011123df90: ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011123df90: 0100 00c5 | fb11 8424 | 7802 0000 
 ;;  block B63 [22, 74]
  0x000000011123df9c: ;   {oop(a 'jdk/incubator/vector/Double256Vector'{0x0000000197653a38})}
  0x000000011123df9c: 49b8 383a | 6597 0100 | 0000 4d8b 

  0x000000011123dfa8: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123dfa8: c848 bf90 | 5aa9 6702 | 0000 0048 | 8387 1802 

  0x000000011123dfb8: ;   {metadata(method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011123dfb8: 0000 0149 | b960 5fa9 | 6702 0000 | 0041 8bb9 | 1c01 0000 | 83c7 0241 | 89b9 1c01 | 0000 81e7 
  0x000000011123dfd8: feff 1f00 | 83ff 000f | 844f 3600 | 004d 8bc8 

  0x000000011123dfe8: ;   {metadata(method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011123dfe8: 48bf 605f | a967 0200 | 0000 4883 | 8760 0100 

  0x000000011123dff8: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123dff8: 0001 49b9 | 0061 a967 | 0200 0000 | 418b b91c | 0100 0083 | c702 4189 | b91c 0100 | 0081 e7fe 
  0x000000011123e018: ff1f 0083 | ff00 0f84 | 3136 0000 

  0x000000011123e024: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123e024: 49b9 0061 | a967 0200 | 0000 4983 | 8160 0100 

  0x000000011123e034: ;   {metadata(method data for {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011123e034: 0001 49b8 | 0864 a967 | 0200 0000 | 458b 881c | 0100 0041 | 83c1 0245 | 8988 1c01 | 0000 4181 
  0x000000011123e054: e1fe ff1f | 0041 83f9 | 000f 8413 

  0x000000011123e060: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8})}
  0x000000011123e060: 3600 0049 | b8e8 8061 | 9701 0000 | 004d 8bc8 

  0x000000011123e070: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123e070: 48bf 0061 | a967 0200 | 0000 4883 | 8798 0100 | 0001 4d8b 

  0x000000011123e084: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123e084: c848 bf00 | 61a9 6702 | 0000 0048 | 8387 d001 

  0x000000011123e094: ;   {metadata(method data for {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011123e094: 0000 0149 | b910 59a9 | 6702 0000 | 0041 8bb9 | 1c01 0000 | 83c7 0241 | 89b9 1c01 | 0000 81e7 
  0x000000011123e0b4: feff 1f00 | 83ff 000f | 84d6 3500 

  0x000000011123e0c0: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123e0c0: 0049 b900 | 61a9 6702 | 0000 0049 | 8381 0802 

  0x000000011123e0d0: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123e0d0: 0000 0149 | b800 61a9 | 6702 0000 | 0049 8380 | 4002 0000 

  0x000000011123e0e4: ;   {metadata(method data for {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123e0e4: 0149 b888 | 65a9 6702 | 0000 0045 | 8b88 1c01 | 0000 4183 | c102 4589 | 881c 0100 | 0041 81e1 
  0x000000011123e104: feff 1f00 | 4183 f900 
 ;;  774 branch [EQ] [CounterOverflowStub: 0x00007f846c5393b0]
  0x000000011123e10c: 0f84 a635 | 0000 4d63 | c3b9 0300 | 0000 49d3 | e049 ba10 | 0000 0000 | 0000 004d 

  0x000000011123e128: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011123e128: 03c2 48b9 | 08ad 4010 | 0100 0000 | 488d 8938 

  0x000000011123e138: ;   {oop(a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019765cae0})}
  0x000000011123e138: 0200 0049 | b9e0 ca65 | 9701 0000 | 0049 8bf9 | 4885 ff75 | 0748 8109 | 0100 0000 

  0x000000011123e154: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123e154: 48b9 0061 | a967 0200 | 0000 4883 | 8150 0200 

  0x000000011123e164: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011123e164: 0001 48b9 | 08ad 4010 | 0100 0000 | 8bb9 1c01 | 0000 83c7 | 0289 b91c | 0100 0081 | e7fe ff1f 
  0x000000011123e184: 0083 ff00 
 ;;  812 branch [EQ] [CounterOverflowStub: 0x00007f846c53a390]
  0x000000011123e188: 0f84 4b35 

  0x000000011123e18c: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011123e18c: 0000 48b9 | 089d 4010 | 0100 0000 | 488d 89f0 | 0100 004d | 85c9 7507 | 4881 0901 

  0x000000011123e1a8: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011123e1a8: 0000 0048 | b908 ad40 | 1001 0000 | 0048 8381 | 9801 0000 

  0x000000011123e1bc: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011123e1bc: 0148 b908 | 9d40 1001 | 0000 0044 | 8b89 1c01 | 0000 4183 | c102 4489 | 891c 0100 | 0041 81e1 
  0x000000011123e1dc: feff 1f00 | 4183 f900 
 ;;  836 branch [EQ] [CounterOverflowStub: 0x00007f846c53ac90]
  0x000000011123e1e4: 0f84 1035 

  0x000000011123e1e8: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011123e1e8: 0000 48b9 | 08ad 4010 | 0100 0000 | 488d 89d0 

  0x000000011123e1f8: ;   {oop(a 'jdk/incubator/vector/DoubleVector$$Lambda$94+0x0000000225d597d0'{0x000000019765c8d0})}
  0x000000011123e1f8: 0100 0049 | b9d0 c865 | 9701 0000 | 0049 8bf9 | 4885 ff75 | 0748 8109 | 0100 0000 

  0x000000011123e214: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123e214: 48b9 0061 | a967 0200 | 0000 488d | 8960 0200 | 004d 85c9 | 7507 4881 | 0901 0000 

  0x000000011123e230: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123e230: 0048 b900 | 61a9 6702 | 0000 0048 | 8381 7002 

  0x000000011123e240: ;   {oop(a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector')}
  0x000000011123e240: 0000 0148 | b958 8161 | 9701 0000 

  0x000000011123e24c: ;   {oop(a 'java/lang/Class'{0x000000011ff8c550} = double)}
  0x000000011123e24c: 0049 b950 | c5f8 1f01 | 0000 0048 | 8bf1 4c8b | e249 8bd1 | b904 0000 | 0049 8bf8 | 4d8b c44c 
  0x000000011123e26c: 8bcf 4889 | bc24 9001 | 0000 498b | fc44 891c 

  0x000000011123e27c: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8})}
  0x000000011123e27c: 2449 bae8 | 8061 9701 | 0000 004c | 8954 2408 

  0x000000011123e28c: ;   {oop(a 'jdk/incubator/vector/DoubleVector$$Lambda$94+0x0000000225d597d0'{0x000000019765c8d0})}
  0x000000011123e28c: 49ba d0c8 | 6597 0100 | 0000 4c89 

  0x000000011123e298: ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011123e298: 5424 104c | 89a4 24b0 | 0100 0044 | 899c 2474 | 0100 0090 

  0x000000011123e2ac: ;   {static_call}
  0x000000011123e2ac: 9090 90e8 

  0x000000011123e2b0: ; ImmutableOopMap {[432]=Oop [440]=Oop [408]=Oop [424]=Oop [416]=Oop }
                      ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011123e2b0: 0c62 4407 | 4883 f800 

  0x000000011123e2b8: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123e2b8: 7516 48bf | 0061 a967 | 0200 0000 | 808f 7902 | 0000 01e9 | c100 0000 

  0x000000011123e2d0: ;   {metadata('jdk/incubator/vector/DoubleVector')}
  0x000000011123e2d0: 48be 30ce | d425 0200 | 0000 8b78 | 0848 c1e7 | 0348 3b77 | 600f 858a 

  0x000000011123e2e8: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123e2e8: 0000 0048 | bf00 61a9 | 6702 0000 | 008b 7008 | 48c1 e603 | 483b b790 | 0200 0075 | 0d48 8387 
  0x000000011123e308: 9802 0000 | 01e9 7f00 | 0000 483b | b7a0 0200 | 0075 0d48 | 8387 a802 | 0000 01e9 | 6900 0000 
  0x000000011123e328: 4881 bf90 | 0200 0000 | 0000 0075 | 1748 89b7 | 9002 0000 | 48c7 8798 | 0200 0001 | 0000 00e9 
  0x000000011123e348: 4500 0000 | 4881 bfa0 | 0200 0000 | 0000 0075 | 1748 89b7 | a002 0000 | 48c7 87a8 | 0200 0001 
  0x000000011123e368: 0000 00e9 | 2100 0000 | e91c 0000 

  0x000000011123e374: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123e374: 0048 bf00 | 61a9 6702 | 0000 0048 | 83af 8002 | 0000 01e9 | 8f33 0000 | e900 0000 

  0x000000011123e390: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011123e390: 0048 8bc8 | 488b 9c24 | 9801 0000 
 ;;  block B46 [74, 3]
  0x000000011123e39c: ; implicit exception: dispatches to 0x0000000111241738
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x000000011123e39c: 483b 0348 

  0x000000011123e3a0: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011123e3a0: 8bd3 48be | 4046 a067 | 0200 0000 | 4883 8618 | 0200 0001 

  0x000000011123e3b4: ;   {metadata(method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123e3b4: 48ba 9872 | a967 0200 | 0000 8bb2 | 1c01 0000 | 83c6 0289 | b21c 0100 | 0081 e6fe | ff1f 0083 
  0x000000011123e3d4: fe00 0f84 | 7533 0000 

  0x000000011123e3dc: ;   {metadata(method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123e3dc: 488b d348 | be98 72a9 | 6702 0000 | 008b 5208 | 48c1 e203 | 483b 9670 | 0100 0075 | 0d48 8386 
  0x000000011123e3fc: 7801 0000 | 01e9 6600 | 0000 483b | 9680 0100 | 0075 0d48 | 8386 8801 | 0000 01e9 | 5000 0000 
  0x000000011123e41c: 4881 be70 | 0100 0000 | 0000 0075 | 1748 8996 | 7001 0000 | 48c7 8678 | 0100 0001 | 0000 00e9 
  0x000000011123e43c: 2c00 0000 | 4881 be80 | 0100 0000 | 0000 0075 | 1748 8996 | 8001 0000 | 48c7 8688 | 0100 0001 
  0x000000011123e45c: 0000 00e9 | 0800 0000 | 4883 8660 | 0100 0001 

  0x000000011123e46c: ;   {oop(a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000000197665d58})}
  0x000000011123e46c: 48ba 585d | 6697 0100 | 0000 488b 

  0x000000011123e478: ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x000000011123e478: f390 9090 | 9048 b8a0 | 20d5 2502 

  0x000000011123e484: ;   {virtual_call}
  0x000000011123e484: 0000 00e8 

  0x000000011123e488: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop [416]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x000000011123e488: 74b4 4407 | 4889 8424 | c001 0000 

  0x000000011123e494: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011123e494: 48be 4046 | a067 0200 | 0000 4883 | 8650 0200 

  0x000000011123e4a4: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123e4a4: 0001 48be | 905a a967 | 0200 0000 | 8b96 1c01 | 0000 83c2 | 0289 961c | 0100 0081 | e2fe ff1f 
  0x000000011123e4c4: 0083 fa00 
 ;;  940 branch [EQ] [CounterOverflowStub: 0x00007f846c53d460]
  0x000000011123e4c8: 0f84 a432 

  0x000000011123e4cc: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8})}
  0x000000011123e4cc: 0000 48be | e880 6197 | 0100 0000 

  0x000000011123e4d8: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123e4d8: 48ba 905a | a967 0200 | 0000 8b76 | 0848 c1e6 | 0348 3bb2 | 7001 0000 | 750d 4883 | 8278 0100 
  0x000000011123e4f8: 0001 e966 | 0000 0048 | 3bb2 8001 | 0000 750d | 4883 8288 | 0100 0001 | e950 0000 | 0048 81ba 
  0x000000011123e518: 7001 0000 | 0000 0000 | 7517 4889 | b270 0100 | 0048 c782 | 7801 0000 | 0100 0000 | e92c 0000 
  0x000000011123e538: 0048 81ba | 8001 0000 | 0000 0000 | 7517 4889 | b280 0100 | 0048 c782 | 8801 0000 | 0100 0000 
  0x000000011123e558: e908 0000 | 0048 8382 | 6001 0000 | 0148 8b8c | 24a0 0100 

  0x000000011123e56c: ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011123e56c: 008b 710c 

  0x000000011123e570: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123e570: 48ba 905a | a967 0200 | 0000 4883 | 8298 0100 

  0x000000011123e580: ;   {metadata(method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x000000011123e580: 0001 48ba | 305d a967 | 0200 0000 | 448b 821c | 0100 0041 | 83c0 0244 | 8982 1c01 | 0000 4181 
  0x000000011123e5a0: e0fe ff1f | 0041 83f8 | 000f 84fd | 3100 0044 | 8b9c 2474 | 0100 0048 | 8bfe 83ef 

  0x000000011123e5bc: ;   {metadata(method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x000000011123e5bc: 0348 be30 | 5da9 6702 | 0000 0048 | 8386 c001 

  0x000000011123e5cc: ;   {metadata(method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x000000011123e5cc: 0000 0148 | be18 4c9f | 6702 0000 | 008b 961c | 0100 0083 | c202 8996 | 1c01 0000 | 81e2 feff 
  0x000000011123e5ec: 1f00 83fa | 000f 84d6 

  0x000000011123e5f4: ;   {metadata(method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x000000011123e5f4: 3100 0048 | be18 4c9f | 6702 0000 | 0048 8386 | 6001 0000 

  0x000000011123e608: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011123e608: 0148 bed0 | 4d9f 6702 | 0000 008b | 961c 0100 | 0083 c202 | 8996 1c01 | 0000 81e2 | feff 1f00 
  0x000000011123e628: 83fa 000f | 84bd 3100 | 0041 83fb 

  0x000000011123e634: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011123e634: 0048 bed0 | 4d9f 6702 | 0000 0048 | ba60 0100 | 0000 0000 | 000f 8c0a | 0000 0048 | ba70 0100 
  0x000000011123e654: 0000 0000 | 004c 8b04 | 164d 8d40 | 014c 8904 | 160f 8c09 

  0x000000011123e668: ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@1 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011123e668: 2b00 0044 

  0x000000011123e66c: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011123e66c: 3bdf 48be | d04d 9f67 | 0200 0000 | 48ba 9001 | 0000 0000 | 0000 0f8d | 0a00 0000 | 48ba 8001 
  0x000000011123e68c: 0000 0000 | 0000 4c8b | 0416 4d8d | 4001 4c89 | 0416 0f8d 

  0x000000011123e6a0: ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@6 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011123e6a0: d02a 0000 
 ;;  block B93 [12, 6]
  0x000000011123e6a4: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8})}
  0x000000011123e6a4: 48be e880 | 6197 0100 | 0000 488b 

  0x000000011123e6b0: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123e6b0: d649 b890 | 5aa9 6702 | 0000 0049 | 8380 e001 

  0x000000011123e6c0: ;   {metadata(method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011123e6c0: 0000 0148 | bab0 48a9 | 6702 0000 | 0044 8b82 | 1c01 0000 | 4183 c002 | 4489 821c | 0100 0041 
  0x000000011123e6e0: 81e0 feff | 1f00 4183 | f800 0f84 | 1f31 0000 

  0x000000011123e6f0: ;   {metadata(method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011123e6f0: 48ba b048 | a967 0200 | 0000 4883 | 8260 0100 

  0x000000011123e700: ;   {metadata(method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011123e700: 0001 48be | 984a a967 | 0200 0000 | 8b96 1c01 | 0000 83c2 | 0289 961c | 0100 0081 | e2fe ff1f 
  0x000000011123e720: 0083 fa00 
 ;; 1100 branch [EQ] [CounterOverflowStub: 0x00007f846aace050]
  0x000000011123e724: 0f84 0631 

  0x000000011123e728: ;   {metadata(method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011123e728: 0000 48be | 984a a967 | 0200 0000 | ff86 7001 

  0x000000011123e738: ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011123e738: 0000 4c8b | 8c24 9001 

  0x000000011123e740: ;   {oop(a 'jdk/incubator/vector/Double256Vector'{0x0000000197653a38})}
  0x000000011123e740: 0000 48be | 383a 6597 | 0100 0000 

  0x000000011123e74c: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123e74c: 488b d649 | b890 5aa9 | 6702 0000 | 0049 8380 | 1802 0000 

  0x000000011123e760: ;   {metadata(method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011123e760: 0148 ba60 | 5fa9 6702 | 0000 0044 | 8b82 1c01 | 0000 4183 | c002 4489 | 821c 0100 | 0041 81e0 
  0x000000011123e780: feff 1f00 | 4183 f800 
 ;; 1138 branch [EQ] [CounterOverflowStub: 0x00007f846aaced40]
  0x000000011123e788: 0f84 c330 | 0000 488b 

  0x000000011123e790: ;   {metadata(method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011123e790: d649 b860 | 5fa9 6702 | 0000 0049 | 8380 6001 

  0x000000011123e7a0: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123e7a0: 0000 0148 | ba00 61a9 | 6702 0000 | 0044 8b82 | 1c01 0000 | 4183 c002 | 4489 821c | 0100 0041 
  0x000000011123e7c0: 81e0 feff | 1f00 4183 | f800 0f84 | a230 0000 

  0x000000011123e7d0: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123e7d0: 48ba 0061 | a967 0200 | 0000 4883 | 8260 0100 

  0x000000011123e7e0: ;   {metadata(method data for {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011123e7e0: 0001 48be | 0864 a967 | 0200 0000 | 8b96 1c01 | 0000 83c2 | 0289 961c | 0100 0081 | e2fe ff1f 
  0x000000011123e800: 0083 fa00 
 ;; 1178 branch [EQ] [CounterOverflowStub: 0x00007f846aacfd00]
  0x000000011123e804: 0f84 8930 

  0x000000011123e808: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8})}
  0x000000011123e808: 0000 48be | e880 6197 | 0100 0000 

  0x000000011123e814: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123e814: 488b d649 | b800 61a9 | 6702 0000 | 0049 8380 | 9801 0000 | 0148 8bd6 

  0x000000011123e82c: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123e82c: 49b8 0061 | a967 0200 | 0000 4983 | 80d0 0100 

  0x000000011123e83c: ;   {metadata(method data for {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011123e83c: 0001 48ba | 1059 a967 | 0200 0000 | 448b 821c | 0100 0041 | 83c0 0244 | 8982 1c01 | 0000 4181 
  0x000000011123e85c: e0fe ff1f | 0041 83f8 | 000f 8449 

  0x000000011123e868: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123e868: 3000 0048 | ba00 61a9 | 6702 0000 | 0048 8382 | 0802 0000 

  0x000000011123e87c: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123e87c: 0148 be00 | 61a9 6702 | 0000 0048 | 8386 4002 

  0x000000011123e88c: ;   {metadata(method data for {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123e88c: 0000 0148 | be88 65a9 | 6702 0000 | 008b 961c | 0100 0083 | c202 8996 | 1c01 0000 | 81e2 feff 
  0x000000011123e8ac: 1f00 83fa | 000f 841e 

  0x000000011123e8b4: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011123e8b4: 3000 0048 | be08 ad40 | 1001 0000 | 0048 8db6 | 3802 0000 

  0x000000011123e8c8: ;   {oop(a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019765cae0})}
  0x000000011123e8c8: 48ba e0ca | 6597 0100 | 0000 4c8b | c24d 85c0 | 7507 4881 | 0e01 0000 

  0x000000011123e8e0: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123e8e0: 0048 be00 | 61a9 6702 | 0000 0048 | 8386 5002 

  0x000000011123e8f0: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011123e8f0: 0000 0148 | be08 ad40 | 1001 0000 | 0044 8b86 | 1c01 0000 | 4183 c002 | 4489 861c | 0100 0041 
  0x000000011123e910: 81e0 feff | 1f00 4183 | f800 0f84 | d62f 0000 

  0x000000011123e920: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011123e920: 48be 089d | 4010 0100 | 0000 488d | b6f0 0100 | 0048 85d2 | 7507 4881 | 0e01 0000 

  0x000000011123e93c: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011123e93c: 0048 be08 | ad40 1001 | 0000 0048 | 8386 9801 

  0x000000011123e94c: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011123e94c: 0000 0148 | be08 9d40 | 1001 0000 | 008b 961c | 0100 0083 | c202 8996 | 1c01 0000 | 81e2 feff 
  0x000000011123e96c: 1f00 83fa | 000f 84a0 

  0x000000011123e974: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011123e974: 2f00 0048 | be08 ad40 | 1001 0000 | 0048 8db6 | d001 0000 

  0x000000011123e988: ;   {oop(a 'jdk/incubator/vector/DoubleVector$$Lambda$94+0x0000000225d597d0'{0x000000019765c8d0})}
  0x000000011123e988: 48ba d0c8 | 6597 0100 | 0000 4c8b | c24d 85c0 | 7507 4881 | 0e01 0000 

  0x000000011123e9a0: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123e9a0: 0048 be00 | 61a9 6702 | 0000 0048 | 8db6 6002 | 0000 4885 | d275 0748 | 810e 0100 

  0x000000011123e9bc: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123e9bc: 0000 48be | 0061 a967 | 0200 0000 | 4883 8670 | 0200 0001 

  0x000000011123e9d0: ;   {oop(a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector')}
  0x000000011123e9d0: 48be 5881 | 6197 0100 

  0x000000011123e9d8: ;   {oop(a 'java/lang/Class'{0x000000011ff8c550} = double)}
  0x000000011123e9d8: 0000 48ba | 50c5 f81f | 0100 0000 | 488b d9b9 | 0400 0000 | 4c8b c348 | 8bfb 4489 

  0x000000011123e9f4: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8})}
  0x000000011123e9f4: 1c24 49ba | e880 6197 | 0100 0000 | 4c89 5424 

  0x000000011123ea04: ;   {oop(a 'jdk/incubator/vector/DoubleVector$$Lambda$94+0x0000000225d597d0'{0x000000019765c8d0})}
  0x000000011123ea04: 0849 bad0 | c865 9701 | 0000 004c 

  0x000000011123ea10: ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011123ea10: 8954 2410 | 4889 9c24 | a001 0000 | 4489 9c24 | 7401 0000 

  0x000000011123ea24: ;   {static_call}
  0x000000011123ea24: 9090 90e8 

  0x000000011123ea28: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop [448]=Oop [416]=Oop }
                      ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011123ea28: 945a 4407 | 4883 f800 

  0x000000011123ea30: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123ea30: 7516 48bf | 0061 a967 | 0200 0000 | 808f 7902 | 0000 01e9 | c100 0000 

  0x000000011123ea48: ;   {metadata('jdk/incubator/vector/DoubleVector')}
  0x000000011123ea48: 48be 30ce | d425 0200 | 0000 8b78 | 0848 c1e7 | 0348 3b77 | 600f 858a 

  0x000000011123ea60: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123ea60: 0000 0048 | bf00 61a9 | 6702 0000 | 008b 7008 | 48c1 e603 | 483b b790 | 0200 0075 | 0d48 8387 
  0x000000011123ea80: 9802 0000 | 01e9 7f00 | 0000 483b | b7a0 0200 | 0075 0d48 | 8387 a802 | 0000 01e9 | 6900 0000 
  0x000000011123eaa0: 4881 bf90 | 0200 0000 | 0000 0075 | 1748 89b7 | 9002 0000 | 48c7 8798 | 0200 0001 | 0000 00e9 
  0x000000011123eac0: 4500 0000 | 4881 bfa0 | 0200 0000 | 0000 0075 | 1748 89b7 | a002 0000 | 48c7 87a8 | 0200 0001 
  0x000000011123eae0: 0000 00e9 | 2100 0000 | e91c 0000 

  0x000000011123eaec: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123eaec: 0048 bf00 | 61a9 6702 | 0000 0048 | 83af 8002 | 0000 01e9 | 342e 0000 | e900 0000 

  0x000000011123eb08: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011123eb08: 0048 8bc8 | 488b b424 | a801 0000 
 ;;  block B89 [90, 103]
  0x000000011123eb14: ; implicit exception: dispatches to 0x0000000111241955
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011123eb14: 483b 0648 

  0x000000011123eb18: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011123eb18: 8bd6 48bf | 4046 a067 | 0200 0000 | 4883 8760 | 0200 0001 

  0x000000011123eb2c: ;   {metadata(method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123eb2c: 48ba 9872 | a967 0200 | 0000 8bba | 1c01 0000 | 83c7 0289 | ba1c 0100 | 0081 e7fe | ff1f 0083 
  0x000000011123eb4c: ff00 0f84 | 1a2e 0000 

  0x000000011123eb54: ;   {metadata(method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123eb54: 488b d648 | bf98 72a9 | 6702 0000 | 008b 5208 | 48c1 e203 | 483b 9770 | 0100 0075 | 0d48 8387 
  0x000000011123eb74: 7801 0000 | 01e9 6600 | 0000 483b | 9780 0100 | 0075 0d48 | 8387 8801 | 0000 01e9 | 5000 0000 
  0x000000011123eb94: 4881 bf70 | 0100 0000 | 0000 0075 | 1748 8997 | 7001 0000 | 48c7 8778 | 0100 0001 | 0000 00e9 
  0x000000011123ebb4: 2c00 0000 | 4881 bf80 | 0100 0000 | 0000 0075 | 1748 8997 | 8001 0000 | 48c7 8788 | 0100 0001 
  0x000000011123ebd4: 0000 00e9 | 0800 0000 | 4883 8760 | 0100 0001 

  0x000000011123ebe4: ;   {oop(a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000000197665d58})}
  0x000000011123ebe4: 48ba 585d | 6697 0100 | 0000 9090 | 9090 9090 | 9048 b8a0 | 20d5 2502 

  0x000000011123ebfc: ;   {virtual_call}
  0x000000011123ebfc: 0000 00e8 

  0x000000011123ec00: ; ImmutableOopMap {[432]=Oop [440]=Oop [448]=Oop [416]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011123ec00: fcac 4407 | 448b 9c24 | 7401 0000 | 4183 c304 

  0x000000011123ec10: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011123ec10: 48ba 4046 | a067 0200 | 0000 8bb2 | 2001 0000 | 83c6 0289 | b220 0100 | 0081 e6fe | 3f00 0083 
  0x000000011123ec30: fe00 0f84 

  0x000000011123ec34: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
  0x000000011123ec34: 572d 0000 | 4d8b 9730 

  0x000000011123ec3c: ; ImmutableOopMap {[432]=Oop [440]=Oop [448]=Oop [416]=Oop rax=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
                      ;   {poll}
  0x000000011123ec3c: 0100 0041 

  0x000000011123ec40: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011123ec40: 8502 48ba | 4046 a067 | 0200 0000 | ff82 9802 | 0000 488b | f048 8b9c | 24c0 0100 | 0048 89b4 
  0x000000011123ec60: 24a8 0100 | 0048 899c | 2498 0100 | 00c5 fb10 | 8424 7802 | 0000 488b | 9424 b001 | 0000 e90d 
  0x000000011123ec80: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
  0x000000011123ec80: f0ff ff48 | 8b9c 2498 | 0100 00c5 | fb11 8424 | 7802 0000 | 4489 9c24 | 7401 0000 | 4889 9424 
  0x000000011123eca0: b001 0000 
 ;; 1418 move [obj:0x0000000000000000|L] [rdx|L] [patch_normal] [bci:109]
  0x000000011123eca4: 9090 9090 

  0x000000011123eca8: ;   {no_reloc}
  0x000000011123eca8: e967 2d00 | 0000 0000 | 0000 9090 | 9090 9090 

  0x000000011123ecb8: ; implicit exception: dispatches to 0x0000000111241a1e
  0x000000011123ecb8: e986 2d00 

  0x000000011123ecbc: ;*getstatic ADD {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@109 (line 29)
  0x000000011123ecbc: 0090 9048 | 3b03 488b 

  0x000000011123ecc4: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011123ecc4: fb48 b840 | 46a0 6702 | 0000 008b | 7f08 48c1 | e703 483b | b8c0 0200 | 0075 0d48 | 8380 c802 
  0x000000011123ece4: 0000 01e9 | 6600 0000 | 483b b8d0 | 0200 0075 | 0d48 8380 | d802 0000 | 01e9 5000 | 0000 4881 
  0x000000011123ed04: b8c0 0200 | 0000 0000 | 0075 1748 | 89b8 c002 | 0000 48c7 | 80c8 0200 | 0001 0000 | 00e9 2c00 
  0x000000011123ed24: 0000 4881 | b8d0 0200 | 0000 0000 | 0075 1748 | 89b8 d002 | 0000 48c7 | 80d8 0200 | 0001 0000 
  0x000000011123ed44: 00e9 0800 | 0000 4883 | 80b0 0200 | 0001 488b 

  0x000000011123ed54: ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
  0x000000011123ed54: f348 899c | 2498 0100 | 0048 b8ff | ffff ffff 

  0x000000011123ed64: ;   {virtual_call}
  0x000000011123ed64: ffff ffe8 

  0x000000011123ed68: ; ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop [408]=Oop [424]=Oop }
                      ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
  0x000000011123ed68: b4b1 9bff | c5fb 5884 | 2480 0200 | 0090 9090 

  0x000000011123ed78: ;   {no_reloc}
  0x000000011123ed78: e94d 2d00 | 0000 0000 | 0000 9090 | 9090 9090 

  0x000000011123ed88: ; implicit exception: dispatches to 0x0000000111241ad4
  0x000000011123ed88: e96c 2d00 

  0x000000011123ed8c: ;*getstatic ADD {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@121 (line 30)
  0x000000011123ed8c: 0090 9048 | 8bb4 24a8 | 0100 0048 | 3b06 488b 

  0x000000011123ed9c: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011123ed9c: fe48 bb40 | 46a0 6702 | 0000 008b | 7f08 48c1 | e703 483b | bbf8 0200 | 0075 0d48 | 8383 0003 
  0x000000011123edbc: 0000 01e9 | 6600 0000 | 483b bb08 | 0300 0075 | 0d48 8383 | 1003 0000 | 01e9 5000 | 0000 4881 
  0x000000011123eddc: bbf8 0200 | 0000 0000 | 0075 1748 | 89bb f802 | 0000 48c7 | 8300 0300 | 0001 0000 | 00e9 2c00 
  0x000000011123edfc: 0000 4881 | bb08 0300 | 0000 0000 | 0075 1748 | 89bb 0803 | 0000 48c7 | 8310 0300 | 0001 0000 
  0x000000011123ee1c: 00e9 0800 | 0000 4883 | 83e8 0200 | 0001 488b 

  0x000000011123ee2c: ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
  0x000000011123ee2c: fe48 8bf7 | 4889 bc24 | a801 0000 | c5fb 1184 | 2490 0200 | 0090 9090 | 9048 b8ff | ffff ffff 
  0x000000011123ee4c: ;   {virtual_call}
  0x000000011123ee4c: ffff ffe8 

  0x000000011123ee50: ; ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop [408]=Oop [424]=Oop }
                      ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
  0x000000011123ee50: ccb0 9bff | c5fb 5884 | 2488 0200 | 0044 8b9c | 2474 0100 | 00c5 fb10 | 8c24 9002 | 0000 488b 
  0x000000011123ee70: 8c24 a001 | 0000 488b | 9424 b001 | 0000 e985 

  0x000000011123ee80: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@130 (line 32)
  0x000000011123ee80: 0000 0090 | 9090 9090 
 ;;  block B7 [137, 156]
  0x000000011123ee88: 443b 5a0c 
 ;; 1494 branch [AE] [RangeCheckStub: 0x00007f846c4b9b70] [bci:141]
  0x000000011123ee8c: 0f83 8a2c | 0000 4963 | f3c5 fb10 

  0x000000011123ee98: ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@141 (line 33)
  0x000000011123ee98: 54f2 10c5 | eb58 d144 | 3b59 0c0f | 83c7 2c00 | 0049 63f3 | c5fb 104c 

  0x000000011123eeb0: ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@149 (line 34)
  0x000000011123eeb0: f110 c5f3 | 58c8 41ff 

  0x000000011123eeb8: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011123eeb8: c348 be40 | 46a0 6702 | 0000 0044 | 8b86 2001 | 0000 4183 | c002 4489 | 8620 0100 | 0041 81e0 
  0x000000011123eed8: fe3f 0000 | 4183 f800 
 ;; 1532 branch [EQ] [CounterOverflowStub: 0x00007f846c4baa50]
  0x000000011123eee0: 0f84 ac2c 

  0x000000011123eee4: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)
  0x000000011123eee4: 0000 4d8b | 9730 0100 

  0x000000011123eeec: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop rdx=Oop rcx=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)
                      ;   {poll}
  0x000000011123eeec: 0041 8502 

  0x000000011123eef0: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011123eef0: 48be 4046 | a067 0200 | 0000 ff86 | 4003 0000 | c5f9 28c1 

  0x000000011123ef04: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)
  0x000000011123ef04: c5f9 28ca 
 ;;  block B6 [130, 134]
  0x000000011123ef08: ; implicit exception: dispatches to 0x0000000111241bb3
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@133 (line 32)
  0x000000011123ef08: 8b5a 0c89 | 9c24 f801 | 0000 443b 

  0x000000011123ef14: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011123ef14: db48 be40 | 46a0 6702 | 0000 0049 | b830 0300 | 0000 0000 | 000f 8c0a | 0000 0049 | b820 0300 
  0x000000011123ef34: 0000 0000 | 004e 8b0c | 064d 8d49 | 014e 890c | 060f 8c3d 

  0x000000011123ef48: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@134 (line 32)
  0x000000011123ef48: ffff ff48 | 898c 24a0 | 0100 0048 | 8994 24b0 | 0100 00c5 | eb2a d3c5 | f35e cac5 | fb11 8c24 
  0x000000011123ef68: 9802 0000 | c5fb 5ec2 | c5fb 1184 | 24a0 0200 

  0x000000011123ef78: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011123ef78: 0048 be40 | 46a0 6702 | 0000 0048 | 8386 5803 

  0x000000011123ef88: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123ef88: 0000 0148 | bea8 dfa9 | 6702 0000 | 0044 8b86 | 1c01 0000 | 4183 c002 | 4489 861c | 0100 0041 
  0x000000011123efa8: 81e0 feff | 1f00 4183 | f800 0f84 | 142c 0000 

  0x000000011123efb8: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8})}
  0x000000011123efb8: 48b8 e880 | 6197 0100 | 0000 488b 

  0x000000011123efc4: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123efc4: f049 b8a8 | dfa9 6702 | 0000 0049 | 8380 9801 | 0000 0148 

  0x000000011123efd8: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123efd8: 8bf0 49b8 | a8df a967 | 0200 0000 | 8b76 0848 | c1e6 0349 | 3bb0 e001 | 0000 750d | 4983 80e8 
  0x000000011123eff8: 0100 0001 | e966 0000 | 0049 3bb0 | f001 0000 | 750d 4983 | 80f8 0100 | 0001 e950 | 0000 0049 
  0x000000011123f018: 81b8 e001 | 0000 0000 | 0000 7517 | 4989 b0e0 | 0100 0049 | c780 e801 | 0000 0100 | 0000 e92c 
  0x000000011123f038: 0000 0049 | 81b8 f001 | 0000 0000 | 0000 7517 | 4989 b0f0 | 0100 0049 | c780 f801 | 0000 0100 
  0x000000011123f058: 0000 e908 | 0000 0049 | 8380 d001 

  0x000000011123f064: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123f064: 0000 0148 | bea8 dfa9 | 6702 0000 | 0048 8386 | 0802 0000 

  0x000000011123f078: ;   {metadata(method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123f078: 0148 be68 | e2a9 6702 | 0000 0044 | 8b86 1c01 | 0000 4183 | c002 4489 | 861c 0100 | 0041 81e0 
  0x000000011123f098: feff 1f00 | 4183 f800 
 ;; 1604 branch [EQ] [CounterOverflowStub: 0x00007f846c4bc3d0]
  0x000000011123f0a0: 0f84 472b 

  0x000000011123f0a4: ;   {metadata(method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123f0a4: 0000 48be | 68e2 a967 | 0200 0000 | 4883 8660 | 0100 0001 

  0x000000011123f0b8: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011123f0b8: 48be 08ad | 4010 0100 | 0000 488d | b638 0200 

  0x000000011123f0c8: ;   {oop(a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019762aea0})}
  0x000000011123f0c8: 0049 bba0 | ae62 9701 | 0000 004d | 8bc3 4d85 | c075 0748 | 810e 0100 

  0x000000011123f0e0: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123f0e0: 0000 48be | a8df a967 | 0200 0000 | 4883 8618 | 0200 0001 

  0x000000011123f0f4: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011123f0f4: 48be 08ad | 4010 0100 | 0000 448b | 861c 0100 | 0041 83c0 | 0244 8986 | 1c01 0000 | 4181 e0fe 
  0x000000011123f114: ff1f 0041 | 83f8 000f | 84ed 2a00 

  0x000000011123f120: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011123f120: 0048 be08 | 9d40 1001 | 0000 0048 | 8db6 f001 | 0000 4d8b | c34d 85c0 | 7507 4881 | 0e01 0000 
  0x000000011123f140: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011123f140: 0048 be08 | ad40 1001 | 0000 0048 | 8386 9801 

  0x000000011123f150: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011123f150: 0000 0148 | be08 9d40 | 1001 0000 | 0044 8b86 | 1c01 0000 | 4183 c002 | 4489 861c | 0100 0041 
  0x000000011123f170: 81e0 feff | 1f00 4183 | f800 0f84 | af2a 0000 

  0x000000011123f180: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011123f180: 48be 08ad | 4010 0100 | 0000 488d | b6d0 0100 

  0x000000011123f190: ;   {oop(a 'jdk/incubator/vector/DoubleVector$$Lambda$87+0x0000000225d54960'{0x000000019762ac90})}
  0x000000011123f190: 0049 bd90 | ac62 9701 | 0000 004d | 8bc5 4d85 | c075 0748 | 810e 0100 

  0x000000011123f1a8: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123f1a8: 0000 48be | a8df a967 | 0200 0000 | 488d b628 | 0200 004d | 8bc5 4d85 | c075 0c48 | 810e 0100 
  0x000000011123f1c8: 0000 e97d | 0000 0045 | 8b40 0849 | c1e0 0341 

  0x000000011123f1d8: ;   {metadata('jdk/incubator/vector/DoubleVector$$Lambda$87+0x0000000225d54960')}
  0x000000011123f1d8: 5049 b860 | 49d5 2502 | 0000 004c | 3b04 240f | 8414 0000 

  0x000000011123f1ec: ;   {external_word}
  0x000000011123f1ec: 0048 bf77 | 1fb3 0901 | 0000 0048 

  0x000000011123f1f8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011123f1f8: 83e4 f0e8 | 501d 2af8 

  0x000000011123f200: ;   {metadata('jdk/incubator/vector/DoubleVector$$Lambda$87+0x0000000225d54960')}
  0x000000011123f200: f441 5849 | b860 49d5 | 2502 0000 | 004c 3306 | 49f7 c0fc | ffff ff74 | 3349 f7c0 | 0200 0000 
  0x000000011123f220: 752a 4881 | 3e00 0000 | 0074 1e48 | 813e 0100 | 0000 7415 | 4c33 0649 | f7c0 fcff | ffff 740c 
  0x000000011123f240: 4881 0e02 | 0000 00eb | 034c 8906 

  0x000000011123f24c: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123f24c: 48be a8df | a967 0200 | 0000 4883 | 8638 0200 

  0x000000011123f25c: ;   {oop(a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector')}
  0x000000011123f25c: 0001 49be | 5881 6197 | 0100 0000 

  0x000000011123f268: ;   {oop(a 'java/lang/Class'{0x000000011ff8c550} = double)}
  0x000000011123f268: 49bc 50c5 | f81f 0100 | 0000 48bf | 0000 0000 | 0000 0000 | 498b f649 | 8bd4 b904 | 0000 004c 
  0x000000011123f288: 8bc7 4c8b | c848 89bc | 24c8 0100 

  0x000000011123f294: ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@28 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
  0x000000011123f294: 0049 8bfd | 4c89 a424 | f001 0000 | 4c89 b424 | e801 0000 | 4c89 ac24 | e001 0000 | 4c89 9c24 
  0x000000011123f2b4: d801 0000 | 4889 8424 | d001 0000 | 9090 9090 

  0x000000011123f2c4: ;   {static_call}
  0x000000011123f2c4: 9090 90e8 

  0x000000011123f2c8: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [416]=Oop [432]=Oop [496]=Oop [464]=Oop [472]=Oop [480]=Oop [488]=Oop }
                      ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@28 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
  0x000000011123f2c8: 54af 9bff | 4883 f800 

  0x000000011123f2d0: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123f2d0: 7516 48b9 | a8df a967 | 0200 0000 | 8089 4102 | 0000 01e9 | c100 0000 

  0x000000011123f2e8: ;   {metadata('jdk/incubator/vector/DoubleVector')}
  0x000000011123f2e8: 48ba 30ce | d425 0200 | 0000 8b48 | 0848 c1e1 | 0348 3b51 | 600f 858a 

  0x000000011123f300: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123f300: 0000 0048 | b9a8 dfa9 | 6702 0000 | 008b 5008 | 48c1 e203 | 483b 9158 | 0200 0075 | 0d48 8381 
  0x000000011123f320: 6002 0000 | 01e9 7f00 | 0000 483b | 9168 0200 | 0075 0d48 | 8381 7002 | 0000 01e9 | 6900 0000 
  0x000000011123f340: 4881 b958 | 0200 0000 | 0000 0075 | 1748 8991 | 5802 0000 | 48c7 8160 | 0200 0001 | 0000 00e9 
  0x000000011123f360: 4500 0000 | 4881 b968 | 0200 0000 | 0000 0075 | 1748 8991 | 6802 0000 | 48c7 8170 | 0200 0001 
  0x000000011123f380: 0000 00e9 | 2100 0000 | e91c 0000 

  0x000000011123f38c: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123f38c: 0048 b9a8 | dfa9 6702 | 0000 0048 | 83a9 4802 | 0000 01e9 | ac28 0000 | e900 0000 

  0x000000011123f3a8: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@31 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
  0x000000011123f3a8: 0048 8bd8 

  0x000000011123f3ac: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011123f3ac: 48be 4046 | a067 0200 | 0000 4883 | 8668 0300 

  0x000000011123f3bc: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123f3bc: 0001 48be | a8df a967 | 0200 0000 | 8b96 1c01 | 0000 83c2 | 0289 961c | 0100 0081 | e2fe ff1f 
  0x000000011123f3dc: 0083 fa00 
 ;; 1714 branch [EQ] [CounterOverflowStub: 0x00007f846c4e9200]
  0x000000011123f3e0: 0f84 8728 | 0000 488b | 8424 d001 

  0x000000011123f3ec: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123f3ec: 0000 48be | a8df a967 | 0200 0000 | 4883 8698 | 0100 0001 | 488b 8424 | d001 0000 

  0x000000011123f408: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123f408: 48be a8df | a967 0200 | 0000 8b40 | 0848 c1e0 | 0348 3b86 | e001 0000 | 750d 4883 | 86e8 0100 
  0x000000011123f428: 0001 e966 | 0000 0048 | 3b86 f001 | 0000 750d | 4883 86f8 | 0100 0001 | e950 0000 | 0048 81be 
  0x000000011123f448: e001 0000 | 0000 0000 | 7517 4889 | 86e0 0100 | 0048 c786 | e801 0000 | 0100 0000 | e92c 0000 
  0x000000011123f468: 0048 81be | f001 0000 | 0000 0000 | 7517 4889 | 86f0 0100 | 0048 c786 | f801 0000 | 0100 0000 
  0x000000011123f488: e908 0000 | 0048 8386 | d001 0000 

  0x000000011123f494: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123f494: 0148 bea8 | dfa9 6702 | 0000 0048 | 8386 0802 

  0x000000011123f4a4: ;   {metadata(method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123f4a4: 0000 0148 | be68 e2a9 | 6702 0000 | 008b 961c | 0100 0083 | c202 8996 | 1c01 0000 | 81e2 feff 
  0x000000011123f4c4: 1f00 83fa | 000f 84bf 

  0x000000011123f4cc: ;   {metadata(method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123f4cc: 2700 0048 | be68 e2a9 | 6702 0000 | 0048 8386 | 6001 0000 

  0x000000011123f4e0: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011123f4e0: 0148 be08 | ad40 1001 | 0000 0048 | 8db6 3802 | 0000 4c8b | 9c24 d801 | 0000 498b | d348 85d2 
  0x000000011123f500: 7507 4881 | 0e01 0000 

  0x000000011123f508: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123f508: 0048 bea8 | dfa9 6702 | 0000 0048 | 8386 1802 

  0x000000011123f518: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011123f518: 0000 0148 | be08 ad40 | 1001 0000 | 008b 961c | 0100 0083 | c202 8996 | 1c01 0000 | 81e2 feff 
  0x000000011123f538: 1f00 83fa | 000f 846c 

  0x000000011123f540: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011123f540: 2700 0048 | be08 9d40 | 1001 0000 | 0048 8db6 | f001 0000 | 498b d348 | 85d2 7507 | 4881 0e01 
  0x000000011123f560: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011123f560: 0000 0048 | be08 ad40 | 1001 0000 | 0048 8386 | 9801 0000 

  0x000000011123f574: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011123f574: 0148 be08 | 9d40 1001 | 0000 008b | 961c 0100 | 0083 c202 | 8996 1c01 | 0000 81e2 | feff 1f00 
  0x000000011123f594: 83fa 000f | 8433 2700 

  0x000000011123f59c: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011123f59c: 0048 be08 | ad40 1001 | 0000 0048 | 8db6 d001 | 0000 4c8b | ac24 e001 | 0000 498b | d548 85d2 
  0x000000011123f5bc: 7507 4881 | 0e01 0000 

  0x000000011123f5c4: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123f5c4: 0048 bea8 | dfa9 6702 | 0000 0048 | 8db6 2802 | 0000 498b | d548 85d2 | 750c 4881 | 0e01 0000 
  0x000000011123f5e4: 00e9 7a00 | 0000 8b52 | 0848 c1e2 

  0x000000011123f5f0: ;   {metadata('jdk/incubator/vector/DoubleVector$$Lambda$87+0x0000000225d54960')}
  0x000000011123f5f0: 0352 48ba | 6049 d525 | 0200 0000 | 483b 1424 | 0f84 1400 

  0x000000011123f604: ;   {external_word}
  0x000000011123f604: 0000 48bf | 771f b309 | 0100 0000 | 4883 e4f0 

  0x000000011123f614: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011123f614: e837 192a 

  0x000000011123f618: ;   {metadata('jdk/incubator/vector/DoubleVector$$Lambda$87+0x0000000225d54960')}
  0x000000011123f618: f8f4 5a48 | ba60 49d5 | 2502 0000 | 0048 3316 | 48f7 c2fc | ffff ff74 | 3348 f7c2 | 0200 0000 
  0x000000011123f638: 752a 4881 | 3e00 0000 | 0074 1e48 | 813e 0100 | 0000 7415 | 4833 1648 | f7c2 fcff | ffff 740c 
  0x000000011123f658: 4881 0e02 | 0000 00eb | 0348 8916 

  0x000000011123f664: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123f664: 48be a8df | a967 0200 | 0000 4883 | 8638 0200 | 0001 488b | b424 e801 | 0000 488b | 9424 f001 
  0x000000011123f684: 0000 b904 | 0000 004c | 8b84 24c8 | 0100 004c | 8b8c 24d0 | 0100 0049 

  0x000000011123f69c: ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@28 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
  0x000000011123f69c: 8bfd 4889 | 9c24 0002 

  0x000000011123f6a4: ;   {static_call}
  0x000000011123f6a4: 0000 90e8 

  0x000000011123f6a8: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [416]=Oop [432]=Oop [512]=Oop }
                      ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@28 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
  0x000000011123f6a8: 74ab 9bff | 4883 f800 

  0x000000011123f6b0: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123f6b0: 7517 49b8 | a8df a967 | 0200 0000 | 4180 8841 | 0200 0001 | e9c2 0000 

  0x000000011123f6c8: ;   {metadata('jdk/incubator/vector/DoubleVector')}
  0x000000011123f6c8: 0048 ba30 | ced4 2502 | 0000 0044 | 8b40 0849 | c1e0 0349 | 3b50 600f | 858a 0000 

  0x000000011123f6e4: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123f6e4: 0049 b8a8 | dfa9 6702 | 0000 008b | 5008 48c1 | e203 493b | 9058 0200 | 0075 0d49 | 8380 6002 
  0x000000011123f704: 0000 01e9 | 7f00 0000 | 493b 9068 | 0200 0075 | 0d49 8380 | 7002 0000 | 01e9 6900 | 0000 4981 
  0x000000011123f724: b858 0200 | 0000 0000 | 0075 1749 | 8990 5802 | 0000 49c7 | 8060 0200 | 0001 0000 | 00e9 4500 
  0x000000011123f744: 0000 4981 | b868 0200 | 0000 0000 | 0075 1749 | 8990 6802 | 0000 49c7 | 8070 0200 | 0001 0000 
  0x000000011123f764: 00e9 2100 | 0000 e91c 

  0x000000011123f76c: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123f76c: 0000 0049 | b8a8 dfa9 | 6702 0000 | 0049 83a8 | 4802 0000 | 01e9 6b25 | 0000 e900 | 0000 0048 
  0x000000011123f78c: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@31 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
  0x000000011123f78c: 8bc8 488b | 9c24 0002 | 0000 b800 

  0x000000011123f798: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011123f798: 0000 0048 | 898c 2418 | 0200 0090 | 9090 9090 
 ;;  block B9 [199, 205]
  0x000000011123f7a8: 4889 9c24 | 1002 0000 | 8b9c 24f8 | 0100 00c5 | fb10 8424 | 7802 0000 | 488b 9424 | b001 0000 
  0x000000011123f7c8: c5e3 2ad8 | c5f9 2ed8 | be01 0000 | 000f 8a13 | 0000 000f | 870d 0000 | 00be 0000 | 0000 0f84 
  0x000000011123f7e8: 0200 0000 

  0x000000011123f7ec: ;*dcmpg {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@204 (line 46)
  0x000000011123f7ec: ffce 83fe 

  0x000000011123f7f0: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011123f7f0: 0048 be40 | 46a0 6702 | 0000 0049 | b878 0300 | 0000 0000 | 000f 8d0a | 0000 0049 | b888 0300 
  0x000000011123f810: 0000 0000 | 004e 8b0c | 064d 8d49 | 014e 890c | 060f 8d74 

  0x000000011123f824: ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@205 (line 46)
                      ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011123f824: 1500 0048 | be40 46a0 | 6702 0000 | 0048 8386 | 9803 0000 

  0x000000011123f838: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123f838: 0148 be90 | 5aa9 6702 | 0000 0044 | 8b86 1c01 | 0000 4183 | c002 4489 | 861c 0100 | 0041 81e0 
  0x000000011123f858: feff 1f00 | 4183 f800 
 ;; 1872 branch [EQ] [CounterOverflowStub: 0x00007f846af01e00]
  0x000000011123f860: 0f84 a824 

  0x000000011123f864: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8})}
  0x000000011123f864: 0000 48be | e880 6197 | 0100 0000 

  0x000000011123f870: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123f870: 49b8 905a | a967 0200 | 0000 8b76 | 0848 c1e6 | 0349 3bb0 | 7001 0000 | 750d 4983 | 8078 0100 
  0x000000011123f890: 0001 e966 | 0000 0049 | 3bb0 8001 | 0000 750d | 4983 8088 | 0100 0001 | e950 0000 | 0049 81b8 
  0x000000011123f8b0: 7001 0000 | 0000 0000 | 7517 4989 | b070 0100 | 0049 c780 | 7801 0000 | 0100 0000 | e92c 0000 
  0x000000011123f8d0: 0049 81b8 | 8001 0000 | 0000 0000 | 7517 4989 | b080 0100 | 0049 c780 | 8801 0000 | 0100 0000 
  0x000000011123f8f0: e908 0000 | 0049 8380 | 6001 0000 

  0x000000011123f8fc: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123f8fc: 0148 be90 | 5aa9 6702 | 0000 0048 | 8386 9801 

  0x000000011123f90c: ;   {metadata(method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x000000011123f90c: 0000 0148 | be30 5da9 | 6702 0000 | 0044 8b86 | 1c01 0000 | 4183 c002 | 4489 861c | 0100 0041 
  0x000000011123f92c: 81e0 feff | 1f00 4183 | f800 0f84 | f323 0000 
 ;;  block B164 [37, 1]
  0x000000011123f93c: 488b fb83 

  0x000000011123f940: ;   {metadata(method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x000000011123f940: ef03 48be | 305d a967 | 0200 0000 | 4883 86c0 | 0100 0001 

  0x000000011123f954: ;   {metadata(method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x000000011123f954: 48be 184c | 9f67 0200 | 0000 448b | 861c 0100 | 0041 83c0 | 0244 8986 | 1c01 0000 | 4181 e0fe 
  0x000000011123f974: ff1f 0041 | 83f8 000f | 84cf 2300 

  0x000000011123f980: ;   {metadata(method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x000000011123f980: 0048 be18 | 4c9f 6702 | 0000 0048 | 8386 6001 

  0x000000011123f990: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011123f990: 0000 0148 | bed0 4d9f | 6702 0000 | 0044 8b86 | 1c01 0000 | 4183 c002 | 4489 861c | 0100 0041 
  0x000000011123f9b0: 81e0 feff | 1f00 4183 | f800 0f84 | b123 0000 

  0x000000011123f9c0: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011123f9c0: 83f8 0048 | bed0 4d9f | 6702 0000 | 0049 b860 | 0100 0000 | 0000 000f | 8c0a 0000 | 0049 b870 
  0x000000011123f9e0: 0100 0000 | 0000 004e | 8b0c 064d | 8d49 014e | 890c 060f | 8c97 1600 

  0x000000011123f9f8: ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@1 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
                      ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011123f9f8: 003b c748 | bed0 4d9f | 6702 0000 | 0049 b890 | 0100 0000 | 0000 000f | 8d0a 0000 | 0049 b880 
  0x000000011123fa18: 0100 0000 | 0000 004e | 8b0c 064d | 8d49 014e | 890c 060f | 8d5f 1600 

  0x000000011123fa30: ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@6 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
                      ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8})}
  0x000000011123fa30: 0048 bee8 | 8061 9701 | 0000 004c 

  0x000000011123fa3c: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123fa3c: 8bc6 49b9 | 905a a967 | 0200 0000 | 4983 81e0 | 0100 0001 

  0x000000011123fa50: ;   {metadata(method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011123fa50: 49b8 b048 | a967 0200 | 0000 458b | 881c 0100 | 0041 83c1 | 0245 8988 | 1c01 0000 | 4181 e1fe 
  0x000000011123fa70: ff1f 0041 | 83f9 000f | 8415 2300 

  0x000000011123fa7c: ;   {metadata(method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011123fa7c: 0049 b8b0 | 48a9 6702 | 0000 0049 | 8380 6001 

  0x000000011123fa8c: ;   {metadata(method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011123fa8c: 0000 0148 | be98 4aa9 | 6702 0000 | 0044 8b86 | 1c01 0000 | 4183 c002 | 4489 861c | 0100 0041 
  0x000000011123faac: 81e0 feff | 1f00 4183 | f800 0f84 | f722 0000 

  0x000000011123fabc: ;   {metadata(method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011123fabc: 48be 984a | a967 0200 | 0000 ff86 

  0x000000011123fac8: ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011123fac8: 7001 0000 
 ;;  block B175 [4, 22]
  0x000000011123facc: c5fb 1184 | 2478 0200 

  0x000000011123fad4: ;   {oop(a 'jdk/incubator/vector/Double256Vector'{0x0000000197653a38})}
  0x000000011123fad4: 0048 be38 | 3a65 9701 | 0000 004c 

  0x000000011123fae0: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123fae0: 8bc6 49b9 | 905a a967 | 0200 0000 | 4983 8118 | 0200 0001 

  0x000000011123faf4: ;   {metadata(method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011123faf4: 49b8 605f | a967 0200 | 0000 458b | 881c 0100 | 0041 83c1 | 0245 8988 | 1c01 0000 | 4181 e1fe 
  0x000000011123fb14: ff1f 0041 | 83f9 000f | 84b3 2200 | 004c 8bc6 

  0x000000011123fb24: ;   {metadata(method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011123fb24: 49b9 605f | a967 0200 | 0000 4983 | 8160 0100 

  0x000000011123fb34: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123fb34: 0001 49b8 | 0061 a967 | 0200 0000 | 458b 881c | 0100 0041 | 83c1 0245 | 8988 1c01 | 0000 4181 
  0x000000011123fb54: e1fe ff1f | 0041 83f9 | 000f 8492 

  0x000000011123fb60: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123fb60: 2200 0049 | b800 61a9 | 6702 0000 | 0049 8380 | 6001 0000 

  0x000000011123fb74: ;   {metadata(method data for {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011123fb74: 0148 be08 | 64a9 6702 | 0000 0044 | 8b86 1c01 | 0000 4183 | c002 4489 | 861c 0100 | 0041 81e0 
  0x000000011123fb94: feff 1f00 | 4183 f800 
 ;; 2108 branch [EQ] [CounterOverflowStub: 0x00007f846b384580]
  0x000000011123fb9c: 0f84 7422 

  0x000000011123fba0: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8})}
  0x000000011123fba0: 0000 48be | e880 6197 | 0100 0000 

  0x000000011123fbac: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123fbac: 4c8b c649 | b900 61a9 | 6702 0000 | 0049 8381 | 9801 0000 | 014c 8bc6 

  0x000000011123fbc4: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123fbc4: 49b9 0061 | a967 0200 | 0000 4983 | 81d0 0100 

  0x000000011123fbd4: ;   {metadata(method data for {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011123fbd4: 0001 49b8 | 1059 a967 | 0200 0000 | 458b 881c | 0100 0041 | 83c1 0245 | 8988 1c01 | 0000 4181 
  0x000000011123fbf4: e1fe ff1f | 0041 83f9 | 000f 8434 

  0x000000011123fc00: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123fc00: 2200 0049 | b800 61a9 | 6702 0000 | 0049 8380 | 0802 0000 

  0x000000011123fc14: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123fc14: 0148 be00 | 61a9 6702 | 0000 0048 | 8386 4002 

  0x000000011123fc24: ;   {metadata(method data for {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123fc24: 0000 0148 | be88 65a9 | 6702 0000 | 0044 8b86 | 1c01 0000 | 4183 c002 | 4489 861c | 0100 0041 
  0x000000011123fc44: 81e0 feff | 1f00 4183 | f800 0f84 | 0422 0000 | 4863 f0b9 | 0300 0000 | 48d3 e649 | ba10 0000 
  0x000000011123fc64: 0000 0000 | 0049 03f2 

  0x000000011123fc6c: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011123fc6c: 48b9 08ad | 4010 0100 | 0000 488d | 8938 0200 

  0x000000011123fc7c: ;   {oop(a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019765cae0})}
  0x000000011123fc7c: 0049 b8e0 | ca65 9701 | 0000 004d | 8bc8 4d85 | c975 0748 | 8109 0100 

  0x000000011123fc94: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123fc94: 0000 48b9 | 0061 a967 | 0200 0000 | 4883 8150 | 0200 0001 

  0x000000011123fca8: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011123fca8: 48b9 08ad | 4010 0100 | 0000 448b | 891c 0100 | 0041 83c1 | 0244 8989 | 1c01 0000 | 4181 e1fe 
  0x000000011123fcc8: ff1f 0041 | 83f9 000f | 84a4 2100 

  0x000000011123fcd4: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011123fcd4: 0048 b908 | 9d40 1001 | 0000 0048 | 8d89 f001 | 0000 4d85 | c075 0748 | 8109 0100 

  0x000000011123fcf0: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011123fcf0: 0000 48b9 | 08ad 4010 | 0100 0000 | 4883 8198 | 0100 0001 

  0x000000011123fd04: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011123fd04: 48b9 089d | 4010 0100 | 0000 448b | 811c 0100 | 0041 83c0 | 0244 8981 | 1c01 0000 | 4181 e0fe 
  0x000000011123fd24: ff1f 0041 | 83f8 000f | 8469 2100 

  0x000000011123fd30: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011123fd30: 0048 b908 | ad40 1001 | 0000 0048 | 8d89 d001 

  0x000000011123fd40: ;   {oop(a 'jdk/incubator/vector/DoubleVector$$Lambda$94+0x0000000225d597d0'{0x000000019765c8d0})}
  0x000000011123fd40: 0000 49b8 | d0c8 6597 | 0100 0000 | 4d8b c84d | 85c9 7507 | 4881 0901 

  0x000000011123fd58: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123fd58: 0000 0048 | b900 61a9 | 6702 0000 | 0048 8d89 | 6002 0000 | 4d85 c075 | 0748 8109 | 0100 0000 
  0x000000011123fd78: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123fd78: 48b9 0061 | a967 0200 | 0000 4883 | 8170 0200 

  0x000000011123fd88: ;   {oop(a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector')}
  0x000000011123fd88: 0001 48b9 | 5881 6197 | 0100 0000 

  0x000000011123fd94: ;   {oop(a 'java/lang/Class'{0x000000011ff8c550} = double)}
  0x000000011123fd94: 49b8 50c5 | f81f 0100 | 0000 4c8b | e648 8bf1 | 488b fa49 | 8bd0 b904 | 0000 004c | 8bc7 4d8b 
  0x000000011123fdb4: cc48 89bc | 24b0 0100 | 0048 8bbc | 24b0 0100 | 0089 0424 

  0x000000011123fdc8: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8})}
  0x000000011123fdc8: 49ba e880 | 6197 0100 | 0000 4c89 

  0x000000011123fdd4: ;   {oop(a 'jdk/incubator/vector/DoubleVector$$Lambda$94+0x0000000225d597d0'{0x000000019765c8d0})}
  0x000000011123fdd4: 5424 0849 | bad0 c865 | 9701 0000 | 004c 8954 

  0x000000011123fde4: ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011123fde4: 2410 4c89 | a424 0802 | 0000 8984 | 24fc 0100 

  0x000000011123fdf4: ;   {static_call}
  0x000000011123fdf4: 0090 90e8 

  0x000000011123fdf8: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [528]=Oop [536]=Oop }
                      ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011123fdf8: 24a4 9bff | 4883 f800 

  0x000000011123fe00: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123fe00: 7516 48bf | 0061 a967 | 0200 0000 | 808f 7902 | 0000 01e9 | c100 0000 

  0x000000011123fe18: ;   {metadata('jdk/incubator/vector/DoubleVector')}
  0x000000011123fe18: 48bb 30ce | d425 0200 | 0000 8b78 | 0848 c1e7 | 0348 3b5f | 600f 858a 

  0x000000011123fe30: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123fe30: 0000 0048 | bf00 61a9 | 6702 0000 | 008b 5808 | 48c1 e303 | 483b 9f90 | 0200 0075 | 0d48 8387 
  0x000000011123fe50: 9802 0000 | 01e9 7f00 | 0000 483b | 9fa0 0200 | 0075 0d48 | 8387 a802 | 0000 01e9 | 6900 0000 
  0x000000011123fe70: 4881 bf90 | 0200 0000 | 0000 0075 | 1748 899f | 9002 0000 | 48c7 8798 | 0200 0001 | 0000 00e9 
  0x000000011123fe90: 4500 0000 | 4881 bfa0 | 0200 0000 | 0000 0075 | 1748 899f | a002 0000 | 48c7 87a8 | 0200 0001 
  0x000000011123feb0: 0000 00e9 | 2100 0000 | e91c 0000 

  0x000000011123febc: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123febc: 0048 bf00 | 61a9 6702 | 0000 0048 | 83af 8002 | 0000 01e9 | e71f 0000 | e900 0000 

  0x000000011123fed8: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011123fed8: 0048 8bf8 
 ;;  block B156 [217, 3]
  0x000000011123fedc: ; implicit exception: dispatches to 0x0000000111241ed8
                      ;*invokevirtual sub {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x000000011123fedc: 483b 0748 

  0x000000011123fee0: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011123fee0: 8bf7 48bb | 4046 a067 | 0200 0000 | 4883 83a8 | 0300 0001 

  0x000000011123fef4: ;   {metadata(method data for {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123fef4: 48be 88e6 | a967 0200 | 0000 8b9e | 1c01 0000 | 83c3 0289 | 9e1c 0100 | 0081 e3fe | ff1f 0083 
  0x000000011123ff14: fb00 0f84 | d51f 0000 

  0x000000011123ff1c: ;   {metadata(method data for {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123ff1c: 488b f748 | bb88 e6a9 | 6702 0000 | 0048 8383 | 6001 0000 

  0x000000011123ff30: ;   {metadata(method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123ff30: 0148 be70 | e8a9 6702 | 0000 008b | 9e1c 0100 | 0083 c302 | 899e 1c01 | 0000 81e3 | feff 1f00 
  0x000000011123ff50: 83fb 000f | 84b9 1f00 | 0048 8bf7 

  0x000000011123ff5c: ;   {metadata(method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011123ff5c: 48bb 70e8 | a967 0200 | 0000 8b76 | 0848 c1e6 | 0348 3bb3 | 7001 0000 | 750d 4883 | 8378 0100 
  0x000000011123ff7c: 0001 e966 | 0000 0048 | 3bb3 8001 | 0000 750d | 4883 8388 | 0100 0001 | e950 0000 | 0048 81bb 
  0x000000011123ff9c: 7001 0000 | 0000 0000 | 7517 4889 | b370 0100 | 0048 c783 | 7801 0000 | 0100 0000 | e92c 0000 
  0x000000011123ffbc: 0048 81bb | 8001 0000 | 0000 0000 | 7517 4889 | b380 0100 | 0048 c783 | 8801 0000 | 0100 0000 
  0x000000011123ffdc: e908 0000 | 0048 8383 | 6001 0000 | 01c5 fb10 | 8424 9802 | 0000 488b 

  0x000000011123fff4: ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x000000011123fff4: f748 89bc | 2420 0200 | 0048 b8ff | ffff ffff 

  0x0000000111240004: ;   {virtual_call}
  0x0000000111240004: ffff ffe8 

  0x0000000111240008: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop [544]=Oop [416]=Oop }
                      ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x0000000111240008: 149f 9bff | 488b bc24 | 2002 0000 

  0x0000000111240014: ;   {metadata(method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111240014: 48ba 70e8 | a967 0200 | 0000 8b7f | 0848 c1e7 | 0348 3bba | a801 0000 | 750d 4883 | 82b0 0100 
  0x0000000111240034: 0001 e966 | 0000 0048 | 3bba b801 | 0000 750d | 4883 82c0 | 0100 0001 | e950 0000 | 0048 81ba 
  0x0000000111240054: a801 0000 | 0000 0000 | 7517 4889 | baa8 0100 | 0048 c782 | b001 0000 | 0100 0000 | e92c 0000 
  0x0000000111240074: 0048 81ba | b801 0000 | 0000 0000 | 7517 4889 | bab8 0100 | 0048 c782 | c001 0000 | 0100 0000 
  0x0000000111240094: e908 0000 | 0048 8382 | 9801 0000 

  0x00000001112400a0: ;   {oop(a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x0000000197665dd8})}
  0x00000001112400a0: 0148 bad8 | 5d66 9701 | 0000 0048 | 8bc8 488b | b424 2002 

  0x00000001112400b4: ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x00000001112400b4: 0000 9090 | 9090 9090 | 9048 b8ff | ffff ffff 

  0x00000001112400c4: ;   {virtual_call}
  0x00000001112400c4: ffff ffe8 

  0x00000001112400c8: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop [416]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x00000001112400c8: 549e 9bff | 4889 8424 | 2802 0000 

  0x00000001112400d4: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x00000001112400d4: 48be 4046 | a067 0200 | 0000 4883 | 86e0 0300 

  0x00000001112400e4: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112400e4: 0001 48be | 905a a967 | 0200 0000 | 8b96 1c01 | 0000 83c2 | 0289 961c | 0100 0081 | e2fe ff1f 
  0x0000000111240104: 0083 fa00 
 ;; 2354 branch [EQ] [CounterOverflowStub: 0x00007f846a8b3660]
  0x0000000111240108: 0f84 251e 

  0x000000011124010c: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8})}
  0x000000011124010c: 0000 48be | e880 6197 | 0100 0000 

  0x0000000111240118: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111240118: 48ba 905a | a967 0200 | 0000 8b76 | 0848 c1e6 | 0348 3bb2 | 7001 0000 | 750d 4883 | 8278 0100 
  0x0000000111240138: 0001 e966 | 0000 0048 | 3bb2 8001 | 0000 750d | 4883 8288 | 0100 0001 | e950 0000 | 0048 81ba 
  0x0000000111240158: 7001 0000 | 0000 0000 | 7517 4889 | b270 0100 | 0048 c782 | 7801 0000 | 0100 0000 | e92c 0000 
  0x0000000111240178: 0048 81ba | 8001 0000 | 0000 0000 | 7517 4889 | b280 0100 | 0048 c782 | 8801 0000 | 0100 0000 
  0x0000000111240198: e908 0000 | 0048 8382 | 6001 0000 | 0148 8b8c | 24a0 0100 

  0x00000001112401ac: ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x00000001112401ac: 008b 710c 

  0x00000001112401b0: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112401b0: 48ba 905a | a967 0200 | 0000 4883 | 8298 0100 

  0x00000001112401c0: ;   {metadata(method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x00000001112401c0: 0001 48ba | 305d a967 | 0200 0000 | 448b 821c | 0100 0041 | 83c0 0244 | 8982 1c01 | 0000 4181 
  0x00000001112401e0: e0fe ff1f | 0041 83f8 | 000f 847e | 1d00 008b | 9c24 fc01 | 0000 488b | fe83 ef03 

  0x00000001112401fc: ;   {metadata(method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x00000001112401fc: 48be 305d | a967 0200 | 0000 4883 | 86c0 0100 

  0x000000011124020c: ;   {metadata(method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x000000011124020c: 0001 48be | 184c 9f67 | 0200 0000 | 8b96 1c01 | 0000 83c2 | 0289 961c | 0100 0081 | e2fe ff1f 
  0x000000011124022c: 0083 fa00 
 ;; 2406 branch [EQ] [CounterOverflowStub: 0x00007f846a8b4830]
  0x0000000111240230: 0f84 581d 

  0x0000000111240234: ;   {metadata(method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x0000000111240234: 0000 48be | 184c 9f67 | 0200 0000 | 4883 8660 | 0100 0001 

  0x0000000111240248: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x0000000111240248: 48be d04d | 9f67 0200 | 0000 8b96 | 1c01 0000 | 83c2 0289 | 961c 0100 | 0081 e2fe | ff1f 0083 
  0x0000000111240268: fa00 0f84 | 3f1d 0000 

  0x0000000111240270: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x0000000111240270: 83fb 0048 | bed0 4d9f | 6702 0000 | 0048 ba60 | 0100 0000 | 0000 000f | 8c0a 0000 | 0048 ba70 
  0x0000000111240290: 0100 0000 | 0000 004c | 8b04 164d | 8d40 014c | 8904 160f | 8c33 0e00 

  0x00000001112402a8: ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@1 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
                      ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x00000001112402a8: 003b df48 | bed0 4d9f | 6702 0000 | 0048 ba90 | 0100 0000 | 0000 000f | 8d0a 0000 | 0048 ba80 
  0x00000001112402c8: 0100 0000 | 0000 004c | 8b04 164d | 8d40 014c | 8904 160f | 8dfb 0d00 

  0x00000001112402e0: ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@6 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
                      ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8})}
  0x00000001112402e0: 0048 bee8 | 8061 9701 | 0000 0048 

  0x00000001112402ec: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112402ec: 8bd6 49b8 | 905a a967 | 0200 0000 | 4983 80e0 | 0100 0001 

  0x0000000111240300: ;   {metadata(method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x0000000111240300: 48ba b048 | a967 0200 | 0000 448b | 821c 0100 | 0041 83c0 | 0244 8982 | 1c01 0000 | 4181 e0fe 
  0x0000000111240320: ff1f 0041 | 83f8 000f | 84a3 1c00 

  0x000000011124032c: ;   {metadata(method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011124032c: 0048 bab0 | 48a9 6702 | 0000 0048 | 8382 6001 

  0x000000011124033c: ;   {metadata(method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011124033c: 0000 0148 | be98 4aa9 | 6702 0000 | 008b 961c | 0100 0083 | c202 8996 | 1c01 0000 | 81e2 feff 
  0x000000011124035c: 1f00 83fa | 000f 848a 

  0x0000000111240364: ;   {metadata(method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x0000000111240364: 1c00 0048 | be98 4aa9 | 6702 0000 | 00ff 8670 

  0x0000000111240374: ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x0000000111240374: 0100 004c | 8b8c 2408 

  0x000000011124037c: ;   {oop(a 'jdk/incubator/vector/Double256Vector'{0x0000000197653a38})}
  0x000000011124037c: 0200 0048 | be38 3a65 | 9701 0000 | 0048 8bd6 

  0x000000011124038c: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011124038c: 49b8 905a | a967 0200 | 0000 4983 | 8018 0200 

  0x000000011124039c: ;   {metadata(method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011124039c: 0001 48ba | 605f a967 | 0200 0000 | 448b 821c | 0100 0041 | 83c0 0244 | 8982 1c01 | 0000 4181 
  0x00000001112403bc: e0fe ff1f | 0041 83f8 | 000f 8447 | 1c00 0048 

  0x00000001112403cc: ;   {metadata(method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x00000001112403cc: 8bd6 49b8 | 605f a967 | 0200 0000 | 4983 8060 | 0100 0001 

  0x00000001112403e0: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112403e0: 48ba 0061 | a967 0200 | 0000 448b | 821c 0100 | 0041 83c0 | 0244 8982 | 1c01 0000 | 4181 e0fe 
  0x0000000111240400: ff1f 0041 | 83f8 000f | 8426 1c00 

  0x000000011124040c: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011124040c: 0048 ba00 | 61a9 6702 | 0000 0048 | 8382 6001 

  0x000000011124041c: ;   {metadata(method data for {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011124041c: 0000 0148 | be08 64a9 | 6702 0000 | 008b 961c | 0100 0083 | c202 8996 | 1c01 0000 | 81e2 feff 
  0x000000011124043c: 1f00 83fa | 000f 840d 

  0x0000000111240444: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8})}
  0x0000000111240444: 1c00 0048 | bee8 8061 | 9701 0000 | 0048 8bd6 

  0x0000000111240454: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111240454: 49b8 0061 | a967 0200 | 0000 4983 | 8098 0100 | 0001 488b 

  0x0000000111240468: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111240468: d649 b800 | 61a9 6702 | 0000 0049 | 8380 d001 

  0x0000000111240478: ;   {metadata(method data for {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x0000000111240478: 0000 0148 | ba10 59a9 | 6702 0000 | 0044 8b82 | 1c01 0000 | 4183 c002 | 4489 821c | 0100 0041 
  0x0000000111240498: 81e0 feff | 1f00 4183 | f800 0f84 | cd1b 0000 

  0x00000001112404a8: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112404a8: 48ba 0061 | a967 0200 | 0000 4883 | 8208 0200 

  0x00000001112404b8: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112404b8: 0001 48be | 0061 a967 | 0200 0000 | 4883 8640 | 0200 0001 

  0x00000001112404cc: ;   {metadata(method data for {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112404cc: 48be 8865 | a967 0200 | 0000 8b96 | 1c01 0000 | 83c2 0289 | 961c 0100 | 0081 e2fe | ff1f 0083 
  0x00000001112404ec: fa00 0f84 | a21b 0000 

  0x00000001112404f4: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x00000001112404f4: 48be 08ad | 4010 0100 | 0000 488d | b638 0200 

  0x0000000111240504: ;   {oop(a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019765cae0})}
  0x0000000111240504: 0048 bae0 | ca65 9701 | 0000 004c | 8bc2 4d85 | c075 0748 | 810e 0100 

  0x000000011124051c: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011124051c: 0000 48be | 0061 a967 | 0200 0000 | 4883 8650 | 0200 0001 

  0x0000000111240530: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111240530: 48be 08ad | 4010 0100 | 0000 448b | 861c 0100 | 0041 83c0 | 0244 8986 | 1c01 0000 | 4181 e0fe 
  0x0000000111240550: ff1f 0041 | 83f8 000f | 845a 1b00 

  0x000000011124055c: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011124055c: 0048 be08 | 9d40 1001 | 0000 0048 | 8db6 f001 | 0000 4885 | d275 0748 | 810e 0100 

  0x0000000111240578: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111240578: 0000 48be | 08ad 4010 | 0100 0000 | 4883 8698 | 0100 0001 

  0x000000011124058c: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011124058c: 48be 089d | 4010 0100 | 0000 8b96 | 1c01 0000 | 83c2 0289 | 961c 0100 | 0081 e2fe | ff1f 0083 
  0x00000001112405ac: fa00 0f84 | 241b 0000 

  0x00000001112405b4: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x00000001112405b4: 48be 08ad | 4010 0100 | 0000 488d | b6d0 0100 

  0x00000001112405c4: ;   {oop(a 'jdk/incubator/vector/DoubleVector$$Lambda$94+0x0000000225d597d0'{0x000000019765c8d0})}
  0x00000001112405c4: 0048 bad0 | c865 9701 | 0000 004c | 8bc2 4d85 | c075 0748 | 810e 0100 

  0x00000001112405dc: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112405dc: 0000 48be | 0061 a967 | 0200 0000 | 488d b660 | 0200 0048 | 85d2 7507 | 4881 0e01 

  0x00000001112405f8: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112405f8: 0000 0048 | be00 61a9 | 6702 0000 | 0048 8386 | 7002 0000 

  0x000000011124060c: ;   {oop(a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector')}
  0x000000011124060c: 0148 be58 | 8161 9701 

  0x0000000111240614: ;   {oop(a 'java/lang/Class'{0x000000011ff8c550} = double)}
  0x0000000111240614: 0000 0048 | ba50 c5f8 | 1f01 0000 | 004c 8bd9 | b904 0000 | 004d 8bc3 | 498b fb89 

  0x0000000111240630: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8})}
  0x0000000111240630: 1c24 49ba | e880 6197 | 0100 0000 | 4c89 5424 

  0x0000000111240640: ;   {oop(a 'jdk/incubator/vector/DoubleVector$$Lambda$94+0x0000000225d597d0'{0x000000019765c8d0})}
  0x0000000111240640: 0849 bad0 | c865 9701 | 0000 004c 

  0x000000011124064c: ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011124064c: 8954 2410 | 4c89 9c24 | a001 0000 | 899c 24fc 

  0x000000011124065c: ;   {static_call}
  0x000000011124065c: 0100 00e8 

  0x0000000111240660: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop [416]=Oop [552]=Oop }
                      ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x0000000111240660: bc9b 9bff | 4883 f800 

  0x0000000111240668: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111240668: 7516 48bf | 0061 a967 | 0200 0000 | 808f 7902 | 0000 01e9 | c100 0000 

  0x0000000111240680: ;   {metadata('jdk/incubator/vector/DoubleVector')}
  0x0000000111240680: 48bb 30ce | d425 0200 | 0000 8b78 | 0848 c1e7 | 0348 3b5f | 600f 858a 

  0x0000000111240698: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111240698: 0000 0048 | bf00 61a9 | 6702 0000 | 008b 5808 | 48c1 e303 | 483b 9f90 | 0200 0075 | 0d48 8387 
  0x00000001112406b8: 9802 0000 | 01e9 7f00 | 0000 483b | 9fa0 0200 | 0075 0d48 | 8387 a802 | 0000 01e9 | 6900 0000 
  0x00000001112406d8: 4881 bf90 | 0200 0000 | 0000 0075 | 1748 899f | 9002 0000 | 48c7 8798 | 0200 0001 | 0000 00e9 
  0x00000001112406f8: 4500 0000 | 4881 bfa0 | 0200 0000 | 0000 0075 | 1748 899f | a002 0000 | 48c7 87a8 | 0200 0001 
  0x0000000111240718: 0000 00e9 | 2100 0000 | e91c 0000 

  0x0000000111240724: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111240724: 0048 bf00 | 61a9 6702 | 0000 0048 | 83af 8002 | 0000 01e9 | bd19 0000 | e900 0000 

  0x0000000111240740: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x0000000111240740: 0048 8bf8 
 ;;  block B201 [235, 272]
  0x0000000111240744: ; implicit exception: dispatches to 0x0000000111242116
                      ;*invokevirtual sub {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x0000000111240744: 483b 0748 

  0x0000000111240748: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111240748: 8bf7 48ba | 4046 a067 | 0200 0000 | 4883 82f0 | 0300 0001 

  0x000000011124075c: ;   {metadata(method data for {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011124075c: 48be 88e6 | a967 0200 | 0000 8b96 | 1c01 0000 | 83c2 0289 | 961c 0100 | 0081 e2fe | ff1f 0083 
  0x000000011124077c: fa00 0f84 | ab19 0000 

  0x0000000111240784: ;   {metadata(method data for {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111240784: 488b f748 | ba88 e6a9 | 6702 0000 | 0048 8382 | 6001 0000 

  0x0000000111240798: ;   {metadata(method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111240798: 0148 be70 | e8a9 6702 | 0000 008b | 961c 0100 | 0083 c202 | 8996 1c01 | 0000 81e2 | feff 1f00 
  0x00000001112407b8: 83fa 000f | 848f 1900 | 0048 8bf7 

  0x00000001112407c4: ;   {metadata(method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112407c4: 48ba 70e8 | a967 0200 | 0000 8b76 | 0848 c1e6 | 0348 3bb2 | 7001 0000 | 750d 4883 | 8278 0100 
  0x00000001112407e4: 0001 e966 | 0000 0048 | 3bb2 8001 | 0000 750d | 4883 8288 | 0100 0001 | e950 0000 | 0048 81ba 
  0x0000000111240804: 7001 0000 | 0000 0000 | 7517 4889 | b270 0100 | 0048 c782 | 7801 0000 | 0100 0000 | e92c 0000 
  0x0000000111240824: 0048 81ba | 8001 0000 | 0000 0000 | 7517 4889 | b280 0100 | 0048 c782 | 8801 0000 | 0100 0000 
  0x0000000111240844: e908 0000 | 0048 8382 | 6001 0000 | 01c5 fb10 | 8424 a002 | 0000 488b 

  0x000000011124085c: ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x000000011124085c: f748 89bc | 2430 0200 | 0048 b8ff | ffff ffff 

  0x000000011124086c: ;   {virtual_call}
  0x000000011124086c: ffff ffe8 

  0x0000000111240870: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [536]=Oop [528]=Oop [560]=Oop [552]=Oop }
                      ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x0000000111240870: ac96 9bff | 488b bc24 | 3002 0000 

  0x000000011124087c: ;   {metadata(method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011124087c: 48ba 70e8 | a967 0200 | 0000 8b7f | 0848 c1e7 | 0348 3bba | a801 0000 | 750d 4883 | 82b0 0100 
  0x000000011124089c: 0001 e966 | 0000 0048 | 3bba b801 | 0000 750d | 4883 82c0 | 0100 0001 | e950 0000 | 0048 81ba 
  0x00000001112408bc: a801 0000 | 0000 0000 | 7517 4889 | baa8 0100 | 0048 c782 | b001 0000 | 0100 0000 | e92c 0000 
  0x00000001112408dc: 0048 81ba | b801 0000 | 0000 0000 | 7517 4889 | bab8 0100 | 0048 c782 | c001 0000 | 0100 0000 
  0x00000001112408fc: e908 0000 | 0048 8382 | 9801 0000 

  0x0000000111240908: ;   {oop(a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x0000000197665dd8})}
  0x0000000111240908: 0148 bad8 | 5d66 9701 | 0000 0048 | 8bc8 488b | b424 3002 

  0x000000011124091c: ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x000000011124091c: 0000 9090 | 9090 9090 | 9048 b8ff | ffff ffff 

  0x000000011124092c: ;   {virtual_call}
  0x000000011124092c: ffff ffe8 

  0x0000000111240930: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [536]=Oop [528]=Oop [552]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x0000000111240930: ec95 9bff 

  0x0000000111240934: ; implicit exception: dispatches to 0x0000000111242171
                      ;*invokevirtual mul {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
  0x0000000111240934: 483b 0048 

  0x0000000111240938: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111240938: 8bd0 48b9 | 4046 a067 | 0200 0000 | 4883 8128 | 0400 0001 

  0x000000011124094c: ;   {metadata(method data for {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011124094c: 48ba 98ea | a967 0200 | 0000 8b8a | 1c01 0000 | 83c1 0289 | 8a1c 0100 | 0081 e1fe | ff1f 0083 
  0x000000011124096c: f900 0f84 | 1618 0000 

  0x0000000111240974: ;   {metadata(method data for {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111240974: 488b d048 | b998 eaa9 | 6702 0000 | 008b 5208 | 48c1 e203 | 483b 9170 | 0100 0075 | 0d48 8381 
  0x0000000111240994: 7801 0000 | 01e9 6600 | 0000 483b | 9180 0100 | 0075 0d48 | 8381 8801 | 0000 01e9 | 5000 0000 
  0x00000001112409b4: 4881 b970 | 0100 0000 | 0000 0075 | 1748 8991 | 7001 0000 | 48c7 8178 | 0100 0001 | 0000 00e9 
  0x00000001112409d4: 2c00 0000 | 4881 b980 | 0100 0000 | 0000 0075 | 1748 8991 | 8001 0000 | 48c7 8188 | 0100 0001 
  0x00000001112409f4: 0000 00e9 | 0800 0000 | 4883 8160 | 0100 0001 

  0x0000000111240a04: ;   {oop(a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000000197665e58})}
  0x0000000111240a04: 48bf 585e | 6697 0100 | 0000 488b | d748 8b8c | 2428 0200 

  0x0000000111240a18: ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
  0x0000000111240a18: 0048 8bf0 | 4889 bc24 | 3802 0000 | 9048 b8ff | ffff ffff 

  0x0000000111240a2c: ;   {virtual_call}
  0x0000000111240a2c: ffff ffe8 

  0x0000000111240a30: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [536]=Oop [528]=Oop [552]=Oop [568]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
  0x0000000111240a30: ec94 9bff | 488b 9c24 | 1002 0000 

  0x0000000111240a3c: ; implicit exception: dispatches to 0x00000001112421ab
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
  0x0000000111240a3c: 483b 0348 

  0x0000000111240a40: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111240a40: 8bd3 48b9 | 4046 a067 | 0200 0000 | 4883 8160 | 0400 0001 

  0x0000000111240a54: ;   {metadata(method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111240a54: 48ba 9872 | a967 0200 | 0000 8b8a | 1c01 0000 | 83c1 0289 | 8a1c 0100 | 0081 e1fe | ff1f 0083 
  0x0000000111240a74: f900 0f84 | 4817 0000 

  0x0000000111240a7c: ;   {metadata(method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111240a7c: 488b d348 | b998 72a9 | 6702 0000 | 008b 5208 | 48c1 e203 | 483b 9170 | 0100 0075 | 0d48 8381 
  0x0000000111240a9c: 7801 0000 | 01e9 6600 | 0000 483b | 9180 0100 | 0075 0d48 | 8381 8801 | 0000 01e9 | 5000 0000 
  0x0000000111240abc: 4881 b970 | 0100 0000 | 0000 0075 | 1748 8991 | 7001 0000 | 48c7 8178 | 0100 0001 | 0000 00e9 
  0x0000000111240adc: 2c00 0000 | 4881 b980 | 0100 0000 | 0000 0075 | 1748 8991 | 8001 0000 | 48c7 8188 | 0100 0001 
  0x0000000111240afc: 0000 00e9 | 0800 0000 | 4883 8160 | 0100 0001 

  0x0000000111240b0c: ;   {oop(a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000000197665d58})}
  0x0000000111240b0c: 48bf 585d | 6697 0100 | 0000 488b | d748 8bc8 

  0x0000000111240b1c: ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
  0x0000000111240b1c: 488b f348 | 89bc 2440 | 0200 0090 | 9090 9090 | 9048 b8ff | ffff ffff 

  0x0000000111240b34: ;   {virtual_call}
  0x0000000111240b34: ffff ffe8 

  0x0000000111240b38: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [536]=Oop [552]=Oop [568]=Oop [576]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
  0x0000000111240b38: e493 9bff | 4c8b 8424 | 2802 0000 

  0x0000000111240b44: ; implicit exception: dispatches to 0x00000001112421e5
                      ;*invokevirtual mul {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
  0x0000000111240b44: 493b 0049 

  0x0000000111240b48: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111240b48: 8bd0 48b9 | 4046 a067 | 0200 0000 | 4883 8198 | 0400 0001 

  0x0000000111240b5c: ;   {metadata(method data for {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111240b5c: 48ba 98ea | a967 0200 | 0000 8b8a | 1c01 0000 | 83c1 0289 | 8a1c 0100 | 0081 e1fe | ff1f 0083 
  0x0000000111240b7c: f900 0f84 | 7a16 0000 

  0x0000000111240b84: ;   {metadata(method data for {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111240b84: 498b d048 | b998 eaa9 | 6702 0000 | 008b 5208 | 48c1 e203 | 483b 9170 | 0100 0075 | 0d48 8381 
  0x0000000111240ba4: 7801 0000 | 01e9 6600 | 0000 483b | 9180 0100 | 0075 0d48 | 8381 8801 | 0000 01e9 | 5000 0000 
  0x0000000111240bc4: 4881 b970 | 0100 0000 | 0000 0075 | 1748 8991 | 7001 0000 | 48c7 8178 | 0100 0001 | 0000 00e9 
  0x0000000111240be4: 2c00 0000 | 4881 b980 | 0100 0000 | 0000 0075 | 1748 8991 | 8001 0000 | 48c7 8188 | 0100 0001 
  0x0000000111240c04: 0000 00e9 | 0800 0000 | 4883 8160 | 0100 0001 | 488b 9424 | 3802 0000 | 498b c849 

  0x0000000111240c20: ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
  0x0000000111240c20: 8bf0 4889 | 8424 4802 | 0000 9090 | 9048 b8ff | ffff ffff 

  0x0000000111240c34: ;   {virtual_call}
  0x0000000111240c34: ffff ffe8 

  0x0000000111240c38: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [536]=Oop [576]=Oop [584]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
  0x0000000111240c38: e492 9bff | 488b 8c24 | 1802 0000 

  0x0000000111240c44: ; implicit exception: dispatches to 0x000000011124221f
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x0000000111240c44: 483b 0148 

  0x0000000111240c48: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111240c48: 8bd1 48be | 4046 a067 | 0200 0000 | 4883 86d0 | 0400 0001 

  0x0000000111240c5c: ;   {metadata(method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111240c5c: 48ba 9872 | a967 0200 | 0000 8bb2 | 1c01 0000 | 83c6 0289 | b21c 0100 | 0081 e6fe | ff1f 0083 
  0x0000000111240c7c: fe00 0f84 | b415 0000 

  0x0000000111240c84: ;   {metadata(method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111240c84: 488b d148 | be98 72a9 | 6702 0000 | 008b 5208 | 48c1 e203 | 483b 9670 | 0100 0075 | 0d48 8386 
  0x0000000111240ca4: 7801 0000 | 01e9 6600 | 0000 483b | 9680 0100 | 0075 0d48 | 8386 8801 | 0000 01e9 | 5000 0000 
  0x0000000111240cc4: 4881 be70 | 0100 0000 | 0000 0075 | 1748 8996 | 7001 0000 | 48c7 8678 | 0100 0001 | 0000 00e9 
  0x0000000111240ce4: 2c00 0000 | 4881 be80 | 0100 0000 | 0000 0075 | 1748 8996 | 8001 0000 | 48c7 8688 | 0100 0001 
  0x0000000111240d04: 0000 00e9 | 0800 0000 | 4883 8660 | 0100 0001 | 488b 9424 | 4002 0000 | 4c8b c948 | 8bc8 498b 
  0x0000000111240d24: ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x0000000111240d24: f148 b8ff | ffff ffff 

  0x0000000111240d2c: ;   {virtual_call}
  0x0000000111240d2c: ffff ffe8 

  0x0000000111240d30: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [584]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x0000000111240d30: ec91 9bff | 8b94 24fc | 0100 0083 

  0x0000000111240d3c: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111240d3c: c204 48be | 4046 a067 | 0200 0000 | 8bbe 2001 | 0000 83c7 | 0289 be20 | 0100 0081 | e7fe 3f00 
  0x0000000111240d5c: 0083 ff00 
 ;; 2976 branch [EQ] [CounterOverflowStub: 0x00007f84695a7fe0]
  0x0000000111240d60: 0f84 f314 

  0x0000000111240d64: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)
  0x0000000111240d64: 0000 4d8b | 9730 0100 

  0x0000000111240d6c: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [584]=Oop rax=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)
                      ;   {poll}
  0x0000000111240d6c: 0041 8502 

  0x0000000111240d70: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111240d70: 48be 4046 | a067 0200 | 0000 ff86 | 0805 0000 | 4c8b c848 | 8b9c 2448 | 0200 0048 | 8bc2 4c89 
  0x0000000111240d90: 8c24 1802 | 0000 e90d 

  0x0000000111240d98: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)
  0x0000000111240d98: eaff ff89 | 8424 fc01 | 0000 4889 | 9424 b001 | 0000 9090 | 9090 9090 

  0x0000000111240db0: ;   {no_reloc}
  0x0000000111240db0: e929 1500 | 0000 0000 | 0000 9090 | 9090 9090 

  0x0000000111240dc0: ; implicit exception: dispatches to 0x00000001112422e8
  0x0000000111240dc0: e948 1500 

  0x0000000111240dc4: ;*getstatic ADD {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@279 (line 52)
  0x0000000111240dc4: 0090 9048 | 8b9c 2498 

  0x0000000111240dcc: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111240dcc: 0100 0048 | be40 46a0 | 6702 0000 | 008b 5b08 | 48c1 e303 | 483b 9e30 | 0500 0075 | 0d48 8386 
  0x0000000111240dec: 3805 0000 | 01e9 6600 | 0000 483b | 9e40 0500 | 0075 0d48 | 8386 4805 | 0000 01e9 | 5000 0000 
  0x0000000111240e0c: 4881 be30 | 0500 0000 | 0000 0075 | 1748 899e | 3005 0000 | 48c7 8638 | 0500 0001 | 0000 00e9 
  0x0000000111240e2c: 2c00 0000 | 4881 be40 | 0500 0000 | 0000 0075 | 1748 899e | 4005 0000 | 48c7 8648 | 0500 0001 
  0x0000000111240e4c: 0000 00e9 | 0800 0000 | 4883 8620 | 0500 0001 | 488b b424 

  0x0000000111240e60: ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@282 (line 52)
  0x0000000111240e60: 9801 0000 | 9048 b8ff | ffff ffff 

  0x0000000111240e6c: ;   {virtual_call}
  0x0000000111240e6c: ffff ffe8 

  0x0000000111240e70: ; ImmutableOopMap {[440]=Oop [424]=Oop [432]=Oop [416]=Oop }
                      ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@282 (line 52)
  0x0000000111240e70: ac90 9bff 

  0x0000000111240e74: ;   {section_word}
  0x0000000111240e74: c5fb 5805 | a4c3 ffff 
 ;; 3032 move [obj:0x0000000000000000|L] [rdx|L] [patch_normal] [bci:292]
  0x0000000111240e7c: 9090 9090 

  0x0000000111240e80: ;   {no_reloc}
  0x0000000111240e80: e9f6 1400 | 0000 0000 | 0000 9090 | 9090 9090 

  0x0000000111240e90: ; implicit exception: dispatches to 0x0000000111242385
  0x0000000111240e90: e915 1500 

  0x0000000111240e94: ;*getstatic ADD {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@292 (line 53)
  0x0000000111240e94: 0090 9048 | 8bb4 24a8 

  0x0000000111240e9c: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111240e9c: 0100 0048 | bf40 46a0 | 6702 0000 | 008b 7608 | 48c1 e603 | 483b b768 | 0500 0075 | 0d48 8387 
  0x0000000111240ebc: 7005 0000 | 01e9 6600 | 0000 483b | b778 0500 | 0075 0d48 | 8387 8005 | 0000 01e9 | 5000 0000 
  0x0000000111240edc: 4881 bf68 | 0500 0000 | 0000 0075 | 1748 89b7 | 6805 0000 | 48c7 8770 | 0500 0001 | 0000 00e9 
  0x0000000111240efc: 2c00 0000 | 4881 bf78 | 0500 0000 | 0000 0075 | 1748 89b7 | 7805 0000 | 48c7 8780 | 0500 0001 
  0x0000000111240f1c: 0000 00e9 | 0800 0000 | 4883 8758 | 0500 0001 | 488b b424 

  0x0000000111240f30: ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x0000000111240f30: a801 0000 | c5fb 1184 | 24a8 0200 | 0048 b8ff | ffff ffff 

  0x0000000111240f44: ;   {virtual_call}
  0x0000000111240f44: ffff ffe8 

  0x0000000111240f48: ; ImmutableOopMap {[440]=Oop [432]=Oop [416]=Oop }
                      ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x0000000111240f48: d48f 9bff 

  0x0000000111240f4c: ;   {section_word}
  0x0000000111240f4c: c5fb 5805 | d4c2 ffff | c5fb 108c | 24a8 0200 | 008b 8424 | fc01 0000 | 8b9c 24f8 | 0100 0048 
  0x0000000111240f6c: 8b8c 24a0 | 0100 0048 | 8b94 24b0 | 0100 00e9 

  0x0000000111240f7c: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@301 (line 55)
  0x0000000111240f7c: 9600 0000 
 ;;  block B13 [308, 351]
  0x0000000111240f80: 3b42 0c0f | 832b 1400 | 0048 63f0 | c5fb 1054 

  0x0000000111240f90: ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@313 (line 56)
  0x0000000111240f90: f210 c5eb | 5c94 2498 | 0200 00c5 | f928 dac5 | e359 dac5 | e358 d93b | 410c 0f83 | 5814 0000 
  0x0000000111240fb0: 4863 f0c5 | fb10 4cf1 

  0x0000000111240fb8: ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
  0x0000000111240fb8: 10c5 f35c | 8c24 a002 | 0000 c5f3 | 59ca c5f3 | 58c8 ffc0 

  0x0000000111240fcc: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111240fcc: 48be 4046 | a067 0200 | 0000 8bbe | 2001 0000 | 83c7 0289 | be20 0100 | 0081 e7fe | 3f00 0083 
  0x0000000111240fec: ff00 0f84 

  0x0000000111240ff0: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)
  0x0000000111240ff0: 3614 0000 | 4d8b 9730 

  0x0000000111240ff8: ; ImmutableOopMap {[440]=Oop rcx=Oop rdx=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)
                      ;   {poll}
  0x0000000111240ff8: 0100 0041 

  0x0000000111240ffc: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111240ffc: 8502 48be | 4046 a067 | 0200 0000 | ff86 b005 | 0000 c5f9 | 28c1 c5f9 

  0x0000000111241014: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)
  0x0000000111241014: 28cb 3bc3 

  0x0000000111241018: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111241018: 48be 4046 | a067 0200 | 0000 48bf | a005 0000 | 0000 0000 | 0f8c 0a00 | 0000 48bf | 9005 0000 
  0x0000000111241038: 0000 0000 | 4c8b 043e | 4d8d 4001 | 4c89 043e 
 ;; 3074 branch [LT] [B13] 
  0x0000000111241048: 0f8c 32ff 

  0x000000011124104c: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@305 (line 55)
  0x000000011124104c: ffff 488b | 8424 b801 | 0000 c5fb | 5ec1 c5fb 

  0x000000011124105c: ;*putfield slope {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@360 (line 60)
  0x000000011124105c: 1140 18c5 | fb59 8424 | 9802 0000 | c5fb 108c | 24a0 0200 | 00c5 f35c | c8c5 fb11 

  0x0000000111241078: ;*putfield intercept {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@374 (line 61)
  0x0000000111241078: 4810 4881 | c4c0 0200 

  0x0000000111241080: ;   {poll_return}
  0x0000000111241080: 005d 493b | a728 0100 | 000f 87d5 

  0x000000011124108c: ;*return {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@377 (line 62)
  0x000000011124108c: 1300 00c3 
 ;;  block B171 [9, 15]
  0x0000000111241090: 8984 24fc | 0100 00c5 | fb11 8424 | 7802 0000 | 4889 9424 | b001 0000 

  0x00000001112410a8: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x00000001112410a8: 48be d04d | 9f67 0200 | 0000 4883 | 86a0 0100 

  0x00000001112410b8: ;   {oop(NULL)}
  0x00000001112410b8: 0001 48be | 0000 0000 | 0000 0000 | 8b94 24fc | 0100 0048 

  0x00000001112410cc: ;*invokestatic outOfBoundsCheckIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@12 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
                      ;   {static_call}
  0x00000001112410cc: 8bcf 90e8 

  0x00000001112410d0: ; ImmutableOopMap {[408]=Oop [424]=Oop [440]=Oop [432]=Oop [536]=Oop [416]=Oop [528]=Oop }
                      ;*invokestatic outOfBoundsCheckIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@12 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x00000001112410d0: 4c91 9bff 

  0x00000001112410d4: ; implicit exception: dispatches to 0x000000011124247a
  0x00000001112410d4: 483b 00e9 

  0x00000001112410d8: ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@15 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x00000001112410d8: 4714 0000 
 ;;  block B216 [9, 15]
  0x00000001112410dc: 488b c348 | 898c 24a0 

  0x00000001112410e4: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x00000001112410e4: 0100 0048 | bed0 4d9f | 6702 0000 | 0048 8386 | a001 0000 

  0x00000001112410f8: ;   {oop(NULL)}
  0x00000001112410f8: 0148 be00 | 0000 0000 | 0000 0048 | 8bd0 488b 

  0x0000000111241108: ;*invokestatic outOfBoundsCheckIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@12 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x0000000111241108: cf89 8424 | fc01 0000 | 9090 9090 

  0x0000000111241114: ;   {static_call}
  0x0000000111241114: 9090 90e8 

  0x0000000111241118: ; ImmutableOopMap {[416]=Oop [432]=Oop [440]=Oop [424]=Oop [408]=Oop [536]=Oop [552]=Oop [528]=Oop }
                      ;*invokestatic outOfBoundsCheckIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@12 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x0000000111241118: 0491 9bff 

  0x000000011124111c: ; implicit exception: dispatches to 0x0000000111242493
  0x000000011124111c: 483b 00e9 

  0x0000000111241120: ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@15 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x0000000111241120: ff13 0000 
 ;;  block B61 [9, 15]
  0x0000000111241124: c5fb 1184 | 2478 0200 | 0044 899c | 2474 0100 | 0048 8994 | 24b0 0100 

  0x000000011124113c: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011124113c: 0048 bed0 | 4d9f 6702 | 0000 0048 | 8386 a001 

  0x000000011124114c: ;   {oop(NULL)}
  0x000000011124114c: 0000 0148 | be00 0000 | 0000 0000 | 008b 9424 | 7401 0000 

  0x0000000111241160: ;*invokestatic outOfBoundsCheckIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@12 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x0000000111241160: 498b c890 

  0x0000000111241164: ;   {static_call}
  0x0000000111241164: 9090 90e8 

  0x0000000111241168: ; ImmutableOopMap {[424]=Oop [440]=Oop [432]=Oop [416]=Oop [408]=Oop }
                      ;*invokestatic outOfBoundsCheckIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@12 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x0000000111241168: b490 9bff 

  0x000000011124116c: ; implicit exception: dispatches to 0x00000001112424ac
  0x000000011124116c: 483b 00e9 

  0x0000000111241170: ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@15 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x0000000111241170: af13 0000 
 ;;  block B104 [9, 15]
  0x0000000111241174: 4889 8c24 | a001 0000 

  0x000000011124117c: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011124117c: 49b8 d04d | 9f67 0200 | 0000 4983 | 80a0 0100 

  0x000000011124118c: ;   {oop(NULL)}
  0x000000011124118c: 0001 48be | 0000 0000 | 0000 0000 | 498b d348 

  0x000000011124119c: ;*invokestatic outOfBoundsCheckIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@12 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011124119c: 8bcf 4489 | 9c24 7401 

  0x00000001112411a4: ;   {static_call}
  0x00000001112411a4: 0000 90e8 

  0x00000001112411a8: ; ImmutableOopMap {[432]=Oop [440]=Oop [448]=Oop [424]=Oop [416]=Oop }
                      ;*invokestatic outOfBoundsCheckIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@12 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x00000001112411a8: 7490 9bff 

  0x00000001112411ac: ; implicit exception: dispatches to 0x00000001112424c5
  0x00000001112411ac: 483b 00e9 

  0x00000001112411b0: ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@15 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x00000001112411b0: 6f13 0000 
 ;;  block B2 [7, 16]
 ;; 3256 move [metadata:0x0000000000000000|M] [rdx|M] [patch_normal] [bci:7]
  0x00000001112411b4: 9090 9090 

  0x00000001112411b8: ;   {no_reloc}
  0x00000001112411b8: e930 1300 | 0000 0000 | 0000 498b | 8748 0100 | 0048 8d78 | 3849 3bbf | 5801 0000 | 0f87 1d13 
  0x00000001112411d8: 0000 4989 | bf48 0100 | 0048 c700 | 0100 0000 | 488b ca48 | c1e9 0389 | 4808 4833 | c989 480c 
  0x00000001112411f8: 4833 c948 | bf05 0000 | 0000 0000 | 0048 894c | f808 48ff 

  0x000000011124120c: ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@7 (line 15)
  0x000000011124120c: cf75 f648 

  0x0000000111241210: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111241210: 8bd0 48be | 4046 a067 | 0200 0000 | 4883 8680 | 0100 0001 

  0x0000000111241224: ;   {oop("Arrays length are not equals"{0x00000001977000d0})}
  0x0000000111241224: 48ba d000 | 7097 0100 | 0000 488b 

  0x0000000111241230: ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@13 (line 15)
  0x0000000111241230: f048 8984 | 2450 0200 | 0090 9090 

  0x000000011124123c: ;   {optimized virtual_call}
  0x000000011124123c: 9090 90e8 

  0x0000000111241240: ; ImmutableOopMap {[592]=Oop }
                      ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@13 (line 15)
  0x0000000111241240: dc89 9bff | 488b 8424 | 5002 0000 | e9d2 1200 

  0x0000000111241250: ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@16 (line 15)
  0x0000000111241250: 0089 8424 | 00a0 feff | 5548 81ec | c002 0000 | 488b 9eb0 | 0000 0048 | 8b86 a800 | 0000 488b 
  0x0000000111241270: 96a0 0000 | 00c5 fb10 | 8690 0000 | 00c5 fb10 | 8e80 0000 | 008b 4e78 | c5fb 1056 | 684c 8b46 
  0x0000000111241290: 604c 8b4e | 5848 8bfe | 4889 9c24 | 8801 0000 | 4889 8424 | 8001 0000 | 4889 9424 | 7801 0000 
  0x00000001112412b0: 898c 2470 | 0100 004c | 8984 2468 | 0100 004c | 898c 2460 | 0100 00c5 | fb11 8424 | 7002 0000 
  0x00000001112412d0: c5fb 118c | 2468 0200 | 00c5 fb11 | 9424 6002 

  0x00000001112412e0: ;   {runtime_call SharedRuntime::OSR_migration_end(long*)}
  0x00000001112412e0: 0000 e8b9 | fd53 f84c | 8b8c 2460 | 0100 0049 | 8bf1 4c8b | 8424 6801 | 0000 498b | d8c5 fb10 
  0x0000000111241300: 9424 6002 | 0000 c5f9 | 28c2 8b8c | 2470 0100 | 004c 8bd9 | c5fb 108c | 2468 0200 | 00c5 fb10 
  0x0000000111241320: 9424 7002 | 0000 488b | 9424 7801 | 0000 488b | ca48 8b84 | 2480 0100 | 0048 8bd0 | 4c8b 8424 
  0x0000000111241340: 8801 0000 | 498b c048 | 89b4 24a8 | 0100 0048 | 899c 2498 | 0100 00c5 | fb11 8c24 | 8802 0000 
  0x0000000111241360: c5fb 1194 | 2480 0200 | 0048 898c | 24a0 0100 | 0048 8984 | 24b8 0100 | 00e9 12c9 

  0x000000011124137c: ;   {metadata({method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011124137c: ffff 49ba | 18fe 8867 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x0000000111241394: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241394: ffe8 26d2 

  0x0000000111241398: ; ImmutableOopMap {rsi=Oop rdx=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@-1 (line 15)
  0x0000000111241398: 8fff e9fd 

  0x000000011124139c: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011124139c: beff ffe8 

  0x00000001112413a0: ; ImmutableOopMap {rsi=Oop rdx=Oop rcx=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@1 (line 15)
  0x00000001112413a0: 9c31 90ff 

  0x00000001112413a4: ;   {external_word}
  0x00000001112413a4: 48bf 696b | b209 0100 | 0000 4883 

  0x00000001112413b0: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001112413b0: e4f0 e899 | fb29 f8f4 
 ;; ImplicitNullCheckStub slow case
  0x00000001112413b8: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000001112413b8: e883 3190 

  0x00000001112413bc: ; ImmutableOopMap {rsi=Oop rdx=Oop rcx=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@3 (line 15)
                      ;   {external_word}
  0x00000001112413bc: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x00000001112413c8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001112413c8: 83e4 f0e8 | 80fb 29f8 

  0x00000001112413d0: ;   {metadata({method} {0x0000000267b3fa08} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies')}
  0x00000001112413d0: f449 ba08 | fab3 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x00000001112413e8: ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001112413e8: e8d3 d18f 

  0x00000001112413ec: ; ImmutableOopMap {rsi=Oop rdx=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.AbstractSpecies::loopBound@-1 (line 203)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
  0x00000001112413ec: ffe9 adbf 

  0x00000001112413f0: ;   {metadata({method} {0x0000000267b96588} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x00000001112413f0: ffff 49ba | 8865 b967 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x0000000111241408: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241408: ffe8 b2d1 

  0x000000011124140c: ; ImmutableOopMap {rsi=Oop rdx=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.VectorIntrinsics::roundDown@-1 (line 106)
                      ; - jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
  0x000000011124140c: 8fff e9c8 

  0x0000000111241410: ;   {metadata({method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111241410: bfff ff49 | ba48 74b1 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x0000000111241428: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241428: ffff e891 

  0x000000011124142c: ; ImmutableOopMap {[288]=Oop [280]=Oop [272]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x000000011124142c: d18f ffe9 | 18c0 ffff 
 ;; CounterOverflowStub slow case
  0x0000000111241434: ;   {metadata({method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111241434: 49ba 7072 | b167 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x0000000111241448: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241448: ffff ffe8 

  0x000000011124144c: ; ImmutableOopMap {[288]=Oop [280]=Oop [272]=Oop rbx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
                      ; - jdk.incubator.vector.DoubleVector::zero@19 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x000000011124144c: 70d1 8fff | e9e6 c0ff 

  0x0000000111241454: ;   {metadata({method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111241454: ff49 ba78 | aa40 1001 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011124146c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011124146c: e84f d18f 

  0x0000000111241470: ; ImmutableOopMap {[288]=Oop [280]=Oop [272]=Oop rbx=Oop rax=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
                      ; - jdk.incubator.vector.DoubleVector::zero@23 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x0000000111241470: ffe9 40c1 

  0x0000000111241474: ;   {metadata({method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x0000000111241474: ffff 49ba | 789a 4010 | 0100 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011124148c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011124148c: ffe8 2ed1 

  0x0000000111241490: ; ImmutableOopMap {[288]=Oop [280]=Oop [272]=Oop rbx=Oop rax=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
                      ; - jdk.incubator.vector.DoubleVector::zero@23 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x0000000111241490: 8fff e97e | c1ff ff48 

  0x0000000111241498: ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x0000000111241498: 8904 24e8 

  0x000000011124149c: ; ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [320]=Oop [304]=Oop [312]=Oop [328]=Oop [296]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@31 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x000000011124149c: 2006 90ff 

  0x00000001112414a0: ;   {external_word}
  0x00000001112414a0: 48bf 696b | b209 0100 | 0000 4883 

  0x00000001112414ac: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001112414ac: e4f0 e89d | fa29 f8f4 
 ;; CounterOverflowStub slow case
  0x00000001112414b4: ;   {metadata({method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112414b4: 49ba 4874 | b167 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x00000001112414c8: ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001112414c8: ffff ffe8 

  0x00000001112414cc: ; ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [320]=Oop [304]=Oop [312]=Oop [328]=Oop [296]=Oop rbx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
  0x00000001112414cc: f0d0 8fff | e9a9 c3ff 

  0x00000001112414d4: ;   {metadata({method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112414d4: ff49 ba70 | 72b1 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x00000001112414ec: ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001112414ec: e8cf d08f 

  0x00000001112414f0: ; ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [320]=Oop [304]=Oop [312]=Oop [328]=Oop [296]=Oop rbx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
                      ; - jdk.incubator.vector.DoubleVector::zero@19 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
  0x00000001112414f0: ffe9 71c4 

  0x00000001112414f4: ;   {metadata({method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x00000001112414f4: ffff 49ba | 78aa 4010 | 0100 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011124150c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011124150c: ffe8 aed0 

  0x0000000111241510: ; ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [320]=Oop [312]=Oop [328]=Oop [296]=Oop rbx=Oop rax=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
                      ; - jdk.incubator.vector.DoubleVector::zero@23 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
  0x0000000111241510: 8fff e9c4 

  0x0000000111241514: ;   {metadata({method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x0000000111241514: c4ff ff49 | ba78 9a40 | 1001 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011124152c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011124152c: ffff e88d 

  0x0000000111241530: ; ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [320]=Oop [312]=Oop [328]=Oop [296]=Oop rbx=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
                      ; - jdk.incubator.vector.DoubleVector::zero@23 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
  0x0000000111241530: d08f ffe9 | fdc4 ffff 
 ;; SimpleExceptionStub slow case
  0x0000000111241538: 4889 0424 

  0x000000011124153c: ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011124153c: e87f 0590 

  0x0000000111241540: ; ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [344]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@31 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
                      ;   {external_word}
  0x0000000111241540: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x000000011124154c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011124154c: 83e4 f0e8 | fcf9 29f8 

  0x0000000111241554: ;   {metadata({method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111241554: f449 bad0 | deb1 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011124156c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011124156c: e84f d08f 

  0x0000000111241570: ; ImmutableOopMap {rdx=Oop [424]=Oop [408]=Oop [440]=Oop [416]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x0000000111241570: ffe9 bdc7 

  0x0000000111241574: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000111241574: ffff e8c5 

  0x0000000111241578: ; ImmutableOopMap {rdx=Oop [424]=Oop [408]=Oop [440]=Oop [416]=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
                      ;   {external_word}
  0x0000000111241578: 2f90 ff48 | bf69 6bb2 | 0901 0000 | 0048 83e4 

  0x0000000111241588: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000111241588: f0e8 c2f9 

  0x000000011124158c: ;   {metadata({method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x000000011124158c: 29f8 f449 | ba80 62b9 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x00000001112415a4: ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001112415a4: ffff e815 

  0x00000001112415a8: ; ImmutableOopMap {rdx=Oop [424]=Oop [408]=Oop [440]=Oop [416]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x00000001112415a8: d08f ffe9 | 5bc8 ffff 
 ;; CounterOverflowStub slow case
  0x00000001112415b0: ;   {metadata({method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x00000001112415b0: 49ba e0f0 | 1510 0100 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x00000001112415c4: ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001112415c4: ffff ffe8 

  0x00000001112415c8: ; ImmutableOopMap {rdx=Oop [424]=Oop [408]=Oop [440]=Oop [416]=Oop }
                      ;*synchronization entry
                      ; - java.util.Objects::checkIndex@-1 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x00000001112415c8: f4cf 8fff | e97a c8ff 

  0x00000001112415d0: ;   {metadata({method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x00000001112415d0: ff49 ba08 | 343f 1001 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x00000001112415e8: ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001112415e8: e8d3 cf8f 

  0x00000001112415ec: ; ImmutableOopMap {rdx=Oop [424]=Oop [408]=Oop [440]=Oop [416]=Oop }
                      ;*synchronization entry
                      ; - jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x00000001112415ec: ffe9 95c8 

  0x00000001112415f0: ;   {metadata({method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x00000001112415f0: ffff 49ba | 309e b367 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x0000000111241608: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241608: ffe8 b2cf 

  0x000000011124160c: ; ImmutableOopMap {rdx=Oop [424]=Oop [408]=Oop [440]=Oop [416]=Oop r8=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011124160c: 8fff e930 

  0x0000000111241610: ;   {metadata({method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x0000000111241610: c9ff ff49 | ba08 05b4 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x0000000111241628: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241628: ffff e891 

  0x000000011124162c: ; ImmutableOopMap {rdx=Oop [424]=Oop [408]=Oop [440]=Oop [416]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011124162c: cf8f ffe9 | 4ec9 ffff 
 ;; CounterOverflowStub slow case
  0x0000000111241634: ;   {metadata({method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x0000000111241634: 49ba c010 | b767 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x0000000111241648: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241648: ffff ffe8 

  0x000000011124164c: ; ImmutableOopMap {[440]=Oop [424]=Oop [416]=Oop [408]=Oop rdx=Oop r8=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011124164c: 70cf 8fff | e990 c9ff 

  0x0000000111241654: ;   {metadata({method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111241654: ff49 ba28 | f2b1 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011124166c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011124166c: e84f cf8f 

  0x0000000111241670: ; ImmutableOopMap {[440]=Oop [424]=Oop [416]=Oop [408]=Oop rdx=Oop r8=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x0000000111241670: ffe9 aec9 

  0x0000000111241674: ;   {metadata({method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector')}
  0x0000000111241674: ffff 49ba | 20d6 b667 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011124168c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011124168c: ffe8 2ecf 

  0x0000000111241690: ; ImmutableOopMap {[440]=Oop [424]=Oop [416]=Oop [408]=Oop rdx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x0000000111241690: 8fff e9cc 

  0x0000000111241694: ;   {metadata({method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x0000000111241694: c9ff ff49 | bab0 93b3 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x00000001112416ac: ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001112416ac: ffff e80d 

  0x00000001112416b0: ; ImmutableOopMap {[440]=Oop [424]=Oop [416]=Oop [408]=Oop rdx=Oop r8=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x00000001112416b0: cf8f ffe9 | 09ca ffff 
 ;; CounterOverflowStub slow case
  0x00000001112416b8: ;   {metadata({method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112416b8: 49ba 80fe | b167 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x00000001112416cc: ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001112416cc: ffff ffe8 

  0x00000001112416d0: ; ImmutableOopMap {[440]=Oop [424]=Oop [416]=Oop [408]=Oop rdx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x00000001112416d0: ecce 8fff | e939 caff 

  0x00000001112416d8: ;   {metadata({method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x00000001112416d8: ff49 ba78 | aa40 1001 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x00000001112416f0: ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001112416f0: e8cb ce8f 

  0x00000001112416f4: ; ImmutableOopMap {[440]=Oop [424]=Oop [408]=Oop rdx=Oop [416]=Oop r9=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x00000001112416f4: ffe9 94ca 

  0x00000001112416f8: ;   {metadata({method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x00000001112416f8: ffff 49ba | 789a 4010 | 0100 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x0000000111241710: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241710: ffe8 aace 

  0x0000000111241714: ; ImmutableOopMap {[440]=Oop [424]=Oop [408]=Oop rdx=Oop [416]=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x0000000111241714: 8fff e9cf | caff ff48 

  0x000000011124171c: ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011124171c: 8904 24e8 

  0x0000000111241720: ; ImmutableOopMap {[432]=Oop [440]=Oop [408]=Oop [424]=Oop [416]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x0000000111241720: 9c03 90ff 

  0x0000000111241724: ;   {external_word}
  0x0000000111241724: 48bf 696b | b209 0100 | 0000 4883 

  0x0000000111241730: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000111241730: e4f0 e819 | f829 f8f4 
 ;; ImplicitNullCheckStub slow case
  0x0000000111241738: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000111241738: e803 2e90 

  0x000000011124173c: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop rbx=Oop [416]=Oop }
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
                      ;   {external_word}
  0x000000011124173c: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x0000000111241748: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000111241748: 83e4 f0e8 | 00f8 29f8 

  0x0000000111241750: ;   {metadata({method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111241750: f449 baf0 | 8eb1 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x0000000111241768: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241768: e853 ce8f 

  0x000000011124176c: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop rbx=Oop [416]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x000000011124176c: ffe9 6acc 

  0x0000000111241770: ;   {metadata({method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111241770: ffff 49ba | d0de b167 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x0000000111241788: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241788: ffe8 32ce 

  0x000000011124178c: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop [416]=Oop rax=Oop [448]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011124178c: 8fff e93b 

  0x0000000111241790: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000111241790: cdff ffe8 

  0x0000000111241794: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rax=Oop [448]=Oop rcx=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x0000000111241794: a82d 90ff 

  0x0000000111241798: ;   {external_word}
  0x0000000111241798: 48bf 696b | b209 0100 | 0000 4883 

  0x00000001112417a4: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001112417a4: e4f0 e8a5 | f729 f8f4 
 ;; CounterOverflowStub slow case
  0x00000001112417ac: ;   {metadata({method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x00000001112417ac: 49ba 8062 | b967 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x00000001112417c0: ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001112417c0: ffff ffe8 

  0x00000001112417c4: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rax=Oop [448]=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x00000001112417c4: f8cd 8fff | e9e2 cdff 

  0x00000001112417cc: ;   {metadata({method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x00000001112417cc: ff49 bae0 | f015 1001 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x00000001112417e4: ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001112417e4: e8d7 cd8f 

  0x00000001112417e8: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rax=Oop [448]=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - java.util.Objects::checkIndex@-1 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x00000001112417e8: ffe9 09ce 

  0x00000001112417ec: ;   {metadata({method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x00000001112417ec: ffff 49ba | 0834 3f10 | 0100 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x0000000111241804: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241804: ffe8 b6cd 

  0x0000000111241808: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rax=Oop [448]=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x0000000111241808: 8fff e922 

  0x000000011124180c: ;   {metadata({method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011124180c: ceff ff49 | ba30 9eb3 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x0000000111241824: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241824: ffff e895 

  0x0000000111241828: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rax=Oop [448]=Oop rcx=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x0000000111241828: cd8f ffe9 | c0ce ffff 
 ;; CounterOverflowStub slow case
  0x0000000111241830: ;   {metadata({method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x0000000111241830: 49ba 0805 | b467 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x0000000111241844: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241844: ffff ffe8 

  0x0000000111241848: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rax=Oop [448]=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x0000000111241848: 74cd 8fff | e9d9 ceff 

  0x0000000111241850: ;   {metadata({method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x0000000111241850: ff49 bac0 | 10b7 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x0000000111241868: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241868: e853 cd8f 

  0x000000011124186c: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop [448]=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011124186c: ffe9 1ccf 

  0x0000000111241870: ;   {metadata({method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111241870: ffff 49ba | 28f2 b167 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x0000000111241888: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241888: ffe8 32cd 

  0x000000011124188c: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop [448]=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011124188c: 8fff e93d 

  0x0000000111241890: ;   {metadata({method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector')}
  0x0000000111241890: cfff ff49 | ba20 d6b6 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x00000001112418a8: ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001112418a8: ffff e811 

  0x00000001112418ac: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop [448]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x00000001112418ac: cd8f ffe9 | 56cf ffff 
 ;; CounterOverflowStub slow case
  0x00000001112418b4: ;   {metadata({method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x00000001112418b4: 49ba b093 | b367 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x00000001112418c8: ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001112418c8: ffff ffe8 

  0x00000001112418cc: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop [448]=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x00000001112418cc: f0cc 8fff | e996 cfff 

  0x00000001112418d4: ;   {metadata({method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112418d4: ff49 ba80 | feb1 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x00000001112418ec: ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001112418ec: e8cf cc8f 

  0x00000001112418f0: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop [448]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x00000001112418f0: ffe9 c1cf 

  0x00000001112418f4: ;   {metadata({method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x00000001112418f4: ffff 49ba | 78aa 4010 | 0100 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011124190c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011124190c: ffe8 aecc 

  0x0000000111241910: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop [448]=Oop rdx=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x0000000111241910: 8fff e909 

  0x0000000111241914: ;   {metadata({method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x0000000111241914: d0ff ff49 | ba78 9a40 | 1001 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011124192c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011124192c: ffff e88d 

  0x0000000111241930: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop [448]=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x0000000111241930: cc8f ffe9 | 3fd0 ffff 
 ;; SimpleExceptionStub slow case
  0x0000000111241938: 4889 0424 

  0x000000011124193c: ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011124193c: e87f 0190 

  0x0000000111241940: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop [448]=Oop [416]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
                      ;   {external_word}
  0x0000000111241940: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x000000011124194c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011124194c: 83e4 f0e8 | fcf5 29f8 

  0x0000000111241954: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000111241954: f4e8 e62b 

  0x0000000111241958: ; ImmutableOopMap {[432]=Oop [440]=Oop [448]=Oop [416]=Oop rcx=Oop rsi=Oop }
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
                      ;   {external_word}
  0x0000000111241958: 90ff 48bf | 696b b209 | 0100 0000 | 4883 e4f0 

  0x0000000111241968: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000111241968: e8e3 f529 

  0x000000011124196c: ;   {metadata({method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011124196c: f8f4 49ba | f08e b167 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x0000000111241984: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241984: ffe8 36cc 

  0x0000000111241988: ; ImmutableOopMap {[432]=Oop [440]=Oop [448]=Oop [416]=Oop rcx=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x0000000111241988: 8fff e9c5 

  0x000000011124198c: ;   {metadata({method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011124198c: d1ff ff49 | ba18 fe88 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 6700 

  0x00000001112419a4: ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001112419a4: 0000 e815 

  0x00000001112419a8: ; ImmutableOopMap {[432]=Oop [440]=Oop [448]=Oop [416]=Oop rax=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
  0x00000001112419a8: cc8f ffe9 | 88d2 ffff 
 ;; PatchingStub slow case
 ;;  patch template
  0x00000001112419b0: ;   {oop(NULL)}
  0x00000001112419b0: 48ba 0000 | 0000 0000 | 0000 5053 | 488b 5a10 | 5756 5251 | 4150 4151 | 4152 4153 | f7c4 0f00 
  0x00000001112419d0: 0000 0f84 | 1200 0000 | 4883 ec08 

  0x00000001112419dc: ;   {runtime_call Thread::current()}
  0x00000001112419dc: e85f c423 | f848 83c4 | 08e9 0500 

  0x00000001112419e8: ;   {runtime_call Thread::current()}
  0x00000001112419e8: 0000 e851 | c423 f841 | 5b41 5a41 | 5941 5859 | 5a5e 5f48 | 3b83 4801 | 0000 5b58 | 0f85 0a00 
  0x0000000111241a08: 0000 e9a3 | d2ff ffb8 | 0064 5a0a 
 ;; patch entry point
  0x0000000111241a14: ;   {runtime_call load_mirror_patching Runtime1 stub}
  0x0000000111241a14: e867 d88f 

  0x0000000111241a18: ; ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop rbx=Oop [424]=Oop }
                      ;*getstatic ADD {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@109 (line 29)
  0x0000000111241a18: ffe9 8ad2 

  0x0000000111241a1c: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000111241a1c: ffff e81d 

  0x0000000111241a20: ; ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop rbx=Oop [424]=Oop rdx=Oop }
                      ;*getstatic ADD {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@109 (line 29)
                      ;   {external_word}
  0x0000000111241a20: 2b90 ff48 | bf69 6bb2 | 0901 0000 | 0048 83e4 

  0x0000000111241a30: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000111241a30: f0e8 1af5 | 29f8 f448 | 8b92 0000 | 0000 b800 

  0x0000000111241a40: ;   {runtime_call access_field_patching Runtime1 stub}
  0x0000000111241a40: 0c05 07e8 

  0x0000000111241a44: ; ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop rbx=Oop [424]=Oop rdx=Oop }
                      ;*getstatic ADD {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@109 (line 29)
  0x0000000111241a44: 38e4 8fff | e96b d2ff 

  0x0000000111241a4c: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000111241a4c: ffe8 ee2a 

  0x0000000111241a50: ; ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop rbx=Oop [424]=Oop rdx=Oop }
                      ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
                      ;   {external_word}
  0x0000000111241a50: 90ff 48bf | 696b b209 | 0100 0000 | 4883 e4f0 

  0x0000000111241a60: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000111241a60: e8eb f429 

  0x0000000111241a64: ;   {oop(NULL)}
  0x0000000111241a64: f8f4 48ba | 0000 0000 | 0000 0000 
 ;;  being_initialized check
  0x0000000111241a70: 5053 488b | 5a10 5756 | 5251 4150 | 4151 4152 | 4153 f7c4 | 0f00 0000 | 0f84 1200 | 0000 4883 
  0x0000000111241a90: ;   {runtime_call Thread::current()}
  0x0000000111241a90: ec08 e8a9 | c323 f848 | 83c4 08e9 | 0500 0000 

  0x0000000111241aa0: ;   {runtime_call Thread::current()}
  0x0000000111241aa0: e89b c323 | f841 5b41 | 5a41 5941 | 5859 5a5e | 5f48 3b83 | 4801 0000 | 5b58 0f85 | 0a00 0000 
  0x0000000111241ac0: e9bd d2ff | ffb8 0064 

  0x0000000111241ac8: ;   {runtime_call load_mirror_patching Runtime1 stub}
  0x0000000111241ac8: 5a0a e8b1 

  0x0000000111241acc: ; ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop [408]=Oop [424]=Oop }
                      ;*getstatic ADD {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@121 (line 30)
  0x0000000111241acc: d78f ffe9 | a4d2 ffff 
 ;; ImplicitNullCheckStub slow case
  0x0000000111241ad4: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000111241ad4: e867 2a90 

  0x0000000111241ad8: ; ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop [408]=Oop [424]=Oop rdx=Oop }
                      ;*getstatic ADD {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@121 (line 30)
                      ;   {external_word}
  0x0000000111241ad8: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x0000000111241ae4: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000111241ae4: 83e4 f0e8 | 64f4 29f8 | f448 8b92 | 0000 0000 
 ;; patch data encoded as movl
  0x0000000111241af4: b800 0c05 

  0x0000000111241af8: ;   {runtime_call access_field_patching Runtime1 stub}
  0x0000000111241af8: 07e8 82e3 

  0x0000000111241afc: ; ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop [408]=Oop [424]=Oop rdx=Oop }
                      ;*getstatic ADD {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@121 (line 30)
  0x0000000111241afc: 8fff e985 

  0x0000000111241b00: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000111241b00: d2ff ffe8 

  0x0000000111241b04: ; ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop [408]=Oop rdx=Oop rsi=Oop }
                      ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
  0x0000000111241b04: 382a 90ff 

  0x0000000111241b08: ;   {external_word}
  0x0000000111241b08: 48bf 696b | b209 0100 | 0000 4883 

  0x0000000111241b14: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000111241b14: e4f0 e835 | f429 f8f4 
 ;; RangeCheckStub slow case
  0x0000000111241b1c: 4c89 1c24 | 4889 5424 

  0x0000000111241b24: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x0000000111241b24: 08e8 1633 

  0x0000000111241b28: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop rdx=Oop rcx=Oop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@141 (line 33)
                      ;   {external_word}
  0x0000000111241b28: 90ff 48bf | 696b b209 | 0100 0000 | 4883 e4f0 

  0x0000000111241b38: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000111241b38: e813 f429 

  0x0000000111241b3c: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000111241b3c: f8f4 e8fd 

  0x0000000111241b40: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop rdx=Oop rcx=Oop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@149 (line 34)
                      ;   {external_word}
  0x0000000111241b40: 2990 ff48 | bf69 6bb2 | 0901 0000 | 0048 83e4 

  0x0000000111241b50: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000111241b50: f0e8 faf3 

  0x0000000111241b54: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000111241b54: 29f8 f4e8 

  0x0000000111241b58: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop rdx=Oop rcx=Oop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@149 (line 34)
  0x0000000111241b58: e429 90ff 

  0x0000000111241b5c: ;   {external_word}
  0x0000000111241b5c: 48bf 696b | b209 0100 | 0000 4883 

  0x0000000111241b68: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000111241b68: e4f0 e8e1 | f329 f8f4 
 ;; RangeCheckStub slow case
  0x0000000111241b70: 4c89 1c24 | 4889 4c24 

  0x0000000111241b78: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x0000000111241b78: 08e8 c232 

  0x0000000111241b7c: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop rdx=Oop rcx=Oop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@149 (line 34)
                      ;   {external_word}
  0x0000000111241b7c: 90ff 48bf | 696b b209 | 0100 0000 | 4883 e4f0 

  0x0000000111241b8c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000111241b8c: e8bf f329 

  0x0000000111241b90: ;   {metadata({method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111241b90: f8f4 49ba | 18fe 8867 | 0200 0000 | 4c89 5424 | 0848 c704 | 249c 0000 

  0x0000000111241ba8: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241ba8: 00e8 12ca 

  0x0000000111241bac: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop rdx=Oop rcx=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)
  0x0000000111241bac: 8fff e933 

  0x0000000111241bb0: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000111241bb0: d3ff ffe8 

  0x0000000111241bb4: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop rdx=Oop rcx=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@133 (line 32)
  0x0000000111241bb4: 8829 90ff 

  0x0000000111241bb8: ;   {external_word}
  0x0000000111241bb8: 48bf 696b | b209 0100 | 0000 4883 

  0x0000000111241bc4: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000111241bc4: e4f0 e885 | f329 f8f4 
 ;; CounterOverflowStub slow case
  0x0000000111241bcc: ;   {metadata({method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111241bcc: 49ba 4874 | b167 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x0000000111241be0: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241be0: ffff ffe8 

  0x0000000111241be4: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
  0x0000000111241be4: d8c9 8fff | e9cb d3ff 

  0x0000000111241bec: ;   {metadata({method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111241bec: ff49 ba70 | 72b1 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x0000000111241c04: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241c04: e8b7 c98f 

  0x0000000111241c08: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop rax=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
                      ; - jdk.incubator.vector.DoubleVector::zero@19 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
  0x0000000111241c08: ffe9 98d4 

  0x0000000111241c0c: ;   {metadata({method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111241c0c: ffff 49ba | 78aa 4010 | 0100 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x0000000111241c24: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241c24: ffe8 96c9 

  0x0000000111241c28: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop rax=Oop r11=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
                      ; - jdk.incubator.vector.DoubleVector::zero@23 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
  0x0000000111241c28: 8fff e9f2 

  0x0000000111241c2c: ;   {metadata({method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x0000000111241c2c: d4ff ff49 | ba78 9a40 | 1001 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x0000000111241c44: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241c44: ffff e875 

  0x0000000111241c48: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop rax=Oop r11=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
                      ; - jdk.incubator.vector.DoubleVector::zero@23 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
  0x0000000111241c48: c98f ffe9 | 30d5 ffff 
 ;; SimpleExceptionStub slow case
  0x0000000111241c50: 4889 0424 

  0x0000000111241c54: ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x0000000111241c54: e867 fe8f 

  0x0000000111241c58: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [416]=Oop [432]=Oop [496]=Oop [464]=Oop [472]=Oop [480]=Oop [488]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@31 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
                      ;   {external_word}
  0x0000000111241c58: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x0000000111241c64: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000111241c64: 83e4 f0e8 | e4f2 29f8 

  0x0000000111241c6c: ;   {metadata({method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111241c6c: f449 ba48 | 74b1 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x0000000111241c84: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241c84: e837 c98f 

  0x0000000111241c88: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [416]=Oop [432]=Oop [496]=Oop [464]=Oop [472]=Oop [480]=Oop [488]=Oop rbx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
  0x0000000111241c88: ffe9 58d7 

  0x0000000111241c8c: ;   {metadata({method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111241c8c: ffff 49ba | 7072 b167 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x0000000111241ca4: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241ca4: ffe8 16c9 

  0x0000000111241ca8: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [416]=Oop [432]=Oop [496]=Oop [464]=Oop [472]=Oop [480]=Oop [488]=Oop rbx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
                      ; - jdk.incubator.vector.DoubleVector::zero@19 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
  0x0000000111241ca8: 8fff e920 

  0x0000000111241cac: ;   {metadata({method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111241cac: d8ff ff49 | ba78 aa40 | 1001 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x0000000111241cc4: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241cc4: ffff e8f5 

  0x0000000111241cc8: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [416]=Oop [432]=Oop [496]=Oop [464]=Oop [480]=Oop [488]=Oop rbx=Oop r11=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
                      ; - jdk.incubator.vector.DoubleVector::zero@23 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
  0x0000000111241cc8: c88f ffe9 | 73d8 ffff 
 ;; CounterOverflowStub slow case
  0x0000000111241cd0: ;   {metadata({method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x0000000111241cd0: 49ba 789a | 4010 0100 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x0000000111241ce4: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241ce4: ffff ffe8 

  0x0000000111241ce8: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [416]=Oop [432]=Oop [496]=Oop [464]=Oop [480]=Oop [488]=Oop rbx=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
                      ; - jdk.incubator.vector.DoubleVector::zero@23 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
  0x0000000111241ce8: d4c8 8fff | e9ac d8ff | ff48 8904 

  0x0000000111241cf4: ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x0000000111241cf4: 24e8 c6fd 

  0x0000000111241cf8: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [416]=Oop [432]=Oop [512]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@31 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
                      ;   {external_word}
  0x0000000111241cf8: 8fff 48bf | 696b b209 | 0100 0000 | 4883 e4f0 

  0x0000000111241d08: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000111241d08: e843 f229 

  0x0000000111241d0c: ;   {metadata({method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111241d0c: f8f4 49ba | d0de b167 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x0000000111241d24: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241d24: ffe8 96c8 

  0x0000000111241d28: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [528]=Oop rdx=Oop [416]=Oop [536]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x0000000111241d28: 8fff e937 

  0x0000000111241d2c: ;   {metadata({method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x0000000111241d2c: dbff ff49 | ba80 62b9 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x0000000111241d44: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241d44: ffff e875 

  0x0000000111241d48: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [528]=Oop rdx=Oop [416]=Oop [536]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x0000000111241d48: c88f ffe9 | ecdb ffff 
 ;; CounterOverflowStub slow case
  0x0000000111241d50: ;   {metadata({method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x0000000111241d50: 49ba e0f0 | 1510 0100 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x0000000111241d64: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241d64: ffff ffe8 

  0x0000000111241d68: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [528]=Oop rdx=Oop [416]=Oop [536]=Oop }
                      ;*synchronization entry
                      ; - java.util.Objects::checkIndex@-1 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x0000000111241d68: 54c8 8fff | e910 dcff 

  0x0000000111241d70: ;   {metadata({method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x0000000111241d70: ff49 ba08 | 343f 1001 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x0000000111241d88: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241d88: e833 c88f 

  0x0000000111241d8c: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [528]=Oop rdx=Oop [416]=Oop [536]=Oop }
                      ;*synchronization entry
                      ; - jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x0000000111241d8c: ffe9 2edc 

  0x0000000111241d90: ;   {metadata({method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x0000000111241d90: ffff 49ba | 309e b367 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x0000000111241da8: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241da8: ffe8 12c8 

  0x0000000111241dac: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [528]=Oop rdx=Oop [416]=Oop [536]=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x0000000111241dac: 8fff e9ca 

  0x0000000111241db0: ;   {metadata({method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x0000000111241db0: dcff ff49 | ba08 05b4 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x0000000111241dc8: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241dc8: ffff e8f1 

  0x0000000111241dcc: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [528]=Oop rdx=Oop [416]=Oop [536]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x0000000111241dcc: c78f ffe9 | e8dc ffff 
 ;; CounterOverflowStub slow case
  0x0000000111241dd4: ;   {metadata({method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x0000000111241dd4: 49ba c010 | b767 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x0000000111241de8: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241de8: ffff ffe8 

  0x0000000111241dec: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [536]=Oop [416]=Oop rdx=Oop [528]=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x0000000111241dec: d0c7 8fff | e92c ddff 

  0x0000000111241df4: ;   {metadata({method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111241df4: ff49 ba28 | f2b1 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x0000000111241e0c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241e0c: e8af c78f 

  0x0000000111241e10: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [536]=Oop [416]=Oop rdx=Oop [528]=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x0000000111241e10: ffe9 4ddd 

  0x0000000111241e14: ;   {metadata({method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector')}
  0x0000000111241e14: ffff 49ba | 20d6 b667 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x0000000111241e2c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241e2c: ffe8 8ec7 

  0x0000000111241e30: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [536]=Oop [416]=Oop rdx=Oop [528]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x0000000111241e30: 8fff e96b 

  0x0000000111241e34: ;   {metadata({method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x0000000111241e34: ddff ff49 | bab0 93b3 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x0000000111241e4c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241e4c: ffff e86d 

  0x0000000111241e50: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [536]=Oop [416]=Oop rdx=Oop [528]=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x0000000111241e50: c78f ffe9 | abdd ffff 
 ;; CounterOverflowStub slow case
  0x0000000111241e58: ;   {metadata({method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111241e58: 49ba 80fe | b167 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x0000000111241e6c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241e6c: ffff ffe8 

  0x0000000111241e70: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [536]=Oop [416]=Oop rdx=Oop [528]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x0000000111241e70: 4cc7 8fff | e9db ddff 

  0x0000000111241e78: ;   {metadata({method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111241e78: ff49 ba78 | aa40 1001 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x0000000111241e90: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241e90: e82b c78f 

  0x0000000111241e94: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [536]=Oop rdx=Oop [528]=Oop [416]=Oop r8=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x0000000111241e94: ffe9 3bde 

  0x0000000111241e98: ;   {metadata({method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x0000000111241e98: ffff 49ba | 789a 4010 | 0100 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x0000000111241eb0: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241eb0: ffe8 0ac7 

  0x0000000111241eb4: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [536]=Oop rdx=Oop [528]=Oop [416]=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x0000000111241eb4: 8fff e976 | deff ff48 

  0x0000000111241ebc: ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x0000000111241ebc: 8904 24e8 

  0x0000000111241ec0: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [528]=Oop [536]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x0000000111241ec0: fcfb 8fff 

  0x0000000111241ec4: ;   {external_word}
  0x0000000111241ec4: 48bf 696b | b209 0100 | 0000 4883 

  0x0000000111241ed0: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000111241ed0: e4f0 e879 | f029 f8f4 
 ;; ImplicitNullCheckStub slow case
  0x0000000111241ed8: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000111241ed8: e863 2690 

  0x0000000111241edc: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop rdi=Oop [416]=Oop }
                      ;*invokevirtual sub {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
                      ;   {external_word}
  0x0000000111241edc: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x0000000111241ee8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000111241ee8: 83e4 f0e8 | 60f0 29f8 

  0x0000000111241ef0: ;   {metadata({method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111241ef0: f449 ba78 | 93b1 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x0000000111241f08: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241f08: e8b3 c68f 

  0x0000000111241f0c: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop rdi=Oop [416]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::sub@-1 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x0000000111241f0c: ffe9 0ae0 

  0x0000000111241f10: ;   {metadata({method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111241f10: ffff 49ba | a081 b167 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x0000000111241f28: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241f28: ffe8 92c6 

  0x0000000111241f2c: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop rdi=Oop [416]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::lanewise@-1 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x0000000111241f2c: 8fff e926 

  0x0000000111241f30: ;   {metadata({method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111241f30: e0ff ff49 | bad0 deb1 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x0000000111241f48: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241f48: ffff e871 

  0x0000000111241f4c: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop [416]=Oop rax=Oop [552]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x0000000111241f4c: c68f ffe9 | bae1 ffff 
 ;; ImplicitNullCheckStub slow case
  0x0000000111241f54: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000111241f54: e8e7 2590 

  0x0000000111241f58: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop rax=Oop [552]=Oop rcx=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
                      ;   {external_word}
  0x0000000111241f58: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x0000000111241f64: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000111241f64: 83e4 f0e8 | e4ef 29f8 

  0x0000000111241f6c: ;   {metadata({method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x0000000111241f6c: f449 ba80 | 62b9 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x0000000111241f84: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241f84: e837 c68f 

  0x0000000111241f88: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop rax=Oop [552]=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x0000000111241f88: ffe9 61e2 

  0x0000000111241f8c: ;   {metadata({method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x0000000111241f8c: ffff 49ba | e0f0 1510 | 0100 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x0000000111241fa4: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241fa4: ffe8 16c6 

  0x0000000111241fa8: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop rax=Oop [552]=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - java.util.Objects::checkIndex@-1 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x0000000111241fa8: 8fff e987 

  0x0000000111241fac: ;   {metadata({method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x0000000111241fac: e2ff ff49 | ba08 343f | 1001 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x0000000111241fc4: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241fc4: ffff e8f5 

  0x0000000111241fc8: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop rax=Oop [552]=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x0000000111241fc8: c58f ffe9 | a0e2 ffff 
 ;; CounterOverflowStub slow case
  0x0000000111241fd0: ;   {metadata({method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x0000000111241fd0: 49ba 309e | b367 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x0000000111241fe4: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111241fe4: ffff ffe8 

  0x0000000111241fe8: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop rax=Oop [552]=Oop rcx=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x0000000111241fe8: d4c5 8fff | e93c e3ff 

  0x0000000111241ff0: ;   {metadata({method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x0000000111241ff0: ff49 ba08 | 05b4 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x0000000111242008: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111242008: e8b3 c58f 

  0x000000011124200c: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop rax=Oop [552]=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011124200c: ffe9 55e3 

  0x0000000111242010: ;   {metadata({method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x0000000111242010: ffff 49ba | c010 b767 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x0000000111242028: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111242028: ffe8 92c5 

  0x000000011124202c: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop [552]=Oop rcx=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011124202c: 8fff e998 

  0x0000000111242030: ;   {metadata({method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111242030: e3ff ff49 | ba28 f2b1 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x0000000111242048: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111242048: ffff e871 

  0x000000011124204c: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop [552]=Oop rcx=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011124204c: c58f ffe9 | b9e3 ffff 
 ;; CounterOverflowStub slow case
  0x0000000111242054: ;   {metadata({method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector')}
  0x0000000111242054: 49ba 20d6 | b667 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x0000000111242068: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111242068: ffff ffe8 

  0x000000011124206c: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop [552]=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011124206c: 50c5 8fff | e9d2 e3ff 

  0x0000000111242074: ;   {metadata({method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x0000000111242074: ff49 bab0 | 93b3 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011124208c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011124208c: e82f c58f 

  0x0000000111242090: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop [552]=Oop rcx=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x0000000111242090: ffe9 12e4 

  0x0000000111242094: ;   {metadata({method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111242094: ffff 49ba | 80fe b167 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x00000001112420ac: ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001112420ac: ffe8 0ec5 

  0x00000001112420b0: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop [552]=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x00000001112420b0: 8fff e93d 

  0x00000001112420b4: ;   {metadata({method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x00000001112420b4: e4ff ff49 | ba78 aa40 | 1001 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x00000001112420cc: ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001112420cc: ffff e8ed 

  0x00000001112420d0: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop [552]=Oop rcx=Oop rdx=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x00000001112420d0: c48f ffe9 | 85e4 ffff 
 ;; CounterOverflowStub slow case
  0x00000001112420d8: ;   {metadata({method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x00000001112420d8: 49ba 789a | 4010 0100 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x00000001112420ec: ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001112420ec: ffff ffe8 

  0x00000001112420f0: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop [552]=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x00000001112420f0: ccc4 8fff | e9bb e4ff | ff48 8904 

  0x00000001112420fc: ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00000001112420fc: 24e8 bef9 

  0x0000000111242100: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop [416]=Oop [552]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
                      ;   {external_word}
  0x0000000111242100: 8fff 48bf | 696b b209 | 0100 0000 | 4883 e4f0 

  0x0000000111242110: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000111242110: e83b ee29 

  0x0000000111242114: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000111242114: f8f4 e825 

  0x0000000111242118: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop rdi=Oop [528]=Oop [536]=Oop [552]=Oop }
                      ;*invokevirtual sub {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
                      ;   {external_word}
  0x0000000111242118: 2490 ff48 | bf69 6bb2 | 0901 0000 | 0048 83e4 

  0x0000000111242128: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000111242128: f0e8 22ee 

  0x000000011124212c: ;   {metadata({method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011124212c: 29f8 f449 | ba78 93b1 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x0000000111242144: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111242144: ffff e875 

  0x0000000111242148: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop rdi=Oop [528]=Oop [536]=Oop [552]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::sub@-1 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x0000000111242148: c48f ffe9 | 34e6 ffff 
 ;; CounterOverflowStub slow case
  0x0000000111242150: ;   {metadata({method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111242150: 49ba a081 | b167 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x0000000111242164: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111242164: ffff ffe8 

  0x0000000111242168: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop rdi=Oop [528]=Oop [536]=Oop [552]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::lanewise@-1 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x0000000111242168: 54c4 8fff | e950 e6ff 

  0x0000000111242170: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000111242170: ffe8 ca23 

  0x0000000111242174: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [536]=Oop [528]=Oop [552]=Oop rax=Oop }
                      ;*invokevirtual mul {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
                      ;   {external_word}
  0x0000000111242174: 90ff 48bf | 696b b209 | 0100 0000 | 4883 e4f0 

  0x0000000111242184: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000111242184: e8c7 ed29 

  0x0000000111242188: ;   {metadata({method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111242188: f8f4 49ba | 4096 b167 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x00000001112421a0: ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001112421a0: ffe8 1ac4 

  0x00000001112421a4: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [536]=Oop [528]=Oop [552]=Oop rax=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::mul@-1 (line 1187)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
  0x00000001112421a4: 8fff e9c9 

  0x00000001112421a8: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000001112421a8: e7ff ffe8 

  0x00000001112421ac: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [536]=Oop [552]=Oop [568]=Oop rax=Oop rbx=Oop }
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
  0x00000001112421ac: 9023 90ff 

  0x00000001112421b0: ;   {external_word}
  0x00000001112421b0: 48bf 696b | b209 0100 | 0000 4883 

  0x00000001112421bc: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001112421bc: e4f0 e88d | ed29 f8f4 
 ;; CounterOverflowStub slow case
  0x00000001112421c4: ;   {metadata({method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112421c4: 49ba f08e | b167 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x00000001112421d8: ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000001112421d8: ffff ffe8 

  0x00000001112421dc: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [536]=Oop [552]=Oop [568]=Oop rax=Oop rbx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
  0x00000001112421dc: e0c3 8fff | e997 e8ff 

  0x00000001112421e4: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000001112421e4: ffe8 5623 

  0x00000001112421e8: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [536]=Oop [568]=Oop [576]=Oop rax=Oop r8=Oop [552]=Oop }
                      ;*invokevirtual mul {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
                      ;   {external_word}
  0x00000001112421e8: 90ff 48bf | 696b b209 | 0100 0000 | 4883 e4f0 

  0x00000001112421f8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001112421f8: e853 ed29 

  0x00000001112421fc: ;   {metadata({method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112421fc: f8f4 49ba | 4096 b167 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x0000000111242214: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111242214: ffe8 a6c3 

  0x0000000111242218: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [536]=Oop [568]=Oop [576]=Oop rax=Oop r8=Oop [552]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::mul@-1 (line 1187)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
  0x0000000111242218: 8fff e965 

  0x000000011124221c: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011124221c: e9ff ffe8 

  0x0000000111242220: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [576]=Oop [584]=Oop rax=Oop rcx=Oop }
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x0000000111242220: 1c23 90ff 

  0x0000000111242224: ;   {external_word}
  0x0000000111242224: 48bf 696b | b209 0100 | 0000 4883 

  0x0000000111242230: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000111242230: e4f0 e819 | ed29 f8f4 
 ;; CounterOverflowStub slow case
  0x0000000111242238: ;   {metadata({method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111242238: 49ba f08e | b167 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011124224c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011124224c: ffff ffe8 

  0x0000000111242250: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [576]=Oop [584]=Oop rax=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x0000000111242250: 6cc3 8fff | e92b eaff 

  0x0000000111242258: ;   {metadata({method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111242258: ff49 ba18 | fe88 6702 | 0000 004c | 8954 2408 | 48c7 0424 | 1001 0000 

  0x0000000111242270: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111242270: e84b c38f 

  0x0000000111242274: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [584]=Oop rax=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)
  0x0000000111242274: ffe9 ecea 

  0x0000000111242278: ;   {oop(NULL)}
  0x0000000111242278: ffff 48ba | 0000 0000 | 0000 0000 
 ;;  being_initialized check
  0x0000000111242284: 5053 488b | 5a10 5756 | 5251 4150 | 4151 4152 | 4153 f7c4 | 0f00 0000 | 0f84 1200 | 0000 4883 
  0x00000001112422a4: ;   {runtime_call Thread::current()}
  0x00000001112422a4: ec08 e895 | bb23 f848 | 83c4 08e9 | 0500 0000 

  0x00000001112422b4: ;   {runtime_call Thread::current()}
  0x00000001112422b4: e887 bb23 | f841 5b41 | 5a41 5941 | 5859 5a5e | 5f48 3b83 | 4801 0000 | 5b58 0f85 | 0a00 0000 
  0x00000001112422d4: e9e1 eaff | ffb8 0064 

  0x00000001112422dc: ;   {runtime_call load_mirror_patching Runtime1 stub}
  0x00000001112422dc: 5a0a e89d 

  0x00000001112422e0: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop }
                      ;*getstatic ADD {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@279 (line 52)
  0x00000001112422e0: cf8f ffe9 | c8ea ffff 
 ;; ImplicitNullCheckStub slow case
  0x00000001112422e8: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000001112422e8: e853 2290 

  0x00000001112422ec: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop rdx=Oop }
                      ;*getstatic ADD {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@279 (line 52)
                      ;   {external_word}
  0x00000001112422ec: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x00000001112422f8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001112422f8: 83e4 f0e8 | 50ec 29f8 | f448 8b92 | 0000 0000 
 ;; patch data encoded as movl
  0x0000000111242308: b800 0c05 

  0x000000011124230c: ;   {runtime_call access_field_patching Runtime1 stub}
  0x000000011124230c: 07e8 6edb 

  0x0000000111242310: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop rdx=Oop }
                      ;*getstatic ADD {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@279 (line 52)
  0x0000000111242310: 8fff e9a9 

  0x0000000111242314: ;   {oop(NULL)}
  0x0000000111242314: eaff ff48 | ba00 0000 | 0000 0000 | 0050 5348 | 8b5a 1057 | 5652 5141 | 5041 5141 | 5241 53f7 
  0x0000000111242334: c40f 0000 | 000f 8412 | 0000 0048 

  0x0000000111242340: ;   {runtime_call Thread::current()}
  0x0000000111242340: 83ec 08e8 | f8ba 23f8 | 4883 c408 | e905 0000 

  0x0000000111242350: ;   {runtime_call Thread::current()}
  0x0000000111242350: 00e8 eaba | 23f8 415b | 415a 4159 | 4158 595a | 5e5f 483b | 8348 0100 | 005b 580f | 850a 0000 
  0x0000000111242370: 00e9 14eb | ffff b800 

  0x0000000111242378: ;   {runtime_call load_mirror_patching Runtime1 stub}
  0x0000000111242378: 645a 0ae8 

  0x000000011124237c: ; ImmutableOopMap {[440]=Oop [424]=Oop [432]=Oop [416]=Oop }
                      ;*getstatic ADD {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@292 (line 53)
  0x000000011124237c: 00cf 8fff | e9fb eaff 

  0x0000000111242384: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000111242384: ffe8 b621 

  0x0000000111242388: ; ImmutableOopMap {[440]=Oop [424]=Oop [432]=Oop [416]=Oop rdx=Oop }
                      ;*getstatic ADD {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@292 (line 53)
                      ;   {external_word}
  0x0000000111242388: 90ff 48bf | 696b b209 | 0100 0000 | 4883 e4f0 

  0x0000000111242398: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000111242398: e8b3 eb29 | f8f4 488b | 9200 0000 | 00b8 000c 

  0x00000001112423a8: ;   {runtime_call access_field_patching Runtime1 stub}
  0x00000001112423a8: 0507 e8d1 

  0x00000001112423ac: ; ImmutableOopMap {[440]=Oop [424]=Oop [432]=Oop [416]=Oop rdx=Oop }
                      ;*getstatic ADD {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@292 (line 53)
  0x00000001112423ac: da8f ffe9 | dcea ffff 
 ;; RangeCheckStub slow case
  0x00000001112423b4: 4889 0424 | 4889 5424 

  0x00000001112423bc: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00000001112423bc: 08e8 7e2a 

  0x00000001112423c0: ; ImmutableOopMap {[440]=Oop rcx=Oop rdx=Oop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@313 (line 56)
                      ;   {external_word}
  0x00000001112423c0: 90ff 48bf | 696b b209 | 0100 0000 | 4883 e4f0 

  0x00000001112423d0: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001112423d0: e87b eb29 

  0x00000001112423d4: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000001112423d4: f8f4 e865 

  0x00000001112423d8: ; ImmutableOopMap {[440]=Oop rcx=Oop rdx=Oop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
                      ;   {external_word}
  0x00000001112423d8: 2190 ff48 | bf69 6bb2 | 0901 0000 | 0048 83e4 

  0x00000001112423e8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001112423e8: f0e8 62eb 

  0x00000001112423ec: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000001112423ec: 29f8 f4e8 

  0x00000001112423f0: ; ImmutableOopMap {[440]=Oop rcx=Oop rdx=Oop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
  0x00000001112423f0: 4c21 90ff 

  0x00000001112423f4: ;   {external_word}
  0x00000001112423f4: 48bf 696b | b209 0100 | 0000 4883 

  0x0000000111242400: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000111242400: e4f0 e849 | eb29 f8f4 
 ;; RangeCheckStub slow case
  0x0000000111242408: 4889 0424 | 4889 4c24 

  0x0000000111242410: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x0000000111242410: 08e8 2a2a 

  0x0000000111242414: ; ImmutableOopMap {[440]=Oop rcx=Oop rdx=Oop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
                      ;   {external_word}
  0x0000000111242414: 90ff 48bf | 696b b209 | 0100 0000 | 4883 e4f0 

  0x0000000111242424: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000111242424: e827 eb29 

  0x0000000111242428: ;   {metadata({method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111242428: f8f4 49ba | 18fe 8867 | 0200 0000 | 4c89 5424 | 0848 c704 | 245f 0100 

  0x0000000111242440: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000000111242440: 00e8 7ac1 

  0x0000000111242444: ; ImmutableOopMap {[440]=Oop rcx=Oop rdx=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)
  0x0000000111242444: 8fff e9a9 

  0x0000000111242448: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000111242448: ebff ffe8 

  0x000000011124244c: ; ImmutableOopMap {rax=Oop }
                      ;*putfield slope {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@360 (line 60)
  0x000000011124244c: f020 90ff 

  0x0000000111242450: ;   {external_word}
  0x0000000111242450: 48bf 696b | b209 0100 | 0000 4883 

  0x000000011124245c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011124245c: e4f0 e8ed | ea29 f8f4 
 ;; C1SafepointPollStub slow case
  0x0000000111242464: ;   {internal_word}
  0x0000000111242464: 49ba 8210 | 2411 0100 | 0000 4d89 | 97e8 0300 

  0x0000000111242474: ;   {runtime_call SafepointBlob}
  0x0000000111242474: 00e9 a68d 

  0x0000000111242478: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000111242478: 9bff e8c1 

  0x000000011124247c: ; ImmutableOopMap {[408]=Oop [424]=Oop [440]=Oop [432]=Oop [536]=Oop [416]=Oop [528]=Oop rax=Oop }
                      ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.util.Preconditions::checkIndex@15 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
                      ;   {external_word}
  0x000000011124247c: 2090 ff48 | bf69 6bb2 | 0901 0000 | 0048 83e4 

  0x000000011124248c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011124248c: f0e8 beea 

  0x0000000111242490: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000000111242490: 29f8 f4e8 

  0x0000000111242494: ; ImmutableOopMap {[416]=Oop [432]=Oop [440]=Oop [424]=Oop [408]=Oop [536]=Oop [552]=Oop [528]=Oop rax=Oop }
                      ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.util.Preconditions::checkIndex@15 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x0000000111242494: a820 90ff 

  0x0000000111242498: ;   {external_word}
  0x0000000111242498: 48bf 696b | b209 0100 | 0000 4883 

  0x00000001112424a4: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001112424a4: e4f0 e8a5 | ea29 f8f4 
 ;; ImplicitNullCheckStub slow case
  0x00000001112424ac: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000001112424ac: e88f 2090 

  0x00000001112424b0: ; ImmutableOopMap {[424]=Oop [440]=Oop [432]=Oop [416]=Oop [408]=Oop rax=Oop }
                      ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.util.Preconditions::checkIndex@15 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
                      ;   {external_word}
  0x00000001112424b0: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x00000001112424bc: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001112424bc: 83e4 f0e8 | 8cea 29f8 

  0x00000001112424c4: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000001112424c4: f4e8 7620 

  0x00000001112424c8: ; ImmutableOopMap {[432]=Oop [440]=Oop [448]=Oop [424]=Oop [416]=Oop rax=Oop }
                      ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.util.Preconditions::checkIndex@15 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
                      ;   {external_word}
  0x00000001112424c8: 90ff 48bf | 696b b209 | 0100 0000 | 4883 e4f0 

  0x00000001112424d8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001112424d8: e873 ea29 

  0x00000001112424dc: ;   {metadata(NULL)}
  0x00000001112424dc: f8f4 48ba | 0000 0000 | 0000 0000 
 ;; patch data encoded as movl
  0x00000001112424e8: b800 0f05 

  0x00000001112424ec: ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00000001112424ec: 0ae8 8ed3 

  0x00000001112424f0: ; ImmutableOopMap {}
                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@7 (line 15)
  0x00000001112424f0: 8fff e9c1 | ecff ff48 

  0x00000001112424f8: ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00000001112424f8: 8bd2 e8c1 

  0x00000001112424fc: ; ImmutableOopMap {}
                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@7 (line 15)
  0x00000001112424fc: 1590 ffe9 | 0bed ffff | 9090 498b | 8750 0400 | 0049 c787 | 5004 0000 | 0000 0000 | 49c7 8758 
  0x000000011124251c: 0400 0000 | 0000 0048 | 81c4 c002 

  0x0000000111242528: ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000111242528: 0000 5de9 | 1033 90ff | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 
[Stub Code]
  0x0000000111242540: ;   {no_reloc}
  0x0000000111242540: 9090 9090 

  0x0000000111242544: ;   {static_stub}
  0x0000000111242544: 9048 bb00 | 0000 0000 

  0x000000011124254c: ;   {runtime_call}
  0x000000011124254c: 0000 00e9 | fbff ffff 

  0x0000000111242554: ;   {static_stub}
  0x0000000111242554: 9048 bb00 | 0000 0000 

  0x000000011124255c: ;   {runtime_call}
  0x000000011124255c: 0000 00e9 | fbff ffff 

  0x0000000111242564: ;   {static_stub}
  0x0000000111242564: 9048 bb00 | 0000 0000 

  0x000000011124256c: ;   {runtime_call}
  0x000000011124256c: 0000 00e9 | fbff ffff 

  0x0000000111242574: ;   {static_stub}
  0x0000000111242574: 9048 bb00 | 0000 0000 

  0x000000011124257c: ;   {runtime_call}
  0x000000011124257c: 0000 00e9 | fbff ffff 

  0x0000000111242584: ;   {static_stub}
  0x0000000111242584: 9048 bb00 | 0000 0000 

  0x000000011124258c: ;   {runtime_call}
  0x000000011124258c: 0000 00e9 | fbff ffff 

  0x0000000111242594: ;   {static_stub}
  0x0000000111242594: 9048 bb00 | 0000 0000 

  0x000000011124259c: ;   {runtime_call}
  0x000000011124259c: 0000 00e9 | fbff ffff 

  0x00000001112425a4: ;   {static_stub}
  0x00000001112425a4: 9048 bb00 | 0000 0000 

  0x00000001112425ac: ;   {runtime_call}
  0x00000001112425ac: 0000 00e9 | fbff ffff 

  0x00000001112425b4: ;   {static_stub}
  0x00000001112425b4: 9048 bb00 | 0000 0000 

  0x00000001112425bc: ;   {runtime_call}
  0x00000001112425bc: 0000 00e9 | fbff ffff 

  0x00000001112425c4: ;   {static_stub}
  0x00000001112425c4: 9048 bb00 | 0000 0000 

  0x00000001112425cc: ;   {runtime_call}
  0x00000001112425cc: 0000 00e9 | fbff ffff 

  0x00000001112425d4: ;   {static_stub}
  0x00000001112425d4: 9048 bb00 | 0000 0000 

  0x00000001112425dc: ;   {runtime_call}
  0x00000001112425dc: 0000 00e9 | fbff ffff 

  0x00000001112425e4: ;   {static_stub}
  0x00000001112425e4: 9048 bb00 | 0000 0000 

  0x00000001112425ec: ;   {runtime_call}
  0x00000001112425ec: 0000 00e9 | fbff ffff 

  0x00000001112425f4: ;   {static_stub}
  0x00000001112425f4: 9048 bb00 | 0000 0000 

  0x00000001112425fc: ;   {runtime_call}
  0x00000001112425fc: 0000 00e9 | fbff ffff 

  0x0000000111242604: ;   {static_stub}
  0x0000000111242604: 9048 bb00 | 0000 0000 

  0x000000011124260c: ;   {runtime_call}
  0x000000011124260c: 0000 00e9 | fbff ffff 

  0x0000000111242614: ;   {static_stub}
  0x0000000111242614: 9048 bb00 | 0000 0000 

  0x000000011124261c: ;   {runtime_call}
  0x000000011124261c: 0000 00e9 | fbff ffff 

  0x0000000111242624: ;   {static_stub}
  0x0000000111242624: 9048 bb00 | 0000 0000 

  0x000000011124262c: ;   {runtime_call}
  0x000000011124262c: 0000 00e9 | fbff ffff 

  0x0000000111242634: ;   {static_stub}
  0x0000000111242634: 9048 bb00 | 0000 0000 

  0x000000011124263c: ;   {runtime_call}
  0x000000011124263c: 0000 00e9 | fbff ffff 

  0x0000000111242644: ;   {static_stub}
  0x0000000111242644: 9048 bb00 | 0000 0000 

  0x000000011124264c: ;   {runtime_call}
  0x000000011124264c: 0000 00e9 | fbff ffff 

  0x0000000111242654: ;   {static_stub}
  0x0000000111242654: 9048 bb00 | 0000 0000 

  0x000000011124265c: ;   {runtime_call}
  0x000000011124265c: 0000 00e9 | fbff ffff 

  0x0000000111242664: ;   {static_stub}
  0x0000000111242664: 9048 bb00 | 0000 0000 

  0x000000011124266c: ;   {runtime_call}
  0x000000011124266c: 0000 00e9 | fbff ffff 

  0x0000000111242674: ;   {static_stub}
  0x0000000111242674: 9048 bb00 | 0000 0000 

  0x000000011124267c: ;   {runtime_call}
  0x000000011124267c: 0000 00e9 | fbff ffff 

  0x0000000111242684: ;   {static_stub}
  0x0000000111242684: 9048 bb00 | 0000 0000 

  0x000000011124268c: ;   {runtime_call}
  0x000000011124268c: 0000 00e9 | fbff ffff 

  0x0000000111242694: ;   {static_stub}
  0x0000000111242694: 9048 bb00 | 0000 0000 

  0x000000011124269c: ;   {runtime_call}
  0x000000011124269c: 0000 00e9 | fbff ffff 

  0x00000001112426a4: ;   {static_stub}
  0x00000001112426a4: 9048 bb00 | 0000 0000 

  0x00000001112426ac: ;   {runtime_call}
  0x00000001112426ac: 0000 00e9 | fbff ffff 

  0x00000001112426b4: ;   {static_stub}
  0x00000001112426b4: 9048 bb00 | 0000 0000 

  0x00000001112426bc: ;   {runtime_call}
  0x00000001112426bc: 0000 00e9 | fbff ffff 

  0x00000001112426c4: ;   {static_stub}
  0x00000001112426c4: 9048 bb00 | 0000 0000 

  0x00000001112426cc: ;   {runtime_call}
  0x00000001112426cc: 0000 00e9 | fbff ffff 

  0x00000001112426d4: ;   {static_stub}
  0x00000001112426d4: 9048 bb00 | 0000 0000 

  0x00000001112426dc: ;   {runtime_call}
  0x00000001112426dc: 0000 00e9 | fbff ffff 

  0x00000001112426e4: ;   {static_stub}
  0x00000001112426e4: 9048 bb00 | 0000 0000 

  0x00000001112426ec: ;   {runtime_call}
  0x00000001112426ec: 0000 00e9 | fbff ffff 
[Exception Handler]
  0x00000001112426f4: 48bb adde | 0000 0000 | 0000 48b9 | adde 0000 | 0000 0000 | 48be adde | 0000 0000 | 0000 48bf 
  0x0000000111242714: adde 0000 | 0000 0000 

  0x000000011124271c: ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011124271c: e8bf f98f 

  0x0000000111242720: ;   {external_word}
  0x0000000111242720: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x000000011124272c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011124272c: 83e4 f0e8 | 1ce8 29f8 

  0x0000000111242734: ;   {section_word}
  0x0000000111242734: f449 ba35 | 2724 1101 | 0000 0041 

  0x0000000111242740: ;   {runtime_call DeoptimizationBlob}
  0x0000000111242740: 52e9 1a81 | 9bff f4f4 
[/MachCode]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x0000000111242748:   0x0000000197665dd8 a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x0000000197665dd8}
  0x0000000111242750:   0x00000001976180e8 a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
  0x0000000111242758:   0x0000000197618158 a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
  0x0000000111242760:   0x000000011ff8c550 a 'java/lang/Class'{0x000000011ff8c550} = double
  0x0000000111242768:   0x000000019762aea0 a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019762aea0}
  0x0000000111242770:   0x0000000197653a38 a 'jdk/incubator/vector/Double256Vector'{0x0000000197653a38}
  0x0000000111242778:   0x000000019765cae0 a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019765cae0}
  0x0000000111242780:   0x000000011ff58b48 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011ff58b48}
  0x0000000111242788:   0x00000001200a7938 a 'java/lang/Class'{0x00000001200a7938} = 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
  0x0000000111242790:   0x000000011ffc7b70 a 'java/lang/Class'{0x000000011ffc7b70} = 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x0000000111242798:   0x000000026788fe18 {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
  0x00000001112427a0:   0x0000000267b3fa08 {method} {0x0000000267b3fa08} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00000001112427a8:   0x0000000267b96588 {method} {0x0000000267b96588} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x00000001112427b0:   0x0000000267b17448 {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x00000001112427b8:   0x0000000267b1ded0 {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x00000001112427c0:   0x0000000267b96280 {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x00000001112427c8:   0x000000011015f0e0 {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
  0x00000001112427d0:   0x00000001103f3408 {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
  0x00000001112427d8:   0x0000000267b39e30 {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
  0x00000001112427e0:   0x0000000267b40508 {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
  0x00000001112427e8:   0x0000000267b710c0 {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
  0x00000001112427f0:   0x0000000267b1f228 {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x00000001112427f8:   0x0000000267b18ef0 {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x0000000111242800:   0x0000000267b19378 {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x0000000111242808:   0x0000000267b181a0 {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x0000000111242810:   0x0000000267b19640 {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x0000000111242818:   0x0000000267b17270 {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
  0x0000000111242820:   0x000000011040aa78 {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
  0x0000000111242828:   0x0000000110409a78 {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
  0x0000000111242830:   0x0000000267b6d620 {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
  0x0000000111242838:   0x0000000267b393b0 {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
  0x0000000111242840:   0x0000000267b1fe80 {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x000000011123d23f offset=ffffffff bits=0):
PcDesc(pc=0x000000011123d29c offset=5c bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@0 (line 15)
PcDesc(pc=0x000000011123d2a0 offset=60 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@1 (line 15)
PcDesc(pc=0x000000011123d2a4 offset=64 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@3 (line 15)
PcDesc(pc=0x000000011123d2dd offset=9d bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@4 (line 15)
PcDesc(pc=0x000000011123d3ec offset=1ac bits=0):   jdk.incubator.vector.VectorIntrinsics::roundDown@5 (line 106)
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
PcDesc(pc=0x000000011123d725 offset=4e5 bits=0):   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
PcDesc(pc=0x000000011123d764 offset=524 bits=0):   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[600],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011123d844 offset=604 bits=0):   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
PcDesc(pc=0x000000011123db36 offset=8f6 bits=0):   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
PcDesc(pc=0x000000011123db44 offset=904 bits=0):   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[600],double
    - l10: stack[344],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011123dc24 offset=9e4 bits=0):   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
PcDesc(pc=0x000000011123dc5b offset=a1b bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x000000011123dcba offset=a7a bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@59 (line 24)
PcDesc(pc=0x000000011123dcf4 offset=ab4 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@60 (line 24)
PcDesc(pc=0x000000011123ddcf offset=b8f bits=0):   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x000000011123dec1 offset=c81 bits=0):   jdk.internal.util.Preconditions::checkIndex@1 (line 265)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x000000011123defa offset=cba bits=0):   jdk.internal.util.Preconditions::checkIndex@6 (line 265)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x000000011123df93 offset=d53 bits=0):   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x000000011123e29b offset=105b bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x000000011123e2b4 offset=1074 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x000000011123e394 offset=1154 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x000000011123e39f offset=115f bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x000000011123e479 offset=1239 bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x000000011123e48c offset=124c bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011123e570 offset=1330 bits=0):   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x000000011123e66b offset=142b bits=0):   jdk.internal.util.Preconditions::checkIndex@1 (line 265)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x000000011123e6a4 offset=1464 bits=0):   jdk.internal.util.Preconditions::checkIndex@6 (line 265)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x000000011123e73a offset=14fa bits=0):   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x000000011123ea14 offset=17d4 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x000000011123ea2c offset=17ec bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x000000011123eb0c offset=18cc bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x000000011123eb17 offset=18d7 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011123ec04 offset=19c4 bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011123ec38 offset=19f8 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
PcDesc(pc=0x000000011123ec3f offset=19ff bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[448],oop
    - l11: reg rax [0],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011123ec83 offset=1a43 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
PcDesc(pc=0x000000011123ecbf offset=1a7f bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@109 (line 29)
PcDesc(pc=0x000000011123ed55 offset=1b15 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
PcDesc(pc=0x000000011123ed6c offset=1b2c bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[640],double
PcDesc(pc=0x000000011123ed8f offset=1b4f bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@121 (line 30)
PcDesc(pc=0x000000011123ee30 offset=1bf0 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
PcDesc(pc=0x000000011123ee54 offset=1c14 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: empty
    - l6: empty
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[648],double
PcDesc(pc=0x000000011123ee83 offset=1c43 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@130 (line 32)
PcDesc(pc=0x000000011123ee9b offset=1c5b bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@141 (line 33)
PcDesc(pc=0x000000011123eeb2 offset=1c72 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@149 (line 34)
PcDesc(pc=0x000000011123eee6 offset=1ca6 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)
PcDesc(pc=0x000000011123eeed offset=1cad bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: reg xmm2 [80],double
    - l5: 0
    - l6: reg xmm1 [64],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011123ef08 offset=1cc8 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)
PcDesc(pc=0x000000011123ef0b offset=1ccb bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@133 (line 32)
PcDesc(pc=0x000000011123ef4b offset=1d0b bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@134 (line 32)
PcDesc(pc=0x000000011123f298 offset=2058 bits=0):   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
PcDesc(pc=0x000000011123f2cc offset=208c bits=0):   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011123f3ac offset=216c bits=0):   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
PcDesc(pc=0x000000011123f69e offset=245e bits=0):   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
PcDesc(pc=0x000000011123f6ac offset=246c bits=0):   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[512],oop
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011123f78e offset=254e bits=0):   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
PcDesc(pc=0x000000011123f79b offset=255b bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011123f7ee offset=25ae bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@204 (line 46)
PcDesc(pc=0x000000011123f827 offset=25e7 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@205 (line 46)
PcDesc(pc=0x000000011123f9f9 offset=27b9 bits=0):   jdk.internal.util.Preconditions::checkIndex@1 (line 265)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011123fa31 offset=27f1 bits=0):   jdk.internal.util.Preconditions::checkIndex@6 (line 265)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011123facc offset=288c bits=0):   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011123fde6 offset=2ba6 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011123fdfc offset=2bbc bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x000000011123fedc offset=2c9c bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011123fedf offset=2c9f bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
PcDesc(pc=0x000000011123fff5 offset=2db5 bits=0):   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
PcDesc(pc=0x000000011124000c offset=2dcc bits=0):   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: stack[544],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x0000000197665dd8}
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x00000001112400b6 offset=2e76 bits=0):   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
PcDesc(pc=0x00000001112400cc offset=2e8c bits=0):   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x00000001112401b0 offset=2f70 bits=0):   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x00000001112402a9 offset=3069 bits=0):   jdk.internal.util.Preconditions::checkIndex@1 (line 265)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x00000001112402e1 offset=30a1 bits=0):   jdk.internal.util.Preconditions::checkIndex@6 (line 265)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x0000000111240377 offset=3137 bits=0):   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x0000000111240650 offset=3410 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x0000000111240664 offset=3424 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
PcDesc(pc=0x0000000111240744 offset=3504 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x0000000111240747 offset=3507 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
PcDesc(pc=0x000000011124085d offset=361d bits=0):   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
PcDesc(pc=0x0000000111240874 offset=3634 bits=0):   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: stack[560],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x0000000197665dd8}
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
PcDesc(pc=0x000000011124091e offset=36de bits=0):   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
PcDesc(pc=0x0000000111240934 offset=36f4 bits=0):   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
PcDesc(pc=0x0000000111240937 offset=36f7 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
PcDesc(pc=0x0000000111240a1c offset=37dc bits=0):   jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
PcDesc(pc=0x0000000111240a34 offset=37f4 bits=0):   jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
PcDesc(pc=0x0000000111240a3f offset=37ff bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
PcDesc(pc=0x0000000111240b1f offset=38df bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
PcDesc(pc=0x0000000111240b3c offset=38fc bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
PcDesc(pc=0x0000000111240b47 offset=3907 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
PcDesc(pc=0x0000000111240c22 offset=39e2 bits=0):   jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
PcDesc(pc=0x0000000111240c3c offset=39fc bits=0):   jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[584],oop
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[536],oop
PcDesc(pc=0x0000000111240c47 offset=3a07 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x0000000111240d25 offset=3ae5 bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x0000000111240d34 offset=3af4 bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[584],oop
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111240d66 offset=3b26 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)
PcDesc(pc=0x0000000111240d6d offset=3b2d bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rdx [4],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[584],oop
    - l21: reg rax [0],oop
    - l22: empty
PcDesc(pc=0x0000000111240d9b offset=3b5b bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)
PcDesc(pc=0x0000000111240dc7 offset=3b87 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@279 (line 52)
PcDesc(pc=0x0000000111240e64 offset=3c24 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@282 (line 52)
PcDesc(pc=0x0000000111240e74 offset=3c34 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@282 (line 52)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: empty
    - l17: empty
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: 0
PcDesc(pc=0x0000000111240e97 offset=3c57 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@292 (line 53)
PcDesc(pc=0x0000000111240f34 offset=3cf4 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x0000000111240f4c offset=3d0c bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: stack[680],double
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: 0
PcDesc(pc=0x0000000111240f80 offset=3d40 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@301 (line 55)
PcDesc(pc=0x0000000111240f92 offset=3d52 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@313 (line 56)
PcDesc(pc=0x0000000111240fb9 offset=3d79 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
PcDesc(pc=0x0000000111240ff4 offset=3db4 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)
PcDesc(pc=0x0000000111240ffb offset=3dbb bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: reg xmm3 [96],double
    - l18: 0
    - l19: reg xmm1 [64],double
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111241016 offset=3dd6 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)
PcDesc(pc=0x000000011124104e offset=3e0e bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@305 (line 55)
PcDesc(pc=0x000000011124105f offset=3e1f bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@360 (line 60)
PcDesc(pc=0x000000011124107a offset=3e3a bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@374 (line 61)
PcDesc(pc=0x0000000111241090 offset=3e50 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@377 (line 62)
PcDesc(pc=0x00000001112410ce offset=3e8e bits=0):   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x00000001112410d4 offset=3e94 bits=0):   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: stack[432],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x00000001112410dc offset=3e9c bits=0):   jdk.internal.util.Preconditions::checkIndex@15 (line 266)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x0000000111241109 offset=3ec9 bits=0):   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x000000011124111c offset=3edc bits=0):   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: stack[416],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
PcDesc(pc=0x0000000111241124 offset=3ee4 bits=0):   jdk.internal.util.Preconditions::checkIndex@15 (line 266)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x0000000111241163 offset=3f23 bits=0):   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x000000011124116c offset=3f2c bits=0):   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: stack[432],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x0000000111241174 offset=3f34 bits=0):   jdk.internal.util.Preconditions::checkIndex@15 (line 266)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x000000011124119e offset=3f5e bits=0):   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x00000001112411ac offset=3f6c bits=0):   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: stack[416],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x00000001112411b4 offset=3f74 bits=0):   jdk.internal.util.Preconditions::checkIndex@15 (line 266)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x000000011124120f offset=3fcf bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@7 (line 15)
PcDesc(pc=0x0000000111241231 offset=3ff1 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@13 (line 15)
PcDesc(pc=0x0000000111241244 offset=4004 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@13 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[592],oop
PcDesc(pc=0x0000000111241251 offset=4011 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@16 (line 15)
PcDesc(pc=0x000000011124139a offset=415a bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@-1 (line 15)
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x00000001112413a4 offset=4164 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@1 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x00000001112413bd offset=417d bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@3 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x00000001112413ed offset=41ad bits=0):   jdk.incubator.vector.AbstractSpecies::loopBound@-1 (line 203)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: reg r8 [16],int
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011124140e offset=41ce bits=0):   jdk.incubator.vector.VectorIntrinsics::roundDown@-1 (line 106)
   Locals
    - l0: reg r8 [16],int
    - l1: 4
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011124142f offset=41ef bits=0):   jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111241450 offset=4210 bits=0):   jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
   Locals
    - l0: 0
    - l1: 0
   jdk.incubator.vector.DoubleVector::zero@19 (line 437)
   Locals
    - l0: empty
    - l1: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111241471 offset=4231 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019762aea0}
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111241492 offset=4252 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019762aea0}
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x00000001112414a0 offset=4260 bits=0):   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[600],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x00000001112414d0 offset=4290 bits=0):   jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[600],double
    - l10: reg rbx [6],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x00000001112414f1 offset=42b1 bits=0):   jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
   Locals
    - l0: 0
    - l1: 0
   jdk.incubator.vector.DoubleVector::zero@19 (line 437)
   Locals
    - l0: empty
    - l1: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[600],double
    - l10: reg rbx [6],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111241512 offset=42d2 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019762aea0}
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[600],double
    - l10: reg rbx [6],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111241533 offset=42f3 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019762aea0}
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[600],double
    - l10: reg rbx [6],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111241541 offset=4301 bits=0):   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[600],double
    - l10: stack[344],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111241571 offset=4331 bits=0):   jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x000000011124157b offset=433b bits=0):   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x00000001112415ab offset=436b bits=0):   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
   Locals
    - l0: reg r11 [22],int
    - l1: 4
    - l2: reg r8 [16],int
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x00000001112415cc offset=438c bits=0):   java.util.Objects::checkIndex@-1 (line 359)
   Locals
    - l0: reg r11 [22],int
    - l1: reg r8 [16],int
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x00000001112415ed offset=43ad bits=0):   jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
   Locals
    - l0: reg r11 [22],int
    - l1: reg r8 [16],int
    - l2: NULL
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x000000011124160e offset=43ce bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x000000011124162f offset=43ef bits=0):   jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: empty
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x0000000111241650 offset=4410 bits=0):   jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x0000000197653a38}
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x0000000111241671 offset=4431 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x0000000197653a38}
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x0000000111241692 offset=4452 bits=0):   jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x00000001112416b3 offset=4473 bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x00000001112416d4 offset=4494 bits=0):   jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
   Locals
    - l0: empty
    - l1: reg r11 [22],int
   jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x00000001112416f5 offset=44b5 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019765cae0}
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
    - @4: 0
    - @5: reg r8 [16],long
    - @6: reg rdx [4],oop
    - @7: reg r11 [22],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x0000000111241716 offset=44d6 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019765cae0}
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
    - @4: 0
    - @5: reg r8 [16],long
    - @6: reg rdx [4],oop
    - @7: reg r11 [22],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x0000000111241724 offset=44e4 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x000000011124173d offset=44fd bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011124176d offset=452d bits=0):   jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
   Locals
    - l0: reg rbx [6],oop
    - l1: reg rcx [2],oop
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011124178e offset=454e bits=0):   jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: stack[416],oop
    - l2: stack[372]
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x0000000111241798 offset=4558 bits=0):   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x00000001112417c8 offset=4588 bits=0):   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
   Locals
    - l0: stack[372]
    - l1: 4
    - l2: reg rsi [12],int
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: reg rcx [2],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x00000001112417e9 offset=45a9 bits=0):   java.util.Objects::checkIndex@-1 (line 359)
   Locals
    - l0: reg r11 [22],int
    - l1: reg rdi [14],int
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: reg rcx [2],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x000000011124180a offset=45ca bits=0):   jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
   Locals
    - l0: reg r11 [22],int
    - l1: reg rdi [14],int
    - l2: NULL
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: reg rcx [2],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x000000011124182b offset=45eb bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg r11 [22],int
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x000000011124184c offset=460c bits=0):   jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: empty
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg r11 [22],int
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x000000011124186d offset=462d bits=0):   jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x0000000197653a38}
    - l1: reg rcx [2],oop
    - l2: reg r11 [22],int
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x000000011124188e offset=464e bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x0000000197653a38}
    - l1: reg rcx [2],oop
    - l2: reg r11 [22],int
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x00000001112418af offset=466f bits=0):   jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg r11 [22],int
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x00000001112418d0 offset=4690 bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg r11 [22],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x00000001112418f1 offset=46b1 bits=0):   jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
   Locals
    - l0: empty
    - l1: reg r11 [22],int
   jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg r11 [22],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rcx [2],oop
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x0000000111241912 offset=46d2 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019765cae0}
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rcx [2],oop
    - @4: 0
    - @5: reg r9 [18],long
    - @6: reg rcx [2],oop
    - @7: reg r11 [22],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x0000000111241933 offset=46f3 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019765cae0}
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rcx [2],oop
    - @4: 0
    - @5: reg r9 [18],long
    - @6: reg rcx [2],oop
    - @7: reg r11 [22],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x0000000111241941 offset=4701 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x000000011124195a offset=471a bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011124198a offset=474a bits=0):   jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rcx [2],oop
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x00000001112419ab offset=476b bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[448],oop
    - l11: reg rax [0],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111241a19 offset=47d9 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@109 (line 29)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: reg rbx [6],oop
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[640],double
    - @2: reg rbx [6],oop
PcDesc(pc=0x0000000111241a23 offset=47e3 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@109 (line 29)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: reg rbx [6],oop
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[640],double
    - @2: reg rbx [6],oop
PcDesc(pc=0x0000000111241a48 offset=4808 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@109 (line 29)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: reg rbx [6],oop
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[640],double
    - @2: reg rbx [6],oop
PcDesc(pc=0x0000000111241a52 offset=4812 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111241acf offset=488f bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@121 (line 30)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: reg xmm0 [48],double
    - l5: empty
    - l6: empty
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[648],double
    - @2: stack[424],oop
PcDesc(pc=0x0000000111241ad9 offset=4899 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@121 (line 30)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: reg xmm0 [48],double
    - l5: empty
    - l6: empty
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[648],double
    - @2: stack[424],oop
PcDesc(pc=0x0000000111241afe offset=48be bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@121 (line 30)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: reg xmm0 [48],double
    - l5: empty
    - l6: empty
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[648],double
    - @2: stack[424],oop
PcDesc(pc=0x0000000111241b08 offset=48c8 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111241b2a offset=48ea bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@141 (line 33)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111241b43 offset=4903 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@149 (line 34)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111241b5c offset=491c bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@149 (line 34)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111241b7e offset=493e bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@149 (line 34)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111241bae offset=496e bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: reg xmm2 [80],double
    - l5: 0
    - l6: reg xmm1 [64],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111241bb8 offset=4978 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@133 (line 32)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111241be8 offset=49a8 bits=0):   jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: reg xmm1 [64],double
    - l14: 0
    - l15: reg xmm0 [48],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111241c09 offset=49c9 bits=0):   jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
   Locals
    - l0: 0
    - l1: 0
   jdk.incubator.vector.DoubleVector::zero@19 (line 437)
   Locals
    - l0: empty
    - l1: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: reg xmm1 [64],double
    - l14: 0
    - l15: reg xmm0 [48],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111241c2a offset=49ea bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019762aea0}
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: reg xmm1 [64],double
    - l14: 0
    - l15: reg xmm0 [48],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111241c4b offset=4a0b bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019762aea0}
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: reg xmm1 [64],double
    - l14: 0
    - l15: reg xmm0 [48],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111241c59 offset=4a19 bits=0):   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111241c89 offset=4a49 bits=0):   jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: reg rbx [6],oop
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111241caa offset=4a6a bits=0):   jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
   Locals
    - l0: 0
    - l1: 0
   jdk.incubator.vector.DoubleVector::zero@19 (line 437)
   Locals
    - l0: empty
    - l1: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: reg rbx [6],oop
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111241ccb offset=4a8b bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019762aea0}
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: reg rbx [6],oop
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111241cec offset=4aac bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019762aea0}
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: reg rbx [6],oop
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111241cfa offset=4aba bits=0):   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[512],oop
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111241d2a offset=4aea bits=0):   jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x0000000111241d4b offset=4b0b bits=0):   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
   Locals
    - l0: reg rax [0],int
    - l1: 4
    - l2: reg rbx [6],int
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x0000000111241d6c offset=4b2c bits=0):   java.util.Objects::checkIndex@-1 (line 359)
   Locals
    - l0: reg rax [0],int
    - l1: reg rdi [14],int
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x0000000111241d8d offset=4b4d bits=0):   jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
   Locals
    - l0: reg rax [0],int
    - l1: reg rdi [14],int
    - l2: NULL
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x0000000111241dae offset=4b6e bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x0000000111241dcf offset=4b8f bits=0):   jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: empty
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x0000000111241df0 offset=4bb0 bits=0):   jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x0000000197653a38}
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x0000000111241e11 offset=4bd1 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x0000000197653a38}
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x0000000111241e32 offset=4bf2 bits=0):   jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x0000000111241e53 offset=4c13 bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x0000000111241e74 offset=4c34 bits=0):   jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
   Locals
    - l0: empty
    - l1: reg rax [0],int
   jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x0000000111241e95 offset=4c55 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019765cae0}
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
    - @4: 0
    - @5: reg rsi [12],long
    - @6: reg rdx [4],oop
    - @7: reg rax [0],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x0000000111241eb6 offset=4c76 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019765cae0}
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
    - @4: 0
    - @5: reg rsi [12],long
    - @6: reg rdx [4],oop
    - @7: reg rax [0],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x0000000111241ec4 offset=4c84 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x0000000111241edd offset=4c9d bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111241f0d offset=4ccd bits=0):   jdk.incubator.vector.DoubleVector::sub@-1 (line 1138)
   Locals
    - l0: reg rdi [14],oop
    - l1: 0
    - l2: stack[664],double
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x0000000111241f2e offset=4cee bits=0):   jdk.incubator.vector.DoubleVector::lanewise@-1 (line 714)
   Locals
    - l0: reg rdi [14],oop
    - l1: a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x0000000197665dd8}
    - l2: 0
    - l3: stack[664],double
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x0000000111241f4f offset=4d0f bits=0):   jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: stack[416],oop
    - l2: stack[508]
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[528],oop
PcDesc(pc=0x0000000111241f59 offset=4d19 bits=0):   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[528],oop
PcDesc(pc=0x0000000111241f89 offset=4d49 bits=0):   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
   Locals
    - l0: stack[508]
    - l1: 4
    - l2: reg rsi [12],int
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: reg rcx [2],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[528],oop
PcDesc(pc=0x0000000111241faa offset=4d6a bits=0):   java.util.Objects::checkIndex@-1 (line 359)
   Locals
    - l0: reg rbx [6],int
    - l1: reg rdi [14],int
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: reg rcx [2],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[528],oop
PcDesc(pc=0x0000000111241fcb offset=4d8b bits=0):   jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
   Locals
    - l0: reg rbx [6],int
    - l1: reg rdi [14],int
    - l2: NULL
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: reg rcx [2],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[528],oop
PcDesc(pc=0x0000000111241fec offset=4dac bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg rbx [6],int
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[528],oop
PcDesc(pc=0x000000011124200d offset=4dcd bits=0):   jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: empty
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg rbx [6],int
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[528],oop
PcDesc(pc=0x000000011124202e offset=4dee bits=0):   jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x0000000197653a38}
    - l1: reg rcx [2],oop
    - l2: reg rbx [6],int
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
PcDesc(pc=0x000000011124204f offset=4e0f bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x0000000197653a38}
    - l1: reg rcx [2],oop
    - l2: reg rbx [6],int
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
PcDesc(pc=0x0000000111242070 offset=4e30 bits=0):   jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg rbx [6],int
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
PcDesc(pc=0x0000000111242091 offset=4e51 bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg rbx [6],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
PcDesc(pc=0x00000001112420b2 offset=4e72 bits=0):   jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
   Locals
    - l0: empty
    - l1: reg rbx [6],int
   jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg rbx [6],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rcx [2],oop
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
PcDesc(pc=0x00000001112420d3 offset=4e93 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019765cae0}
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rcx [2],oop
    - @4: 0
    - @5: reg r9 [18],long
    - @6: reg rcx [2],oop
    - @7: reg rbx [6],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
PcDesc(pc=0x00000001112420f4 offset=4eb4 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019765cae0}
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rcx [2],oop
    - @4: 0
    - @5: reg r9 [18],long
    - @6: reg rcx [2],oop
    - @7: reg rbx [6],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
PcDesc(pc=0x0000000111242102 offset=4ec2 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
PcDesc(pc=0x000000011124211b offset=4edb bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011124214b offset=4f0b bits=0):   jdk.incubator.vector.DoubleVector::sub@-1 (line 1138)
   Locals
    - l0: reg rdi [14],oop
    - l1: 0
    - l2: stack[672],double
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
PcDesc(pc=0x000000011124216c offset=4f2c bits=0):   jdk.incubator.vector.DoubleVector::lanewise@-1 (line 714)
   Locals
    - l0: reg rdi [14],oop
    - l1: a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x0000000197665dd8}
    - l2: 0
    - l3: stack[672],double
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
PcDesc(pc=0x0000000111242176 offset=4f36 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x00000001112421a6 offset=4f66 bits=0):   jdk.incubator.vector.DoubleVector::mul@-1 (line 1187)
   Locals
    - l0: reg rax [0],oop
    - l1: stack[552],oop
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
PcDesc(pc=0x00000001112421b0 offset=4f70 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x00000001112421e0 offset=4fa0 bits=0):   jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
   Locals
    - l0: reg rbx [6],oop
    - l1: reg rax [0],oop
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
PcDesc(pc=0x00000001112421ea offset=4faa bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011124221a offset=4fda bits=0):   jdk.incubator.vector.DoubleVector::mul@-1 (line 1187)
   Locals
    - l0: reg r8 [16],oop
    - l1: reg r8 [16],oop
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: reg rax [0],oop
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[536],oop
PcDesc(pc=0x0000000111242224 offset=4fe4 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111242254 offset=5014 bits=0):   jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
   Locals
    - l0: reg rcx [2],oop
    - l1: reg rax [0],oop
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[584],oop
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111242275 offset=5035 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rdx [4],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[584],oop
    - l21: reg rax [0],oop
    - l22: empty
PcDesc(pc=0x00000001112422e3 offset=50a3 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@279 (line 52)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: empty
    - l17: empty
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: 0
    - @2: stack[408],oop
PcDesc(pc=0x00000001112422ed offset=50ad bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@279 (line 52)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: empty
    - l17: empty
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: 0
    - @2: stack[408],oop
PcDesc(pc=0x0000000111242312 offset=50d2 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@279 (line 52)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: empty
    - l17: empty
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: 0
    - @2: stack[408],oop
PcDesc(pc=0x0000000111242380 offset=5140 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@292 (line 53)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: reg xmm0 [48],double
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: 0
    - @2: stack[424],oop
PcDesc(pc=0x000000011124238a offset=514a bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@292 (line 53)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: reg xmm0 [48],double
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: 0
    - @2: stack[424],oop
PcDesc(pc=0x00000001112423af offset=516f bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@292 (line 53)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: reg xmm0 [48],double
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: 0
    - @2: stack[424],oop
PcDesc(pc=0x00000001112423c2 offset=5182 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@313 (line 56)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x00000001112423db offset=519b bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x00000001112423f4 offset=51b4 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111242416 offset=51d6 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111242446 offset=5206 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: reg xmm3 [96],double
    - l18: 0
    - l19: reg xmm1 [64],double
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111242450 offset=5210 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@360 (line 60)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011124247f offset=523f bits=1):   jdk.internal.util.Preconditions::checkIndex@15 (line 266)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: stack[432],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x0000000111242498 offset=5258 bits=1):   jdk.internal.util.Preconditions::checkIndex@15 (line 266)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: stack[416],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
PcDesc(pc=0x00000001112424b1 offset=5271 bits=1):   jdk.internal.util.Preconditions::checkIndex@15 (line 266)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: stack[432],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x00000001112424ca offset=528a bits=1):   jdk.internal.util.Preconditions::checkIndex@15 (line 266)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: stack[416],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x00000001112424f2 offset=52b2 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@7 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x00000001112424ff offset=52bf bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@7 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111242769 offset=5529 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 167 OopMaps

ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [320]=Oop [304]=Oop [312]=Oop [328]=Oop [296]=Oop } pc offsets: 1316 
ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [344]=Oop } pc offsets: 2308 
ImmutableOopMap {[432]=Oop [440]=Oop [408]=Oop [424]=Oop [416]=Oop } pc offsets: 4212 
ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop [416]=Oop } pc offsets: 4684 
ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop [448]=Oop [416]=Oop } pc offsets: 6124 
ImmutableOopMap {[432]=Oop [440]=Oop [448]=Oop [416]=Oop } pc offsets: 6596 
ImmutableOopMap {[432]=Oop [440]=Oop [448]=Oop [416]=Oop rax=Oop } pc offsets: 6655 
ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop [408]=Oop [424]=Oop } pc offsets: 6956 7188 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop rdx=Oop rcx=Oop } pc offsets: 7341 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [416]=Oop [432]=Oop [496]=Oop [464]=Oop [472]=Oop [480]=Oop [488]=Oop } pc offsets: 8332 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [416]=Oop [432]=Oop [512]=Oop } pc offsets: 9324 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [528]=Oop [536]=Oop } pc offsets: 11196 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop [544]=Oop [416]=Oop } pc offsets: 11724 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop [416]=Oop } pc offsets: 11916 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop [416]=Oop [552]=Oop } pc offsets: 13348 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [536]=Oop [528]=Oop [560]=Oop [552]=Oop } pc offsets: 13876 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [536]=Oop [528]=Oop [552]=Oop } pc offsets: 14068 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [536]=Oop [528]=Oop [552]=Oop [568]=Oop } pc offsets: 14324 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [536]=Oop [552]=Oop [568]=Oop [576]=Oop } pc offsets: 14588 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [536]=Oop [576]=Oop [584]=Oop } pc offsets: 14844 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [584]=Oop } pc offsets: 15092 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [584]=Oop rax=Oop } pc offsets: 15149 
ImmutableOopMap {[440]=Oop [424]=Oop [432]=Oop [416]=Oop } pc offsets: 15412 
ImmutableOopMap {[440]=Oop [432]=Oop [416]=Oop } pc offsets: 15628 
ImmutableOopMap {[440]=Oop rcx=Oop rdx=Oop } pc offsets: 15803 
ImmutableOopMap {[408]=Oop [424]=Oop [440]=Oop [432]=Oop [536]=Oop [416]=Oop [528]=Oop } pc offsets: 16020 
ImmutableOopMap {[416]=Oop [432]=Oop [440]=Oop [424]=Oop [408]=Oop [536]=Oop [552]=Oop [528]=Oop } pc offsets: 16092 
ImmutableOopMap {[424]=Oop [440]=Oop [432]=Oop [416]=Oop [408]=Oop } pc offsets: 16172 
ImmutableOopMap {[432]=Oop [440]=Oop [448]=Oop [424]=Oop [416]=Oop } pc offsets: 16236 
ImmutableOopMap {[592]=Oop } pc offsets: 16388 
ImmutableOopMap {rsi=Oop rdx=Oop rcx=Oop } pc offsets: 16730 16740 16765 16813 16846 
ImmutableOopMap {[288]=Oop [280]=Oop [272]=Oop } pc offsets: 16879 
ImmutableOopMap {[288]=Oop [280]=Oop [272]=Oop rbx=Oop } pc offsets: 16912 
ImmutableOopMap {[288]=Oop [280]=Oop [272]=Oop rbx=Oop rax=Oop } pc offsets: 16945 16978 
ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [320]=Oop [304]=Oop [312]=Oop [328]=Oop [296]=Oop } pc offsets: 16992 
ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [320]=Oop [304]=Oop [312]=Oop [328]=Oop [296]=Oop rbx=Oop } pc offsets: 17040 17073 
ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [320]=Oop [312]=Oop [328]=Oop [296]=Oop rbx=Oop rax=Oop } pc offsets: 17106 
ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [320]=Oop [312]=Oop [328]=Oop [296]=Oop rbx=Oop } pc offsets: 17139 
ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [344]=Oop } pc offsets: 17153 
ImmutableOopMap {rdx=Oop [424]=Oop [408]=Oop [440]=Oop [416]=Oop } pc offsets: 17201 17211 17259 17292 17325 
ImmutableOopMap {rdx=Oop [424]=Oop [408]=Oop [440]=Oop [416]=Oop r8=Oop } pc offsets: 17358 
ImmutableOopMap {rdx=Oop [424]=Oop [408]=Oop [440]=Oop [416]=Oop } pc offsets: 17391 
ImmutableOopMap {[440]=Oop [424]=Oop [416]=Oop [408]=Oop rdx=Oop r8=Oop } pc offsets: 17424 17457 
ImmutableOopMap {[440]=Oop [424]=Oop [416]=Oop [408]=Oop rdx=Oop } pc offsets: 17490 
ImmutableOopMap {[440]=Oop [424]=Oop [416]=Oop [408]=Oop rdx=Oop r8=Oop } pc offsets: 17523 
ImmutableOopMap {[440]=Oop [424]=Oop [416]=Oop [408]=Oop rdx=Oop } pc offsets: 17556 
ImmutableOopMap {[440]=Oop [424]=Oop [408]=Oop rdx=Oop [416]=Oop r9=Oop } pc offsets: 17589 
ImmutableOopMap {[440]=Oop [424]=Oop [408]=Oop rdx=Oop [416]=Oop } pc offsets: 17622 
ImmutableOopMap {[432]=Oop [440]=Oop [408]=Oop [424]=Oop [416]=Oop } pc offsets: 17636 
ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop rbx=Oop [416]=Oop } pc offsets: 17661 17709 
ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop [416]=Oop rax=Oop [448]=Oop } pc offsets: 17742 
ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rax=Oop [448]=Oop rcx=Oop } pc offsets: 17752 17800 17833 17866 
ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rax=Oop [448]=Oop rcx=Oop rsi=Oop } pc offsets: 17899 
ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rax=Oop [448]=Oop rcx=Oop } pc offsets: 17932 
ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop [448]=Oop rsi=Oop } pc offsets: 17965 17998 
ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop [448]=Oop } pc offsets: 18031 
ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop [448]=Oop rsi=Oop } pc offsets: 18064 
ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop [448]=Oop } pc offsets: 18097 
ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop [448]=Oop rdx=Oop } pc offsets: 18130 
ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop [448]=Oop } pc offsets: 18163 
ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop [448]=Oop [416]=Oop } pc offsets: 18177 
ImmutableOopMap {[432]=Oop [440]=Oop [448]=Oop [416]=Oop rcx=Oop rsi=Oop } pc offsets: 18202 18250 
ImmutableOopMap {[432]=Oop [440]=Oop [448]=Oop [416]=Oop rax=Oop } pc offsets: 18283 
ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop rbx=Oop [424]=Oop } pc offsets: 18393 
ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop rbx=Oop [424]=Oop rdx=Oop } pc offsets: 18403 18440 18450 
ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop [408]=Oop [424]=Oop } pc offsets: 18575 
ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop [408]=Oop [424]=Oop rdx=Oop } pc offsets: 18585 18622 
ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop [408]=Oop rdx=Oop rsi=Oop } pc offsets: 18632 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop rdx=Oop rcx=Oop } pc offsets: 18666 18691 18716 18750 18798 18808 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop } pc offsets: 18856 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop rax=Oop } pc offsets: 18889 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop rax=Oop r11=Oop } pc offsets: 18922 18955 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [416]=Oop [432]=Oop [496]=Oop [464]=Oop [472]=Oop [480]=Oop [488]=Oop } pc offsets: 18969 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [416]=Oop [432]=Oop [496]=Oop [464]=Oop [472]=Oop [480]=Oop [488]=Oop rbx=Oop } pc offsets: 19017 19050 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [416]=Oop [432]=Oop [496]=Oop [464]=Oop [480]=Oop [488]=Oop rbx=Oop r11=Oop } pc offsets: 19083 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [416]=Oop [432]=Oop [496]=Oop [464]=Oop [480]=Oop [488]=Oop rbx=Oop } pc offsets: 19116 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [416]=Oop [432]=Oop [512]=Oop } pc offsets: 19130 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [528]=Oop rdx=Oop [416]=Oop [536]=Oop } pc offsets: 19178 19211 19244 19277 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [528]=Oop rdx=Oop [416]=Oop [536]=Oop rsi=Oop } pc offsets: 19310 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [528]=Oop rdx=Oop [416]=Oop [536]=Oop } pc offsets: 19343 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [536]=Oop [416]=Oop rdx=Oop [528]=Oop rsi=Oop } pc offsets: 19376 19409 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [536]=Oop [416]=Oop rdx=Oop [528]=Oop } pc offsets: 19442 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [536]=Oop [416]=Oop rdx=Oop [528]=Oop rsi=Oop } pc offsets: 19475 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [536]=Oop [416]=Oop rdx=Oop [528]=Oop } pc offsets: 19508 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [536]=Oop rdx=Oop [528]=Oop [416]=Oop r8=Oop } pc offsets: 19541 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [536]=Oop rdx=Oop [528]=Oop [416]=Oop } pc offsets: 19574 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [528]=Oop [536]=Oop } pc offsets: 19588 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop rdi=Oop [416]=Oop } pc offsets: 19613 19661 19694 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop [416]=Oop rax=Oop [552]=Oop } pc offsets: 19727 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop rax=Oop [552]=Oop rcx=Oop } pc offsets: 19737 19785 19818 19851 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop rax=Oop [552]=Oop rcx=Oop rsi=Oop } pc offsets: 19884 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop rax=Oop [552]=Oop rcx=Oop } pc offsets: 19917 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop [552]=Oop rcx=Oop rsi=Oop } pc offsets: 19950 19983 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop [552]=Oop rcx=Oop } pc offsets: 20016 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop [552]=Oop rcx=Oop rsi=Oop } pc offsets: 20049 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop [552]=Oop rcx=Oop } pc offsets: 20082 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop [552]=Oop rcx=Oop rdx=Oop } pc offsets: 20115 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop [552]=Oop rcx=Oop } pc offsets: 20148 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [528]=Oop [536]=Oop [416]=Oop [552]=Oop } pc offsets: 20162 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop rdi=Oop [528]=Oop [536]=Oop [552]=Oop } pc offsets: 20187 20235 20268 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [536]=Oop [528]=Oop [552]=Oop rax=Oop } pc offsets: 20278 20326 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [536]=Oop [552]=Oop [568]=Oop rax=Oop rbx=Oop } pc offsets: 20336 20384 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [536]=Oop [568]=Oop [576]=Oop rax=Oop r8=Oop [552]=Oop } pc offsets: 20394 20442 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [576]=Oop [584]=Oop rax=Oop rcx=Oop } pc offsets: 20452 20500 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [584]=Oop rax=Oop } pc offsets: 20533 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop } pc offsets: 20643 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop rdx=Oop } pc offsets: 20653 20690 
ImmutableOopMap {[440]=Oop [424]=Oop [432]=Oop [416]=Oop } pc offsets: 20800 
ImmutableOopMap {[440]=Oop [424]=Oop [432]=Oop [416]=Oop rdx=Oop } pc offsets: 20810 20847 
ImmutableOopMap {[440]=Oop rcx=Oop rdx=Oop } pc offsets: 20866 20891 20916 20950 20998 
ImmutableOopMap {rax=Oop } pc offsets: 21008 
ImmutableOopMap {[408]=Oop [424]=Oop [440]=Oop [432]=Oop [536]=Oop [416]=Oop [528]=Oop rax=Oop } pc offsets: 21055 
ImmutableOopMap {[416]=Oop [432]=Oop [440]=Oop [424]=Oop [408]=Oop [536]=Oop [552]=Oop [528]=Oop rax=Oop } pc offsets: 21080 
ImmutableOopMap {[424]=Oop [440]=Oop [432]=Oop [416]=Oop [408]=Oop rax=Oop } pc offsets: 21105 
ImmutableOopMap {[432]=Oop [440]=Oop [448]=Oop [424]=Oop [416]=Oop rax=Oop } pc offsets: 21130 
ImmutableOopMap {} pc offsets: 21170 21183 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x000000011123d29c offset=5c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@0 (line 15)
ScopeDesc(pc=0x000000011123d2a0 offset=60):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@1 (line 15)
ScopeDesc(pc=0x000000011123d2a4 offset=64):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@3 (line 15)
ScopeDesc(pc=0x000000011123d2dd offset=9d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@4 (line 15)
ScopeDesc(pc=0x000000011123d3ec offset=1ac):
   jdk.incubator.vector.VectorIntrinsics::roundDown@5 (line 106)
ScopeDesc(pc=0x000000011123d3ec offset=1ac):
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
ScopeDesc(pc=0x000000011123d3ec offset=1ac):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
ScopeDesc(pc=0x000000011123d725 offset=4e5):
   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
ScopeDesc(pc=0x000000011123d725 offset=4e5):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
ScopeDesc(pc=0x000000011123d764 offset=524):
   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011123d764 offset=524):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[600],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011123d844 offset=604):
   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
ScopeDesc(pc=0x000000011123d844 offset=604):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
ScopeDesc(pc=0x000000011123db36 offset=8f6):
   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
ScopeDesc(pc=0x000000011123db36 offset=8f6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
ScopeDesc(pc=0x000000011123db44 offset=904):
   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011123db44 offset=904):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[600],double
    - l10: stack[344],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011123dc24 offset=9e4):
   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
ScopeDesc(pc=0x000000011123dc24 offset=9e4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
ScopeDesc(pc=0x000000011123dc5b offset=a1b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x000000011123dcba offset=a7a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@59 (line 24)
ScopeDesc(pc=0x000000011123dcf4 offset=ab4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@60 (line 24)
ScopeDesc(pc=0x000000011123ddcf offset=b8f):
   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
ScopeDesc(pc=0x000000011123ddcf offset=b8f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x000000011123dec1 offset=c81):
   jdk.internal.util.Preconditions::checkIndex@1 (line 265)
ScopeDesc(pc=0x000000011123dec1 offset=c81):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011123dec1 offset=c81):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011123dec1 offset=c81):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011123dec1 offset=c81):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x000000011123defa offset=cba):
   jdk.internal.util.Preconditions::checkIndex@6 (line 265)
ScopeDesc(pc=0x000000011123defa offset=cba):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011123defa offset=cba):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011123defa offset=cba):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011123defa offset=cba):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x000000011123df93 offset=d53):
   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
ScopeDesc(pc=0x000000011123df93 offset=d53):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
ScopeDesc(pc=0x000000011123df93 offset=d53):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
ScopeDesc(pc=0x000000011123df93 offset=d53):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x000000011123e29b offset=105b):
   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
ScopeDesc(pc=0x000000011123e29b offset=105b):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011123e29b offset=105b):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011123e29b offset=105b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x000000011123e2b4 offset=1074):
   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011123e2b4 offset=1074):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011123e2b4 offset=1074):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011123e2b4 offset=1074):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x000000011123e394 offset=1154):
   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
ScopeDesc(pc=0x000000011123e394 offset=1154):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011123e394 offset=1154):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011123e394 offset=1154):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x000000011123e39f offset=115f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x000000011123e479 offset=1239):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011123e479 offset=1239):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x000000011123e48c offset=124c):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011123e48c offset=124c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011123e570 offset=1330):
   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
ScopeDesc(pc=0x000000011123e570 offset=1330):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x000000011123e66b offset=142b):
   jdk.internal.util.Preconditions::checkIndex@1 (line 265)
ScopeDesc(pc=0x000000011123e66b offset=142b):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011123e66b offset=142b):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011123e66b offset=142b):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011123e66b offset=142b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x000000011123e6a4 offset=1464):
   jdk.internal.util.Preconditions::checkIndex@6 (line 265)
ScopeDesc(pc=0x000000011123e6a4 offset=1464):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011123e6a4 offset=1464):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011123e6a4 offset=1464):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011123e6a4 offset=1464):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x000000011123e73a offset=14fa):
   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
ScopeDesc(pc=0x000000011123e73a offset=14fa):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
ScopeDesc(pc=0x000000011123e73a offset=14fa):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
ScopeDesc(pc=0x000000011123e73a offset=14fa):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x000000011123ea14 offset=17d4):
   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
ScopeDesc(pc=0x000000011123ea14 offset=17d4):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011123ea14 offset=17d4):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011123ea14 offset=17d4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x000000011123ea2c offset=17ec):
   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011123ea2c offset=17ec):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011123ea2c offset=17ec):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011123ea2c offset=17ec):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x000000011123eb0c offset=18cc):
   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
ScopeDesc(pc=0x000000011123eb0c offset=18cc):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011123eb0c offset=18cc):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011123eb0c offset=18cc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x000000011123eb17 offset=18d7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x000000011123ec04 offset=19c4):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011123ec04 offset=19c4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011123ec38 offset=19f8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
ScopeDesc(pc=0x000000011123ec3f offset=19ff):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[448],oop
    - l11: reg rax [0],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011123ec83 offset=1a43):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
ScopeDesc(pc=0x000000011123ecbf offset=1a7f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@109 (line 29)
ScopeDesc(pc=0x000000011123ed55 offset=1b15):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
ScopeDesc(pc=0x000000011123ed6c offset=1b2c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[640],double
ScopeDesc(pc=0x000000011123ed8f offset=1b4f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@121 (line 30)
ScopeDesc(pc=0x000000011123ee30 offset=1bf0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
ScopeDesc(pc=0x000000011123ee54 offset=1c14):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: empty
    - l6: empty
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[648],double
ScopeDesc(pc=0x000000011123ee83 offset=1c43):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@130 (line 32)
ScopeDesc(pc=0x000000011123ee9b offset=1c5b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@141 (line 33)
ScopeDesc(pc=0x000000011123eeb2 offset=1c72):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@149 (line 34)
ScopeDesc(pc=0x000000011123eee6 offset=1ca6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)
ScopeDesc(pc=0x000000011123eeed offset=1cad):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: reg xmm2 [80],double
    - l5: 0
    - l6: reg xmm1 [64],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011123ef08 offset=1cc8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)
ScopeDesc(pc=0x000000011123ef0b offset=1ccb):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@133 (line 32)
ScopeDesc(pc=0x000000011123ef4b offset=1d0b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@134 (line 32)
ScopeDesc(pc=0x000000011123f298 offset=2058):
   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
ScopeDesc(pc=0x000000011123f298 offset=2058):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
ScopeDesc(pc=0x000000011123f2cc offset=208c):
   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011123f2cc offset=208c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011123f3ac offset=216c):
   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
ScopeDesc(pc=0x000000011123f3ac offset=216c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
ScopeDesc(pc=0x000000011123f69e offset=245e):
   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
ScopeDesc(pc=0x000000011123f69e offset=245e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
ScopeDesc(pc=0x000000011123f6ac offset=246c):
   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011123f6ac offset=246c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[512],oop
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011123f78e offset=254e):
   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
ScopeDesc(pc=0x000000011123f78e offset=254e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
ScopeDesc(pc=0x000000011123f79b offset=255b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011123f7ee offset=25ae):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@204 (line 46)
ScopeDesc(pc=0x000000011123f827 offset=25e7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@205 (line 46)
ScopeDesc(pc=0x000000011123f9f9 offset=27b9):
   jdk.internal.util.Preconditions::checkIndex@1 (line 265)
ScopeDesc(pc=0x000000011123f9f9 offset=27b9):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011123f9f9 offset=27b9):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011123f9f9 offset=27b9):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011123f9f9 offset=27b9):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011123fa31 offset=27f1):
   jdk.internal.util.Preconditions::checkIndex@6 (line 265)
ScopeDesc(pc=0x000000011123fa31 offset=27f1):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011123fa31 offset=27f1):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011123fa31 offset=27f1):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011123fa31 offset=27f1):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011123facc offset=288c):
   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
ScopeDesc(pc=0x000000011123facc offset=288c):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
ScopeDesc(pc=0x000000011123facc offset=288c):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
ScopeDesc(pc=0x000000011123facc offset=288c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011123fde6 offset=2ba6):
   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
ScopeDesc(pc=0x000000011123fde6 offset=2ba6):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011123fde6 offset=2ba6):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011123fde6 offset=2ba6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011123fdfc offset=2bbc):
   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011123fdfc offset=2bbc):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011123fdfc offset=2bbc):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011123fdfc offset=2bbc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x000000011123fedc offset=2c9c):
   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
ScopeDesc(pc=0x000000011123fedc offset=2c9c):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011123fedc offset=2c9c):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011123fedc offset=2c9c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011123fedf offset=2c9f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
ScopeDesc(pc=0x000000011123fff5 offset=2db5):
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
ScopeDesc(pc=0x000000011123fff5 offset=2db5):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x000000011123fff5 offset=2db5):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
ScopeDesc(pc=0x000000011124000c offset=2dcc):
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: stack[544],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x0000000197665dd8}
ScopeDesc(pc=0x000000011124000c offset=2dcc):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011124000c offset=2dcc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x00000001112400b6 offset=2e76):
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
ScopeDesc(pc=0x00000001112400b6 offset=2e76):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x00000001112400b6 offset=2e76):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
ScopeDesc(pc=0x00000001112400cc offset=2e8c):
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00000001112400cc offset=2e8c):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001112400cc offset=2e8c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x00000001112401b0 offset=2f70):
   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
ScopeDesc(pc=0x00000001112401b0 offset=2f70):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x00000001112402a9 offset=3069):
   jdk.internal.util.Preconditions::checkIndex@1 (line 265)
ScopeDesc(pc=0x00000001112402a9 offset=3069):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x00000001112402a9 offset=3069):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x00000001112402a9 offset=3069):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x00000001112402a9 offset=3069):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x00000001112402e1 offset=30a1):
   jdk.internal.util.Preconditions::checkIndex@6 (line 265)
ScopeDesc(pc=0x00000001112402e1 offset=30a1):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x00000001112402e1 offset=30a1):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x00000001112402e1 offset=30a1):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x00000001112402e1 offset=30a1):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x0000000111240377 offset=3137):
   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
ScopeDesc(pc=0x0000000111240377 offset=3137):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
ScopeDesc(pc=0x0000000111240377 offset=3137):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
ScopeDesc(pc=0x0000000111240377 offset=3137):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x0000000111240650 offset=3410):
   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
ScopeDesc(pc=0x0000000111240650 offset=3410):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x0000000111240650 offset=3410):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x0000000111240650 offset=3410):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x0000000111240664 offset=3424):
   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111240664 offset=3424):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000000111240664 offset=3424):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111240664 offset=3424):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
ScopeDesc(pc=0x0000000111240744 offset=3504):
   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
ScopeDesc(pc=0x0000000111240744 offset=3504):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x0000000111240744 offset=3504):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x0000000111240744 offset=3504):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x0000000111240747 offset=3507):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
ScopeDesc(pc=0x000000011124085d offset=361d):
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
ScopeDesc(pc=0x000000011124085d offset=361d):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x000000011124085d offset=361d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
ScopeDesc(pc=0x0000000111240874 offset=3634):
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: stack[560],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x0000000197665dd8}
ScopeDesc(pc=0x0000000111240874 offset=3634):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000000111240874 offset=3634):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
ScopeDesc(pc=0x000000011124091e offset=36de):
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
ScopeDesc(pc=0x000000011124091e offset=36de):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x000000011124091e offset=36de):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
ScopeDesc(pc=0x0000000111240934 offset=36f4):
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111240934 offset=36f4):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000000111240934 offset=36f4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
ScopeDesc(pc=0x0000000111240937 offset=36f7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
ScopeDesc(pc=0x0000000111240a1c offset=37dc):
   jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
ScopeDesc(pc=0x0000000111240a1c offset=37dc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
ScopeDesc(pc=0x0000000111240a34 offset=37f4):
   jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000000111240a34 offset=37f4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
ScopeDesc(pc=0x0000000111240a3f offset=37ff):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
ScopeDesc(pc=0x0000000111240b1f offset=38df):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x0000000111240b1f offset=38df):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
ScopeDesc(pc=0x0000000111240b3c offset=38fc):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000000111240b3c offset=38fc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
ScopeDesc(pc=0x0000000111240b47 offset=3907):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
ScopeDesc(pc=0x0000000111240c22 offset=39e2):
   jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
ScopeDesc(pc=0x0000000111240c22 offset=39e2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
ScopeDesc(pc=0x0000000111240c3c offset=39fc):
   jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000000111240c3c offset=39fc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[584],oop
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[536],oop
ScopeDesc(pc=0x0000000111240c47 offset=3a07):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x0000000111240d25 offset=3ae5):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x0000000111240d25 offset=3ae5):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x0000000111240d34 offset=3af4):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000000111240d34 offset=3af4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[584],oop
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111240d66 offset=3b26):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)
ScopeDesc(pc=0x0000000111240d6d offset=3b2d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rdx [4],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[584],oop
    - l21: reg rax [0],oop
    - l22: empty
ScopeDesc(pc=0x0000000111240d9b offset=3b5b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)
ScopeDesc(pc=0x0000000111240dc7 offset=3b87):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@279 (line 52)
ScopeDesc(pc=0x0000000111240e64 offset=3c24):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@282 (line 52)
ScopeDesc(pc=0x0000000111240e74 offset=3c34):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@282 (line 52)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: empty
    - l17: empty
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: 0
ScopeDesc(pc=0x0000000111240e97 offset=3c57):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@292 (line 53)
ScopeDesc(pc=0x0000000111240f34 offset=3cf4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x0000000111240f4c offset=3d0c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: stack[680],double
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: 0
ScopeDesc(pc=0x0000000111240f80 offset=3d40):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@301 (line 55)
ScopeDesc(pc=0x0000000111240f92 offset=3d52):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@313 (line 56)
ScopeDesc(pc=0x0000000111240fb9 offset=3d79):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
ScopeDesc(pc=0x0000000111240ff4 offset=3db4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)
ScopeDesc(pc=0x0000000111240ffb offset=3dbb):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: reg xmm3 [96],double
    - l18: 0
    - l19: reg xmm1 [64],double
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111241016 offset=3dd6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)
ScopeDesc(pc=0x000000011124104e offset=3e0e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@305 (line 55)
ScopeDesc(pc=0x000000011124105f offset=3e1f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@360 (line 60)
ScopeDesc(pc=0x000000011124107a offset=3e3a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@374 (line 61)
ScopeDesc(pc=0x0000000111241090 offset=3e50):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@377 (line 62)
ScopeDesc(pc=0x00000001112410ce offset=3e8e):
   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
ScopeDesc(pc=0x00000001112410ce offset=3e8e):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x00000001112410ce offset=3e8e):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x00000001112410ce offset=3e8e):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x00000001112410ce offset=3e8e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x00000001112410d4 offset=3e94):
   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001112410d4 offset=3e94):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00000001112410d4 offset=3e94):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001112410d4 offset=3e94):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: stack[432],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00000001112410d4 offset=3e94):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x00000001112410dc offset=3e9c):
   jdk.internal.util.Preconditions::checkIndex@15 (line 266)
ScopeDesc(pc=0x00000001112410dc offset=3e9c):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x00000001112410dc offset=3e9c):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x00000001112410dc offset=3e9c):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x00000001112410dc offset=3e9c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x0000000111241109 offset=3ec9):
   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
ScopeDesc(pc=0x0000000111241109 offset=3ec9):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x0000000111241109 offset=3ec9):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x0000000111241109 offset=3ec9):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x0000000111241109 offset=3ec9):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x000000011124111c offset=3edc):
   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011124111c offset=3edc):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011124111c offset=3edc):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011124111c offset=3edc):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: stack[416],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011124111c offset=3edc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
ScopeDesc(pc=0x0000000111241124 offset=3ee4):
   jdk.internal.util.Preconditions::checkIndex@15 (line 266)
ScopeDesc(pc=0x0000000111241124 offset=3ee4):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x0000000111241124 offset=3ee4):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x0000000111241124 offset=3ee4):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x0000000111241124 offset=3ee4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x0000000111241163 offset=3f23):
   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
ScopeDesc(pc=0x0000000111241163 offset=3f23):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x0000000111241163 offset=3f23):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x0000000111241163 offset=3f23):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x0000000111241163 offset=3f23):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x000000011124116c offset=3f2c):
   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011124116c offset=3f2c):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011124116c offset=3f2c):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011124116c offset=3f2c):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: stack[432],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011124116c offset=3f2c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x0000000111241174 offset=3f34):
   jdk.internal.util.Preconditions::checkIndex@15 (line 266)
ScopeDesc(pc=0x0000000111241174 offset=3f34):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x0000000111241174 offset=3f34):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x0000000111241174 offset=3f34):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x0000000111241174 offset=3f34):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x000000011124119e offset=3f5e):
   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
ScopeDesc(pc=0x000000011124119e offset=3f5e):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011124119e offset=3f5e):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011124119e offset=3f5e):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011124119e offset=3f5e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x00000001112411ac offset=3f6c):
   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001112411ac offset=3f6c):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00000001112411ac offset=3f6c):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001112411ac offset=3f6c):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: stack[416],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00000001112411ac offset=3f6c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x00000001112411b4 offset=3f74):
   jdk.internal.util.Preconditions::checkIndex@15 (line 266)
ScopeDesc(pc=0x00000001112411b4 offset=3f74):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x00000001112411b4 offset=3f74):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x00000001112411b4 offset=3f74):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x00000001112411b4 offset=3f74):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x000000011124120f offset=3fcf):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@7 (line 15)
ScopeDesc(pc=0x0000000111241231 offset=3ff1):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@13 (line 15)
ScopeDesc(pc=0x0000000111241244 offset=4004):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@13 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[592],oop
ScopeDesc(pc=0x0000000111241251 offset=4011):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@16 (line 15)
ScopeDesc(pc=0x000000011124139a offset=415a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@-1 (line 15)
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x00000001112413a4 offset=4164):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@1 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x00000001112413bd offset=417d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@3 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x00000001112413ed offset=41ad):
   jdk.incubator.vector.AbstractSpecies::loopBound@-1 (line 203)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: reg r8 [16],int
ScopeDesc(pc=0x00000001112413ed offset=41ad):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011124140e offset=41ce):
   jdk.incubator.vector.VectorIntrinsics::roundDown@-1 (line 106)
   Locals
    - l0: reg r8 [16],int
    - l1: 4
ScopeDesc(pc=0x000000011124140e offset=41ce):
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011124140e offset=41ce):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011124142f offset=41ef):
   jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: empty
ScopeDesc(pc=0x000000011124142f offset=41ef):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111241450 offset=4210):
   jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
   Locals
    - l0: 0
    - l1: 0
ScopeDesc(pc=0x0000000111241450 offset=4210):
   jdk.incubator.vector.DoubleVector::zero@19 (line 437)
   Locals
    - l0: empty
    - l1: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
ScopeDesc(pc=0x0000000111241450 offset=4210):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111241471 offset=4231):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019762aea0}
ScopeDesc(pc=0x0000000111241471 offset=4231):
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
ScopeDesc(pc=0x0000000111241471 offset=4231):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111241492 offset=4252):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019762aea0}
ScopeDesc(pc=0x0000000111241492 offset=4252):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
ScopeDesc(pc=0x0000000111241492 offset=4252):
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
ScopeDesc(pc=0x0000000111241492 offset=4252):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x00000001112414a0 offset=4260):
   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00000001112414a0 offset=4260):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[600],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x00000001112414d0 offset=4290):
   jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: empty
ScopeDesc(pc=0x00000001112414d0 offset=4290):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[600],double
    - l10: reg rbx [6],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x00000001112414f1 offset=42b1):
   jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
   Locals
    - l0: 0
    - l1: 0
ScopeDesc(pc=0x00000001112414f1 offset=42b1):
   jdk.incubator.vector.DoubleVector::zero@19 (line 437)
   Locals
    - l0: empty
    - l1: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
ScopeDesc(pc=0x00000001112414f1 offset=42b1):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[600],double
    - l10: reg rbx [6],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111241512 offset=42d2):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019762aea0}
ScopeDesc(pc=0x0000000111241512 offset=42d2):
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
ScopeDesc(pc=0x0000000111241512 offset=42d2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[600],double
    - l10: reg rbx [6],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111241533 offset=42f3):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019762aea0}
ScopeDesc(pc=0x0000000111241533 offset=42f3):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
ScopeDesc(pc=0x0000000111241533 offset=42f3):
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
ScopeDesc(pc=0x0000000111241533 offset=42f3):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[600],double
    - l10: reg rbx [6],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111241541 offset=4301):
   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000000111241541 offset=4301):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[600],double
    - l10: stack[344],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111241571 offset=4331):
   jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
    - l3: empty
ScopeDesc(pc=0x0000000111241571 offset=4331):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x000000011124157b offset=433b):
   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011124157b offset=433b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x00000001112415ab offset=436b):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
   Locals
    - l0: reg r11 [22],int
    - l1: 4
    - l2: reg r8 [16],int
ScopeDesc(pc=0x00000001112415ab offset=436b):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00000001112415ab offset=436b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x00000001112415cc offset=438c):
   java.util.Objects::checkIndex@-1 (line 359)
   Locals
    - l0: reg r11 [22],int
    - l1: reg r8 [16],int
ScopeDesc(pc=0x00000001112415cc offset=438c):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001112415cc offset=438c):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00000001112415cc offset=438c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x00000001112415ed offset=43ad):
   jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
   Locals
    - l0: reg r11 [22],int
    - l1: reg r8 [16],int
    - l2: NULL
ScopeDesc(pc=0x00000001112415ed offset=43ad):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00000001112415ed offset=43ad):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001112415ed offset=43ad):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00000001112415ed offset=43ad):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x000000011124160e offset=43ce):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
ScopeDesc(pc=0x000000011124160e offset=43ce):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
    - l3: empty
ScopeDesc(pc=0x000000011124160e offset=43ce):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x000000011124162f offset=43ef):
   jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: empty
ScopeDesc(pc=0x000000011124162f offset=43ef):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011124162f offset=43ef):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
    - l3: empty
ScopeDesc(pc=0x000000011124162f offset=43ef):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x0000000111241650 offset=4410):
   jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x0000000197653a38}
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
ScopeDesc(pc=0x0000000111241650 offset=4410):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111241650 offset=4410):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x0000000111241671 offset=4431):
   jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x0000000197653a38}
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
    - l3: empty
ScopeDesc(pc=0x0000000111241671 offset=4431):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000000111241671 offset=4431):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111241671 offset=4431):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x0000000111241692 offset=4452):
   jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
   Locals
    - l0: empty
ScopeDesc(pc=0x0000000111241692 offset=4452):
   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
    - l3: empty
ScopeDesc(pc=0x0000000111241692 offset=4452):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000000111241692 offset=4452):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111241692 offset=4452):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x00000001112416b3 offset=4473):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
   Locals
    - l0: empty
ScopeDesc(pc=0x00000001112416b3 offset=4473):
   jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
ScopeDesc(pc=0x00000001112416b3 offset=4473):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001112416b3 offset=4473):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00000001112416b3 offset=4473):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x00000001112416d4 offset=4494):
   jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
   Locals
    - l0: empty
    - l1: reg r11 [22],int
ScopeDesc(pc=0x00000001112416d4 offset=4494):
   jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
ScopeDesc(pc=0x00000001112416d4 offset=4494):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001112416d4 offset=4494):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00000001112416d4 offset=4494):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x00000001112416f5 offset=44b5):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019765cae0}
ScopeDesc(pc=0x00000001112416f5 offset=44b5):
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
    - @4: 0
    - @5: reg r8 [16],long
    - @6: reg rdx [4],oop
    - @7: reg r11 [22],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
ScopeDesc(pc=0x00000001112416f5 offset=44b5):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001112416f5 offset=44b5):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00000001112416f5 offset=44b5):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x0000000111241716 offset=44d6):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019765cae0}
ScopeDesc(pc=0x0000000111241716 offset=44d6):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
ScopeDesc(pc=0x0000000111241716 offset=44d6):
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
    - @4: 0
    - @5: reg r8 [16],long
    - @6: reg rdx [4],oop
    - @7: reg r11 [22],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
ScopeDesc(pc=0x0000000111241716 offset=44d6):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000000111241716 offset=44d6):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111241716 offset=44d6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x0000000111241724 offset=44e4):
   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111241724 offset=44e4):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000000111241724 offset=44e4):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111241724 offset=44e4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x000000011124173d offset=44fd):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011124176d offset=452d):
   jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
   Locals
    - l0: reg rbx [6],oop
    - l1: reg rcx [2],oop
ScopeDesc(pc=0x000000011124176d offset=452d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011124178e offset=454e):
   jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: stack[416],oop
    - l2: stack[372]
    - l3: empty
ScopeDesc(pc=0x000000011124178e offset=454e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x0000000111241798 offset=4558):
   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111241798 offset=4558):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x00000001112417c8 offset=4588):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
   Locals
    - l0: stack[372]
    - l1: 4
    - l2: reg rsi [12],int
ScopeDesc(pc=0x00000001112417c8 offset=4588):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: reg rcx [2],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00000001112417c8 offset=4588):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x00000001112417e9 offset=45a9):
   java.util.Objects::checkIndex@-1 (line 359)
   Locals
    - l0: reg r11 [22],int
    - l1: reg rdi [14],int
ScopeDesc(pc=0x00000001112417e9 offset=45a9):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001112417e9 offset=45a9):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: reg rcx [2],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00000001112417e9 offset=45a9):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x000000011124180a offset=45ca):
   jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
   Locals
    - l0: reg r11 [22],int
    - l1: reg rdi [14],int
    - l2: NULL
ScopeDesc(pc=0x000000011124180a offset=45ca):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011124180a offset=45ca):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011124180a offset=45ca):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: reg rcx [2],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011124180a offset=45ca):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x000000011124182b offset=45eb):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
ScopeDesc(pc=0x000000011124182b offset=45eb):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg r11 [22],int
    - l3: empty
ScopeDesc(pc=0x000000011124182b offset=45eb):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x000000011124184c offset=460c):
   jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: empty
ScopeDesc(pc=0x000000011124184c offset=460c):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011124184c offset=460c):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg r11 [22],int
    - l3: empty
ScopeDesc(pc=0x000000011124184c offset=460c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x000000011124186d offset=462d):
   jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x0000000197653a38}
    - l1: reg rcx [2],oop
    - l2: reg r11 [22],int
ScopeDesc(pc=0x000000011124186d offset=462d):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011124186d offset=462d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x000000011124188e offset=464e):
   jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x0000000197653a38}
    - l1: reg rcx [2],oop
    - l2: reg r11 [22],int
    - l3: empty
ScopeDesc(pc=0x000000011124188e offset=464e):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011124188e offset=464e):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011124188e offset=464e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x00000001112418af offset=466f):
   jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
   Locals
    - l0: empty
ScopeDesc(pc=0x00000001112418af offset=466f):
   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg r11 [22],int
    - l3: empty
ScopeDesc(pc=0x00000001112418af offset=466f):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001112418af offset=466f):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00000001112418af offset=466f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x00000001112418d0 offset=4690):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
   Locals
    - l0: empty
ScopeDesc(pc=0x00000001112418d0 offset=4690):
   jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg r11 [22],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
ScopeDesc(pc=0x00000001112418d0 offset=4690):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001112418d0 offset=4690):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00000001112418d0 offset=4690):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x00000001112418f1 offset=46b1):
   jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
   Locals
    - l0: empty
    - l1: reg r11 [22],int
ScopeDesc(pc=0x00000001112418f1 offset=46b1):
   jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg r11 [22],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rcx [2],oop
ScopeDesc(pc=0x00000001112418f1 offset=46b1):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001112418f1 offset=46b1):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00000001112418f1 offset=46b1):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x0000000111241912 offset=46d2):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019765cae0}
ScopeDesc(pc=0x0000000111241912 offset=46d2):
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rcx [2],oop
    - @4: 0
    - @5: reg r9 [18],long
    - @6: reg rcx [2],oop
    - @7: reg r11 [22],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
ScopeDesc(pc=0x0000000111241912 offset=46d2):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000000111241912 offset=46d2):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111241912 offset=46d2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x0000000111241933 offset=46f3):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019765cae0}
ScopeDesc(pc=0x0000000111241933 offset=46f3):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
ScopeDesc(pc=0x0000000111241933 offset=46f3):
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rcx [2],oop
    - @4: 0
    - @5: reg r9 [18],long
    - @6: reg rcx [2],oop
    - @7: reg r11 [22],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
ScopeDesc(pc=0x0000000111241933 offset=46f3):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000000111241933 offset=46f3):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111241933 offset=46f3):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x0000000111241941 offset=4701):
   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111241941 offset=4701):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000000111241941 offset=4701):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111241941 offset=4701):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x000000011124195a offset=471a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011124198a offset=474a):
   jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rcx [2],oop
ScopeDesc(pc=0x000000011124198a offset=474a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x00000001112419ab offset=476b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[448],oop
    - l11: reg rax [0],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111241a19 offset=47d9):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@109 (line 29)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: reg rbx [6],oop
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[640],double
    - @2: reg rbx [6],oop
ScopeDesc(pc=0x0000000111241a23 offset=47e3):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@109 (line 29)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: reg rbx [6],oop
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[640],double
    - @2: reg rbx [6],oop
ScopeDesc(pc=0x0000000111241a48 offset=4808):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@109 (line 29)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: reg rbx [6],oop
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[640],double
    - @2: reg rbx [6],oop
ScopeDesc(pc=0x0000000111241a52 offset=4812):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111241acf offset=488f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@121 (line 30)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: reg xmm0 [48],double
    - l5: empty
    - l6: empty
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[648],double
    - @2: stack[424],oop
ScopeDesc(pc=0x0000000111241ad9 offset=4899):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@121 (line 30)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: reg xmm0 [48],double
    - l5: empty
    - l6: empty
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[648],double
    - @2: stack[424],oop
ScopeDesc(pc=0x0000000111241afe offset=48be):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@121 (line 30)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: reg xmm0 [48],double
    - l5: empty
    - l6: empty
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[648],double
    - @2: stack[424],oop
ScopeDesc(pc=0x0000000111241b08 offset=48c8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111241b2a offset=48ea):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@141 (line 33)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111241b43 offset=4903):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@149 (line 34)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111241b5c offset=491c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@149 (line 34)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111241b7e offset=493e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@149 (line 34)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111241bae offset=496e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: reg xmm2 [80],double
    - l5: 0
    - l6: reg xmm1 [64],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111241bb8 offset=4978):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@133 (line 32)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111241be8 offset=49a8):
   jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: empty
ScopeDesc(pc=0x0000000111241be8 offset=49a8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: reg xmm1 [64],double
    - l14: 0
    - l15: reg xmm0 [48],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111241c09 offset=49c9):
   jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
   Locals
    - l0: 0
    - l1: 0
ScopeDesc(pc=0x0000000111241c09 offset=49c9):
   jdk.incubator.vector.DoubleVector::zero@19 (line 437)
   Locals
    - l0: empty
    - l1: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
ScopeDesc(pc=0x0000000111241c09 offset=49c9):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: reg xmm1 [64],double
    - l14: 0
    - l15: reg xmm0 [48],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111241c2a offset=49ea):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019762aea0}
ScopeDesc(pc=0x0000000111241c2a offset=49ea):
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
ScopeDesc(pc=0x0000000111241c2a offset=49ea):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: reg xmm1 [64],double
    - l14: 0
    - l15: reg xmm0 [48],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111241c4b offset=4a0b):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019762aea0}
ScopeDesc(pc=0x0000000111241c4b offset=4a0b):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
ScopeDesc(pc=0x0000000111241c4b offset=4a0b):
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
ScopeDesc(pc=0x0000000111241c4b offset=4a0b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: reg xmm1 [64],double
    - l14: 0
    - l15: reg xmm0 [48],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111241c59 offset=4a19):
   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000000111241c59 offset=4a19):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111241c89 offset=4a49):
   jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: empty
ScopeDesc(pc=0x0000000111241c89 offset=4a49):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: reg rbx [6],oop
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111241caa offset=4a6a):
   jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
   Locals
    - l0: 0
    - l1: 0
ScopeDesc(pc=0x0000000111241caa offset=4a6a):
   jdk.incubator.vector.DoubleVector::zero@19 (line 437)
   Locals
    - l0: empty
    - l1: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
ScopeDesc(pc=0x0000000111241caa offset=4a6a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: reg rbx [6],oop
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111241ccb offset=4a8b):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019762aea0}
ScopeDesc(pc=0x0000000111241ccb offset=4a8b):
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
ScopeDesc(pc=0x0000000111241ccb offset=4a8b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: reg rbx [6],oop
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111241cec offset=4aac):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019762aea0}
ScopeDesc(pc=0x0000000111241cec offset=4aac):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
ScopeDesc(pc=0x0000000111241cec offset=4aac):
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
ScopeDesc(pc=0x0000000111241cec offset=4aac):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: reg rbx [6],oop
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111241cfa offset=4aba):
   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000000111241cfa offset=4aba):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[512],oop
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111241d2a offset=4aea):
   jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: empty
ScopeDesc(pc=0x0000000111241d2a offset=4aea):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x0000000111241d4b offset=4b0b):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
   Locals
    - l0: reg rax [0],int
    - l1: 4
    - l2: reg rbx [6],int
ScopeDesc(pc=0x0000000111241d4b offset=4b0b):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111241d4b offset=4b0b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x0000000111241d6c offset=4b2c):
   java.util.Objects::checkIndex@-1 (line 359)
   Locals
    - l0: reg rax [0],int
    - l1: reg rdi [14],int
ScopeDesc(pc=0x0000000111241d6c offset=4b2c):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000000111241d6c offset=4b2c):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111241d6c offset=4b2c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x0000000111241d8d offset=4b4d):
   jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
   Locals
    - l0: reg rax [0],int
    - l1: reg rdi [14],int
    - l2: NULL
ScopeDesc(pc=0x0000000111241d8d offset=4b4d):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000000111241d8d offset=4b4d):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000000111241d8d offset=4b4d):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111241d8d offset=4b4d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x0000000111241dae offset=4b6e):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
ScopeDesc(pc=0x0000000111241dae offset=4b6e):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: empty
ScopeDesc(pc=0x0000000111241dae offset=4b6e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x0000000111241dcf offset=4b8f):
   jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: empty
ScopeDesc(pc=0x0000000111241dcf offset=4b8f):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   Locals
    - l0: empty
ScopeDesc(pc=0x0000000111241dcf offset=4b8f):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: empty
ScopeDesc(pc=0x0000000111241dcf offset=4b8f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x0000000111241df0 offset=4bb0):
   jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x0000000197653a38}
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
ScopeDesc(pc=0x0000000111241df0 offset=4bb0):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111241df0 offset=4bb0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x0000000111241e11 offset=4bd1):
   jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x0000000197653a38}
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: empty
ScopeDesc(pc=0x0000000111241e11 offset=4bd1):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000000111241e11 offset=4bd1):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111241e11 offset=4bd1):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x0000000111241e32 offset=4bf2):
   jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
   Locals
    - l0: empty
ScopeDesc(pc=0x0000000111241e32 offset=4bf2):
   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: empty
ScopeDesc(pc=0x0000000111241e32 offset=4bf2):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000000111241e32 offset=4bf2):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111241e32 offset=4bf2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x0000000111241e53 offset=4c13):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
   Locals
    - l0: empty
ScopeDesc(pc=0x0000000111241e53 offset=4c13):
   jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
ScopeDesc(pc=0x0000000111241e53 offset=4c13):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000000111241e53 offset=4c13):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111241e53 offset=4c13):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x0000000111241e74 offset=4c34):
   jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
   Locals
    - l0: empty
    - l1: reg rax [0],int
ScopeDesc(pc=0x0000000111241e74 offset=4c34):
   jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
ScopeDesc(pc=0x0000000111241e74 offset=4c34):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000000111241e74 offset=4c34):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111241e74 offset=4c34):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x0000000111241e95 offset=4c55):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019765cae0}
ScopeDesc(pc=0x0000000111241e95 offset=4c55):
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
    - @4: 0
    - @5: reg rsi [12],long
    - @6: reg rdx [4],oop
    - @7: reg rax [0],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
ScopeDesc(pc=0x0000000111241e95 offset=4c55):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000000111241e95 offset=4c55):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111241e95 offset=4c55):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x0000000111241eb6 offset=4c76):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019765cae0}
ScopeDesc(pc=0x0000000111241eb6 offset=4c76):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
ScopeDesc(pc=0x0000000111241eb6 offset=4c76):
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
    - @4: 0
    - @5: reg rsi [12],long
    - @6: reg rdx [4],oop
    - @7: reg rax [0],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
ScopeDesc(pc=0x0000000111241eb6 offset=4c76):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000000111241eb6 offset=4c76):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111241eb6 offset=4c76):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x0000000111241ec4 offset=4c84):
   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111241ec4 offset=4c84):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000000111241ec4 offset=4c84):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111241ec4 offset=4c84):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x0000000111241edd offset=4c9d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111241f0d offset=4ccd):
   jdk.incubator.vector.DoubleVector::sub@-1 (line 1138)
   Locals
    - l0: reg rdi [14],oop
    - l1: 0
    - l2: stack[664],double
ScopeDesc(pc=0x0000000111241f0d offset=4ccd):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x0000000111241f2e offset=4cee):
   jdk.incubator.vector.DoubleVector::lanewise@-1 (line 714)
   Locals
    - l0: reg rdi [14],oop
    - l1: a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x0000000197665dd8}
    - l2: 0
    - l3: stack[664],double
ScopeDesc(pc=0x0000000111241f2e offset=4cee):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000000111241f2e offset=4cee):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x0000000111241f4f offset=4d0f):
   jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: stack[416],oop
    - l2: stack[508]
    - l3: empty
ScopeDesc(pc=0x0000000111241f4f offset=4d0f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[528],oop
ScopeDesc(pc=0x0000000111241f59 offset=4d19):
   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111241f59 offset=4d19):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[528],oop
ScopeDesc(pc=0x0000000111241f89 offset=4d49):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
   Locals
    - l0: stack[508]
    - l1: 4
    - l2: reg rsi [12],int
ScopeDesc(pc=0x0000000111241f89 offset=4d49):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: reg rcx [2],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111241f89 offset=4d49):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[528],oop
ScopeDesc(pc=0x0000000111241faa offset=4d6a):
   java.util.Objects::checkIndex@-1 (line 359)
   Locals
    - l0: reg rbx [6],int
    - l1: reg rdi [14],int
ScopeDesc(pc=0x0000000111241faa offset=4d6a):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000000111241faa offset=4d6a):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: reg rcx [2],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111241faa offset=4d6a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[528],oop
ScopeDesc(pc=0x0000000111241fcb offset=4d8b):
   jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
   Locals
    - l0: reg rbx [6],int
    - l1: reg rdi [14],int
    - l2: NULL
ScopeDesc(pc=0x0000000111241fcb offset=4d8b):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000000111241fcb offset=4d8b):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000000111241fcb offset=4d8b):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: reg rcx [2],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111241fcb offset=4d8b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[528],oop
ScopeDesc(pc=0x0000000111241fec offset=4dac):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
ScopeDesc(pc=0x0000000111241fec offset=4dac):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg rbx [6],int
    - l3: empty
ScopeDesc(pc=0x0000000111241fec offset=4dac):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[528],oop
ScopeDesc(pc=0x000000011124200d offset=4dcd):
   jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: empty
ScopeDesc(pc=0x000000011124200d offset=4dcd):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011124200d offset=4dcd):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg rbx [6],int
    - l3: empty
ScopeDesc(pc=0x000000011124200d offset=4dcd):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[528],oop
ScopeDesc(pc=0x000000011124202e offset=4dee):
   jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x0000000197653a38}
    - l1: reg rcx [2],oop
    - l2: reg rbx [6],int
ScopeDesc(pc=0x000000011124202e offset=4dee):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011124202e offset=4dee):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
ScopeDesc(pc=0x000000011124204f offset=4e0f):
   jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x0000000197653a38}
    - l1: reg rcx [2],oop
    - l2: reg rbx [6],int
    - l3: empty
ScopeDesc(pc=0x000000011124204f offset=4e0f):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011124204f offset=4e0f):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011124204f offset=4e0f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
ScopeDesc(pc=0x0000000111242070 offset=4e30):
   jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
   Locals
    - l0: empty
ScopeDesc(pc=0x0000000111242070 offset=4e30):
   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg rbx [6],int
    - l3: empty
ScopeDesc(pc=0x0000000111242070 offset=4e30):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000000111242070 offset=4e30):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111242070 offset=4e30):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
ScopeDesc(pc=0x0000000111242091 offset=4e51):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
   Locals
    - l0: empty
ScopeDesc(pc=0x0000000111242091 offset=4e51):
   jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg rbx [6],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
ScopeDesc(pc=0x0000000111242091 offset=4e51):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000000111242091 offset=4e51):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111242091 offset=4e51):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
ScopeDesc(pc=0x00000001112420b2 offset=4e72):
   jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
   Locals
    - l0: empty
    - l1: reg rbx [6],int
ScopeDesc(pc=0x00000001112420b2 offset=4e72):
   jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg rbx [6],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rcx [2],oop
ScopeDesc(pc=0x00000001112420b2 offset=4e72):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001112420b2 offset=4e72):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00000001112420b2 offset=4e72):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
ScopeDesc(pc=0x00000001112420d3 offset=4e93):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019765cae0}
ScopeDesc(pc=0x00000001112420d3 offset=4e93):
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rcx [2],oop
    - @4: 0
    - @5: reg r9 [18],long
    - @6: reg rcx [2],oop
    - @7: reg rbx [6],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
ScopeDesc(pc=0x00000001112420d3 offset=4e93):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001112420d3 offset=4e93):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00000001112420d3 offset=4e93):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
ScopeDesc(pc=0x00000001112420f4 offset=4eb4):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019765cae0}
ScopeDesc(pc=0x00000001112420f4 offset=4eb4):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
ScopeDesc(pc=0x00000001112420f4 offset=4eb4):
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rcx [2],oop
    - @4: 0
    - @5: reg r9 [18],long
    - @6: reg rcx [2],oop
    - @7: reg rbx [6],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
ScopeDesc(pc=0x00000001112420f4 offset=4eb4):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001112420f4 offset=4eb4):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00000001112420f4 offset=4eb4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
ScopeDesc(pc=0x0000000111242102 offset=4ec2):
   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111242102 offset=4ec2):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000000111242102 offset=4ec2):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111242102 offset=4ec2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
ScopeDesc(pc=0x000000011124211b offset=4edb):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011124214b offset=4f0b):
   jdk.incubator.vector.DoubleVector::sub@-1 (line 1138)
   Locals
    - l0: reg rdi [14],oop
    - l1: 0
    - l2: stack[672],double
ScopeDesc(pc=0x000000011124214b offset=4f0b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
ScopeDesc(pc=0x000000011124216c offset=4f2c):
   jdk.incubator.vector.DoubleVector::lanewise@-1 (line 714)
   Locals
    - l0: reg rdi [14],oop
    - l1: a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x0000000197665dd8}
    - l2: 0
    - l3: stack[672],double
ScopeDesc(pc=0x000000011124216c offset=4f2c):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011124216c offset=4f2c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
ScopeDesc(pc=0x0000000111242176 offset=4f36):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x00000001112421a6 offset=4f66):
   jdk.incubator.vector.DoubleVector::mul@-1 (line 1187)
   Locals
    - l0: reg rax [0],oop
    - l1: stack[552],oop
ScopeDesc(pc=0x00000001112421a6 offset=4f66):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
ScopeDesc(pc=0x00000001112421b0 offset=4f70):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x00000001112421e0 offset=4fa0):
   jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
   Locals
    - l0: reg rbx [6],oop
    - l1: reg rax [0],oop
ScopeDesc(pc=0x00000001112421e0 offset=4fa0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
ScopeDesc(pc=0x00000001112421ea offset=4faa):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011124221a offset=4fda):
   jdk.incubator.vector.DoubleVector::mul@-1 (line 1187)
   Locals
    - l0: reg r8 [16],oop
    - l1: reg r8 [16],oop
ScopeDesc(pc=0x000000011124221a offset=4fda):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: reg rax [0],oop
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[536],oop
ScopeDesc(pc=0x0000000111242224 offset=4fe4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111242254 offset=5014):
   jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
   Locals
    - l0: reg rcx [2],oop
    - l1: reg rax [0],oop
ScopeDesc(pc=0x0000000111242254 offset=5014):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[584],oop
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111242275 offset=5035):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rdx [4],int
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[584],oop
    - l21: reg rax [0],oop
    - l22: empty
ScopeDesc(pc=0x00000001112422e3 offset=50a3):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@279 (line 52)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: empty
    - l17: empty
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: 0
    - @2: stack[408],oop
ScopeDesc(pc=0x00000001112422ed offset=50ad):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@279 (line 52)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: empty
    - l17: empty
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: 0
    - @2: stack[408],oop
ScopeDesc(pc=0x0000000111242312 offset=50d2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@279 (line 52)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: empty
    - l17: empty
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: 0
    - @2: stack[408],oop
ScopeDesc(pc=0x0000000111242380 offset=5140):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@292 (line 53)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: reg xmm0 [48],double
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: 0
    - @2: stack[424],oop
ScopeDesc(pc=0x000000011124238a offset=514a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@292 (line 53)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: reg xmm0 [48],double
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: 0
    - @2: stack[424],oop
ScopeDesc(pc=0x00000001112423af offset=516f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@292 (line 53)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: reg xmm0 [48],double
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: 0
    - @2: stack[424],oop
ScopeDesc(pc=0x00000001112423c2 offset=5182):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@313 (line 56)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x00000001112423db offset=519b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x00000001112423f4 offset=51b4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111242416 offset=51d6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111242446 offset=5206):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: reg xmm3 [96],double
    - l18: 0
    - l19: reg xmm1 [64],double
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111242450 offset=5210):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@360 (line 60)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011124247f offset=523f):
   jdk.internal.util.Preconditions::checkIndex@15 (line 266)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011124247f offset=523f):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011124247f offset=523f):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011124247f offset=523f):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: stack[432],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011124247f offset=523f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[528],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x0000000111242498 offset=5258):
   jdk.internal.util.Preconditions::checkIndex@15 (line 266)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000000111242498 offset=5258):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000000111242498 offset=5258):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000000111242498 offset=5258):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: stack[416],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111242498 offset=5258):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[508]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[664],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[552],oop
   Expression stack
    - @0: stack[528],oop
ScopeDesc(pc=0x00000001112424b1 offset=5271):
   jdk.internal.util.Preconditions::checkIndex@15 (line 266)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001112424b1 offset=5271):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00000001112424b1 offset=5271):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001112424b1 offset=5271):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: stack[432],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00000001112424b1 offset=5271):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x00000001112424ca offset=528a):
   jdk.internal.util.Preconditions::checkIndex@15 (line 266)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001112424ca offset=528a):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00000001112424ca offset=528a):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001112424ca offset=528a):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
    - l1: stack[416],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00000001112424ca offset=528a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[640],double
    - l5: 0
    - l6: stack[648],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[632],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x00000001112424f2 offset=52b2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@7 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x00000001112424ff offset=52bf):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@7 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x000000011123c988: 0020
relocInfo@0x000000011123c988 [type=0(none) addr=0x000000011123d240 offset=32]
         @0x000000011123c98a: 600b
relocInfo@0x000000011123c98a [type=6(runtime_call) addr=0x000000011123d24b offset=11] | [destination=0x0000000110bf9920]
         @0x000000011123c98c: c024
relocInfo@0x000000011123c98c [type=12(metadata) addr=0x000000011123d26f offset=36] | [metadata_addr=0x000000011123d271 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123c98e: c038
relocInfo@0x000000011123c98e [type=12(metadata) addr=0x000000011123d2a7 offset=56] | [metadata_addr=0x000000011123d2a9 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123c990: 1036
relocInfo@0x000000011123c990 [type=1(oop) addr=0x000000011123d2dd offset=54] | [oop_addr=0x000000011123d2df *=0x00000001976180e8 offset=0]
         @0x000000011123c992: c00a
relocInfo@0x000000011123c992 [type=12(metadata) addr=0x000000011123d2e7 offset=10] | [metadata_addr=0x000000011123d2e9 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123c994: c08e
relocInfo@0x000000011123c994 [type=12(metadata) addr=0x000000011123d375 offset=142] | [metadata_addr=0x000000011123d377 *=0x0000000267a9dc18 offset=0]metadata_value=0x0000000267a9dc18: method data for {method} {0x0000000267b3fa08} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
         @0x000000011123c996: c02a
relocInfo@0x000000011123c996 [type=12(metadata) addr=0x000000011123d39f offset=42] | [metadata_addr=0x000000011123d3a1 *=0x0000000267a9dc18 offset=0]metadata_value=0x0000000267a9dc18: method data for {method} {0x0000000267b3fa08} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
         @0x000000011123c998: c012
relocInfo@0x000000011123c998 [type=12(metadata) addr=0x000000011123d3b1 offset=18] | [metadata_addr=0x000000011123d3b3 *=0x0000000267a9ddd0 offset=0]metadata_value=0x0000000267a9ddd0: method data for {method} {0x0000000267b96588} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x000000011123c99a: c02a
relocInfo@0x000000011123c99a [type=12(metadata) addr=0x000000011123d3db offset=42] | [metadata_addr=0x000000011123d3dd *=0x0000000267a9ddd0 offset=0]metadata_value=0x0000000267a9ddd0: method data for {method} {0x0000000267b96588} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x000000011123c99c: c032
relocInfo@0x000000011123c99c [type=12(metadata) addr=0x000000011123d40d offset=50] | [metadata_addr=0x000000011123d40f *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123c99e: c012
relocInfo@0x000000011123c99e [type=12(metadata) addr=0x000000011123d41f offset=18] | [metadata_addr=0x000000011123d421 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123c9a0: 102d
relocInfo@0x000000011123c9a0 [type=1(oop) addr=0x000000011123d44c offset=45] | [oop_addr=0x000000011123d44e *=0x00000001976180e8 offset=0]
         @0x000000011123c9a2: c00d
relocInfo@0x000000011123c9a2 [type=12(metadata) addr=0x000000011123d459 offset=13] | [metadata_addr=0x000000011123d45b *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123c9a4: c015
relocInfo@0x000000011123c9a4 [type=12(metadata) addr=0x000000011123d46e offset=21] | [metadata_addr=0x000000011123d470 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123c9a6: c08e
relocInfo@0x000000011123c9a6 [type=12(metadata) addr=0x000000011123d4fc offset=142] | [metadata_addr=0x000000011123d4fe *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123c9a8: c012
relocInfo@0x000000011123c9a8 [type=12(metadata) addr=0x000000011123d50e offset=18] | [metadata_addr=0x000000011123d510 *=0x0000000267a9e268 offset=0]metadata_value=0x0000000267a9e268: method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123c9aa: c02d
relocInfo@0x000000011123c9aa [type=12(metadata) addr=0x000000011123d53b offset=45] | [metadata_addr=0x000000011123d53d *=0x0000000267a9e268 offset=0]metadata_value=0x0000000267a9e268: method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123c9ac: c012
relocInfo@0x000000011123c9ac [type=12(metadata) addr=0x000000011123d54d offset=18] | [metadata_addr=0x000000011123d54f *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123c9ae: 1011
relocInfo@0x000000011123c9ae [type=1(oop) addr=0x000000011123d55e offset=17] | [oop_addr=0x000000011123d560 *=0x000000019762aea0 offset=0]
         @0x000000011123c9b0: c019
relocInfo@0x000000011123c9b0 [type=12(metadata) addr=0x000000011123d577 offset=25] | [metadata_addr=0x000000011123d579 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123c9b2: c012
relocInfo@0x000000011123c9b2 [type=12(metadata) addr=0x000000011123d589 offset=18] | [metadata_addr=0x000000011123d58b *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123c9b4: c02d
relocInfo@0x000000011123c9b4 [type=12(metadata) addr=0x000000011123d5b6 offset=45] | [metadata_addr=0x000000011123d5b8 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011123c9b6: c020
relocInfo@0x000000011123c9b6 [type=12(metadata) addr=0x000000011123d5d6 offset=32] | [metadata_addr=0x000000011123d5d8 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123c9b8: c012
relocInfo@0x000000011123c9b8 [type=12(metadata) addr=0x000000011123d5e8 offset=18] | [metadata_addr=0x000000011123d5ea *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011123c9ba: c02d
relocInfo@0x000000011123c9ba [type=12(metadata) addr=0x000000011123d615 offset=45] | [metadata_addr=0x000000011123d617 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123c9bc: 1011
relocInfo@0x000000011123c9bc [type=1(oop) addr=0x000000011123d626 offset=17] | [oop_addr=0x000000011123d628 *=0x000000019762ac90 offset=0]
         @0x000000011123c9be: c019
relocInfo@0x000000011123c9be [type=12(metadata) addr=0x000000011123d63f offset=25] | [metadata_addr=0x000000011123d641 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123c9c0: c02f
relocInfo@0x000000011123c9c0 [type=12(metadata) addr=0x000000011123d66e offset=47] | [metadata_addr=0x000000011123d670 *=0x0000000225d54960 offset=0]metadata_value=0x0000000225d54960: 'jdk/incubator/vector/DoubleVector$$Lambda$87+0x0000000225d54960'
         @0x000000011123c9c2: f80309b31f7700017014
relocInfo@0x000000011123c9ca [type=7(external_word) addr=0x000000011123d682 offset=20 data={09b31f770001}] | [target=0x0000000109b31f77]
         @0x000000011123c9cc: 640e
relocInfo@0x000000011123c9cc [type=6(runtime_call) addr=0x000000011123d690 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123c9ce: c008
relocInfo@0x000000011123c9ce [type=12(metadata) addr=0x000000011123d698 offset=8] | [metadata_addr=0x000000011123d69a *=0x0000000225d54960 offset=0]metadata_value=0x0000000225d54960: 'jdk/incubator/vector/DoubleVector$$Lambda$87+0x0000000225d54960'
         @0x000000011123c9d0: c049
relocInfo@0x000000011123c9d0 [type=12(metadata) addr=0x000000011123d6e1 offset=73] | [metadata_addr=0x000000011123d6e3 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123c9d2: 1012
relocInfo@0x000000011123c9d2 [type=1(oop) addr=0x000000011123d6f3 offset=18] | [oop_addr=0x000000011123d6f5 *=0x0000000197618158 offset=0]
         @0x000000011123c9d4: 100a
relocInfo@0x000000011123c9d4 [type=1(oop) addr=0x000000011123d6fd offset=10] | [oop_addr=0x000000011123d6ff *=0x000000011ff8c550 offset=0]
         @0x000000011123c9d6: 4462
relocInfo@0x000000011123c9d6 [type=4(static_call) addr=0x000000011123d75f offset=98 format=1] | [destination=0x0000000110bfa220 metadata=0x0000000000000000]
         @0x000000011123c9d8: c00b
relocInfo@0x000000011123c9d8 [type=12(metadata) addr=0x000000011123d76a offset=11] | [metadata_addr=0x000000011123d76c *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123c9da: c016
relocInfo@0x000000011123c9da [type=12(metadata) addr=0x000000011123d780 offset=22] | [metadata_addr=0x000000011123d782 *=0x0000000225d4ce30 offset=0]metadata_value=0x0000000225d4ce30: 'jdk/incubator/vector/DoubleVector'
         @0x000000011123c9dc: c01b
relocInfo@0x000000011123c9dc [type=12(metadata) addr=0x000000011123d79b offset=27] | [metadata_addr=0x000000011123d79d *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123c9de: c08a
relocInfo@0x000000011123c9de [type=12(metadata) addr=0x000000011123d825 offset=138] | [metadata_addr=0x000000011123d827 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123c9e0: c01f
relocInfo@0x000000011123c9e0 [type=12(metadata) addr=0x000000011123d844 offset=31] | [metadata_addr=0x000000011123d846 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123c9e2: c012
relocInfo@0x000000011123c9e2 [type=12(metadata) addr=0x000000011123d856 offset=18] | [metadata_addr=0x000000011123d858 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123c9e4: c030
relocInfo@0x000000011123c9e4 [type=12(metadata) addr=0x000000011123d886 offset=48] | [metadata_addr=0x000000011123d888 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123c9e6: c01a
relocInfo@0x000000011123c9e6 [type=12(metadata) addr=0x000000011123d8a0 offset=26] | [metadata_addr=0x000000011123d8a2 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123c9e8: c08d
relocInfo@0x000000011123c9e8 [type=12(metadata) addr=0x000000011123d92d offset=141] | [metadata_addr=0x000000011123d92f *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123c9ea: c012
relocInfo@0x000000011123c9ea [type=12(metadata) addr=0x000000011123d93f offset=18] | [metadata_addr=0x000000011123d941 *=0x0000000267a9e268 offset=0]metadata_value=0x0000000267a9e268: method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123c9ec: c028
relocInfo@0x000000011123c9ec [type=12(metadata) addr=0x000000011123d967 offset=40] | [metadata_addr=0x000000011123d969 *=0x0000000267a9e268 offset=0]metadata_value=0x0000000267a9e268: method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123c9ee: c012
relocInfo@0x000000011123c9ee [type=12(metadata) addr=0x000000011123d979 offset=18] | [metadata_addr=0x000000011123d97b *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123c9f0: c028
relocInfo@0x000000011123c9f0 [type=12(metadata) addr=0x000000011123d9a1 offset=40] | [metadata_addr=0x000000011123d9a3 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123c9f2: c012
relocInfo@0x000000011123c9f2 [type=12(metadata) addr=0x000000011123d9b3 offset=18] | [metadata_addr=0x000000011123d9b5 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123c9f4: c028
relocInfo@0x000000011123c9f4 [type=12(metadata) addr=0x000000011123d9db offset=40] | [metadata_addr=0x000000011123d9dd *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011123c9f6: c020
relocInfo@0x000000011123c9f6 [type=12(metadata) addr=0x000000011123d9fb offset=32] | [metadata_addr=0x000000011123d9fd *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123c9f8: c012
relocInfo@0x000000011123c9f8 [type=12(metadata) addr=0x000000011123da0d offset=18] | [metadata_addr=0x000000011123da0f *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011123c9fa: c028
relocInfo@0x000000011123c9fa [type=12(metadata) addr=0x000000011123da35 offset=40] | [metadata_addr=0x000000011123da37 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123c9fc: c028
relocInfo@0x000000011123c9fc [type=12(metadata) addr=0x000000011123da5d offset=40] | [metadata_addr=0x000000011123da5f *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123c9fe: c02d
relocInfo@0x000000011123c9fe [type=12(metadata) addr=0x000000011123da8a offset=45] | [metadata_addr=0x000000011123da8c *=0x0000000225d54960 offset=0]metadata_value=0x0000000225d54960: 'jdk/incubator/vector/DoubleVector$$Lambda$87+0x0000000225d54960'
         @0x000000011123ca00: f80309b31f7700017014
relocInfo@0x000000011123ca08 [type=7(external_word) addr=0x000000011123da9e offset=20 data={09b31f770001}] | [target=0x0000000109b31f77]
         @0x000000011123ca0a: 640e
relocInfo@0x000000011123ca0a [type=6(runtime_call) addr=0x000000011123daac offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123ca0c: c007
relocInfo@0x000000011123ca0c [type=12(metadata) addr=0x000000011123dab3 offset=7] | [metadata_addr=0x000000011123dab5 *=0x0000000225d54960 offset=0]metadata_value=0x0000000225d54960: 'jdk/incubator/vector/DoubleVector$$Lambda$87+0x0000000225d54960'
         @0x000000011123ca0e: c049
relocInfo@0x000000011123ca0e [type=12(metadata) addr=0x000000011123dafc offset=73] | [metadata_addr=0x000000011123dafe *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ca10: 4443
relocInfo@0x000000011123ca10 [type=4(static_call) addr=0x000000011123db3f offset=67 format=1] | [destination=0x0000000110bfa220 metadata=0x0000000000000000]
         @0x000000011123ca12: c00b
relocInfo@0x000000011123ca12 [type=12(metadata) addr=0x000000011123db4a offset=11] | [metadata_addr=0x000000011123db4c *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ca14: c016
relocInfo@0x000000011123ca14 [type=12(metadata) addr=0x000000011123db60 offset=22] | [metadata_addr=0x000000011123db62 *=0x0000000225d4ce30 offset=0]metadata_value=0x0000000225d4ce30: 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ca16: c01b
relocInfo@0x000000011123ca16 [type=12(metadata) addr=0x000000011123db7b offset=27] | [metadata_addr=0x000000011123db7d *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ca18: c08a
relocInfo@0x000000011123ca18 [type=12(metadata) addr=0x000000011123dc05 offset=138] | [metadata_addr=0x000000011123dc07 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ca1a: c0b9
relocInfo@0x000000011123ca1a [type=12(metadata) addr=0x000000011123dcbe offset=185] | [metadata_addr=0x000000011123dcc0 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123ca1c: c036
relocInfo@0x000000011123ca1c [type=12(metadata) addr=0x000000011123dcf4 offset=54] | [metadata_addr=0x000000011123dcf6 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123ca1e: c012
relocInfo@0x000000011123ca1e [type=12(metadata) addr=0x000000011123dd06 offset=18] | [metadata_addr=0x000000011123dd08 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ca20: 102d
relocInfo@0x000000011123ca20 [type=1(oop) addr=0x000000011123dd33 offset=45] | [oop_addr=0x000000011123dd35 *=0x00000001976180e8 offset=0]
         @0x000000011123ca22: c00a
relocInfo@0x000000011123ca22 [type=12(metadata) addr=0x000000011123dd3d offset=10] | [metadata_addr=0x000000011123dd3f *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ca24: c092
relocInfo@0x000000011123ca24 [type=12(metadata) addr=0x000000011123ddcf offset=146] | [metadata_addr=0x000000011123ddd1 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ca26: c012
relocInfo@0x000000011123ca26 [type=12(metadata) addr=0x000000011123dde1 offset=18] | [metadata_addr=0x000000011123dde3 *=0x0000000267a95d30 offset=0]metadata_value=0x0000000267a95d30: method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x000000011123ca28: c02e
relocInfo@0x000000011123ca28 [type=12(metadata) addr=0x000000011123de0f offset=46] | [metadata_addr=0x000000011123de11 *=0x0000000267a95d30 offset=0]metadata_value=0x0000000267a95d30: method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x000000011123ca2a: c012
relocInfo@0x000000011123ca2a [type=12(metadata) addr=0x000000011123de21 offset=18] | [metadata_addr=0x000000011123de23 *=0x00000002679f4c18 offset=0]metadata_value=0x00000002679f4c18: method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x000000011123ca2c: c02a
relocInfo@0x000000011123ca2c [type=12(metadata) addr=0x000000011123de4b offset=42] | [metadata_addr=0x000000011123de4d *=0x00000002679f4c18 offset=0]metadata_value=0x00000002679f4c18: method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x000000011123ca2e: c012
relocInfo@0x000000011123ca2e [type=12(metadata) addr=0x000000011123de5d offset=18] | [metadata_addr=0x000000011123de5f *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x000000011123ca30: c02e
relocInfo@0x000000011123ca30 [type=12(metadata) addr=0x000000011123de8b offset=46] | [metadata_addr=0x000000011123de8d *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x000000011123ca32: c039
relocInfo@0x000000011123ca32 [type=12(metadata) addr=0x000000011123dec4 offset=57] | [metadata_addr=0x000000011123dec6 *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x000000011123ca34: 1036
relocInfo@0x000000011123ca34 [type=1(oop) addr=0x000000011123defa offset=54] | [oop_addr=0x000000011123defc *=0x00000001976180e8 offset=0]
         @0x000000011123ca36: c00d
relocInfo@0x000000011123ca36 [type=12(metadata) addr=0x000000011123df07 offset=13] | [metadata_addr=0x000000011123df09 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ca38: c012
relocInfo@0x000000011123ca38 [type=12(metadata) addr=0x000000011123df19 offset=18] | [metadata_addr=0x000000011123df1b *=0x0000000267a948b0 offset=0]metadata_value=0x0000000267a948b0: method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x000000011123ca3a: c02a
relocInfo@0x000000011123ca3a [type=12(metadata) addr=0x000000011123df43 offset=42] | [metadata_addr=0x000000011123df45 *=0x0000000267a948b0 offset=0]metadata_value=0x0000000267a948b0: method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x000000011123ca3c: c012
relocInfo@0x000000011123ca3c [type=12(metadata) addr=0x000000011123df55 offset=18] | [metadata_addr=0x000000011123df57 *=0x0000000267a94a98 offset=0]metadata_value=0x0000000267a94a98: method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x000000011123ca3e: c02d
relocInfo@0x000000011123ca3e [type=12(metadata) addr=0x000000011123df82 offset=45] | [metadata_addr=0x000000011123df84 *=0x0000000267a94a98 offset=0]metadata_value=0x0000000267a94a98: method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x000000011123ca40: 101a
relocInfo@0x000000011123ca40 [type=1(oop) addr=0x000000011123df9c offset=26] | [oop_addr=0x000000011123df9e *=0x0000000197653a38 offset=0]
         @0x000000011123ca42: c00d
relocInfo@0x000000011123ca42 [type=12(metadata) addr=0x000000011123dfa9 offset=13] | [metadata_addr=0x000000011123dfab *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ca44: c012
relocInfo@0x000000011123ca44 [type=12(metadata) addr=0x000000011123dfbb offset=18] | [metadata_addr=0x000000011123dfbd *=0x0000000267a95f60 offset=0]metadata_value=0x0000000267a95f60: method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x000000011123ca46: c02d
relocInfo@0x000000011123ca46 [type=12(metadata) addr=0x000000011123dfe8 offset=45] | [metadata_addr=0x000000011123dfea *=0x0000000267a95f60 offset=0]metadata_value=0x0000000267a95f60: method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x000000011123ca48: c012
relocInfo@0x000000011123ca48 [type=12(metadata) addr=0x000000011123dffa offset=18] | [metadata_addr=0x000000011123dffc *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ca4a: c02a
relocInfo@0x000000011123ca4a [type=12(metadata) addr=0x000000011123e024 offset=42] | [metadata_addr=0x000000011123e026 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ca4c: c012
relocInfo@0x000000011123ca4c [type=12(metadata) addr=0x000000011123e036 offset=18] | [metadata_addr=0x000000011123e038 *=0x0000000267a96408 offset=0]metadata_value=0x0000000267a96408: method data for {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
         @0x000000011123ca4e: 102d
relocInfo@0x000000011123ca4e [type=1(oop) addr=0x000000011123e063 offset=45] | [oop_addr=0x000000011123e065 *=0x00000001976180e8 offset=0]
         @0x000000011123ca50: c00d
relocInfo@0x000000011123ca50 [type=12(metadata) addr=0x000000011123e070 offset=13] | [metadata_addr=0x000000011123e072 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ca52: c015
relocInfo@0x000000011123ca52 [type=12(metadata) addr=0x000000011123e085 offset=21] | [metadata_addr=0x000000011123e087 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ca54: c012
relocInfo@0x000000011123ca54 [type=12(metadata) addr=0x000000011123e097 offset=18] | [metadata_addr=0x000000011123e099 *=0x0000000267a95910 offset=0]metadata_value=0x0000000267a95910: method data for {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x000000011123ca56: c02a
relocInfo@0x000000011123ca56 [type=12(metadata) addr=0x000000011123e0c1 offset=42] | [metadata_addr=0x000000011123e0c3 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ca58: c012
relocInfo@0x000000011123ca58 [type=12(metadata) addr=0x000000011123e0d3 offset=18] | [metadata_addr=0x000000011123e0d5 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ca5a: c012
relocInfo@0x000000011123ca5a [type=12(metadata) addr=0x000000011123e0e5 offset=18] | [metadata_addr=0x000000011123e0e7 *=0x0000000267a96588 offset=0]metadata_value=0x0000000267a96588: method data for {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ca5c: c045
relocInfo@0x000000011123ca5c [type=12(metadata) addr=0x000000011123e12a offset=69] | [metadata_addr=0x000000011123e12c *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123ca5e: 1011
relocInfo@0x000000011123ca5e [type=1(oop) addr=0x000000011123e13b offset=17] | [oop_addr=0x000000011123e13d *=0x000000019765cae0 offset=0]
         @0x000000011123ca60: c019
relocInfo@0x000000011123ca60 [type=12(metadata) addr=0x000000011123e154 offset=25] | [metadata_addr=0x000000011123e156 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ca62: c012
relocInfo@0x000000011123ca62 [type=12(metadata) addr=0x000000011123e166 offset=18] | [metadata_addr=0x000000011123e168 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123ca64: c028
relocInfo@0x000000011123ca64 [type=12(metadata) addr=0x000000011123e18e offset=40] | [metadata_addr=0x000000011123e190 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011123ca66: c01d
relocInfo@0x000000011123ca66 [type=12(metadata) addr=0x000000011123e1ab offset=29] | [metadata_addr=0x000000011123e1ad *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123ca68: c012
relocInfo@0x000000011123ca68 [type=12(metadata) addr=0x000000011123e1bd offset=18] | [metadata_addr=0x000000011123e1bf *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011123ca6a: c02d
relocInfo@0x000000011123ca6a [type=12(metadata) addr=0x000000011123e1ea offset=45] | [metadata_addr=0x000000011123e1ec *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123ca6c: 1011
relocInfo@0x000000011123ca6c [type=1(oop) addr=0x000000011123e1fb offset=17] | [oop_addr=0x000000011123e1fd *=0x000000019765c8d0 offset=0]
         @0x000000011123ca6e: c019
relocInfo@0x000000011123ca6e [type=12(metadata) addr=0x000000011123e214 offset=25] | [metadata_addr=0x000000011123e216 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ca70: c01d
relocInfo@0x000000011123ca70 [type=12(metadata) addr=0x000000011123e231 offset=29] | [metadata_addr=0x000000011123e233 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ca72: 1012
relocInfo@0x000000011123ca72 [type=1(oop) addr=0x000000011123e243 offset=18] | [oop_addr=0x000000011123e245 *=0x0000000197618158 offset=0]
         @0x000000011123ca74: 100a
relocInfo@0x000000011123ca74 [type=1(oop) addr=0x000000011123e24d offset=10] | [oop_addr=0x000000011123e24f *=0x000000011ff8c550 offset=0]
         @0x000000011123ca76: 1030
relocInfo@0x000000011123ca76 [type=1(oop) addr=0x000000011123e27d offset=48] | [oop_addr=0x000000011123e27f *=0x00000001976180e8 offset=0]
         @0x000000011123ca78: 100f
relocInfo@0x000000011123ca78 [type=1(oop) addr=0x000000011123e28c offset=15] | [oop_addr=0x000000011123e28e *=0x000000019765c8d0 offset=0]
         @0x000000011123ca7a: 4423
relocInfo@0x000000011123ca7a [type=4(static_call) addr=0x000000011123e2af offset=35 format=1] | [destination=0x00000001186844c0 metadata=0x0000000000000000]
         @0x000000011123ca7c: c00b
relocInfo@0x000000011123ca7c [type=12(metadata) addr=0x000000011123e2ba offset=11] | [metadata_addr=0x000000011123e2bc *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ca7e: c016
relocInfo@0x000000011123ca7e [type=12(metadata) addr=0x000000011123e2d0 offset=22] | [metadata_addr=0x000000011123e2d2 *=0x0000000225d4ce30 offset=0]metadata_value=0x0000000225d4ce30: 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ca80: c01b
relocInfo@0x000000011123ca80 [type=12(metadata) addr=0x000000011123e2eb offset=27] | [metadata_addr=0x000000011123e2ed *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ca82: c08a
relocInfo@0x000000011123ca82 [type=12(metadata) addr=0x000000011123e375 offset=138] | [metadata_addr=0x000000011123e377 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ca84: c02d
relocInfo@0x000000011123ca84 [type=12(metadata) addr=0x000000011123e3a2 offset=45] | [metadata_addr=0x000000011123e3a4 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123ca86: c012
relocInfo@0x000000011123ca86 [type=12(metadata) addr=0x000000011123e3b4 offset=18] | [metadata_addr=0x000000011123e3b6 *=0x0000000267a97298 offset=0]metadata_value=0x0000000267a97298: method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ca88: c02b
relocInfo@0x000000011123ca88 [type=12(metadata) addr=0x000000011123e3df offset=43] | [metadata_addr=0x000000011123e3e1 *=0x0000000267a97298 offset=0]metadata_value=0x0000000267a97298: method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ca8a: 108d
relocInfo@0x000000011123ca8a [type=1(oop) addr=0x000000011123e46c offset=141] | [oop_addr=0x000000011123e46e *=0x0000000197665d58 offset=0]
         @0x000000011123ca8c: f00a241b
relocInfo@0x000000011123ca8e [type=2(virtual_call) addr=0x000000011123e487 offset=27 format=1 data=10] | [destination=0x0000000118689900 cached_value=0x000000011123e47d metadata=0x0000000000000000]
         @0x000000011123ca90: c00d
relocInfo@0x000000011123ca90 [type=12(metadata) addr=0x000000011123e494 offset=13] | [metadata_addr=0x000000011123e496 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123ca92: c012
relocInfo@0x000000011123ca92 [type=12(metadata) addr=0x000000011123e4a6 offset=18] | [metadata_addr=0x000000011123e4a8 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ca94: 1028
relocInfo@0x000000011123ca94 [type=1(oop) addr=0x000000011123e4ce offset=40] | [oop_addr=0x000000011123e4d0 *=0x00000001976180e8 offset=0]
         @0x000000011123ca96: c00a
relocInfo@0x000000011123ca96 [type=12(metadata) addr=0x000000011123e4d8 offset=10] | [metadata_addr=0x000000011123e4da *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ca98: c098
relocInfo@0x000000011123ca98 [type=12(metadata) addr=0x000000011123e570 offset=152] | [metadata_addr=0x000000011123e572 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ca9a: c012
relocInfo@0x000000011123ca9a [type=12(metadata) addr=0x000000011123e582 offset=18] | [metadata_addr=0x000000011123e584 *=0x0000000267a95d30 offset=0]metadata_value=0x0000000267a95d30: method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x000000011123ca9c: c03b
relocInfo@0x000000011123ca9c [type=12(metadata) addr=0x000000011123e5bd offset=59] | [metadata_addr=0x000000011123e5bf *=0x0000000267a95d30 offset=0]metadata_value=0x0000000267a95d30: method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x000000011123ca9e: c012
relocInfo@0x000000011123ca9e [type=12(metadata) addr=0x000000011123e5cf offset=18] | [metadata_addr=0x000000011123e5d1 *=0x00000002679f4c18 offset=0]metadata_value=0x00000002679f4c18: method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x000000011123caa0: c028
relocInfo@0x000000011123caa0 [type=12(metadata) addr=0x000000011123e5f7 offset=40] | [metadata_addr=0x000000011123e5f9 *=0x00000002679f4c18 offset=0]metadata_value=0x00000002679f4c18: method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x000000011123caa2: c012
relocInfo@0x000000011123caa2 [type=12(metadata) addr=0x000000011123e609 offset=18] | [metadata_addr=0x000000011123e60b *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x000000011123caa4: c02c
relocInfo@0x000000011123caa4 [type=12(metadata) addr=0x000000011123e635 offset=44] | [metadata_addr=0x000000011123e637 *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x000000011123caa6: c039
relocInfo@0x000000011123caa6 [type=12(metadata) addr=0x000000011123e66e offset=57] | [metadata_addr=0x000000011123e670 *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x000000011123caa8: 1036
relocInfo@0x000000011123caa8 [type=1(oop) addr=0x000000011123e6a4 offset=54] | [oop_addr=0x000000011123e6a6 *=0x00000001976180e8 offset=0]
         @0x000000011123caaa: c00d
relocInfo@0x000000011123caaa [type=12(metadata) addr=0x000000011123e6b1 offset=13] | [metadata_addr=0x000000011123e6b3 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123caac: c012
relocInfo@0x000000011123caac [type=12(metadata) addr=0x000000011123e6c3 offset=18] | [metadata_addr=0x000000011123e6c5 *=0x0000000267a948b0 offset=0]metadata_value=0x0000000267a948b0: method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x000000011123caae: c02d
relocInfo@0x000000011123caae [type=12(metadata) addr=0x000000011123e6f0 offset=45] | [metadata_addr=0x000000011123e6f2 *=0x0000000267a948b0 offset=0]metadata_value=0x0000000267a948b0: method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x000000011123cab0: c012
relocInfo@0x000000011123cab0 [type=12(metadata) addr=0x000000011123e702 offset=18] | [metadata_addr=0x000000011123e704 *=0x0000000267a94a98 offset=0]metadata_value=0x0000000267a94a98: method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x000000011123cab2: c028
relocInfo@0x000000011123cab2 [type=12(metadata) addr=0x000000011123e72a offset=40] | [metadata_addr=0x000000011123e72c *=0x0000000267a94a98 offset=0]metadata_value=0x0000000267a94a98: method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x000000011123cab4: 1018
relocInfo@0x000000011123cab4 [type=1(oop) addr=0x000000011123e742 offset=24] | [oop_addr=0x000000011123e744 *=0x0000000197653a38 offset=0]
         @0x000000011123cab6: c00d
relocInfo@0x000000011123cab6 [type=12(metadata) addr=0x000000011123e74f offset=13] | [metadata_addr=0x000000011123e751 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cab8: c012
relocInfo@0x000000011123cab8 [type=12(metadata) addr=0x000000011123e761 offset=18] | [metadata_addr=0x000000011123e763 *=0x0000000267a95f60 offset=0]metadata_value=0x0000000267a95f60: method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x000000011123caba: c030
relocInfo@0x000000011123caba [type=12(metadata) addr=0x000000011123e791 offset=48] | [metadata_addr=0x000000011123e793 *=0x0000000267a95f60 offset=0]metadata_value=0x0000000267a95f60: method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x000000011123cabc: c012
relocInfo@0x000000011123cabc [type=12(metadata) addr=0x000000011123e7a3 offset=18] | [metadata_addr=0x000000011123e7a5 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cabe: c02d
relocInfo@0x000000011123cabe [type=12(metadata) addr=0x000000011123e7d0 offset=45] | [metadata_addr=0x000000011123e7d2 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cac0: c012
relocInfo@0x000000011123cac0 [type=12(metadata) addr=0x000000011123e7e2 offset=18] | [metadata_addr=0x000000011123e7e4 *=0x0000000267a96408 offset=0]metadata_value=0x0000000267a96408: method data for {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
         @0x000000011123cac2: 1028
relocInfo@0x000000011123cac2 [type=1(oop) addr=0x000000011123e80a offset=40] | [oop_addr=0x000000011123e80c *=0x00000001976180e8 offset=0]
         @0x000000011123cac4: c00d
relocInfo@0x000000011123cac4 [type=12(metadata) addr=0x000000011123e817 offset=13] | [metadata_addr=0x000000011123e819 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cac6: c015
relocInfo@0x000000011123cac6 [type=12(metadata) addr=0x000000011123e82c offset=21] | [metadata_addr=0x000000011123e82e *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cac8: c012
relocInfo@0x000000011123cac8 [type=12(metadata) addr=0x000000011123e83e offset=18] | [metadata_addr=0x000000011123e840 *=0x0000000267a95910 offset=0]metadata_value=0x0000000267a95910: method data for {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x000000011123caca: c02d
relocInfo@0x000000011123caca [type=12(metadata) addr=0x000000011123e86b offset=45] | [metadata_addr=0x000000011123e86d *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cacc: c012
relocInfo@0x000000011123cacc [type=12(metadata) addr=0x000000011123e87d offset=18] | [metadata_addr=0x000000011123e87f *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cace: c012
relocInfo@0x000000011123cace [type=12(metadata) addr=0x000000011123e88f offset=18] | [metadata_addr=0x000000011123e891 *=0x0000000267a96588 offset=0]metadata_value=0x0000000267a96588: method data for {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cad0: c028
relocInfo@0x000000011123cad0 [type=12(metadata) addr=0x000000011123e8b7 offset=40] | [metadata_addr=0x000000011123e8b9 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123cad2: 1011
relocInfo@0x000000011123cad2 [type=1(oop) addr=0x000000011123e8c8 offset=17] | [oop_addr=0x000000011123e8ca *=0x000000019765cae0 offset=0]
         @0x000000011123cad4: c019
relocInfo@0x000000011123cad4 [type=12(metadata) addr=0x000000011123e8e1 offset=25] | [metadata_addr=0x000000011123e8e3 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cad6: c012
relocInfo@0x000000011123cad6 [type=12(metadata) addr=0x000000011123e8f3 offset=18] | [metadata_addr=0x000000011123e8f5 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123cad8: c02d
relocInfo@0x000000011123cad8 [type=12(metadata) addr=0x000000011123e920 offset=45] | [metadata_addr=0x000000011123e922 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011123cada: c01d
relocInfo@0x000000011123cada [type=12(metadata) addr=0x000000011123e93d offset=29] | [metadata_addr=0x000000011123e93f *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123cadc: c012
relocInfo@0x000000011123cadc [type=12(metadata) addr=0x000000011123e94f offset=18] | [metadata_addr=0x000000011123e951 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011123cade: c028
relocInfo@0x000000011123cade [type=12(metadata) addr=0x000000011123e977 offset=40] | [metadata_addr=0x000000011123e979 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123cae0: 1011
relocInfo@0x000000011123cae0 [type=1(oop) addr=0x000000011123e988 offset=17] | [oop_addr=0x000000011123e98a *=0x000000019765c8d0 offset=0]
         @0x000000011123cae2: c019
relocInfo@0x000000011123cae2 [type=12(metadata) addr=0x000000011123e9a1 offset=25] | [metadata_addr=0x000000011123e9a3 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cae4: c01d
relocInfo@0x000000011123cae4 [type=12(metadata) addr=0x000000011123e9be offset=29] | [metadata_addr=0x000000011123e9c0 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cae6: 1012
relocInfo@0x000000011123cae6 [type=1(oop) addr=0x000000011123e9d0 offset=18] | [oop_addr=0x000000011123e9d2 *=0x0000000197618158 offset=0]
         @0x000000011123cae8: 100a
relocInfo@0x000000011123cae8 [type=1(oop) addr=0x000000011123e9da offset=10] | [oop_addr=0x000000011123e9dc *=0x000000011ff8c550 offset=0]
         @0x000000011123caea: 101c
relocInfo@0x000000011123caea [type=1(oop) addr=0x000000011123e9f6 offset=28] | [oop_addr=0x000000011123e9f8 *=0x00000001976180e8 offset=0]
         @0x000000011123caec: 100f
relocInfo@0x000000011123caec [type=1(oop) addr=0x000000011123ea05 offset=15] | [oop_addr=0x000000011123ea07 *=0x000000019765c8d0 offset=0]
         @0x000000011123caee: 4422
relocInfo@0x000000011123caee [type=4(static_call) addr=0x000000011123ea27 offset=34 format=1] | [destination=0x00000001186844c0 metadata=0x0000000000000000]
         @0x000000011123caf0: c00b
relocInfo@0x000000011123caf0 [type=12(metadata) addr=0x000000011123ea32 offset=11] | [metadata_addr=0x000000011123ea34 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123caf2: c016
relocInfo@0x000000011123caf2 [type=12(metadata) addr=0x000000011123ea48 offset=22] | [metadata_addr=0x000000011123ea4a *=0x0000000225d4ce30 offset=0]metadata_value=0x0000000225d4ce30: 'jdk/incubator/vector/DoubleVector'
         @0x000000011123caf4: c01b
relocInfo@0x000000011123caf4 [type=12(metadata) addr=0x000000011123ea63 offset=27] | [metadata_addr=0x000000011123ea65 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123caf6: c08a
relocInfo@0x000000011123caf6 [type=12(metadata) addr=0x000000011123eaed offset=138] | [metadata_addr=0x000000011123eaef *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123caf8: c02d
relocInfo@0x000000011123caf8 [type=12(metadata) addr=0x000000011123eb1a offset=45] | [metadata_addr=0x000000011123eb1c *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123cafa: c012
relocInfo@0x000000011123cafa [type=12(metadata) addr=0x000000011123eb2c offset=18] | [metadata_addr=0x000000011123eb2e *=0x0000000267a97298 offset=0]metadata_value=0x0000000267a97298: method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cafc: c02b
relocInfo@0x000000011123cafc [type=12(metadata) addr=0x000000011123eb57 offset=43] | [metadata_addr=0x000000011123eb59 *=0x0000000267a97298 offset=0]metadata_value=0x0000000267a97298: method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cafe: 108d
relocInfo@0x000000011123cafe [type=1(oop) addr=0x000000011123ebe4 offset=141] | [oop_addr=0x000000011123ebe6 *=0x0000000197665d58 offset=0]
         @0x000000011123cb00: f00a241b
relocInfo@0x000000011123cb02 [type=2(virtual_call) addr=0x000000011123ebff offset=27 format=1 data=10] | [destination=0x0000000118689900 cached_value=0x000000011123ebf5 metadata=0x0000000000000000]
         @0x000000011123cb04: c011
relocInfo@0x000000011123cb04 [type=12(metadata) addr=0x000000011123ec10 offset=17] | [metadata_addr=0x000000011123ec12 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123cb06: a02f
relocInfo@0x000000011123cb06 [type=10(poll) addr=0x000000011123ec3f offset=47]
         @0x000000011123cb08: c003
relocInfo@0x000000011123cb08 [type=12(metadata) addr=0x000000011123ec42 offset=3] | [metadata_addr=0x000000011123ec44 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123cb0a: 0066
relocInfo@0x000000011123cb0a [type=0(none) addr=0x000000011123eca8 offset=102]
         @0x000000011123cb0c: c01d
relocInfo@0x000000011123cb0c [type=12(metadata) addr=0x000000011123ecc5 offset=29] | [metadata_addr=0x000000011123ecc7 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123cb0e: f00a24a2
relocInfo@0x000000011123cb10 [type=2(virtual_call) addr=0x000000011123ed67 offset=162 format=1 data=10] | [destination=0x0000000110bf9f20 cached_value=0x000000011123ed5d metadata=0x0000000000000000]
         @0x000000011123cb12: 0011
relocInfo@0x000000011123cb12 [type=0(none) addr=0x000000011123ed78 offset=17]
         @0x000000011123cb14: c025
relocInfo@0x000000011123cb14 [type=12(metadata) addr=0x000000011123ed9d offset=37] | [metadata_addr=0x000000011123ed9f *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123cb16: f00a24b2
relocInfo@0x000000011123cb18 [type=2(virtual_call) addr=0x000000011123ee4f offset=178 format=1 data=10] | [destination=0x0000000110bf9f20 cached_value=0x000000011123ee45 metadata=0x0000000000000000]
         @0x000000011123cb1a: c06a
relocInfo@0x000000011123cb1a [type=12(metadata) addr=0x000000011123eeb9 offset=106] | [metadata_addr=0x000000011123eebb *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123cb1c: a034
relocInfo@0x000000011123cb1c [type=10(poll) addr=0x000000011123eeed offset=52]
         @0x000000011123cb1e: c003
relocInfo@0x000000011123cb1e [type=12(metadata) addr=0x000000011123eef0 offset=3] | [metadata_addr=0x000000011123eef2 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123cb20: c025
relocInfo@0x000000011123cb20 [type=12(metadata) addr=0x000000011123ef15 offset=37] | [metadata_addr=0x000000011123ef17 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123cb22: c064
relocInfo@0x000000011123cb22 [type=12(metadata) addr=0x000000011123ef79 offset=100] | [metadata_addr=0x000000011123ef7b *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123cb24: c012
relocInfo@0x000000011123cb24 [type=12(metadata) addr=0x000000011123ef8b offset=18] | [metadata_addr=0x000000011123ef8d *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cb26: 102d
relocInfo@0x000000011123cb26 [type=1(oop) addr=0x000000011123efb8 offset=45] | [oop_addr=0x000000011123efba *=0x00000001976180e8 offset=0]
         @0x000000011123cb28: c00d
relocInfo@0x000000011123cb28 [type=12(metadata) addr=0x000000011123efc5 offset=13] | [metadata_addr=0x000000011123efc7 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cb2a: c015
relocInfo@0x000000011123cb2a [type=12(metadata) addr=0x000000011123efda offset=21] | [metadata_addr=0x000000011123efdc *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cb2c: c08d
relocInfo@0x000000011123cb2c [type=12(metadata) addr=0x000000011123f067 offset=141] | [metadata_addr=0x000000011123f069 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cb2e: c012
relocInfo@0x000000011123cb2e [type=12(metadata) addr=0x000000011123f079 offset=18] | [metadata_addr=0x000000011123f07b *=0x0000000267a9e268 offset=0]metadata_value=0x0000000267a9e268: method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cb30: c02d
relocInfo@0x000000011123cb30 [type=12(metadata) addr=0x000000011123f0a6 offset=45] | [metadata_addr=0x000000011123f0a8 *=0x0000000267a9e268 offset=0]metadata_value=0x0000000267a9e268: method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cb32: c012
relocInfo@0x000000011123cb32 [type=12(metadata) addr=0x000000011123f0b8 offset=18] | [metadata_addr=0x000000011123f0ba *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123cb34: 1011
relocInfo@0x000000011123cb34 [type=1(oop) addr=0x000000011123f0c9 offset=17] | [oop_addr=0x000000011123f0cb *=0x000000019762aea0 offset=0]
         @0x000000011123cb36: c019
relocInfo@0x000000011123cb36 [type=12(metadata) addr=0x000000011123f0e2 offset=25] | [metadata_addr=0x000000011123f0e4 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cb38: c012
relocInfo@0x000000011123cb38 [type=12(metadata) addr=0x000000011123f0f4 offset=18] | [metadata_addr=0x000000011123f0f6 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123cb3a: c02d
relocInfo@0x000000011123cb3a [type=12(metadata) addr=0x000000011123f121 offset=45] | [metadata_addr=0x000000011123f123 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011123cb3c: c020
relocInfo@0x000000011123cb3c [type=12(metadata) addr=0x000000011123f141 offset=32] | [metadata_addr=0x000000011123f143 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123cb3e: c012
relocInfo@0x000000011123cb3e [type=12(metadata) addr=0x000000011123f153 offset=18] | [metadata_addr=0x000000011123f155 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011123cb40: c02d
relocInfo@0x000000011123cb40 [type=12(metadata) addr=0x000000011123f180 offset=45] | [metadata_addr=0x000000011123f182 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123cb42: 1011
relocInfo@0x000000011123cb42 [type=1(oop) addr=0x000000011123f191 offset=17] | [oop_addr=0x000000011123f193 *=0x000000019762ac90 offset=0]
         @0x000000011123cb44: c019
relocInfo@0x000000011123cb44 [type=12(metadata) addr=0x000000011123f1aa offset=25] | [metadata_addr=0x000000011123f1ac *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cb46: c02f
relocInfo@0x000000011123cb46 [type=12(metadata) addr=0x000000011123f1d9 offset=47] | [metadata_addr=0x000000011123f1db *=0x0000000225d54960 offset=0]metadata_value=0x0000000225d54960: 'jdk/incubator/vector/DoubleVector$$Lambda$87+0x0000000225d54960'
         @0x000000011123cb48: f80309b31f7700017014
relocInfo@0x000000011123cb50 [type=7(external_word) addr=0x000000011123f1ed offset=20 data={09b31f770001}] | [target=0x0000000109b31f77]
         @0x000000011123cb52: 640e
relocInfo@0x000000011123cb52 [type=6(runtime_call) addr=0x000000011123f1fb offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123cb54: c008
relocInfo@0x000000011123cb54 [type=12(metadata) addr=0x000000011123f203 offset=8] | [metadata_addr=0x000000011123f205 *=0x0000000225d54960 offset=0]metadata_value=0x0000000225d54960: 'jdk/incubator/vector/DoubleVector$$Lambda$87+0x0000000225d54960'
         @0x000000011123cb56: c049
relocInfo@0x000000011123cb56 [type=12(metadata) addr=0x000000011123f24c offset=73] | [metadata_addr=0x000000011123f24e *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cb58: 1012
relocInfo@0x000000011123cb58 [type=1(oop) addr=0x000000011123f25e offset=18] | [oop_addr=0x000000011123f260 *=0x0000000197618158 offset=0]
         @0x000000011123cb5a: 100a
relocInfo@0x000000011123cb5a [type=1(oop) addr=0x000000011123f268 offset=10] | [oop_addr=0x000000011123f26a *=0x000000011ff8c550 offset=0]
         @0x000000011123cb5c: 445f
relocInfo@0x000000011123cb5c [type=4(static_call) addr=0x000000011123f2c7 offset=95 format=1] | [destination=0x0000000110bfa220 metadata=0x0000000000000000]
         @0x000000011123cb5e: c00b
relocInfo@0x000000011123cb5e [type=12(metadata) addr=0x000000011123f2d2 offset=11] | [metadata_addr=0x000000011123f2d4 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cb60: c016
relocInfo@0x000000011123cb60 [type=12(metadata) addr=0x000000011123f2e8 offset=22] | [metadata_addr=0x000000011123f2ea *=0x0000000225d4ce30 offset=0]metadata_value=0x0000000225d4ce30: 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cb62: c01b
relocInfo@0x000000011123cb62 [type=12(metadata) addr=0x000000011123f303 offset=27] | [metadata_addr=0x000000011123f305 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cb64: c08a
relocInfo@0x000000011123cb64 [type=12(metadata) addr=0x000000011123f38d offset=138] | [metadata_addr=0x000000011123f38f *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cb66: c01f
relocInfo@0x000000011123cb66 [type=12(metadata) addr=0x000000011123f3ac offset=31] | [metadata_addr=0x000000011123f3ae *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123cb68: c012
relocInfo@0x000000011123cb68 [type=12(metadata) addr=0x000000011123f3be offset=18] | [metadata_addr=0x000000011123f3c0 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cb6a: c030
relocInfo@0x000000011123cb6a [type=12(metadata) addr=0x000000011123f3ee offset=48] | [metadata_addr=0x000000011123f3f0 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cb6c: c01a
relocInfo@0x000000011123cb6c [type=12(metadata) addr=0x000000011123f408 offset=26] | [metadata_addr=0x000000011123f40a *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cb6e: c08d
relocInfo@0x000000011123cb6e [type=12(metadata) addr=0x000000011123f495 offset=141] | [metadata_addr=0x000000011123f497 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cb70: c012
relocInfo@0x000000011123cb70 [type=12(metadata) addr=0x000000011123f4a7 offset=18] | [metadata_addr=0x000000011123f4a9 *=0x0000000267a9e268 offset=0]metadata_value=0x0000000267a9e268: method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cb72: c028
relocInfo@0x000000011123cb72 [type=12(metadata) addr=0x000000011123f4cf offset=40] | [metadata_addr=0x000000011123f4d1 *=0x0000000267a9e268 offset=0]metadata_value=0x0000000267a9e268: method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cb74: c012
relocInfo@0x000000011123cb74 [type=12(metadata) addr=0x000000011123f4e1 offset=18] | [metadata_addr=0x000000011123f4e3 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123cb76: c028
relocInfo@0x000000011123cb76 [type=12(metadata) addr=0x000000011123f509 offset=40] | [metadata_addr=0x000000011123f50b *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cb78: c012
relocInfo@0x000000011123cb78 [type=12(metadata) addr=0x000000011123f51b offset=18] | [metadata_addr=0x000000011123f51d *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123cb7a: c028
relocInfo@0x000000011123cb7a [type=12(metadata) addr=0x000000011123f543 offset=40] | [metadata_addr=0x000000011123f545 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011123cb7c: c020
relocInfo@0x000000011123cb7c [type=12(metadata) addr=0x000000011123f563 offset=32] | [metadata_addr=0x000000011123f565 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123cb7e: c012
relocInfo@0x000000011123cb7e [type=12(metadata) addr=0x000000011123f575 offset=18] | [metadata_addr=0x000000011123f577 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011123cb80: c028
relocInfo@0x000000011123cb80 [type=12(metadata) addr=0x000000011123f59d offset=40] | [metadata_addr=0x000000011123f59f *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123cb82: c028
relocInfo@0x000000011123cb82 [type=12(metadata) addr=0x000000011123f5c5 offset=40] | [metadata_addr=0x000000011123f5c7 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cb84: c02d
relocInfo@0x000000011123cb84 [type=12(metadata) addr=0x000000011123f5f2 offset=45] | [metadata_addr=0x000000011123f5f4 *=0x0000000225d54960 offset=0]metadata_value=0x0000000225d54960: 'jdk/incubator/vector/DoubleVector$$Lambda$87+0x0000000225d54960'
         @0x000000011123cb86: f80309b31f7700017014
relocInfo@0x000000011123cb8e [type=7(external_word) addr=0x000000011123f606 offset=20 data={09b31f770001}] | [target=0x0000000109b31f77]
         @0x000000011123cb90: 640e
relocInfo@0x000000011123cb90 [type=6(runtime_call) addr=0x000000011123f614 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123cb92: c007
relocInfo@0x000000011123cb92 [type=12(metadata) addr=0x000000011123f61b offset=7] | [metadata_addr=0x000000011123f61d *=0x0000000225d54960 offset=0]metadata_value=0x0000000225d54960: 'jdk/incubator/vector/DoubleVector$$Lambda$87+0x0000000225d54960'
         @0x000000011123cb94: c049
relocInfo@0x000000011123cb94 [type=12(metadata) addr=0x000000011123f664 offset=73] | [metadata_addr=0x000000011123f666 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cb96: 4443
relocInfo@0x000000011123cb96 [type=4(static_call) addr=0x000000011123f6a7 offset=67 format=1] | [destination=0x0000000110bfa220 metadata=0x0000000000000000]
         @0x000000011123cb98: c00b
relocInfo@0x000000011123cb98 [type=12(metadata) addr=0x000000011123f6b2 offset=11] | [metadata_addr=0x000000011123f6b4 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cb9a: c017
relocInfo@0x000000011123cb9a [type=12(metadata) addr=0x000000011123f6c9 offset=23] | [metadata_addr=0x000000011123f6cb *=0x0000000225d4ce30 offset=0]metadata_value=0x0000000225d4ce30: 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cb9c: c01c
relocInfo@0x000000011123cb9c [type=12(metadata) addr=0x000000011123f6e5 offset=28] | [metadata_addr=0x000000011123f6e7 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cb9e: c08a
relocInfo@0x000000011123cb9e [type=12(metadata) addr=0x000000011123f76f offset=138] | [metadata_addr=0x000000011123f771 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cba0: c082
relocInfo@0x000000011123cba0 [type=12(metadata) addr=0x000000011123f7f1 offset=130] | [metadata_addr=0x000000011123f7f3 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123cba2: c036
relocInfo@0x000000011123cba2 [type=12(metadata) addr=0x000000011123f827 offset=54] | [metadata_addr=0x000000011123f829 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123cba4: c012
relocInfo@0x000000011123cba4 [type=12(metadata) addr=0x000000011123f839 offset=18] | [metadata_addr=0x000000011123f83b *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cba6: 102d
relocInfo@0x000000011123cba6 [type=1(oop) addr=0x000000011123f866 offset=45] | [oop_addr=0x000000011123f868 *=0x00000001976180e8 offset=0]
         @0x000000011123cba8: c00a
relocInfo@0x000000011123cba8 [type=12(metadata) addr=0x000000011123f870 offset=10] | [metadata_addr=0x000000011123f872 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cbaa: c08d
relocInfo@0x000000011123cbaa [type=12(metadata) addr=0x000000011123f8fd offset=141] | [metadata_addr=0x000000011123f8ff *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cbac: c012
relocInfo@0x000000011123cbac [type=12(metadata) addr=0x000000011123f90f offset=18] | [metadata_addr=0x000000011123f911 *=0x0000000267a95d30 offset=0]metadata_value=0x0000000267a95d30: method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x000000011123cbae: c033
relocInfo@0x000000011123cbae [type=12(metadata) addr=0x000000011123f942 offset=51] | [metadata_addr=0x000000011123f944 *=0x0000000267a95d30 offset=0]metadata_value=0x0000000267a95d30: method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x000000011123cbb0: c012
relocInfo@0x000000011123cbb0 [type=12(metadata) addr=0x000000011123f954 offset=18] | [metadata_addr=0x000000011123f956 *=0x00000002679f4c18 offset=0]metadata_value=0x00000002679f4c18: method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x000000011123cbb2: c02d
relocInfo@0x000000011123cbb2 [type=12(metadata) addr=0x000000011123f981 offset=45] | [metadata_addr=0x000000011123f983 *=0x00000002679f4c18 offset=0]metadata_value=0x00000002679f4c18: method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x000000011123cbb4: c012
relocInfo@0x000000011123cbb4 [type=12(metadata) addr=0x000000011123f993 offset=18] | [metadata_addr=0x000000011123f995 *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x000000011123cbb6: c030
relocInfo@0x000000011123cbb6 [type=12(metadata) addr=0x000000011123f9c3 offset=48] | [metadata_addr=0x000000011123f9c5 *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x000000011123cbb8: c038
relocInfo@0x000000011123cbb8 [type=12(metadata) addr=0x000000011123f9fb offset=56] | [metadata_addr=0x000000011123f9fd *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x000000011123cbba: 1036
relocInfo@0x000000011123cbba [type=1(oop) addr=0x000000011123fa31 offset=54] | [oop_addr=0x000000011123fa33 *=0x00000001976180e8 offset=0]
         @0x000000011123cbbc: c00d
relocInfo@0x000000011123cbbc [type=12(metadata) addr=0x000000011123fa3e offset=13] | [metadata_addr=0x000000011123fa40 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cbbe: c012
relocInfo@0x000000011123cbbe [type=12(metadata) addr=0x000000011123fa50 offset=18] | [metadata_addr=0x000000011123fa52 *=0x0000000267a948b0 offset=0]metadata_value=0x0000000267a948b0: method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x000000011123cbc0: c02d
relocInfo@0x000000011123cbc0 [type=12(metadata) addr=0x000000011123fa7d offset=45] | [metadata_addr=0x000000011123fa7f *=0x0000000267a948b0 offset=0]metadata_value=0x0000000267a948b0: method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x000000011123cbc2: c012
relocInfo@0x000000011123cbc2 [type=12(metadata) addr=0x000000011123fa8f offset=18] | [metadata_addr=0x000000011123fa91 *=0x0000000267a94a98 offset=0]metadata_value=0x0000000267a94a98: method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x000000011123cbc4: c02d
relocInfo@0x000000011123cbc4 [type=12(metadata) addr=0x000000011123fabc offset=45] | [metadata_addr=0x000000011123fabe *=0x0000000267a94a98 offset=0]metadata_value=0x0000000267a94a98: method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x000000011123cbc6: 1019
relocInfo@0x000000011123cbc6 [type=1(oop) addr=0x000000011123fad5 offset=25] | [oop_addr=0x000000011123fad7 *=0x0000000197653a38 offset=0]
         @0x000000011123cbc8: c00d
relocInfo@0x000000011123cbc8 [type=12(metadata) addr=0x000000011123fae2 offset=13] | [metadata_addr=0x000000011123fae4 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cbca: c012
relocInfo@0x000000011123cbca [type=12(metadata) addr=0x000000011123faf4 offset=18] | [metadata_addr=0x000000011123faf6 *=0x0000000267a95f60 offset=0]metadata_value=0x0000000267a95f60: method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x000000011123cbcc: c030
relocInfo@0x000000011123cbcc [type=12(metadata) addr=0x000000011123fb24 offset=48] | [metadata_addr=0x000000011123fb26 *=0x0000000267a95f60 offset=0]metadata_value=0x0000000267a95f60: method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x000000011123cbce: c012
relocInfo@0x000000011123cbce [type=12(metadata) addr=0x000000011123fb36 offset=18] | [metadata_addr=0x000000011123fb38 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cbd0: c02d
relocInfo@0x000000011123cbd0 [type=12(metadata) addr=0x000000011123fb63 offset=45] | [metadata_addr=0x000000011123fb65 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cbd2: c012
relocInfo@0x000000011123cbd2 [type=12(metadata) addr=0x000000011123fb75 offset=18] | [metadata_addr=0x000000011123fb77 *=0x0000000267a96408 offset=0]metadata_value=0x0000000267a96408: method data for {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
         @0x000000011123cbd4: 102d
relocInfo@0x000000011123cbd4 [type=1(oop) addr=0x000000011123fba2 offset=45] | [oop_addr=0x000000011123fba4 *=0x00000001976180e8 offset=0]
         @0x000000011123cbd6: c00d
relocInfo@0x000000011123cbd6 [type=12(metadata) addr=0x000000011123fbaf offset=13] | [metadata_addr=0x000000011123fbb1 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cbd8: c015
relocInfo@0x000000011123cbd8 [type=12(metadata) addr=0x000000011123fbc4 offset=21] | [metadata_addr=0x000000011123fbc6 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cbda: c012
relocInfo@0x000000011123cbda [type=12(metadata) addr=0x000000011123fbd6 offset=18] | [metadata_addr=0x000000011123fbd8 *=0x0000000267a95910 offset=0]metadata_value=0x0000000267a95910: method data for {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x000000011123cbdc: c02d
relocInfo@0x000000011123cbdc [type=12(metadata) addr=0x000000011123fc03 offset=45] | [metadata_addr=0x000000011123fc05 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cbde: c012
relocInfo@0x000000011123cbde [type=12(metadata) addr=0x000000011123fc15 offset=18] | [metadata_addr=0x000000011123fc17 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cbe0: c012
relocInfo@0x000000011123cbe0 [type=12(metadata) addr=0x000000011123fc27 offset=18] | [metadata_addr=0x000000011123fc29 *=0x0000000267a96588 offset=0]metadata_value=0x0000000267a96588: method data for {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cbe2: c045
relocInfo@0x000000011123cbe2 [type=12(metadata) addr=0x000000011123fc6c offset=69] | [metadata_addr=0x000000011123fc6e *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123cbe4: 1011
relocInfo@0x000000011123cbe4 [type=1(oop) addr=0x000000011123fc7d offset=17] | [oop_addr=0x000000011123fc7f *=0x000000019765cae0 offset=0]
         @0x000000011123cbe6: c019
relocInfo@0x000000011123cbe6 [type=12(metadata) addr=0x000000011123fc96 offset=25] | [metadata_addr=0x000000011123fc98 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cbe8: c012
relocInfo@0x000000011123cbe8 [type=12(metadata) addr=0x000000011123fca8 offset=18] | [metadata_addr=0x000000011123fcaa *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123cbea: c02d
relocInfo@0x000000011123cbea [type=12(metadata) addr=0x000000011123fcd5 offset=45] | [metadata_addr=0x000000011123fcd7 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011123cbec: c01d
relocInfo@0x000000011123cbec [type=12(metadata) addr=0x000000011123fcf2 offset=29] | [metadata_addr=0x000000011123fcf4 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123cbee: c012
relocInfo@0x000000011123cbee [type=12(metadata) addr=0x000000011123fd04 offset=18] | [metadata_addr=0x000000011123fd06 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011123cbf0: c02d
relocInfo@0x000000011123cbf0 [type=12(metadata) addr=0x000000011123fd31 offset=45] | [metadata_addr=0x000000011123fd33 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123cbf2: 1011
relocInfo@0x000000011123cbf2 [type=1(oop) addr=0x000000011123fd42 offset=17] | [oop_addr=0x000000011123fd44 *=0x000000019765c8d0 offset=0]
         @0x000000011123cbf4: c019
relocInfo@0x000000011123cbf4 [type=12(metadata) addr=0x000000011123fd5b offset=25] | [metadata_addr=0x000000011123fd5d *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cbf6: c01d
relocInfo@0x000000011123cbf6 [type=12(metadata) addr=0x000000011123fd78 offset=29] | [metadata_addr=0x000000011123fd7a *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cbf8: 1012
relocInfo@0x000000011123cbf8 [type=1(oop) addr=0x000000011123fd8a offset=18] | [oop_addr=0x000000011123fd8c *=0x0000000197618158 offset=0]
         @0x000000011123cbfa: 100a
relocInfo@0x000000011123cbfa [type=1(oop) addr=0x000000011123fd94 offset=10] | [oop_addr=0x000000011123fd96 *=0x000000011ff8c550 offset=0]
         @0x000000011123cbfc: 1034
relocInfo@0x000000011123cbfc [type=1(oop) addr=0x000000011123fdc8 offset=52] | [oop_addr=0x000000011123fdca *=0x00000001976180e8 offset=0]
         @0x000000011123cbfe: 100f
relocInfo@0x000000011123cbfe [type=1(oop) addr=0x000000011123fdd7 offset=15] | [oop_addr=0x000000011123fdd9 *=0x000000019765c8d0 offset=0]
         @0x000000011123cc00: 4420
relocInfo@0x000000011123cc00 [type=4(static_call) addr=0x000000011123fdf7 offset=32 format=1] | [destination=0x0000000110bfa220 metadata=0x0000000000000000]
         @0x000000011123cc02: c00b
relocInfo@0x000000011123cc02 [type=12(metadata) addr=0x000000011123fe02 offset=11] | [metadata_addr=0x000000011123fe04 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc04: c016
relocInfo@0x000000011123cc04 [type=12(metadata) addr=0x000000011123fe18 offset=22] | [metadata_addr=0x000000011123fe1a *=0x0000000225d4ce30 offset=0]metadata_value=0x0000000225d4ce30: 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc06: c01b
relocInfo@0x000000011123cc06 [type=12(metadata) addr=0x000000011123fe33 offset=27] | [metadata_addr=0x000000011123fe35 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc08: c08a
relocInfo@0x000000011123cc08 [type=12(metadata) addr=0x000000011123febd offset=138] | [metadata_addr=0x000000011123febf *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc0a: c025
relocInfo@0x000000011123cc0a [type=12(metadata) addr=0x000000011123fee2 offset=37] | [metadata_addr=0x000000011123fee4 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123cc0c: c012
relocInfo@0x000000011123cc0c [type=12(metadata) addr=0x000000011123fef4 offset=18] | [metadata_addr=0x000000011123fef6 *=0x0000000267a9e688 offset=0]metadata_value=0x0000000267a9e688: method data for {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc0e: c02b
relocInfo@0x000000011123cc0e [type=12(metadata) addr=0x000000011123ff1f offset=43] | [metadata_addr=0x000000011123ff21 *=0x0000000267a9e688 offset=0]metadata_value=0x0000000267a9e688: method data for {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc10: c012
relocInfo@0x000000011123cc10 [type=12(metadata) addr=0x000000011123ff31 offset=18] | [metadata_addr=0x000000011123ff33 *=0x0000000267a9e870 offset=0]metadata_value=0x0000000267a9e870: method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc12: c02b
relocInfo@0x000000011123cc12 [type=12(metadata) addr=0x000000011123ff5c offset=43] | [metadata_addr=0x000000011123ff5e *=0x0000000267a9e870 offset=0]metadata_value=0x0000000267a9e870: method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc14: f00a24ab
relocInfo@0x000000011123cc16 [type=2(virtual_call) addr=0x0000000111240007 offset=171 format=1 data=10] | [destination=0x0000000110bf9f20 cached_value=0x000000011123fffd metadata=0x0000000000000000]
         @0x000000011123cc18: c00d
relocInfo@0x000000011123cc18 [type=12(metadata) addr=0x0000000111240014 offset=13] | [metadata_addr=0x0000000111240016 *=0x0000000267a9e870 offset=0]metadata_value=0x0000000267a9e870: method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc1a: 108d
relocInfo@0x000000011123cc1a [type=1(oop) addr=0x00000001112400a1 offset=141] | [oop_addr=0x00000001112400a3 *=0x0000000197665dd8 offset=0]
         @0x000000011123cc1c: f00a2426
relocInfo@0x000000011123cc1e [type=2(virtual_call) addr=0x00000001112400c7 offset=38 format=1 data=10] | [destination=0x0000000110bf9f20 cached_value=0x00000001112400bd metadata=0x0000000000000000]
         @0x000000011123cc20: c00d
relocInfo@0x000000011123cc20 [type=12(metadata) addr=0x00000001112400d4 offset=13] | [metadata_addr=0x00000001112400d6 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123cc22: c012
relocInfo@0x000000011123cc22 [type=12(metadata) addr=0x00000001112400e6 offset=18] | [metadata_addr=0x00000001112400e8 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc24: 1028
relocInfo@0x000000011123cc24 [type=1(oop) addr=0x000000011124010e offset=40] | [oop_addr=0x0000000111240110 *=0x00000001976180e8 offset=0]
         @0x000000011123cc26: c00a
relocInfo@0x000000011123cc26 [type=12(metadata) addr=0x0000000111240118 offset=10] | [metadata_addr=0x000000011124011a *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc28: c098
relocInfo@0x000000011123cc28 [type=12(metadata) addr=0x00000001112401b0 offset=152] | [metadata_addr=0x00000001112401b2 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc2a: c012
relocInfo@0x000000011123cc2a [type=12(metadata) addr=0x00000001112401c2 offset=18] | [metadata_addr=0x00000001112401c4 *=0x0000000267a95d30 offset=0]metadata_value=0x0000000267a95d30: method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x000000011123cc2c: c03a
relocInfo@0x000000011123cc2c [type=12(metadata) addr=0x00000001112401fc offset=58] | [metadata_addr=0x00000001112401fe *=0x0000000267a95d30 offset=0]metadata_value=0x0000000267a95d30: method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x000000011123cc2e: c012
relocInfo@0x000000011123cc2e [type=12(metadata) addr=0x000000011124020e offset=18] | [metadata_addr=0x0000000111240210 *=0x00000002679f4c18 offset=0]metadata_value=0x00000002679f4c18: method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x000000011123cc30: c028
relocInfo@0x000000011123cc30 [type=12(metadata) addr=0x0000000111240236 offset=40] | [metadata_addr=0x0000000111240238 *=0x00000002679f4c18 offset=0]metadata_value=0x00000002679f4c18: method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x000000011123cc32: c012
relocInfo@0x000000011123cc32 [type=12(metadata) addr=0x0000000111240248 offset=18] | [metadata_addr=0x000000011124024a *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x000000011123cc34: c02b
relocInfo@0x000000011123cc34 [type=12(metadata) addr=0x0000000111240273 offset=43] | [metadata_addr=0x0000000111240275 *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x000000011123cc36: c038
relocInfo@0x000000011123cc36 [type=12(metadata) addr=0x00000001112402ab offset=56] | [metadata_addr=0x00000001112402ad *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x000000011123cc38: 1036
relocInfo@0x000000011123cc38 [type=1(oop) addr=0x00000001112402e1 offset=54] | [oop_addr=0x00000001112402e3 *=0x00000001976180e8 offset=0]
         @0x000000011123cc3a: c00d
relocInfo@0x000000011123cc3a [type=12(metadata) addr=0x00000001112402ee offset=13] | [metadata_addr=0x00000001112402f0 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc3c: c012
relocInfo@0x000000011123cc3c [type=12(metadata) addr=0x0000000111240300 offset=18] | [metadata_addr=0x0000000111240302 *=0x0000000267a948b0 offset=0]metadata_value=0x0000000267a948b0: method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x000000011123cc3e: c02d
relocInfo@0x000000011123cc3e [type=12(metadata) addr=0x000000011124032d offset=45] | [metadata_addr=0x000000011124032f *=0x0000000267a948b0 offset=0]metadata_value=0x0000000267a948b0: method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x000000011123cc40: c012
relocInfo@0x000000011123cc40 [type=12(metadata) addr=0x000000011124033f offset=18] | [metadata_addr=0x0000000111240341 *=0x0000000267a94a98 offset=0]metadata_value=0x0000000267a94a98: method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x000000011123cc42: c028
relocInfo@0x000000011123cc42 [type=12(metadata) addr=0x0000000111240367 offset=40] | [metadata_addr=0x0000000111240369 *=0x0000000267a94a98 offset=0]metadata_value=0x0000000267a94a98: method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x000000011123cc44: 1018
relocInfo@0x000000011123cc44 [type=1(oop) addr=0x000000011124037f offset=24] | [oop_addr=0x0000000111240381 *=0x0000000197653a38 offset=0]
         @0x000000011123cc46: c00d
relocInfo@0x000000011123cc46 [type=12(metadata) addr=0x000000011124038c offset=13] | [metadata_addr=0x000000011124038e *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc48: c012
relocInfo@0x000000011123cc48 [type=12(metadata) addr=0x000000011124039e offset=18] | [metadata_addr=0x00000001112403a0 *=0x0000000267a95f60 offset=0]metadata_value=0x0000000267a95f60: method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x000000011123cc4a: c030
relocInfo@0x000000011123cc4a [type=12(metadata) addr=0x00000001112403ce offset=48] | [metadata_addr=0x00000001112403d0 *=0x0000000267a95f60 offset=0]metadata_value=0x0000000267a95f60: method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x000000011123cc4c: c012
relocInfo@0x000000011123cc4c [type=12(metadata) addr=0x00000001112403e0 offset=18] | [metadata_addr=0x00000001112403e2 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc4e: c02d
relocInfo@0x000000011123cc4e [type=12(metadata) addr=0x000000011124040d offset=45] | [metadata_addr=0x000000011124040f *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc50: c012
relocInfo@0x000000011123cc50 [type=12(metadata) addr=0x000000011124041f offset=18] | [metadata_addr=0x0000000111240421 *=0x0000000267a96408 offset=0]metadata_value=0x0000000267a96408: method data for {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
         @0x000000011123cc52: 1028
relocInfo@0x000000011123cc52 [type=1(oop) addr=0x0000000111240447 offset=40] | [oop_addr=0x0000000111240449 *=0x00000001976180e8 offset=0]
         @0x000000011123cc54: c00d
relocInfo@0x000000011123cc54 [type=12(metadata) addr=0x0000000111240454 offset=13] | [metadata_addr=0x0000000111240456 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc56: c015
relocInfo@0x000000011123cc56 [type=12(metadata) addr=0x0000000111240469 offset=21] | [metadata_addr=0x000000011124046b *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc58: c012
relocInfo@0x000000011123cc58 [type=12(metadata) addr=0x000000011124047b offset=18] | [metadata_addr=0x000000011124047d *=0x0000000267a95910 offset=0]metadata_value=0x0000000267a95910: method data for {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x000000011123cc5a: c02d
relocInfo@0x000000011123cc5a [type=12(metadata) addr=0x00000001112404a8 offset=45] | [metadata_addr=0x00000001112404aa *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc5c: c012
relocInfo@0x000000011123cc5c [type=12(metadata) addr=0x00000001112404ba offset=18] | [metadata_addr=0x00000001112404bc *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc5e: c012
relocInfo@0x000000011123cc5e [type=12(metadata) addr=0x00000001112404cc offset=18] | [metadata_addr=0x00000001112404ce *=0x0000000267a96588 offset=0]metadata_value=0x0000000267a96588: method data for {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc60: c028
relocInfo@0x000000011123cc60 [type=12(metadata) addr=0x00000001112404f4 offset=40] | [metadata_addr=0x00000001112404f6 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123cc62: 1011
relocInfo@0x000000011123cc62 [type=1(oop) addr=0x0000000111240505 offset=17] | [oop_addr=0x0000000111240507 *=0x000000019765cae0 offset=0]
         @0x000000011123cc64: c019
relocInfo@0x000000011123cc64 [type=12(metadata) addr=0x000000011124051e offset=25] | [metadata_addr=0x0000000111240520 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc66: c012
relocInfo@0x000000011123cc66 [type=12(metadata) addr=0x0000000111240530 offset=18] | [metadata_addr=0x0000000111240532 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123cc68: c02d
relocInfo@0x000000011123cc68 [type=12(metadata) addr=0x000000011124055d offset=45] | [metadata_addr=0x000000011124055f *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011123cc6a: c01d
relocInfo@0x000000011123cc6a [type=12(metadata) addr=0x000000011124057a offset=29] | [metadata_addr=0x000000011124057c *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123cc6c: c012
relocInfo@0x000000011123cc6c [type=12(metadata) addr=0x000000011124058c offset=18] | [metadata_addr=0x000000011124058e *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011123cc6e: c028
relocInfo@0x000000011123cc6e [type=12(metadata) addr=0x00000001112405b4 offset=40] | [metadata_addr=0x00000001112405b6 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123cc70: 1011
relocInfo@0x000000011123cc70 [type=1(oop) addr=0x00000001112405c5 offset=17] | [oop_addr=0x00000001112405c7 *=0x000000019765c8d0 offset=0]
         @0x000000011123cc72: c019
relocInfo@0x000000011123cc72 [type=12(metadata) addr=0x00000001112405de offset=25] | [metadata_addr=0x00000001112405e0 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc74: c01d
relocInfo@0x000000011123cc74 [type=12(metadata) addr=0x00000001112405fb offset=29] | [metadata_addr=0x00000001112405fd *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc76: 1012
relocInfo@0x000000011123cc76 [type=1(oop) addr=0x000000011124060d offset=18] | [oop_addr=0x000000011124060f *=0x0000000197618158 offset=0]
         @0x000000011123cc78: 100a
relocInfo@0x000000011123cc78 [type=1(oop) addr=0x0000000111240617 offset=10] | [oop_addr=0x0000000111240619 *=0x000000011ff8c550 offset=0]
         @0x000000011123cc7a: 101b
relocInfo@0x000000011123cc7a [type=1(oop) addr=0x0000000111240632 offset=27] | [oop_addr=0x0000000111240634 *=0x00000001976180e8 offset=0]
         @0x000000011123cc7c: 100f
relocInfo@0x000000011123cc7c [type=1(oop) addr=0x0000000111240641 offset=15] | [oop_addr=0x0000000111240643 *=0x000000019765c8d0 offset=0]
         @0x000000011123cc7e: 441e
relocInfo@0x000000011123cc7e [type=4(static_call) addr=0x000000011124065f offset=30 format=1] | [destination=0x0000000110bfa220 metadata=0x0000000000000000]
         @0x000000011123cc80: c00b
relocInfo@0x000000011123cc80 [type=12(metadata) addr=0x000000011124066a offset=11] | [metadata_addr=0x000000011124066c *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc82: c016
relocInfo@0x000000011123cc82 [type=12(metadata) addr=0x0000000111240680 offset=22] | [metadata_addr=0x0000000111240682 *=0x0000000225d4ce30 offset=0]metadata_value=0x0000000225d4ce30: 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc84: c01b
relocInfo@0x000000011123cc84 [type=12(metadata) addr=0x000000011124069b offset=27] | [metadata_addr=0x000000011124069d *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc86: c08a
relocInfo@0x000000011123cc86 [type=12(metadata) addr=0x0000000111240725 offset=138] | [metadata_addr=0x0000000111240727 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc88: c025
relocInfo@0x000000011123cc88 [type=12(metadata) addr=0x000000011124074a offset=37] | [metadata_addr=0x000000011124074c *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123cc8a: c012
relocInfo@0x000000011123cc8a [type=12(metadata) addr=0x000000011124075c offset=18] | [metadata_addr=0x000000011124075e *=0x0000000267a9e688 offset=0]metadata_value=0x0000000267a9e688: method data for {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc8c: c02b
relocInfo@0x000000011123cc8c [type=12(metadata) addr=0x0000000111240787 offset=43] | [metadata_addr=0x0000000111240789 *=0x0000000267a9e688 offset=0]metadata_value=0x0000000267a9e688: method data for {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc8e: c012
relocInfo@0x000000011123cc8e [type=12(metadata) addr=0x0000000111240799 offset=18] | [metadata_addr=0x000000011124079b *=0x0000000267a9e870 offset=0]metadata_value=0x0000000267a9e870: method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc90: c02b
relocInfo@0x000000011123cc90 [type=12(metadata) addr=0x00000001112407c4 offset=43] | [metadata_addr=0x00000001112407c6 *=0x0000000267a9e870 offset=0]metadata_value=0x0000000267a9e870: method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc92: f00a24ab
relocInfo@0x000000011123cc94 [type=2(virtual_call) addr=0x000000011124086f offset=171 format=1 data=10] | [destination=0x0000000110bf9f20 cached_value=0x0000000111240865 metadata=0x0000000000000000]
         @0x000000011123cc96: c00d
relocInfo@0x000000011123cc96 [type=12(metadata) addr=0x000000011124087c offset=13] | [metadata_addr=0x000000011124087e *=0x0000000267a9e870 offset=0]metadata_value=0x0000000267a9e870: method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cc98: 108d
relocInfo@0x000000011123cc98 [type=1(oop) addr=0x0000000111240909 offset=141] | [oop_addr=0x000000011124090b *=0x0000000197665dd8 offset=0]
         @0x000000011123cc9a: f00a2426
relocInfo@0x000000011123cc9c [type=2(virtual_call) addr=0x000000011124092f offset=38 format=1 data=10] | [destination=0x0000000110bf9f20 cached_value=0x0000000111240925 metadata=0x0000000000000000]
         @0x000000011123cc9e: c00b
relocInfo@0x000000011123cc9e [type=12(metadata) addr=0x000000011124093a offset=11] | [metadata_addr=0x000000011124093c *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123cca0: c012
relocInfo@0x000000011123cca0 [type=12(metadata) addr=0x000000011124094c offset=18] | [metadata_addr=0x000000011124094e *=0x0000000267a9ea98 offset=0]metadata_value=0x0000000267a9ea98: method data for {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cca2: c02b
relocInfo@0x000000011123cca2 [type=12(metadata) addr=0x0000000111240977 offset=43] | [metadata_addr=0x0000000111240979 *=0x0000000267a9ea98 offset=0]metadata_value=0x0000000267a9ea98: method data for {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cca4: 108d
relocInfo@0x000000011123cca4 [type=1(oop) addr=0x0000000111240a04 offset=141] | [oop_addr=0x0000000111240a06 *=0x0000000197665e58 offset=0]
         @0x000000011123cca6: f00a242b
relocInfo@0x000000011123cca8 [type=2(virtual_call) addr=0x0000000111240a2f offset=43 format=1 data=10] | [destination=0x0000000110bf9f20 cached_value=0x0000000111240a25 metadata=0x0000000000000000]
         @0x000000011123ccaa: c013
relocInfo@0x000000011123ccaa [type=12(metadata) addr=0x0000000111240a42 offset=19] | [metadata_addr=0x0000000111240a44 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123ccac: c012
relocInfo@0x000000011123ccac [type=12(metadata) addr=0x0000000111240a54 offset=18] | [metadata_addr=0x0000000111240a56 *=0x0000000267a97298 offset=0]metadata_value=0x0000000267a97298: method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ccae: c02b
relocInfo@0x000000011123ccae [type=12(metadata) addr=0x0000000111240a7f offset=43] | [metadata_addr=0x0000000111240a81 *=0x0000000267a97298 offset=0]metadata_value=0x0000000267a97298: method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ccb0: 108d
relocInfo@0x000000011123ccb0 [type=1(oop) addr=0x0000000111240b0c offset=141] | [oop_addr=0x0000000111240b0e *=0x0000000197665d58 offset=0]
         @0x000000011123ccb2: f00a242b
relocInfo@0x000000011123ccb4 [type=2(virtual_call) addr=0x0000000111240b37 offset=43 format=1 data=10] | [destination=0x0000000110bf9f20 cached_value=0x0000000111240b2d metadata=0x0000000000000000]
         @0x000000011123ccb6: c013
relocInfo@0x000000011123ccb6 [type=12(metadata) addr=0x0000000111240b4a offset=19] | [metadata_addr=0x0000000111240b4c *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123ccb8: c012
relocInfo@0x000000011123ccb8 [type=12(metadata) addr=0x0000000111240b5c offset=18] | [metadata_addr=0x0000000111240b5e *=0x0000000267a9ea98 offset=0]metadata_value=0x0000000267a9ea98: method data for {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ccba: c02b
relocInfo@0x000000011123ccba [type=12(metadata) addr=0x0000000111240b87 offset=43] | [metadata_addr=0x0000000111240b89 *=0x0000000267a9ea98 offset=0]metadata_value=0x0000000267a9ea98: method data for {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ccbc: f00a24b0
relocInfo@0x000000011123ccbe [type=2(virtual_call) addr=0x0000000111240c37 offset=176 format=1 data=10] | [destination=0x0000000110bf9f20 cached_value=0x0000000111240c2d metadata=0x0000000000000000]
         @0x000000011123ccc0: c013
relocInfo@0x000000011123ccc0 [type=12(metadata) addr=0x0000000111240c4a offset=19] | [metadata_addr=0x0000000111240c4c *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123ccc2: c012
relocInfo@0x000000011123ccc2 [type=12(metadata) addr=0x0000000111240c5c offset=18] | [metadata_addr=0x0000000111240c5e *=0x0000000267a97298 offset=0]metadata_value=0x0000000267a97298: method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ccc4: c02b
relocInfo@0x000000011123ccc4 [type=12(metadata) addr=0x0000000111240c87 offset=43] | [metadata_addr=0x0000000111240c89 *=0x0000000267a97298 offset=0]metadata_value=0x0000000267a97298: method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ccc6: f00a24a8
relocInfo@0x000000011123ccc8 [type=2(virtual_call) addr=0x0000000111240d2f offset=168 format=1 data=10] | [destination=0x0000000110bf9f20 cached_value=0x0000000111240d25 metadata=0x0000000000000000]
         @0x000000011123ccca: c00f
relocInfo@0x000000011123ccca [type=12(metadata) addr=0x0000000111240d3e offset=15] | [metadata_addr=0x0000000111240d40 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123cccc: a02f
relocInfo@0x000000011123cccc [type=10(poll) addr=0x0000000111240d6d offset=47]
         @0x000000011123ccce: c003
relocInfo@0x000000011123ccce [type=12(metadata) addr=0x0000000111240d70 offset=3] | [metadata_addr=0x0000000111240d72 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123ccd0: 0040
relocInfo@0x000000011123ccd0 [type=0(none) addr=0x0000000111240db0 offset=64]
         @0x000000011123ccd2: c01f
relocInfo@0x000000011123ccd2 [type=12(metadata) addr=0x0000000111240dcf offset=31] | [metadata_addr=0x0000000111240dd1 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123ccd4: f00a24a0
relocInfo@0x000000011123ccd6 [type=2(virtual_call) addr=0x0000000111240e6f offset=160 format=1 data=10] | [destination=0x0000000110bf9f20 cached_value=0x0000000111240e65 metadata=0x0000000000000000]
         @0x000000011123ccd8: 9405
relocInfo@0x000000011123ccd8 [type=9(section_word) addr=0x0000000111240e74 offset=5 format=1] | [target=0x000000011123d220]
         @0x000000011123ccda: 000c
relocInfo@0x000000011123ccda [type=0(none) addr=0x0000000111240e80 offset=12]
         @0x000000011123ccdc: c01f
relocInfo@0x000000011123ccdc [type=12(metadata) addr=0x0000000111240e9f offset=31] | [metadata_addr=0x0000000111240ea1 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123ccde: f00a24a8
relocInfo@0x000000011123cce0 [type=2(virtual_call) addr=0x0000000111240f47 offset=168 format=1 data=10] | [destination=0x0000000110bf9f20 cached_value=0x0000000111240f3d metadata=0x0000000000000000]
         @0x000000011123cce2: f801ffe09405
relocInfo@0x000000011123cce6 [type=9(section_word) addr=0x0000000111240f4c offset=5 format=1 data=-32] | [target=0x000000011123d228]
         @0x000000011123cce8: c080
relocInfo@0x000000011123cce8 [type=12(metadata) addr=0x0000000111240fcc offset=128] | [metadata_addr=0x0000000111240fce *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123ccea: a02f
relocInfo@0x000000011123ccea [type=10(poll) addr=0x0000000111240ffb offset=47]
         @0x000000011123ccec: c003
relocInfo@0x000000011123ccec [type=12(metadata) addr=0x0000000111240ffe offset=3] | [metadata_addr=0x0000000111241000 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123ccee: c01a
relocInfo@0x000000011123ccee [type=12(metadata) addr=0x0000000111241018 offset=26] | [metadata_addr=0x000000011124101a *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123ccf0: b06a
relocInfo@0x000000011123ccf0 [type=11(poll_return) addr=0x0000000111241082 offset=106]
         @0x000000011123ccf2: c026
relocInfo@0x000000011123ccf2 [type=12(metadata) addr=0x00000001112410a8 offset=38] | [metadata_addr=0x00000001112410aa *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x000000011123ccf4: 1012
relocInfo@0x000000011123ccf4 [type=1(oop) addr=0x00000001112410ba offset=18] | [oop_addr=0x00000001112410bc *=0x0000000000000000 offset=0]
         @0x000000011123ccf6: 4415
relocInfo@0x000000011123ccf6 [type=4(static_call) addr=0x00000001112410cf offset=21 format=1] | [destination=0x0000000110bfa220 metadata=0x0000000000000000]
         @0x000000011123ccf8: c018
relocInfo@0x000000011123ccf8 [type=12(metadata) addr=0x00000001112410e7 offset=24] | [metadata_addr=0x00000001112410e9 *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x000000011123ccfa: 1012
relocInfo@0x000000011123ccfa [type=1(oop) addr=0x00000001112410f9 offset=18] | [oop_addr=0x00000001112410fb *=0x0000000000000000 offset=0]
         @0x000000011123ccfc: 441e
relocInfo@0x000000011123ccfc [type=4(static_call) addr=0x0000000111241117 offset=30 format=1] | [destination=0x0000000110bfa220 metadata=0x0000000000000000]
         @0x000000011123ccfe: c026
relocInfo@0x000000011123ccfe [type=12(metadata) addr=0x000000011124113d offset=38] | [metadata_addr=0x000000011124113f *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x000000011123cd00: 1012
relocInfo@0x000000011123cd00 [type=1(oop) addr=0x000000011124114f offset=18] | [oop_addr=0x0000000111241151 *=0x0000000000000000 offset=0]
         @0x000000011123cd02: 4418
relocInfo@0x000000011123cd02 [type=4(static_call) addr=0x0000000111241167 offset=24 format=1] | [destination=0x0000000110bfa220 metadata=0x0000000000000000]
         @0x000000011123cd04: c015
relocInfo@0x000000011123cd04 [type=12(metadata) addr=0x000000011124117c offset=21] | [metadata_addr=0x000000011124117e *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x000000011123cd06: 1012
relocInfo@0x000000011123cd06 [type=1(oop) addr=0x000000011124118e offset=18] | [oop_addr=0x0000000111241190 *=0x0000000000000000 offset=0]
         @0x000000011123cd08: 4419
relocInfo@0x000000011123cd08 [type=4(static_call) addr=0x00000001112411a7 offset=25 format=1] | [destination=0x0000000110bfa220 metadata=0x0000000000000000]
         @0x000000011123cd0a: 0011
relocInfo@0x000000011123cd0a [type=0(none) addr=0x00000001112411b8 offset=17]
         @0x000000011123cd0c: c05a
relocInfo@0x000000011123cd0c [type=12(metadata) addr=0x0000000111241212 offset=90] | [metadata_addr=0x0000000111241214 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123cd0e: 1012
relocInfo@0x000000011123cd0e [type=1(oop) addr=0x0000000111241224 offset=18] | [oop_addr=0x0000000111241226 *=0x00000001977000d0 offset=0]
         @0x000000011123cd10: 341b
relocInfo@0x000000011123cd10 [type=3(opt_virtual_call) addr=0x000000011124123f offset=27 format=1] | [destination=0x0000000110bf9c20 metadata=0x0000000000000000]
         @0x000000011123cd12: 64a3
relocInfo@0x000000011123cd12 [type=6(runtime_call) addr=0x00000001112412e2 offset=163 format=1] | [destination=0x00000001097810a0]
         @0x000000011123cd14: c09c
relocInfo@0x000000011123cd14 [type=12(metadata) addr=0x000000011124137e offset=156] | [metadata_addr=0x0000000111241380 *=0x000000026788fe18 offset=0]metadata_value=0x000000026788fe18: {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123cd16: 6417
relocInfo@0x000000011123cd16 [type=6(runtime_call) addr=0x0000000111241395 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cd18: 640a
relocInfo@0x000000011123cd18 [type=6(runtime_call) addr=0x000000011124139f offset=10 format=1] | [destination=0x0000000110b44540]
         @0x000000011123cd1a: f80309b26b6900017005
relocInfo@0x000000011123cd22 [type=7(external_word) addr=0x00000001112413a4 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123cd24: 640e
relocInfo@0x000000011123cd24 [type=6(runtime_call) addr=0x00000001112413b2 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123cd26: 6406
relocInfo@0x000000011123cd26 [type=6(runtime_call) addr=0x00000001112413b8 offset=6 format=1] | [destination=0x0000000110b44540]
         @0x000000011123cd28: f80309b26b6900017005
relocInfo@0x000000011123cd30 [type=7(external_word) addr=0x00000001112413bd offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123cd32: 640e
relocInfo@0x000000011123cd32 [type=6(runtime_call) addr=0x00000001112413cb offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123cd34: c006
relocInfo@0x000000011123cd34 [type=12(metadata) addr=0x00000001112413d1 offset=6] | [metadata_addr=0x00000001112413d3 *=0x0000000267b3fa08 offset=0]metadata_value=0x0000000267b3fa08: {method} {0x0000000267b3fa08} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
         @0x000000011123cd36: 6417
relocInfo@0x000000011123cd36 [type=6(runtime_call) addr=0x00000001112413e8 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cd38: c00a
relocInfo@0x000000011123cd38 [type=12(metadata) addr=0x00000001112413f2 offset=10] | [metadata_addr=0x00000001112413f4 *=0x0000000267b96588 offset=0]metadata_value=0x0000000267b96588: {method} {0x0000000267b96588} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x000000011123cd3a: 6417
relocInfo@0x000000011123cd3a [type=6(runtime_call) addr=0x0000000111241409 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cd3c: c00a
relocInfo@0x000000011123cd3c [type=12(metadata) addr=0x0000000111241413 offset=10] | [metadata_addr=0x0000000111241415 *=0x0000000267b17448 offset=0]metadata_value=0x0000000267b17448: {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cd3e: 6417
relocInfo@0x000000011123cd3e [type=6(runtime_call) addr=0x000000011124142a offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cd40: c00a
relocInfo@0x000000011123cd40 [type=12(metadata) addr=0x0000000111241434 offset=10] | [metadata_addr=0x0000000111241436 *=0x0000000267b17270 offset=0]metadata_value=0x0000000267b17270: {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cd42: 6417
relocInfo@0x000000011123cd42 [type=6(runtime_call) addr=0x000000011124144b offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cd44: c00a
relocInfo@0x000000011123cd44 [type=12(metadata) addr=0x0000000111241455 offset=10] | [metadata_addr=0x0000000111241457 *=0x000000011040aa78 offset=0]metadata_value=0x000000011040aa78: {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123cd46: 6417
relocInfo@0x000000011123cd46 [type=6(runtime_call) addr=0x000000011124146c offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cd48: c00a
relocInfo@0x000000011123cd48 [type=12(metadata) addr=0x0000000111241476 offset=10] | [metadata_addr=0x0000000111241478 *=0x0000000110409a78 offset=0]metadata_value=0x0000000110409a78: {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011123cd4a: 6417
relocInfo@0x000000011123cd4a [type=6(runtime_call) addr=0x000000011124148d offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cd4c: 640e
relocInfo@0x000000011123cd4c [type=6(runtime_call) addr=0x000000011124149b offset=14 format=1] | [destination=0x0000000110b41ac0]
         @0x000000011123cd4e: f80309b26b6900017005
relocInfo@0x000000011123cd56 [type=7(external_word) addr=0x00000001112414a0 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123cd58: 640e
relocInfo@0x000000011123cd58 [type=6(runtime_call) addr=0x00000001112414ae offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123cd5a: c006
relocInfo@0x000000011123cd5a [type=12(metadata) addr=0x00000001112414b4 offset=6] | [metadata_addr=0x00000001112414b6 *=0x0000000267b17448 offset=0]metadata_value=0x0000000267b17448: {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cd5c: 6417
relocInfo@0x000000011123cd5c [type=6(runtime_call) addr=0x00000001112414cb offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cd5e: c00a
relocInfo@0x000000011123cd5e [type=12(metadata) addr=0x00000001112414d5 offset=10] | [metadata_addr=0x00000001112414d7 *=0x0000000267b17270 offset=0]metadata_value=0x0000000267b17270: {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cd60: 6417
relocInfo@0x000000011123cd60 [type=6(runtime_call) addr=0x00000001112414ec offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cd62: c00a
relocInfo@0x000000011123cd62 [type=12(metadata) addr=0x00000001112414f6 offset=10] | [metadata_addr=0x00000001112414f8 *=0x000000011040aa78 offset=0]metadata_value=0x000000011040aa78: {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123cd64: 6417
relocInfo@0x000000011123cd64 [type=6(runtime_call) addr=0x000000011124150d offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cd66: c00a
relocInfo@0x000000011123cd66 [type=12(metadata) addr=0x0000000111241517 offset=10] | [metadata_addr=0x0000000111241519 *=0x0000000110409a78 offset=0]metadata_value=0x0000000110409a78: {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011123cd68: 6417
relocInfo@0x000000011123cd68 [type=6(runtime_call) addr=0x000000011124152e offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cd6a: 640e
relocInfo@0x000000011123cd6a [type=6(runtime_call) addr=0x000000011124153c offset=14 format=1] | [destination=0x0000000110b41ac0]
         @0x000000011123cd6c: f80309b26b6900017005
relocInfo@0x000000011123cd74 [type=7(external_word) addr=0x0000000111241541 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123cd76: 640e
relocInfo@0x000000011123cd76 [type=6(runtime_call) addr=0x000000011124154f offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123cd78: c006
relocInfo@0x000000011123cd78 [type=12(metadata) addr=0x0000000111241555 offset=6] | [metadata_addr=0x0000000111241557 *=0x0000000267b1ded0 offset=0]metadata_value=0x0000000267b1ded0: {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cd7a: 6417
relocInfo@0x000000011123cd7a [type=6(runtime_call) addr=0x000000011124156c offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cd7c: 640a
relocInfo@0x000000011123cd7c [type=6(runtime_call) addr=0x0000000111241576 offset=10 format=1] | [destination=0x0000000110b44540]
         @0x000000011123cd7e: f80309b26b6900017005
relocInfo@0x000000011123cd86 [type=7(external_word) addr=0x000000011124157b offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123cd88: 640e
relocInfo@0x000000011123cd88 [type=6(runtime_call) addr=0x0000000111241589 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123cd8a: c006
relocInfo@0x000000011123cd8a [type=12(metadata) addr=0x000000011124158f offset=6] | [metadata_addr=0x0000000111241591 *=0x0000000267b96280 offset=0]metadata_value=0x0000000267b96280: {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x000000011123cd8c: 6417
relocInfo@0x000000011123cd8c [type=6(runtime_call) addr=0x00000001112415a6 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cd8e: c00a
relocInfo@0x000000011123cd8e [type=12(metadata) addr=0x00000001112415b0 offset=10] | [metadata_addr=0x00000001112415b2 *=0x000000011015f0e0 offset=0]metadata_value=0x000000011015f0e0: {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x000000011123cd90: 6417
relocInfo@0x000000011123cd90 [type=6(runtime_call) addr=0x00000001112415c7 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cd92: c00a
relocInfo@0x000000011123cd92 [type=12(metadata) addr=0x00000001112415d1 offset=10] | [metadata_addr=0x00000001112415d3 *=0x00000001103f3408 offset=0]metadata_value=0x00000001103f3408: {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x000000011123cd94: 6417
relocInfo@0x000000011123cd94 [type=6(runtime_call) addr=0x00000001112415e8 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cd96: c00a
relocInfo@0x000000011123cd96 [type=12(metadata) addr=0x00000001112415f2 offset=10] | [metadata_addr=0x00000001112415f4 *=0x0000000267b39e30 offset=0]metadata_value=0x0000000267b39e30: {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x000000011123cd98: 6417
relocInfo@0x000000011123cd98 [type=6(runtime_call) addr=0x0000000111241609 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cd9a: c00a
relocInfo@0x000000011123cd9a [type=12(metadata) addr=0x0000000111241613 offset=10] | [metadata_addr=0x0000000111241615 *=0x0000000267b40508 offset=0]metadata_value=0x0000000267b40508: {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x000000011123cd9c: 6417
relocInfo@0x000000011123cd9c [type=6(runtime_call) addr=0x000000011124162a offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cd9e: c00a
relocInfo@0x000000011123cd9e [type=12(metadata) addr=0x0000000111241634 offset=10] | [metadata_addr=0x0000000111241636 *=0x0000000267b710c0 offset=0]metadata_value=0x0000000267b710c0: {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x000000011123cda0: 6417
relocInfo@0x000000011123cda0 [type=6(runtime_call) addr=0x000000011124164b offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cda2: c00a
relocInfo@0x000000011123cda2 [type=12(metadata) addr=0x0000000111241655 offset=10] | [metadata_addr=0x0000000111241657 *=0x0000000267b1f228 offset=0]metadata_value=0x0000000267b1f228: {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cda4: 6417
relocInfo@0x000000011123cda4 [type=6(runtime_call) addr=0x000000011124166c offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cda6: c00a
relocInfo@0x000000011123cda6 [type=12(metadata) addr=0x0000000111241676 offset=10] | [metadata_addr=0x0000000111241678 *=0x0000000267b6d620 offset=0]metadata_value=0x0000000267b6d620: {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
         @0x000000011123cda8: 6417
relocInfo@0x000000011123cda8 [type=6(runtime_call) addr=0x000000011124168d offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cdaa: c00a
relocInfo@0x000000011123cdaa [type=12(metadata) addr=0x0000000111241697 offset=10] | [metadata_addr=0x0000000111241699 *=0x0000000267b393b0 offset=0]metadata_value=0x0000000267b393b0: {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x000000011123cdac: 6417
relocInfo@0x000000011123cdac [type=6(runtime_call) addr=0x00000001112416ae offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cdae: c00a
relocInfo@0x000000011123cdae [type=12(metadata) addr=0x00000001112416b8 offset=10] | [metadata_addr=0x00000001112416ba *=0x0000000267b1fe80 offset=0]metadata_value=0x0000000267b1fe80: {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cdb0: 6417
relocInfo@0x000000011123cdb0 [type=6(runtime_call) addr=0x00000001112416cf offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cdb2: c00a
relocInfo@0x000000011123cdb2 [type=12(metadata) addr=0x00000001112416d9 offset=10] | [metadata_addr=0x00000001112416db *=0x000000011040aa78 offset=0]metadata_value=0x000000011040aa78: {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123cdb4: 6417
relocInfo@0x000000011123cdb4 [type=6(runtime_call) addr=0x00000001112416f0 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cdb6: c00a
relocInfo@0x000000011123cdb6 [type=12(metadata) addr=0x00000001112416fa offset=10] | [metadata_addr=0x00000001112416fc *=0x0000000110409a78 offset=0]metadata_value=0x0000000110409a78: {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011123cdb8: 6417
relocInfo@0x000000011123cdb8 [type=6(runtime_call) addr=0x0000000111241711 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cdba: 640e
relocInfo@0x000000011123cdba [type=6(runtime_call) addr=0x000000011124171f offset=14 format=1] | [destination=0x0000000110b41ac0]
         @0x000000011123cdbc: f80309b26b6900017005
relocInfo@0x000000011123cdc4 [type=7(external_word) addr=0x0000000111241724 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123cdc6: 640e
relocInfo@0x000000011123cdc6 [type=6(runtime_call) addr=0x0000000111241732 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123cdc8: 6406
relocInfo@0x000000011123cdc8 [type=6(runtime_call) addr=0x0000000111241738 offset=6 format=1] | [destination=0x0000000110b44540]
         @0x000000011123cdca: f80309b26b6900017005
relocInfo@0x000000011123cdd2 [type=7(external_word) addr=0x000000011124173d offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123cdd4: 640e
relocInfo@0x000000011123cdd4 [type=6(runtime_call) addr=0x000000011124174b offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123cdd6: c006
relocInfo@0x000000011123cdd6 [type=12(metadata) addr=0x0000000111241751 offset=6] | [metadata_addr=0x0000000111241753 *=0x0000000267b18ef0 offset=0]metadata_value=0x0000000267b18ef0: {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cdd8: 6417
relocInfo@0x000000011123cdd8 [type=6(runtime_call) addr=0x0000000111241768 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cdda: c00a
relocInfo@0x000000011123cdda [type=12(metadata) addr=0x0000000111241772 offset=10] | [metadata_addr=0x0000000111241774 *=0x0000000267b1ded0 offset=0]metadata_value=0x0000000267b1ded0: {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cddc: 6417
relocInfo@0x000000011123cddc [type=6(runtime_call) addr=0x0000000111241789 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cdde: 640a
relocInfo@0x000000011123cdde [type=6(runtime_call) addr=0x0000000111241793 offset=10 format=1] | [destination=0x0000000110b44540]
         @0x000000011123cde0: f80309b26b6900017005
relocInfo@0x000000011123cde8 [type=7(external_word) addr=0x0000000111241798 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123cdea: 640e
relocInfo@0x000000011123cdea [type=6(runtime_call) addr=0x00000001112417a6 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123cdec: c006
relocInfo@0x000000011123cdec [type=12(metadata) addr=0x00000001112417ac offset=6] | [metadata_addr=0x00000001112417ae *=0x0000000267b96280 offset=0]metadata_value=0x0000000267b96280: {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x000000011123cdee: 6417
relocInfo@0x000000011123cdee [type=6(runtime_call) addr=0x00000001112417c3 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cdf0: c00a
relocInfo@0x000000011123cdf0 [type=12(metadata) addr=0x00000001112417cd offset=10] | [metadata_addr=0x00000001112417cf *=0x000000011015f0e0 offset=0]metadata_value=0x000000011015f0e0: {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x000000011123cdf2: 6417
relocInfo@0x000000011123cdf2 [type=6(runtime_call) addr=0x00000001112417e4 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cdf4: c00a
relocInfo@0x000000011123cdf4 [type=12(metadata) addr=0x00000001112417ee offset=10] | [metadata_addr=0x00000001112417f0 *=0x00000001103f3408 offset=0]metadata_value=0x00000001103f3408: {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x000000011123cdf6: 6417
relocInfo@0x000000011123cdf6 [type=6(runtime_call) addr=0x0000000111241805 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cdf8: c00a
relocInfo@0x000000011123cdf8 [type=12(metadata) addr=0x000000011124180f offset=10] | [metadata_addr=0x0000000111241811 *=0x0000000267b39e30 offset=0]metadata_value=0x0000000267b39e30: {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x000000011123cdfa: 6417
relocInfo@0x000000011123cdfa [type=6(runtime_call) addr=0x0000000111241826 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cdfc: c00a
relocInfo@0x000000011123cdfc [type=12(metadata) addr=0x0000000111241830 offset=10] | [metadata_addr=0x0000000111241832 *=0x0000000267b40508 offset=0]metadata_value=0x0000000267b40508: {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x000000011123cdfe: 6417
relocInfo@0x000000011123cdfe [type=6(runtime_call) addr=0x0000000111241847 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123ce00: c00a
relocInfo@0x000000011123ce00 [type=12(metadata) addr=0x0000000111241851 offset=10] | [metadata_addr=0x0000000111241853 *=0x0000000267b710c0 offset=0]metadata_value=0x0000000267b710c0: {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x000000011123ce02: 6417
relocInfo@0x000000011123ce02 [type=6(runtime_call) addr=0x0000000111241868 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123ce04: c00a
relocInfo@0x000000011123ce04 [type=12(metadata) addr=0x0000000111241872 offset=10] | [metadata_addr=0x0000000111241874 *=0x0000000267b1f228 offset=0]metadata_value=0x0000000267b1f228: {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ce06: 6417
relocInfo@0x000000011123ce06 [type=6(runtime_call) addr=0x0000000111241889 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123ce08: c00a
relocInfo@0x000000011123ce08 [type=12(metadata) addr=0x0000000111241893 offset=10] | [metadata_addr=0x0000000111241895 *=0x0000000267b6d620 offset=0]metadata_value=0x0000000267b6d620: {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
         @0x000000011123ce0a: 6417
relocInfo@0x000000011123ce0a [type=6(runtime_call) addr=0x00000001112418aa offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123ce0c: c00a
relocInfo@0x000000011123ce0c [type=12(metadata) addr=0x00000001112418b4 offset=10] | [metadata_addr=0x00000001112418b6 *=0x0000000267b393b0 offset=0]metadata_value=0x0000000267b393b0: {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x000000011123ce0e: 6417
relocInfo@0x000000011123ce0e [type=6(runtime_call) addr=0x00000001112418cb offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123ce10: c00a
relocInfo@0x000000011123ce10 [type=12(metadata) addr=0x00000001112418d5 offset=10] | [metadata_addr=0x00000001112418d7 *=0x0000000267b1fe80 offset=0]metadata_value=0x0000000267b1fe80: {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ce12: 6417
relocInfo@0x000000011123ce12 [type=6(runtime_call) addr=0x00000001112418ec offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123ce14: c00a
relocInfo@0x000000011123ce14 [type=12(metadata) addr=0x00000001112418f6 offset=10] | [metadata_addr=0x00000001112418f8 *=0x000000011040aa78 offset=0]metadata_value=0x000000011040aa78: {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123ce16: 6417
relocInfo@0x000000011123ce16 [type=6(runtime_call) addr=0x000000011124190d offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123ce18: c00a
relocInfo@0x000000011123ce18 [type=12(metadata) addr=0x0000000111241917 offset=10] | [metadata_addr=0x0000000111241919 *=0x0000000110409a78 offset=0]metadata_value=0x0000000110409a78: {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011123ce1a: 6417
relocInfo@0x000000011123ce1a [type=6(runtime_call) addr=0x000000011124192e offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123ce1c: 640e
relocInfo@0x000000011123ce1c [type=6(runtime_call) addr=0x000000011124193c offset=14 format=1] | [destination=0x0000000110b41ac0]
         @0x000000011123ce1e: f80309b26b6900017005
relocInfo@0x000000011123ce26 [type=7(external_word) addr=0x0000000111241941 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123ce28: 640e
relocInfo@0x000000011123ce28 [type=6(runtime_call) addr=0x000000011124194f offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123ce2a: 6406
relocInfo@0x000000011123ce2a [type=6(runtime_call) addr=0x0000000111241955 offset=6 format=1] | [destination=0x0000000110b44540]
         @0x000000011123ce2c: f80309b26b6900017005
relocInfo@0x000000011123ce34 [type=7(external_word) addr=0x000000011124195a offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123ce36: 640e
relocInfo@0x000000011123ce36 [type=6(runtime_call) addr=0x0000000111241968 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123ce38: c006
relocInfo@0x000000011123ce38 [type=12(metadata) addr=0x000000011124196e offset=6] | [metadata_addr=0x0000000111241970 *=0x0000000267b18ef0 offset=0]metadata_value=0x0000000267b18ef0: {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ce3a: 6417
relocInfo@0x000000011123ce3a [type=6(runtime_call) addr=0x0000000111241985 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123ce3c: c00a
relocInfo@0x000000011123ce3c [type=12(metadata) addr=0x000000011124198f offset=10] | [metadata_addr=0x0000000111241991 *=0x000000026788fe18 offset=0]metadata_value=0x000000026788fe18: {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123ce3e: 6417
relocInfo@0x000000011123ce3e [type=6(runtime_call) addr=0x00000001112419a6 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123ce40: 100a
relocInfo@0x000000011123ce40 [type=1(oop) addr=0x00000001112419b0 offset=10] | [oop_addr=0x00000001112419b2 *=0x0000000000000000 offset=0]
         @0x000000011123ce42: 642c
relocInfo@0x000000011123ce42 [type=6(runtime_call) addr=0x00000001112419dc offset=44 format=1] | [destination=0x000000010947de40]
         @0x000000011123ce44: 640e
relocInfo@0x000000011123ce44 [type=6(runtime_call) addr=0x00000001112419ea offset=14 format=1] | [destination=0x000000010947de40]
         @0x000000011123ce46: 642a
relocInfo@0x000000011123ce46 [type=6(runtime_call) addr=0x0000000111241a14 offset=42 format=1] | [destination=0x0000000110b3f280]
         @0x000000011123ce48: 640a
relocInfo@0x000000011123ce48 [type=6(runtime_call) addr=0x0000000111241a1e offset=10 format=1] | [destination=0x0000000110b44540]
         @0x000000011123ce4a: f80309b26b6900017005
relocInfo@0x000000011123ce52 [type=7(external_word) addr=0x0000000111241a23 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123ce54: 640e
relocInfo@0x000000011123ce54 [type=6(runtime_call) addr=0x0000000111241a31 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123ce56: 6412
relocInfo@0x000000011123ce56 [type=6(runtime_call) addr=0x0000000111241a43 offset=18 format=1] | [destination=0x0000000110b3fe80]
         @0x000000011123ce58: 640a
relocInfo@0x000000011123ce58 [type=6(runtime_call) addr=0x0000000111241a4d offset=10 format=1] | [destination=0x0000000110b44540]
         @0x000000011123ce5a: f80309b26b6900017005
relocInfo@0x000000011123ce62 [type=7(external_word) addr=0x0000000111241a52 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123ce64: 640e
relocInfo@0x000000011123ce64 [type=6(runtime_call) addr=0x0000000111241a60 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123ce66: 1006
relocInfo@0x000000011123ce66 [type=1(oop) addr=0x0000000111241a66 offset=6] | [oop_addr=0x0000000111241a68 *=0x0000000000000000 offset=0]
         @0x000000011123ce68: 642c
relocInfo@0x000000011123ce68 [type=6(runtime_call) addr=0x0000000111241a92 offset=44 format=1] | [destination=0x000000010947de40]
         @0x000000011123ce6a: 640e
relocInfo@0x000000011123ce6a [type=6(runtime_call) addr=0x0000000111241aa0 offset=14 format=1] | [destination=0x000000010947de40]
         @0x000000011123ce6c: 642a
relocInfo@0x000000011123ce6c [type=6(runtime_call) addr=0x0000000111241aca offset=42 format=1] | [destination=0x0000000110b3f280]
         @0x000000011123ce6e: 640a
relocInfo@0x000000011123ce6e [type=6(runtime_call) addr=0x0000000111241ad4 offset=10 format=1] | [destination=0x0000000110b44540]
         @0x000000011123ce70: f80309b26b6900017005
relocInfo@0x000000011123ce78 [type=7(external_word) addr=0x0000000111241ad9 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123ce7a: 640e
relocInfo@0x000000011123ce7a [type=6(runtime_call) addr=0x0000000111241ae7 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123ce7c: 6412
relocInfo@0x000000011123ce7c [type=6(runtime_call) addr=0x0000000111241af9 offset=18 format=1] | [destination=0x0000000110b3fe80]
         @0x000000011123ce7e: 640a
relocInfo@0x000000011123ce7e [type=6(runtime_call) addr=0x0000000111241b03 offset=10 format=1] | [destination=0x0000000110b44540]
         @0x000000011123ce80: f80309b26b6900017005
relocInfo@0x000000011123ce88 [type=7(external_word) addr=0x0000000111241b08 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123ce8a: 640e
relocInfo@0x000000011123ce8a [type=6(runtime_call) addr=0x0000000111241b16 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123ce8c: 640f
relocInfo@0x000000011123ce8c [type=6(runtime_call) addr=0x0000000111241b25 offset=15 format=1] | [destination=0x0000000110b44e40]
         @0x000000011123ce8e: f80309b26b6900017005
relocInfo@0x000000011123ce96 [type=7(external_word) addr=0x0000000111241b2a offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123ce98: 640e
relocInfo@0x000000011123ce98 [type=6(runtime_call) addr=0x0000000111241b38 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123ce9a: 6406
relocInfo@0x000000011123ce9a [type=6(runtime_call) addr=0x0000000111241b3e offset=6 format=1] | [destination=0x0000000110b44540]
         @0x000000011123ce9c: f80309b26b6900017005
relocInfo@0x000000011123cea4 [type=7(external_word) addr=0x0000000111241b43 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123cea6: 640e
relocInfo@0x000000011123cea6 [type=6(runtime_call) addr=0x0000000111241b51 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123cea8: 6406
relocInfo@0x000000011123cea8 [type=6(runtime_call) addr=0x0000000111241b57 offset=6 format=1] | [destination=0x0000000110b44540]
         @0x000000011123ceaa: f80309b26b6900017005
relocInfo@0x000000011123ceb2 [type=7(external_word) addr=0x0000000111241b5c offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123ceb4: 640e
relocInfo@0x000000011123ceb4 [type=6(runtime_call) addr=0x0000000111241b6a offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123ceb6: 640f
relocInfo@0x000000011123ceb6 [type=6(runtime_call) addr=0x0000000111241b79 offset=15 format=1] | [destination=0x0000000110b44e40]
         @0x000000011123ceb8: f80309b26b6900017005
relocInfo@0x000000011123cec0 [type=7(external_word) addr=0x0000000111241b7e offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123cec2: 640e
relocInfo@0x000000011123cec2 [type=6(runtime_call) addr=0x0000000111241b8c offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123cec4: c006
relocInfo@0x000000011123cec4 [type=12(metadata) addr=0x0000000111241b92 offset=6] | [metadata_addr=0x0000000111241b94 *=0x000000026788fe18 offset=0]metadata_value=0x000000026788fe18: {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123cec6: 6417
relocInfo@0x000000011123cec6 [type=6(runtime_call) addr=0x0000000111241ba9 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cec8: 640a
relocInfo@0x000000011123cec8 [type=6(runtime_call) addr=0x0000000111241bb3 offset=10 format=1] | [destination=0x0000000110b44540]
         @0x000000011123ceca: f80309b26b6900017005
relocInfo@0x000000011123ced2 [type=7(external_word) addr=0x0000000111241bb8 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123ced4: 640e
relocInfo@0x000000011123ced4 [type=6(runtime_call) addr=0x0000000111241bc6 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123ced6: c006
relocInfo@0x000000011123ced6 [type=12(metadata) addr=0x0000000111241bcc offset=6] | [metadata_addr=0x0000000111241bce *=0x0000000267b17448 offset=0]metadata_value=0x0000000267b17448: {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123ced8: 6417
relocInfo@0x000000011123ced8 [type=6(runtime_call) addr=0x0000000111241be3 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123ceda: c00a
relocInfo@0x000000011123ceda [type=12(metadata) addr=0x0000000111241bed offset=10] | [metadata_addr=0x0000000111241bef *=0x0000000267b17270 offset=0]metadata_value=0x0000000267b17270: {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cedc: 6417
relocInfo@0x000000011123cedc [type=6(runtime_call) addr=0x0000000111241c04 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cede: c00a
relocInfo@0x000000011123cede [type=12(metadata) addr=0x0000000111241c0e offset=10] | [metadata_addr=0x0000000111241c10 *=0x000000011040aa78 offset=0]metadata_value=0x000000011040aa78: {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123cee0: 6417
relocInfo@0x000000011123cee0 [type=6(runtime_call) addr=0x0000000111241c25 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cee2: c00a
relocInfo@0x000000011123cee2 [type=12(metadata) addr=0x0000000111241c2f offset=10] | [metadata_addr=0x0000000111241c31 *=0x0000000110409a78 offset=0]metadata_value=0x0000000110409a78: {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011123cee4: 6417
relocInfo@0x000000011123cee4 [type=6(runtime_call) addr=0x0000000111241c46 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cee6: 640e
relocInfo@0x000000011123cee6 [type=6(runtime_call) addr=0x0000000111241c54 offset=14 format=1] | [destination=0x0000000110b41ac0]
         @0x000000011123cee8: f80309b26b6900017005
relocInfo@0x000000011123cef0 [type=7(external_word) addr=0x0000000111241c59 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123cef2: 640e
relocInfo@0x000000011123cef2 [type=6(runtime_call) addr=0x0000000111241c67 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123cef4: c006
relocInfo@0x000000011123cef4 [type=12(metadata) addr=0x0000000111241c6d offset=6] | [metadata_addr=0x0000000111241c6f *=0x0000000267b17448 offset=0]metadata_value=0x0000000267b17448: {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cef6: 6417
relocInfo@0x000000011123cef6 [type=6(runtime_call) addr=0x0000000111241c84 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cef8: c00a
relocInfo@0x000000011123cef8 [type=12(metadata) addr=0x0000000111241c8e offset=10] | [metadata_addr=0x0000000111241c90 *=0x0000000267b17270 offset=0]metadata_value=0x0000000267b17270: {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cefa: 6417
relocInfo@0x000000011123cefa [type=6(runtime_call) addr=0x0000000111241ca5 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cefc: c00a
relocInfo@0x000000011123cefc [type=12(metadata) addr=0x0000000111241caf offset=10] | [metadata_addr=0x0000000111241cb1 *=0x000000011040aa78 offset=0]metadata_value=0x000000011040aa78: {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123cefe: 6417
relocInfo@0x000000011123cefe [type=6(runtime_call) addr=0x0000000111241cc6 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cf00: c00a
relocInfo@0x000000011123cf00 [type=12(metadata) addr=0x0000000111241cd0 offset=10] | [metadata_addr=0x0000000111241cd2 *=0x0000000110409a78 offset=0]metadata_value=0x0000000110409a78: {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011123cf02: 6417
relocInfo@0x000000011123cf02 [type=6(runtime_call) addr=0x0000000111241ce7 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cf04: 640e
relocInfo@0x000000011123cf04 [type=6(runtime_call) addr=0x0000000111241cf5 offset=14 format=1] | [destination=0x0000000110b41ac0]
         @0x000000011123cf06: f80309b26b6900017005
relocInfo@0x000000011123cf0e [type=7(external_word) addr=0x0000000111241cfa offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123cf10: 640e
relocInfo@0x000000011123cf10 [type=6(runtime_call) addr=0x0000000111241d08 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123cf12: c006
relocInfo@0x000000011123cf12 [type=12(metadata) addr=0x0000000111241d0e offset=6] | [metadata_addr=0x0000000111241d10 *=0x0000000267b1ded0 offset=0]metadata_value=0x0000000267b1ded0: {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cf14: 6417
relocInfo@0x000000011123cf14 [type=6(runtime_call) addr=0x0000000111241d25 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cf16: c00a
relocInfo@0x000000011123cf16 [type=12(metadata) addr=0x0000000111241d2f offset=10] | [metadata_addr=0x0000000111241d31 *=0x0000000267b96280 offset=0]metadata_value=0x0000000267b96280: {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x000000011123cf18: 6417
relocInfo@0x000000011123cf18 [type=6(runtime_call) addr=0x0000000111241d46 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cf1a: c00a
relocInfo@0x000000011123cf1a [type=12(metadata) addr=0x0000000111241d50 offset=10] | [metadata_addr=0x0000000111241d52 *=0x000000011015f0e0 offset=0]metadata_value=0x000000011015f0e0: {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x000000011123cf1c: 6417
relocInfo@0x000000011123cf1c [type=6(runtime_call) addr=0x0000000111241d67 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cf1e: c00a
relocInfo@0x000000011123cf1e [type=12(metadata) addr=0x0000000111241d71 offset=10] | [metadata_addr=0x0000000111241d73 *=0x00000001103f3408 offset=0]metadata_value=0x00000001103f3408: {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x000000011123cf20: 6417
relocInfo@0x000000011123cf20 [type=6(runtime_call) addr=0x0000000111241d88 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cf22: c00a
relocInfo@0x000000011123cf22 [type=12(metadata) addr=0x0000000111241d92 offset=10] | [metadata_addr=0x0000000111241d94 *=0x0000000267b39e30 offset=0]metadata_value=0x0000000267b39e30: {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x000000011123cf24: 6417
relocInfo@0x000000011123cf24 [type=6(runtime_call) addr=0x0000000111241da9 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cf26: c00a
relocInfo@0x000000011123cf26 [type=12(metadata) addr=0x0000000111241db3 offset=10] | [metadata_addr=0x0000000111241db5 *=0x0000000267b40508 offset=0]metadata_value=0x0000000267b40508: {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x000000011123cf28: 6417
relocInfo@0x000000011123cf28 [type=6(runtime_call) addr=0x0000000111241dca offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cf2a: c00a
relocInfo@0x000000011123cf2a [type=12(metadata) addr=0x0000000111241dd4 offset=10] | [metadata_addr=0x0000000111241dd6 *=0x0000000267b710c0 offset=0]metadata_value=0x0000000267b710c0: {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x000000011123cf2c: 6417
relocInfo@0x000000011123cf2c [type=6(runtime_call) addr=0x0000000111241deb offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cf2e: c00a
relocInfo@0x000000011123cf2e [type=12(metadata) addr=0x0000000111241df5 offset=10] | [metadata_addr=0x0000000111241df7 *=0x0000000267b1f228 offset=0]metadata_value=0x0000000267b1f228: {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cf30: 6417
relocInfo@0x000000011123cf30 [type=6(runtime_call) addr=0x0000000111241e0c offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cf32: c00a
relocInfo@0x000000011123cf32 [type=12(metadata) addr=0x0000000111241e16 offset=10] | [metadata_addr=0x0000000111241e18 *=0x0000000267b6d620 offset=0]metadata_value=0x0000000267b6d620: {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
         @0x000000011123cf34: 6417
relocInfo@0x000000011123cf34 [type=6(runtime_call) addr=0x0000000111241e2d offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cf36: c00a
relocInfo@0x000000011123cf36 [type=12(metadata) addr=0x0000000111241e37 offset=10] | [metadata_addr=0x0000000111241e39 *=0x0000000267b393b0 offset=0]metadata_value=0x0000000267b393b0: {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x000000011123cf38: 6417
relocInfo@0x000000011123cf38 [type=6(runtime_call) addr=0x0000000111241e4e offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cf3a: c00a
relocInfo@0x000000011123cf3a [type=12(metadata) addr=0x0000000111241e58 offset=10] | [metadata_addr=0x0000000111241e5a *=0x0000000267b1fe80 offset=0]metadata_value=0x0000000267b1fe80: {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cf3c: 6417
relocInfo@0x000000011123cf3c [type=6(runtime_call) addr=0x0000000111241e6f offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cf3e: c00a
relocInfo@0x000000011123cf3e [type=12(metadata) addr=0x0000000111241e79 offset=10] | [metadata_addr=0x0000000111241e7b *=0x000000011040aa78 offset=0]metadata_value=0x000000011040aa78: {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123cf40: 6417
relocInfo@0x000000011123cf40 [type=6(runtime_call) addr=0x0000000111241e90 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cf42: c00a
relocInfo@0x000000011123cf42 [type=12(metadata) addr=0x0000000111241e9a offset=10] | [metadata_addr=0x0000000111241e9c *=0x0000000110409a78 offset=0]metadata_value=0x0000000110409a78: {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011123cf44: 6417
relocInfo@0x000000011123cf44 [type=6(runtime_call) addr=0x0000000111241eb1 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cf46: 640e
relocInfo@0x000000011123cf46 [type=6(runtime_call) addr=0x0000000111241ebf offset=14 format=1] | [destination=0x0000000110b41ac0]
         @0x000000011123cf48: f80309b26b6900017005
relocInfo@0x000000011123cf50 [type=7(external_word) addr=0x0000000111241ec4 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123cf52: 640e
relocInfo@0x000000011123cf52 [type=6(runtime_call) addr=0x0000000111241ed2 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123cf54: 6406
relocInfo@0x000000011123cf54 [type=6(runtime_call) addr=0x0000000111241ed8 offset=6 format=1] | [destination=0x0000000110b44540]
         @0x000000011123cf56: f80309b26b6900017005
relocInfo@0x000000011123cf5e [type=7(external_word) addr=0x0000000111241edd offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123cf60: 640e
relocInfo@0x000000011123cf60 [type=6(runtime_call) addr=0x0000000111241eeb offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123cf62: c006
relocInfo@0x000000011123cf62 [type=12(metadata) addr=0x0000000111241ef1 offset=6] | [metadata_addr=0x0000000111241ef3 *=0x0000000267b19378 offset=0]metadata_value=0x0000000267b19378: {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cf64: 6417
relocInfo@0x000000011123cf64 [type=6(runtime_call) addr=0x0000000111241f08 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cf66: c00a
relocInfo@0x000000011123cf66 [type=12(metadata) addr=0x0000000111241f12 offset=10] | [metadata_addr=0x0000000111241f14 *=0x0000000267b181a0 offset=0]metadata_value=0x0000000267b181a0: {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cf68: 6417
relocInfo@0x000000011123cf68 [type=6(runtime_call) addr=0x0000000111241f29 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cf6a: c00a
relocInfo@0x000000011123cf6a [type=12(metadata) addr=0x0000000111241f33 offset=10] | [metadata_addr=0x0000000111241f35 *=0x0000000267b1ded0 offset=0]metadata_value=0x0000000267b1ded0: {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cf6c: 6417
relocInfo@0x000000011123cf6c [type=6(runtime_call) addr=0x0000000111241f4a offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cf6e: 640a
relocInfo@0x000000011123cf6e [type=6(runtime_call) addr=0x0000000111241f54 offset=10 format=1] | [destination=0x0000000110b44540]
         @0x000000011123cf70: f80309b26b6900017005
relocInfo@0x000000011123cf78 [type=7(external_word) addr=0x0000000111241f59 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123cf7a: 640e
relocInfo@0x000000011123cf7a [type=6(runtime_call) addr=0x0000000111241f67 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123cf7c: c006
relocInfo@0x000000011123cf7c [type=12(metadata) addr=0x0000000111241f6d offset=6] | [metadata_addr=0x0000000111241f6f *=0x0000000267b96280 offset=0]metadata_value=0x0000000267b96280: {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x000000011123cf7e: 6417
relocInfo@0x000000011123cf7e [type=6(runtime_call) addr=0x0000000111241f84 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cf80: c00a
relocInfo@0x000000011123cf80 [type=12(metadata) addr=0x0000000111241f8e offset=10] | [metadata_addr=0x0000000111241f90 *=0x000000011015f0e0 offset=0]metadata_value=0x000000011015f0e0: {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x000000011123cf82: 6417
relocInfo@0x000000011123cf82 [type=6(runtime_call) addr=0x0000000111241fa5 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cf84: c00a
relocInfo@0x000000011123cf84 [type=12(metadata) addr=0x0000000111241faf offset=10] | [metadata_addr=0x0000000111241fb1 *=0x00000001103f3408 offset=0]metadata_value=0x00000001103f3408: {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x000000011123cf86: 6417
relocInfo@0x000000011123cf86 [type=6(runtime_call) addr=0x0000000111241fc6 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cf88: c00a
relocInfo@0x000000011123cf88 [type=12(metadata) addr=0x0000000111241fd0 offset=10] | [metadata_addr=0x0000000111241fd2 *=0x0000000267b39e30 offset=0]metadata_value=0x0000000267b39e30: {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x000000011123cf8a: 6417
relocInfo@0x000000011123cf8a [type=6(runtime_call) addr=0x0000000111241fe7 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cf8c: c00a
relocInfo@0x000000011123cf8c [type=12(metadata) addr=0x0000000111241ff1 offset=10] | [metadata_addr=0x0000000111241ff3 *=0x0000000267b40508 offset=0]metadata_value=0x0000000267b40508: {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x000000011123cf8e: 6417
relocInfo@0x000000011123cf8e [type=6(runtime_call) addr=0x0000000111242008 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cf90: c00a
relocInfo@0x000000011123cf90 [type=12(metadata) addr=0x0000000111242012 offset=10] | [metadata_addr=0x0000000111242014 *=0x0000000267b710c0 offset=0]metadata_value=0x0000000267b710c0: {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x000000011123cf92: 6417
relocInfo@0x000000011123cf92 [type=6(runtime_call) addr=0x0000000111242029 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cf94: c00a
relocInfo@0x000000011123cf94 [type=12(metadata) addr=0x0000000111242033 offset=10] | [metadata_addr=0x0000000111242035 *=0x0000000267b1f228 offset=0]metadata_value=0x0000000267b1f228: {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cf96: 6417
relocInfo@0x000000011123cf96 [type=6(runtime_call) addr=0x000000011124204a offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cf98: c00a
relocInfo@0x000000011123cf98 [type=12(metadata) addr=0x0000000111242054 offset=10] | [metadata_addr=0x0000000111242056 *=0x0000000267b6d620 offset=0]metadata_value=0x0000000267b6d620: {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
         @0x000000011123cf9a: 6417
relocInfo@0x000000011123cf9a [type=6(runtime_call) addr=0x000000011124206b offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cf9c: c00a
relocInfo@0x000000011123cf9c [type=12(metadata) addr=0x0000000111242075 offset=10] | [metadata_addr=0x0000000111242077 *=0x0000000267b393b0 offset=0]metadata_value=0x0000000267b393b0: {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x000000011123cf9e: 6417
relocInfo@0x000000011123cf9e [type=6(runtime_call) addr=0x000000011124208c offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cfa0: c00a
relocInfo@0x000000011123cfa0 [type=12(metadata) addr=0x0000000111242096 offset=10] | [metadata_addr=0x0000000111242098 *=0x0000000267b1fe80 offset=0]metadata_value=0x0000000267b1fe80: {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cfa2: 6417
relocInfo@0x000000011123cfa2 [type=6(runtime_call) addr=0x00000001112420ad offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cfa4: c00a
relocInfo@0x000000011123cfa4 [type=12(metadata) addr=0x00000001112420b7 offset=10] | [metadata_addr=0x00000001112420b9 *=0x000000011040aa78 offset=0]metadata_value=0x000000011040aa78: {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011123cfa6: 6417
relocInfo@0x000000011123cfa6 [type=6(runtime_call) addr=0x00000001112420ce offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cfa8: c00a
relocInfo@0x000000011123cfa8 [type=12(metadata) addr=0x00000001112420d8 offset=10] | [metadata_addr=0x00000001112420da *=0x0000000110409a78 offset=0]metadata_value=0x0000000110409a78: {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011123cfaa: 6417
relocInfo@0x000000011123cfaa [type=6(runtime_call) addr=0x00000001112420ef offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cfac: 640e
relocInfo@0x000000011123cfac [type=6(runtime_call) addr=0x00000001112420fd offset=14 format=1] | [destination=0x0000000110b41ac0]
         @0x000000011123cfae: f80309b26b6900017005
relocInfo@0x000000011123cfb6 [type=7(external_word) addr=0x0000000111242102 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123cfb8: 640e
relocInfo@0x000000011123cfb8 [type=6(runtime_call) addr=0x0000000111242110 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123cfba: 6406
relocInfo@0x000000011123cfba [type=6(runtime_call) addr=0x0000000111242116 offset=6 format=1] | [destination=0x0000000110b44540]
         @0x000000011123cfbc: f80309b26b6900017005
relocInfo@0x000000011123cfc4 [type=7(external_word) addr=0x000000011124211b offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123cfc6: 640e
relocInfo@0x000000011123cfc6 [type=6(runtime_call) addr=0x0000000111242129 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123cfc8: c006
relocInfo@0x000000011123cfc8 [type=12(metadata) addr=0x000000011124212f offset=6] | [metadata_addr=0x0000000111242131 *=0x0000000267b19378 offset=0]metadata_value=0x0000000267b19378: {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cfca: 6417
relocInfo@0x000000011123cfca [type=6(runtime_call) addr=0x0000000111242146 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cfcc: c00a
relocInfo@0x000000011123cfcc [type=12(metadata) addr=0x0000000111242150 offset=10] | [metadata_addr=0x0000000111242152 *=0x0000000267b181a0 offset=0]metadata_value=0x0000000267b181a0: {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cfce: 6417
relocInfo@0x000000011123cfce [type=6(runtime_call) addr=0x0000000111242167 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cfd0: 640a
relocInfo@0x000000011123cfd0 [type=6(runtime_call) addr=0x0000000111242171 offset=10 format=1] | [destination=0x0000000110b44540]
         @0x000000011123cfd2: f80309b26b6900017005
relocInfo@0x000000011123cfda [type=7(external_word) addr=0x0000000111242176 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123cfdc: 640e
relocInfo@0x000000011123cfdc [type=6(runtime_call) addr=0x0000000111242184 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123cfde: c006
relocInfo@0x000000011123cfde [type=12(metadata) addr=0x000000011124218a offset=6] | [metadata_addr=0x000000011124218c *=0x0000000267b19640 offset=0]metadata_value=0x0000000267b19640: {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cfe0: 6417
relocInfo@0x000000011123cfe0 [type=6(runtime_call) addr=0x00000001112421a1 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cfe2: 640a
relocInfo@0x000000011123cfe2 [type=6(runtime_call) addr=0x00000001112421ab offset=10 format=1] | [destination=0x0000000110b44540]
         @0x000000011123cfe4: f80309b26b6900017005
relocInfo@0x000000011123cfec [type=7(external_word) addr=0x00000001112421b0 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123cfee: 640e
relocInfo@0x000000011123cfee [type=6(runtime_call) addr=0x00000001112421be offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123cff0: c006
relocInfo@0x000000011123cff0 [type=12(metadata) addr=0x00000001112421c4 offset=6] | [metadata_addr=0x00000001112421c6 *=0x0000000267b18ef0 offset=0]metadata_value=0x0000000267b18ef0: {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123cff2: 6417
relocInfo@0x000000011123cff2 [type=6(runtime_call) addr=0x00000001112421db offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123cff4: 640a
relocInfo@0x000000011123cff4 [type=6(runtime_call) addr=0x00000001112421e5 offset=10 format=1] | [destination=0x0000000110b44540]
         @0x000000011123cff6: f80309b26b6900017005
relocInfo@0x000000011123cffe [type=7(external_word) addr=0x00000001112421ea offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123d000: 640e
relocInfo@0x000000011123d000 [type=6(runtime_call) addr=0x00000001112421f8 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123d002: c006
relocInfo@0x000000011123d002 [type=12(metadata) addr=0x00000001112421fe offset=6] | [metadata_addr=0x0000000111242200 *=0x0000000267b19640 offset=0]metadata_value=0x0000000267b19640: {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123d004: 6417
relocInfo@0x000000011123d004 [type=6(runtime_call) addr=0x0000000111242215 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123d006: 640a
relocInfo@0x000000011123d006 [type=6(runtime_call) addr=0x000000011124221f offset=10 format=1] | [destination=0x0000000110b44540]
         @0x000000011123d008: f80309b26b6900017005
relocInfo@0x000000011123d010 [type=7(external_word) addr=0x0000000111242224 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123d012: 640e
relocInfo@0x000000011123d012 [type=6(runtime_call) addr=0x0000000111242232 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123d014: c006
relocInfo@0x000000011123d014 [type=12(metadata) addr=0x0000000111242238 offset=6] | [metadata_addr=0x000000011124223a *=0x0000000267b18ef0 offset=0]metadata_value=0x0000000267b18ef0: {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011123d016: 6417
relocInfo@0x000000011123d016 [type=6(runtime_call) addr=0x000000011124224f offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123d018: c00a
relocInfo@0x000000011123d018 [type=12(metadata) addr=0x0000000111242259 offset=10] | [metadata_addr=0x000000011124225b *=0x000000026788fe18 offset=0]metadata_value=0x000000026788fe18: {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123d01a: 6417
relocInfo@0x000000011123d01a [type=6(runtime_call) addr=0x0000000111242270 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123d01c: 100a
relocInfo@0x000000011123d01c [type=1(oop) addr=0x000000011124227a offset=10] | [oop_addr=0x000000011124227c *=0x0000000000000000 offset=0]
         @0x000000011123d01e: 642c
relocInfo@0x000000011123d01e [type=6(runtime_call) addr=0x00000001112422a6 offset=44 format=1] | [destination=0x000000010947de40]
         @0x000000011123d020: 640e
relocInfo@0x000000011123d020 [type=6(runtime_call) addr=0x00000001112422b4 offset=14 format=1] | [destination=0x000000010947de40]
         @0x000000011123d022: 642a
relocInfo@0x000000011123d022 [type=6(runtime_call) addr=0x00000001112422de offset=42 format=1] | [destination=0x0000000110b3f280]
         @0x000000011123d024: 640a
relocInfo@0x000000011123d024 [type=6(runtime_call) addr=0x00000001112422e8 offset=10 format=1] | [destination=0x0000000110b44540]
         @0x000000011123d026: f80309b26b6900017005
relocInfo@0x000000011123d02e [type=7(external_word) addr=0x00000001112422ed offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123d030: 640e
relocInfo@0x000000011123d030 [type=6(runtime_call) addr=0x00000001112422fb offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123d032: 6412
relocInfo@0x000000011123d032 [type=6(runtime_call) addr=0x000000011124230d offset=18 format=1] | [destination=0x0000000110b3fe80]
         @0x000000011123d034: 100a
relocInfo@0x000000011123d034 [type=1(oop) addr=0x0000000111242317 offset=10] | [oop_addr=0x0000000111242319 *=0x0000000000000000 offset=0]
         @0x000000011123d036: 642c
relocInfo@0x000000011123d036 [type=6(runtime_call) addr=0x0000000111242343 offset=44 format=1] | [destination=0x000000010947de40]
         @0x000000011123d038: 640e
relocInfo@0x000000011123d038 [type=6(runtime_call) addr=0x0000000111242351 offset=14 format=1] | [destination=0x000000010947de40]
         @0x000000011123d03a: 642a
relocInfo@0x000000011123d03a [type=6(runtime_call) addr=0x000000011124237b offset=42 format=1] | [destination=0x0000000110b3f280]
         @0x000000011123d03c: 640a
relocInfo@0x000000011123d03c [type=6(runtime_call) addr=0x0000000111242385 offset=10 format=1] | [destination=0x0000000110b44540]
         @0x000000011123d03e: f80309b26b6900017005
relocInfo@0x000000011123d046 [type=7(external_word) addr=0x000000011124238a offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123d048: 640e
relocInfo@0x000000011123d048 [type=6(runtime_call) addr=0x0000000111242398 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123d04a: 6412
relocInfo@0x000000011123d04a [type=6(runtime_call) addr=0x00000001112423aa offset=18 format=1] | [destination=0x0000000110b3fe80]
         @0x000000011123d04c: 6413
relocInfo@0x000000011123d04c [type=6(runtime_call) addr=0x00000001112423bd offset=19 format=1] | [destination=0x0000000110b44e40]
         @0x000000011123d04e: f80309b26b6900017005
relocInfo@0x000000011123d056 [type=7(external_word) addr=0x00000001112423c2 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123d058: 640e
relocInfo@0x000000011123d058 [type=6(runtime_call) addr=0x00000001112423d0 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123d05a: 6406
relocInfo@0x000000011123d05a [type=6(runtime_call) addr=0x00000001112423d6 offset=6 format=1] | [destination=0x0000000110b44540]
         @0x000000011123d05c: f80309b26b6900017005
relocInfo@0x000000011123d064 [type=7(external_word) addr=0x00000001112423db offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123d066: 640e
relocInfo@0x000000011123d066 [type=6(runtime_call) addr=0x00000001112423e9 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123d068: 6406
relocInfo@0x000000011123d068 [type=6(runtime_call) addr=0x00000001112423ef offset=6 format=1] | [destination=0x0000000110b44540]
         @0x000000011123d06a: f80309b26b6900017005
relocInfo@0x000000011123d072 [type=7(external_word) addr=0x00000001112423f4 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123d074: 640e
relocInfo@0x000000011123d074 [type=6(runtime_call) addr=0x0000000111242402 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123d076: 640f
relocInfo@0x000000011123d076 [type=6(runtime_call) addr=0x0000000111242411 offset=15 format=1] | [destination=0x0000000110b44e40]
         @0x000000011123d078: f80309b26b6900017005
relocInfo@0x000000011123d080 [type=7(external_word) addr=0x0000000111242416 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123d082: 640e
relocInfo@0x000000011123d082 [type=6(runtime_call) addr=0x0000000111242424 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123d084: c006
relocInfo@0x000000011123d084 [type=12(metadata) addr=0x000000011124242a offset=6] | [metadata_addr=0x000000011124242c *=0x000000026788fe18 offset=0]metadata_value=0x000000026788fe18: {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011123d086: 6417
relocInfo@0x000000011123d086 [type=6(runtime_call) addr=0x0000000111242441 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011123d088: 640a
relocInfo@0x000000011123d088 [type=6(runtime_call) addr=0x000000011124244b offset=10 format=1] | [destination=0x0000000110b44540]
         @0x000000011123d08a: f80309b26b6900017005
relocInfo@0x000000011123d092 [type=7(external_word) addr=0x0000000111242450 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123d094: 640e
relocInfo@0x000000011123d094 [type=6(runtime_call) addr=0x000000011124245e offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123d096: f80113e28006
relocInfo@0x000000011123d09a [type=8(internal_word) addr=0x0000000111242464 offset=6 data=5090] | [target=0x0000000111241082]
         @0x000000011123d09c: 6411
relocInfo@0x000000011123d09c [type=6(runtime_call) addr=0x0000000111242475 offset=17 format=1] | [destination=0x0000000110bfb220]
         @0x000000011123d09e: 6405
relocInfo@0x000000011123d09e [type=6(runtime_call) addr=0x000000011124247a offset=5 format=1] | [destination=0x0000000110b44540]
         @0x000000011123d0a0: f80309b26b6900017005
relocInfo@0x000000011123d0a8 [type=7(external_word) addr=0x000000011124247f offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123d0aa: 640e
relocInfo@0x000000011123d0aa [type=6(runtime_call) addr=0x000000011124248d offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123d0ac: 6406
relocInfo@0x000000011123d0ac [type=6(runtime_call) addr=0x0000000111242493 offset=6 format=1] | [destination=0x0000000110b44540]
         @0x000000011123d0ae: f80309b26b6900017005
relocInfo@0x000000011123d0b6 [type=7(external_word) addr=0x0000000111242498 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123d0b8: 640e
relocInfo@0x000000011123d0b8 [type=6(runtime_call) addr=0x00000001112424a6 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123d0ba: 6406
relocInfo@0x000000011123d0ba [type=6(runtime_call) addr=0x00000001112424ac offset=6 format=1] | [destination=0x0000000110b44540]
         @0x000000011123d0bc: f80309b26b6900017005
relocInfo@0x000000011123d0c4 [type=7(external_word) addr=0x00000001112424b1 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123d0c6: 640e
relocInfo@0x000000011123d0c6 [type=6(runtime_call) addr=0x00000001112424bf offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123d0c8: 6406
relocInfo@0x000000011123d0c8 [type=6(runtime_call) addr=0x00000001112424c5 offset=6 format=1] | [destination=0x0000000110b44540]
         @0x000000011123d0ca: f80309b26b6900017005
relocInfo@0x000000011123d0d2 [type=7(external_word) addr=0x00000001112424ca offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123d0d4: 640e
relocInfo@0x000000011123d0d4 [type=6(runtime_call) addr=0x00000001112424d8 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123d0d6: c006
relocInfo@0x000000011123d0d6 [type=12(metadata) addr=0x00000001112424de offset=6] | [metadata_addr=0x00000001112424e0 *=0x0000000000000000 offset=0]
         @0x000000011123d0d8: 640f
relocInfo@0x000000011123d0d8 [type=6(runtime_call) addr=0x00000001112424ed offset=15 format=1] | [destination=0x0000000110b3f880]
         @0x000000011123d0da: 640d
relocInfo@0x000000011123d0da [type=6(runtime_call) addr=0x00000001112424fa offset=13 format=1] | [destination=0x0000000110b43ac0]
         @0x000000011123d0dc: 6431
relocInfo@0x000000011123d0dc [type=6(runtime_call) addr=0x000000011124252b offset=49 format=1] | [destination=0x0000000110b45840]
         @0x000000011123d0de: 0015
relocInfo@0x000000011123d0de [type=0(none) addr=0x0000000111242540 offset=21]
         @0x000000011123d0e0: f801fae15005
relocInfo@0x000000011123d0e4 [type=5(static_stub) addr=0x0000000111242545 offset=5 data=-1311] | [static_call=0x000000011123d75f]
         @0x000000011123d0e6: c000
relocInfo@0x000000011123d0e6 [type=12(metadata) addr=0x0000000111242545 offset=0] | [metadata_addr=0x0000000111242547 *=0x0000000000000000 offset=0]
         @0x000000011123d0e8: 640a
relocInfo@0x000000011123d0e8 [type=6(runtime_call) addr=0x000000011124254f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011123d0ea: f801f7015006
relocInfo@0x000000011123d0ee [type=5(static_stub) addr=0x0000000111242555 offset=6 data=-2303] | [static_call=0x000000011123db3f]
         @0x000000011123d0f0: c000
relocInfo@0x000000011123d0f0 [type=12(metadata) addr=0x0000000111242555 offset=0] | [metadata_addr=0x0000000111242557 *=0x0000000000000000 offset=0]
         @0x000000011123d0f2: 640a
relocInfo@0x000000011123d0f2 [type=6(runtime_call) addr=0x000000011124255f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011123d0f4: f801ef915006
relocInfo@0x000000011123d0f8 [type=5(static_stub) addr=0x0000000111242565 offset=6 data=-4207] | [static_call=0x000000011123e2af]
         @0x000000011123d0fa: c000
relocInfo@0x000000011123d0fa [type=12(metadata) addr=0x0000000111242565 offset=0] | [metadata_addr=0x0000000111242567 *=0x0000000000000000 offset=0]
         @0x000000011123d0fc: 640a
relocInfo@0x000000011123d0fc [type=6(runtime_call) addr=0x000000011124256f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011123d0fe: f801edc35006
relocInfo@0x000000011123d102 [type=5(static_stub) addr=0x0000000111242575 offset=6 data=-4669] | [static_call=0x000000011123e47d]
         @0x000000011123d104: c000
relocInfo@0x000000011123d104 [type=12(metadata) addr=0x0000000111242575 offset=0] | [metadata_addr=0x0000000111242577 *=0x0000000000000000 offset=0]
         @0x000000011123d106: 640a
relocInfo@0x000000011123d106 [type=6(runtime_call) addr=0x000000011124257f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011123d108: f801e8195006
relocInfo@0x000000011123d10c [type=5(static_stub) addr=0x0000000111242585 offset=6 data=-6119] | [static_call=0x000000011123ea27]
         @0x000000011123d10e: c000
relocInfo@0x000000011123d10e [type=12(metadata) addr=0x0000000111242585 offset=0] | [metadata_addr=0x0000000111242587 *=0x0000000000000000 offset=0]
         @0x000000011123d110: 640a
relocInfo@0x000000011123d110 [type=6(runtime_call) addr=0x000000011124258f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011123d112: f801e64b5006
relocInfo@0x000000011123d116 [type=5(static_stub) addr=0x0000000111242595 offset=6 data=-6581] | [static_call=0x000000011123ebf5]
         @0x000000011123d118: c000
relocInfo@0x000000011123d118 [type=12(metadata) addr=0x0000000111242595 offset=0] | [metadata_addr=0x0000000111242597 *=0x0000000000000000 offset=0]
         @0x000000011123d11a: 640a
relocInfo@0x000000011123d11a [type=6(runtime_call) addr=0x000000011124259f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011123d11c: f801e4e35006
relocInfo@0x000000011123d120 [type=5(static_stub) addr=0x00000001112425a5 offset=6 data=-6941] | [static_call=0x000000011123ed5d]
         @0x000000011123d122: c000
relocInfo@0x000000011123d122 [type=12(metadata) addr=0x00000001112425a5 offset=0] | [metadata_addr=0x00000001112425a7 *=0x0000000000000000 offset=0]
         @0x000000011123d124: 640a
relocInfo@0x000000011123d124 [type=6(runtime_call) addr=0x00000001112425af offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011123d126: f801e3fb5006
relocInfo@0x000000011123d12a [type=5(static_stub) addr=0x00000001112425b5 offset=6 data=-7173] | [static_call=0x000000011123ee45]
         @0x000000011123d12c: c000
relocInfo@0x000000011123d12c [type=12(metadata) addr=0x00000001112425b5 offset=0] | [metadata_addr=0x00000001112425b7 *=0x0000000000000000 offset=0]
         @0x000000011123d12e: 640a
relocInfo@0x000000011123d12e [type=6(runtime_call) addr=0x00000001112425bf offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011123d130: f801df795006
relocInfo@0x000000011123d134 [type=5(static_stub) addr=0x00000001112425c5 offset=6 data=-8327] | [static_call=0x000000011123f2c7]
         @0x000000011123d136: c000
relocInfo@0x000000011123d136 [type=12(metadata) addr=0x00000001112425c5 offset=0] | [metadata_addr=0x00000001112425c7 *=0x0000000000000000 offset=0]
         @0x000000011123d138: 640a
relocInfo@0x000000011123d138 [type=6(runtime_call) addr=0x00000001112425cf offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011123d13a: f801db995006
relocInfo@0x000000011123d13e [type=5(static_stub) addr=0x00000001112425d5 offset=6 data=-9319] | [static_call=0x000000011123f6a7]
         @0x000000011123d140: c000
relocInfo@0x000000011123d140 [type=12(metadata) addr=0x00000001112425d5 offset=0] | [metadata_addr=0x00000001112425d7 *=0x0000000000000000 offset=0]
         @0x000000011123d142: 640a
relocInfo@0x000000011123d142 [type=6(runtime_call) addr=0x00000001112425df offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011123d144: f801d4495006
relocInfo@0x000000011123d148 [type=5(static_stub) addr=0x00000001112425e5 offset=6 data=-11191] | [static_call=0x000000011123fdf7]
         @0x000000011123d14a: c000
relocInfo@0x000000011123d14a [type=12(metadata) addr=0x00000001112425e5 offset=0] | [metadata_addr=0x00000001112425e7 *=0x0000000000000000 offset=0]
         @0x000000011123d14c: 640a
relocInfo@0x000000011123d14c [type=6(runtime_call) addr=0x00000001112425ef offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011123d14e: f801d2435006
relocInfo@0x000000011123d152 [type=5(static_stub) addr=0x00000001112425f5 offset=6 data=-11709] | [static_call=0x000000011123fffd]
         @0x000000011123d154: c000
relocInfo@0x000000011123d154 [type=12(metadata) addr=0x00000001112425f5 offset=0] | [metadata_addr=0x00000001112425f7 *=0x0000000000000000 offset=0]
         @0x000000011123d156: 640a
relocInfo@0x000000011123d156 [type=6(runtime_call) addr=0x00000001112425ff offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011123d158: f801d1835006
relocInfo@0x000000011123d15c [type=5(static_stub) addr=0x0000000111242605 offset=6 data=-11901] | [static_call=0x00000001112400bd]
         @0x000000011123d15e: c000
relocInfo@0x000000011123d15e [type=12(metadata) addr=0x0000000111242605 offset=0] | [metadata_addr=0x0000000111242607 *=0x0000000000000000 offset=0]
         @0x000000011123d160: 640a
relocInfo@0x000000011123d160 [type=6(runtime_call) addr=0x000000011124260f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011123d162: f801cbe15006
relocInfo@0x000000011123d166 [type=5(static_stub) addr=0x0000000111242615 offset=6 data=-13343] | [static_call=0x000000011124065f]
         @0x000000011123d168: c000
relocInfo@0x000000011123d168 [type=12(metadata) addr=0x0000000111242615 offset=0] | [metadata_addr=0x0000000111242617 *=0x0000000000000000 offset=0]
         @0x000000011123d16a: 640a
relocInfo@0x000000011123d16a [type=6(runtime_call) addr=0x000000011124261f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011123d16c: f801c9db5006
relocInfo@0x000000011123d170 [type=5(static_stub) addr=0x0000000111242625 offset=6 data=-13861] | [static_call=0x0000000111240865]
         @0x000000011123d172: c000
relocInfo@0x000000011123d172 [type=12(metadata) addr=0x0000000111242625 offset=0] | [metadata_addr=0x0000000111242627 *=0x0000000000000000 offset=0]
         @0x000000011123d174: 640a
relocInfo@0x000000011123d174 [type=6(runtime_call) addr=0x000000011124262f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011123d176: f801c91b5006
relocInfo@0x000000011123d17a [type=5(static_stub) addr=0x0000000111242635 offset=6 data=-14053] | [static_call=0x0000000111240925]
         @0x000000011123d17c: c000
relocInfo@0x000000011123d17c [type=12(metadata) addr=0x0000000111242635 offset=0] | [metadata_addr=0x0000000111242637 *=0x0000000000000000 offset=0]
         @0x000000011123d17e: 640a
relocInfo@0x000000011123d17e [type=6(runtime_call) addr=0x000000011124263f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011123d180: f801c81b5006
relocInfo@0x000000011123d184 [type=5(static_stub) addr=0x0000000111242645 offset=6 data=-14309] | [static_call=0x0000000111240a25]
         @0x000000011123d186: c000
relocInfo@0x000000011123d186 [type=12(metadata) addr=0x0000000111242645 offset=0] | [metadata_addr=0x0000000111242647 *=0x0000000000000000 offset=0]
         @0x000000011123d188: 640a
relocInfo@0x000000011123d188 [type=6(runtime_call) addr=0x000000011124264f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011123d18a: f801c7135006
relocInfo@0x000000011123d18e [type=5(static_stub) addr=0x0000000111242655 offset=6 data=-14573] | [static_call=0x0000000111240b2d]
         @0x000000011123d190: c000
relocInfo@0x000000011123d190 [type=12(metadata) addr=0x0000000111242655 offset=0] | [metadata_addr=0x0000000111242657 *=0x0000000000000000 offset=0]
         @0x000000011123d192: 640a
relocInfo@0x000000011123d192 [type=6(runtime_call) addr=0x000000011124265f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011123d194: f801c6135006
relocInfo@0x000000011123d198 [type=5(static_stub) addr=0x0000000111242665 offset=6 data=-14829] | [static_call=0x0000000111240c2d]
         @0x000000011123d19a: c000
relocInfo@0x000000011123d19a [type=12(metadata) addr=0x0000000111242665 offset=0] | [metadata_addr=0x0000000111242667 *=0x0000000000000000 offset=0]
         @0x000000011123d19c: 640a
relocInfo@0x000000011123d19c [type=6(runtime_call) addr=0x000000011124266f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011123d19e: f801c51b5006
relocInfo@0x000000011123d1a2 [type=5(static_stub) addr=0x0000000111242675 offset=6 data=-15077] | [static_call=0x0000000111240d25]
         @0x000000011123d1a4: c000
relocInfo@0x000000011123d1a4 [type=12(metadata) addr=0x0000000111242675 offset=0] | [metadata_addr=0x0000000111242677 *=0x0000000000000000 offset=0]
         @0x000000011123d1a6: 640a
relocInfo@0x000000011123d1a6 [type=6(runtime_call) addr=0x000000011124267f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011123d1a8: f801c3db5006
relocInfo@0x000000011123d1ac [type=5(static_stub) addr=0x0000000111242685 offset=6 data=-15397] | [static_call=0x0000000111240e65]
         @0x000000011123d1ae: c000
relocInfo@0x000000011123d1ae [type=12(metadata) addr=0x0000000111242685 offset=0] | [metadata_addr=0x0000000111242687 *=0x0000000000000000 offset=0]
         @0x000000011123d1b0: 640a
relocInfo@0x000000011123d1b0 [type=6(runtime_call) addr=0x000000011124268f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011123d1b2: f801c3035006
relocInfo@0x000000011123d1b6 [type=5(static_stub) addr=0x0000000111242695 offset=6 data=-15613] | [static_call=0x0000000111240f3d]
         @0x000000011123d1b8: c000
relocInfo@0x000000011123d1b8 [type=12(metadata) addr=0x0000000111242695 offset=0] | [metadata_addr=0x0000000111242697 *=0x0000000000000000 offset=0]
         @0x000000011123d1ba: 640a
relocInfo@0x000000011123d1ba [type=6(runtime_call) addr=0x000000011124269f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011123d1bc: f801c1715006
relocInfo@0x000000011123d1c0 [type=5(static_stub) addr=0x00000001112426a5 offset=6 data=-16015] | [static_call=0x00000001112410cf]
         @0x000000011123d1c2: c000
relocInfo@0x000000011123d1c2 [type=12(metadata) addr=0x00000001112426a5 offset=0] | [metadata_addr=0x00000001112426a7 *=0x0000000000000000 offset=0]
         @0x000000011123d1c4: 640a
relocInfo@0x000000011123d1c4 [type=6(runtime_call) addr=0x00000001112426af offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011123d1c6: f801c1295006
relocInfo@0x000000011123d1ca [type=5(static_stub) addr=0x00000001112426b5 offset=6 data=-16087] | [static_call=0x0000000111241117]
         @0x000000011123d1cc: c000
relocInfo@0x000000011123d1cc [type=12(metadata) addr=0x00000001112426b5 offset=0] | [metadata_addr=0x00000001112426b7 *=0x0000000000000000 offset=0]
         @0x000000011123d1ce: 640a
relocInfo@0x000000011123d1ce [type=6(runtime_call) addr=0x00000001112426bf offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011123d1d0: f801c0d95006
relocInfo@0x000000011123d1d4 [type=5(static_stub) addr=0x00000001112426c5 offset=6 data=-16167] | [static_call=0x0000000111241167]
         @0x000000011123d1d6: c000
relocInfo@0x000000011123d1d6 [type=12(metadata) addr=0x00000001112426c5 offset=0] | [metadata_addr=0x00000001112426c7 *=0x0000000000000000 offset=0]
         @0x000000011123d1d8: 640a
relocInfo@0x000000011123d1d8 [type=6(runtime_call) addr=0x00000001112426cf offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011123d1da: f801c0995006
relocInfo@0x000000011123d1de [type=5(static_stub) addr=0x00000001112426d5 offset=6 data=-16231] | [static_call=0x00000001112411a7]
         @0x000000011123d1e0: c000
relocInfo@0x000000011123d1e0 [type=12(metadata) addr=0x00000001112426d5 offset=0] | [metadata_addr=0x00000001112426d7 *=0x0000000000000000 offset=0]
         @0x000000011123d1e2: 640a
relocInfo@0x000000011123d1e2 [type=6(runtime_call) addr=0x00000001112426df offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011123d1e4: f801c0015006
relocInfo@0x000000011123d1e8 [type=5(static_stub) addr=0x00000001112426e5 offset=6 data=-16383] | [static_call=0x000000011124123f]
         @0x000000011123d1ea: c000
relocInfo@0x000000011123d1ea [type=12(metadata) addr=0x00000001112426e5 offset=0] | [metadata_addr=0x00000001112426e7 *=0x0000000000000000 offset=0]
         @0x000000011123d1ec: 640a
relocInfo@0x000000011123d1ec [type=6(runtime_call) addr=0x00000001112426ef offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011123d1ee: 642d
relocInfo@0x000000011123d1ee [type=6(runtime_call) addr=0x000000011124271c offset=45 format=1] | [destination=0x0000000110b420e0]
         @0x000000011123d1f0: f80309b26b6900017005
relocInfo@0x000000011123d1f8 [type=7(external_word) addr=0x0000000111242721 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011123d1fa: 640e
relocInfo@0x000000011123d1fa [type=6(runtime_call) addr=0x000000011124272f offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011123d1fc: f801f82e9006
relocInfo@0x000000011123d200 [type=9(section_word) addr=0x0000000111242735 offset=6 data=-2002] | [target=0x0000000111242735]
         @0x000000011123d202: 640c
relocInfo@0x000000011123d202 [type=6(runtime_call) addr=0x0000000111242741 offset=12 format=1] | [destination=0x0000000110bfa860]
         @0x000000011123d204: 0000
relocInfo@0x000000011123d204 [type=0(none) addr=0x0000000111242741 offset=0]
         @0x000000011123d206: 0000
relocInfo@0x000000011123d206 [type=0(none) addr=0x0000000111242741 offset=0]
         @0x000000011123d208: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 29 entries, 236 bytes):
{
   < 0x000000011123d29c, 0x000000011124139f > < 0x000000011123d2a0, 0x00000001112413b8 > < 0x000000011123ddcb, 0x0000000111241576 > 
   < 0x000000011123e39c, 0x0000000111241738 > < 0x000000011123e56d, 0x0000000111241793 > < 0x000000011123eb14, 0x0000000111241955 > 
   < 0x000000011123ecb8, 0x0000000111241a1e > < 0x000000011123ecbf, 0x0000000111241a4d > < 0x000000011123ed88, 0x0000000111241ad4 > 
   < 0x000000011123ed97, 0x0000000111241b03 > < 0x000000011123ee9f, 0x0000000111241b3e > < 0x000000011123ee9f, 0x0000000111241b57 > 
   < 0x000000011123ef08, 0x0000000111241bb3 > < 0x000000011123fedc, 0x0000000111241ed8 > < 0x00000001112401ad, 0x0000000111241f54 > 
   < 0x0000000111240744, 0x0000000111242116 > < 0x0000000111240934, 0x0000000111242171 > < 0x0000000111240a3c, 0x00000001112421ab > 
   < 0x0000000111240b44, 0x00000001112421e5 > < 0x0000000111240c44, 0x000000011124221f > < 0x0000000111240dc0, 0x00000001112422e8 > 
   < 0x0000000111240e90, 0x0000000111242385 > < 0x0000000111240fa7, 0x00000001112423d6 > < 0x0000000111240fa7, 0x00000001112423ef > 
   < 0x000000011124105a, 0x000000011124244b > < 0x00000001112410d4, 0x000000011124247a > < 0x000000011124111c, 0x0000000111242493 > 
   < 0x000000011124116c, 0x00000001112424ac > < 0x00000001112411ac, 0x00000001112424c5 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
# 0: 0x0000000000000000 NULL-oop
# 1: 0x0000000197665dd8 a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x0000000197665dd8}
# 2: 0x00000001976180e8 a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x00000001976180e8}
# 3: 0x0000000197618158 a 'java/lang/Class'{0x0000000197618158} = 'jdk/incubator/vector/Double256Vector'
# 4: 0x000000011ff8c550 a 'java/lang/Class'{0x000000011ff8c550} = double
# 5: 0x000000019762aea0 a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019762aea0}
# 6: 0x0000000197653a38 a 'jdk/incubator/vector/Double256Vector'{0x0000000197653a38}
# 7: 0x000000019765cae0 a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000019765cae0}
# 8: 0x000000011ff58b48 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011ff58b48}
# 9: 0x00000001200a7938 a 'java/lang/Class'{0x00000001200a7938} = 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
#10: 0x000000011ffc7b70 a 'java/lang/Class'{0x000000011ffc7b70} = 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 NULL-oop
# 1: 0x000000026788fe18 {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
# 2: 0x0000000267b3fa08 {method} {0x0000000267b3fa08} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
# 3: 0x0000000267b96588 {method} {0x0000000267b96588} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
# 4: 0x0000000267b17448 {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
# 5: 0x0000000267b1ded0 {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
# 6: 0x0000000267b96280 {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
# 7: 0x000000011015f0e0 {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
# 8: 0x00000001103f3408 {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
# 9: 0x0000000267b39e30 {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
#10: 0x0000000267b40508 {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
#11: 0x0000000267b710c0 {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
#12: 0x0000000267b1f228 {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
#13: 0x0000000267b18ef0 {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
#14: 0x0000000267b19378 {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
#15: 0x0000000267b181a0 {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
#16: 0x0000000267b19640 {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
#17: 0x0000000267b17270 {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
#18: 0x000000011040aa78 {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
#19: 0x0000000110409a78 {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
#20: 0x0000000267b6d620 {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
#21: 0x0000000267b393b0 {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
#22: 0x0000000267b1fe80 {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

============================= C2-compiled nmethod ==============================
----------------------- MetaData before Compile_id = 1093 ------------------------
{method}
 - this oop:          0x000000026788fe18
 - method holder:     'org/jml/regression/linear/DoubleVectorLinearRegression'
 - constants:         0x000000026788f558 constant pool [135]/operands[5] {0x000000026788f558} for 'org/jml/regression/linear/DoubleVectorLinearRegression' cache=0x0000000267a042d0
 - access:            0xc1000001  public 
 - name:              'fit'
 - signature:         '([D[D)V'
 - max stack:         9
 - max locals:        23
 - size of params:    3
 - method size:       13
 - vtable index:      5
 - i2i entry:         0x0000000110af1e20
 - adapters:          AHE@0x00007f846603a870: 0xbbb00000 i2c: 0x0000000110b69ee0 c2i: 0x0000000110b69fbf c2iUV: 0x0000000110b69f92 c2iNCI: 0x0000000110b69ffc
 - compiled entry     0x0000000110b69fbf
 - code size:         378
 - code start:        0x000000026788fba8
 - code end (excl):   0x000000026788fd22
 - method data:       0x0000000267a04640
 - checked ex length: 0
 - linenumber start:  0x000000026788fd22
 - localvar length:   16
 - localvar start:    0x000000026788fd56

------------------------ OptoAssembly for Compile_id = 1093 -----------------------
#
#  void ( rawptr:BotPTR )
#
#r018 rsi:rsi   : parm 0: rawptr:BotPTR
# -- Old rsp -- Framesize: 224 --
#r583 rsp+220: in_preserve
#r582 rsp+216: return address
#r581 rsp+212: in_preserve
#r580 rsp+208: saved fp register
#r579 rsp+204: pad2, stack alignment
#r578 rsp+200: pad2, stack alignment
#r577 rsp+196: Fixed slot 1
#r576 rsp+192: Fixed slot 0
#r631 rsp+188: spill
#r630 rsp+184: spill
#r629 rsp+180: spill
#r628 rsp+176: spill
#r627 rsp+172: spill
#r626 rsp+168: spill
#r625 rsp+164: spill
#r624 rsp+160: spill
#r623 rsp+156: spill
#r622 rsp+152: spill
#r621 rsp+148: spill
#r620 rsp+144: spill
#r619 rsp+140: spill
#r618 rsp+136: spill
#r617 rsp+132: spill
#r616 rsp+128: spill
#r615 rsp+124: spill
#r614 rsp+120: spill
#r613 rsp+116: spill
#r612 rsp+112: spill
#r611 rsp+108: spill
#r610 rsp+104: spill
#r609 rsp+100: spill
#r608 rsp+96: spill
#r607 rsp+92: spill
#r606 rsp+88: spill
#r605 rsp+84: spill
#r604 rsp+80: spill
#r603 rsp+76: spill
#r602 rsp+72: spill
#r601 rsp+68: spill
#r600 rsp+64: spill
#r599 rsp+60: spill
#r598 rsp+56: spill
#r597 rsp+52: spill
#r596 rsp+48: spill
#r595 rsp+44: spill
#r594 rsp+40: spill
#r593 rsp+36: spill
#r592 rsp+32: spill
#r591 rsp+28: spill
#r590 rsp+24: spill
#r589 rsp+20: spill
#r588 rsp+16: spill
#r587 rsp+12: spill
#r586 rsp+ 8: spill
#r585 rsp+ 4: spill
#r584 rsp+ 0: spill
#
000     N892: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # breakpoint
        nop 	# 11 bytes pad for loops and calls

010     B1: #	out( B50 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
010     # stack bang (816 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #208	# Create frame

01f     movq    RBX, [RSI + #176 (32-bit)]	# ptr
026     movq    RBP, [RSI + #168 (32-bit)]	# ptr
02d     movsd   XMM0, [RSI + #104 (8-bit)]	# double
032     movsd   [rsp + #40], XMM0	# spill
038     movq    R13, [RSI + #160 (32-bit)]	# ptr
03f     movq    R14, [RSI + #96 (8-bit)]	# ptr
043     movq    R10, [RSI + #88 (8-bit)]	# ptr
047     movq    [rsp + #0], R10	# spill
04b     movsd   XMM0, [RSI + #144 (32-bit)]	# double
053     movsd   [rsp + #32], XMM0	# spill
059     movsd   XMM0, [RSI + #128 (32-bit)]	# double
061     movsd   [rsp + #48], XMM0	# spill
067     movl    R12, [RSI + #120 (8-bit)]	# int
06b     movl    [rsp + #56], R12	# spill
070     movq    RDI, RSI	# spill
        nop 	# 13 bytes pad for loops and calls
080     call_leaf,runtime  OSR_migration_end
        No JVM State Info
        # 
090     testq   RBX, RBX	# ptr
093     je     B50  P=0.001000 C=-1.000000

099     B2: #	out( B55 B3 ) <- in( B1 )  Freq: 0.999
099     movl    R11, [RBX + #8 (8-bit)]	# compressed klass ptr
        nop 	# 3 bytes pad for loops and calls
0a0     cmpl    R11, narrowklass: precise klass org/jml/regression/linear/DoubleVectorLinearRegression: 0x00007f846b367a20:Constant:exact *	# compressed klass ptr
0a7     jne,u   B55  P=0.000001 C=-1.000000

0ad     B3: #	out( B4 ) <- in( B2 )  Freq: 0.998999
0ad     movq    R8, RBX	# spill
0b0     # checkcastPP of R8

0b0     B4: #	out( B51 B5 ) <- in( B3 B50 )  Freq: 0.999999
0b0     movq    R12, RBP	# spill
0b3     testq   RBP, RBP	# ptr
0b6     je     B51  P=0.001000 C=-1.000000

0bc     B5: #	out( B56 B6 ) <- in( B4 )  Freq: 0.998999
0bc     movl    R10, [RBP + #8 (8-bit)]	# compressed klass ptr
0c0     cmpl    R10, narrowklass: precise klass [D: 0x00007f8467f0e730:Constant:exact *	# compressed klass ptr
0c7     jne,u   B56  P=0.000001 C=-1.000000

0cd     B6: #	out( B7 ) <- in( B5 )  Freq: 0.998998
0cd     movq    RCX, RBP	# spill
0d0     # checkcastPP of RCX

0d0     B7: #	out( B52 B8 ) <- in( B6 B51 )  Freq: 0.999998
0d0     testq   R13, R13	# ptr
0d3     je     B52  P=0.001000 C=-1.000000

0d9     B8: #	out( B58 B9 ) <- in( B7 )  Freq: 0.998998
0d9     movl    R11, [R13 + #8 (8-bit)]	# compressed klass ptr
        nop 	# 3 bytes pad for loops and calls
0e0     cmpl    R11, narrowklass: precise klass [D: 0x00007f8467f0e730:Constant:exact *	# compressed klass ptr
0e7     jne,u   B58  P=0.000001 C=-1.000000

0ed     B9: #	out( B10 ) <- in( B8 )  Freq: 0.998997
0ed     movq    RDI, R13	# spill
0f0     # checkcastPP of RDI

0f0     B10: #	out( B53 B11 ) <- in( B9 B52 )  Freq: 0.999997
0f0     movq    RSI, precise klass jdk/incubator/vector/DoubleVector: 0x00007f846b36c2b0:Constant:exact *	# ptr
        nop 	# 6 bytes pad for loops and calls
100     testq   R14, R14	# ptr
103     je     B53  P=0.001000 C=-1.000000

109     B11: #	out( B59 B12 ) <- in( B10 )  Freq: 0.998997
109     movl    R10, [R14 + #8 (8-bit)]	# compressed klass ptr
10d     decode_and_move_klass_not_null R11,R10
114     movq    R10, [R11 + #96 (8-bit)]	# class
118     cmpq    R10, RSI	# ptr
        nop 	# 5 bytes pad for loops and calls
120     jne,u   B59  P=0.000001 C=-1.000000

126     B12: #	out( B13 ) <- in( B11 )  Freq: 0.998996
126     movq    RDX, R14	# spill
129     # checkcastPP of RDX

129     B13: #	out( B54 B14 ) <- in( B12 B53 )  Freq: 0.999996
129     movq    R9, [rsp + #0]	# spill
12d     testq   R9, R9	# ptr
130     je     B54  P=0.001000 C=-1.000000

136     B14: #	out( B57 B15 ) <- in( B13 )  Freq: 0.998996
136     movl    R11, [R9 + #8 (8-bit)]	# compressed klass ptr
13a     decode_and_move_klass_not_null R10,R11
141     movq    R10, [R10 + #96 (8-bit)]	# class
145     cmpq    R10, RSI	# ptr
148     jne,u   B57  P=0.000001 C=-1.000000

14e     B15: #	out( B16 ) <- in( B14 )  Freq: 0.998995
14e     # checkcastPP of R9

14e     B16: #	out( B20 B17 ) <- in( B15 B54 )  Freq: 0.999995
14e     movl    R11, [RCX + #12 (8-bit)]	# range
152     NullCheck RCX

152     B17: #	out( B20 B18 ) <- in( B16 )  Freq: 0.999994
152     addl    R11, #-3	# int
156     testl   R11, R11
159     jl,s   B20  P=0.000001 C=-1.000000

15b     B18: #	out( B20 B19 ) <- in( B17 )  Freq: 0.999993
        nop 	# 5 bytes pad for loops and calls
160     movl    RBP, [RDI + #12 (8-bit)]	# range
163     NullCheck RDI

163     B19: #	out( B23 B20 ) <- in( B18 )  Freq: 0.999992
163     addl    RBP, #-3	# int
166     testl   RBP, RBP
168     jge     B23  P=0.999999 C=-1.000000

16e     B20: #	out( N892 ) <- in( B19 B16 B17 B18 )  Freq: 4.02653e-06
16e     movl    RSI, #-138	# int
173     movq    RBP, R8	# spill
176     movq    [rsp + #0], RCX	# spill
17a     movq    [rsp + #8], RDI	# spill
17f     pushq   [rsp + #32]	# 64-bit mem-mem spill
	popq    [rsp + #16]
189     pushq   [rsp + #48]	# 64-bit mem-mem spill
	popq    [rsp + #24]
193     movq    [rsp - #8], rax	# 32-bit mem-mem spill
	movl    rax, [rsp + #56]
	movl    [rsp + #32], rax
	movq    rax, [rsp - #8]
1a5     movq    [rsp + #48], RDX	# spill
1aa     movq    [rsp + #56], R9	# spill
        nop 	# 1 bytes pad for loops and calls
1b0     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:54 (line 24) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=rsp + #16 L[4]=_ L[5]=rsp + #24 L[6]=_ L[7]=rsp + #32 L[8]=rsp + #40 L[9]=_ L[10]=rsp + #48 L[11]=rsp + #56 L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # OopMap {rbp=Oop [0]=Oop [8]=Oop [48]=Oop [56]=Oop off=440/0x1b8}
1b8     stop	# ShouldNotReachHere
        nop 	# 4 bytes pad for loops and calls

1d0     B21: #	out( B22 ) <- in( B36 ) top-of-loop Freq: 152489
1d0     # TLS is in R15
1d0     movq    [R15 + #328 (32-bit)], R10	# ptr
1d7     PREFETCHW [R10 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
1df     movq    [RAX], #1	# long
1e6     movl    [RAX + #8 (8-bit)], narrowklass: precise klass jdk/incubator/vector/Double256Vector: 0x00007f846b349b20:Constant:exact *	# compressed klass ptr
1ed     movl    [RAX + #12 (8-bit)], #0	# int

1f4     B22: #	out( B23 ) <- in( B38 B21 ) top-of-loop Freq: 152504
1f4     movq    R10, [rsp + #40]	# spill
1f9     movq    [RAX + #16 (8-bit)], R10	# ptr
1fd     
1fd     movq    R9, RAX	# spill
200     # checkcastPP of R9
200     # TLS is in R15
200     movq    R10, [R15 + #304 (32-bit)]	# ptr
207     movl    RBP, [rsp + #64]	# spill
20b     addl    RBP, #4	# int
20e     movl    [rsp + #56], RBP	# spill
212     testl   rax, [R10]	# Safepoint: poll for GC        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:103 (line 24) L[0]=rsp + #72 L[1]=rsp + #80 L[2]=rsp + #88 L[3]=rsp + #32 L[4]=_ L[5]=rsp + #48 L[6]=_ L[7]=RBP L[8]=XMM2 L[9]=_ L[10]=#ScObj0 L[11]=#ScObj1 L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=XMM3 }
        # ScObj1 jdk/incubator/vector/Double256Vector={ [payload :0]=XMM1 }
        # OopMap {r9=Oop [72]=Oop [80]=Oop [88]=Oop [104]=Oop off=530/0x212}
215     movsd   [rsp + #40], XMM2	# spill
21b     movq    R8, [rsp + #72]	# spill
220     movq    RCX, [rsp + #80]	# spill
225     movq    RDI, [rsp + #88]	# spill
22a     movq    RDX, [rsp + #104]	# spill
22f     movl    R11, [rsp + #68]	# spill
234     movl    RBP, [rsp + #96]	# spill

238     B23: #	out( B49 B24 ) <- in( B19 B22 ) Loop( B23-B22 inner ) Freq: 152505
238     movl    R10, [rsp + #56]	# spill
23d     cvtsi2sdl XMM0, R10	# i2d
242     movsd   XMM2, [rsp + #40]	# spill
248     ucomisd XMM2, XMM0 test
24c     jbe,u   B49  P=0.000000 C=1345137.000000

252     B24: #	out( B45 B25 ) <- in( B23 )  Freq: 152505
252     cmpl    R10, R11	# unsigned
255     jnb,u   B45  P=0.000001 C=-1.000000

25b     B25: #	out( B60 B26 ) <- in( B24 )  Freq: 152505
25b     movl    [rsp + #96], RBP	# spill
25f     movl    [rsp + #68], R11	# spill
264     movq    [rsp + #88], RDI	# spill
269     movq    [rsp + #72], R8	# spill
26e     movq    [rsp + #56], R9	# spill
273     # castII of R10
273     load_vector XMM0,[RCX + #16 + R10 << #3]
27a     movq    [rsp + #80], RCX	# spill
27f     movl    [rsp + #64], R10	# spill
284     movl    R11, [RDX + #8 (8-bit)]	# compressed klass ptr
288     NullCheck RDX

288     B26: #	out( B47 B27 ) <- in( B25 )  Freq: 152505
288     cmpl    R11, narrowklass: precise klass jdk/incubator/vector/Double256Vector: 0x00007f846b349b20:Constant:exact *	# compressed klass ptr
28f     jne,u   B47  P=0.000001 C=-1.000000

295     B27: #	out( B39 B28 ) <- in( B26 )  Freq: 152505
295     # checkcastPP of RDX
295     movq    RBP, RDX	# spill
298     # TLS is in R15
298     movq    RAX, [R15 + #328 (32-bit)]	# ptr
29f     movq    R10, RAX	# spill
2a2     addq    R10, #48	# ptr
2a6     # TLS is in R15
2a6     cmpq    R10, [R15 + #344 (32-bit)]	# raw ptr
2ad     jnb,u   B39  P=0.000100 C=-1.000000

2b3     B28: #	out( B29 ) <- in( B27 )  Freq: 152489
2b3     # TLS is in R15
2b3     movq    [R15 + #328 (32-bit)], R10	# ptr
2ba     PREFETCHW [R10 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
2c2     movq    [RAX], #1	# long
2c9     PREFETCHW [R10 + #256 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
2d1     movl    [RAX + #8 (8-bit)], narrowklass: precise klass [D: 0x00007f8467f0e730:Constant:exact *	# compressed klass ptr
2d8     PREFETCHW [R10 + #320 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
2e0     movl    [RAX + #12 (8-bit)], #4	# int
2e7     PREFETCHW [R10 + #384 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
2ef     movq    [RAX + #16 (8-bit)], #0	# long
2f7     movq    [RAX + #24 (8-bit)], #0	# long
2ff     movq    [RAX + #32 (8-bit)], #0	# long
307     movq    [RAX + #40 (8-bit)], #0	# long

30f     B29: #	out( B41 B30 ) <- in( B40 B28 )  Freq: 152505
30f     
30f     MEMBAR-storestore (empty encoding)
30f     # checkcastPP of RAX
30f     movq    [rsp + #40], RAX	# spill
314     movq    R10, [RBP + #16 (8-bit)]	# ptr ! Field: jdk/internal/vm/vector/VectorSupport$VectorPayload.payload (constant)
318     vaddpd  XMM3,XMM0,[R10 + #16 (8-bit)]	! add packedD
31e     store_vector [RAX + #16 (8-bit)],XMM3
	
323     # TLS is in R15
323     movq    RAX, [R15 + #328 (32-bit)]	# ptr
32a     movq    R10, RAX	# spill
32d     addq    R10, #24	# ptr
331     # TLS is in R15
331     cmpq    R10, [R15 + #344 (32-bit)]	# raw ptr
338     jnb,u   B41  P=0.000100 C=-1.000000

33e     B30: #	out( B31 ) <- in( B29 )  Freq: 152489
33e     # TLS is in R15
33e     movq    [R15 + #328 (32-bit)], R10	# ptr
345     PREFETCHW [R10 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
34d     movq    [RAX], #1	# long
354     movl    [RAX + #8 (8-bit)], narrowklass: precise klass jdk/incubator/vector/Double256Vector: 0x00007f846b349b20:Constant:exact *	# compressed klass ptr
35b     movl    [RAX + #12 (8-bit)], #0	# int

362     B31: #	out( B46 B32 ) <- in( B42 B30 )  Freq: 152505
362     movq    R10, [rsp + #40]	# spill
367     movq    [RAX + #16 (8-bit)], R10	# ptr
36b     
36b     # checkcastPP of RAX
36b     movq    [rsp + #104], RAX	# spill
370     movl    R10, [rsp + #64]	# spill
375     cmpl    R10, [RSP + #96 (32-bit)]	# unsigned
        nop 	# 6 bytes pad for loops and calls
380     jnb,u   B46  P=0.000001 C=-1.000000

386     B32: #	out( B61 B33 ) <- in( B31 )  Freq: 152504
386     movq    R10, [rsp + #88]	# spill
38b     movl    R11, [rsp + #64]	# spill
390     load_vector XMM0,[R10 + #16 + R11 << #3]
397     movq    R10, [rsp + #56]	# spill
        nop 	# 4 bytes pad for loops and calls
3a0     movl    R10, [R10 + #8 (8-bit)]	# compressed klass ptr
3a4     NullCheck R10

3a4     B33: #	out( B48 B34 ) <- in( B32 )  Freq: 152504
3a4     cmpl    R10, narrowklass: precise klass jdk/incubator/vector/Double256Vector: 0x00007f846b349b20:Constant:exact *	# compressed klass ptr
3ab     jne,u   B48  P=0.000001 C=-1.000000

3b1     B34: #	out( B43 B35 ) <- in( B33 )  Freq: 152504
3b1     movq    R10, [rsp + #56]	# spill
3b6     # checkcastPP of R10
3b6     movq    RBP, R10	# spill
3b9     # TLS is in R15
3b9     movq    RAX, [R15 + #328 (32-bit)]	# ptr
3c0     movq    R10, RAX	# spill
3c3     addq    R10, #48	# ptr
3c7     # TLS is in R15
3c7     cmpq    R10, [R15 + #344 (32-bit)]	# raw ptr
3ce     jnb,u   B43  P=0.000100 C=-1.000000

3d4     B35: #	out( B36 ) <- in( B34 )  Freq: 152489
3d4     # TLS is in R15
3d4     movq    [R15 + #328 (32-bit)], R10	# ptr
3db     PREFETCHW [R10 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
3e3     movq    [RAX], #1	# long
3ea     PREFETCHW [R10 + #256 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
3f2     movl    [RAX + #8 (8-bit)], narrowklass: precise klass [D: 0x00007f8467f0e730:Constant:exact *	# compressed klass ptr
3f9     PREFETCHW [R10 + #320 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
401     movl    [RAX + #12 (8-bit)], #4	# int
408     PREFETCHW [R10 + #384 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
410     movq    [RAX + #16 (8-bit)], #0	# long
418     movq    [RAX + #24 (8-bit)], #0	# long
420     movq    [RAX + #32 (8-bit)], #0	# long
428     movq    [RAX + #40 (8-bit)], #0	# long

430     B36: #	out( B21 B37 ) <- in( B44 B35 )  Freq: 152504
430     
430     MEMBAR-storestore (empty encoding)
430     # checkcastPP of RAX
430     movq    [rsp + #40], RAX	# spill
435     movq    R10, [RBP + #16 (8-bit)]	# ptr ! Field: jdk/internal/vm/vector/VectorSupport$VectorPayload.payload (constant)
439     vaddpd  XMM1,XMM0,[R10 + #16 (8-bit)]	! add packedD
43f     store_vector [RAX + #16 (8-bit)],XMM1
	
444     # TLS is in R15
444     movq    RAX, [R15 + #328 (32-bit)]	# ptr
44b     movq    R10, RAX	# spill
44e     addq    R10, #24	# ptr
452     # TLS is in R15
        nop 	# 14 bytes pad for loops and calls
460     cmpq    R10, [R15 + #344 (32-bit)]	# raw ptr
467     jb,u   B21  P=0.999900 C=-1.000000

46d     B37: #	out( B65 B38 ) <- in( B36 )  Freq: 15.2529
46d     vmovdqu [rsp + 160],XMM1	# spill
476     vmovdqu [rsp + 128],XMM3	# spill
47f     movsd   [rsp + #56], XMM2	# spill
485     vmovdqu [rsp + 0],XMM0	# spill
48a     movq    RSI, precise klass jdk/incubator/vector/Double256Vector: 0x00007f846b349b20:Constant:exact *	# ptr
494     call,static  wrapper for: _new_instance_Java
        # jdk.incubator.vector.DoubleVector::lanewiseTemplate @ bci:168 (line 651) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x00007f84690a51e0 STK[2]=#Ptr0x00007f84690a6a40 STK[3]=#4 STK[4]=RBP STK[5]=#ScObj0 STK[6]=#Ptr0x00007f846af620e0
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #0 }
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 279) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:90 (line 26) L[0]=rsp + #72 L[1]=rsp + #80 L[2]=rsp + #88 L[3]=rsp + #32 L[4]=_ L[5]=rsp + #48 L[6]=_ L[7]=rsp + #64 L[8]=rsp + #56 L[9]=_ L[10]=#ScObj0 L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #128 }
        # OopMap {rbp=Oop [40]=Oop [72]=Oop [80]=Oop [88]=Oop [104]=Oop off=1180/0x49c}

49c     B38: #	out( B22 ) <- in( B37 )  Freq: 15.2526
        # Block is sole successor of call
49c     movsd   XMM2, [rsp + #56]	# spill
4a2     vmovdqu XMM3,[rsp + 128]	# spill
4ab     vmovdqu XMM1,[rsp + 160]	# spill
4b4     jmp     B22

4b9     B39: #	out( B63 B40 ) <- in( B27 )  Freq: 15.253
4b9     vmovdqu [rsp + 128],XMM0	# spill
4c2     pushq   [rsp + #40]	# 64-bit mem-mem spill
	popq    [rsp + #0]
4cb     movq    RSI, precise klass [D: 0x00007f8467f0e730:Constant:exact *	# ptr
4d5     movl    RDX, #4	# int
        nop 	# 2 bytes pad for loops and calls
4dc     call,static  wrapper for: _new_array_Java
        # jdk.incubator.vector.DoubleVector::lanewiseTemplate @ bci:168 (line 651) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x00007f84690a51e0 STK[2]=#Ptr0x00007f84690a6a40 STK[3]=#4 STK[4]=RBP STK[5]=#ScObj0 STK[6]=#Ptr0x00007f846af620e0
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #128 }
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 279) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:74 (line 25) L[0]=rsp + #72 L[1]=rsp + #80 L[2]=rsp + #88 L[3]=rsp + #32 L[4]=_ L[5]=rsp + #48 L[6]=_ L[7]=rsp + #64 L[8]=rsp + #0 L[9]=_ L[10]=_ L[11]=rsp + #56 L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # OopMap {rbp=Oop [56]=Oop [72]=Oop [80]=Oop [88]=Oop off=1252/0x4e4}

4e4     B40: #	out( B29 ) <- in( B39 )  Freq: 15.2527
        # Block is sole successor of call
4e4     movsd   XMM2, [rsp + #0]	# spill
4e9     vmovdqu XMM0,[rsp + 128]	# spill
4f2     jmp     B29

4f7     B41: #	out( B62 B42 ) <- in( B29 )  Freq: 15.253
4f7     vmovdqu [rsp + 128],XMM3	# spill
500     movsd   [rsp + #104], XMM2	# spill
506     vmovdqu [rsp + 0],XMM0	# spill
50b     movq    RSI, precise klass jdk/incubator/vector/Double256Vector: 0x00007f846b349b20:Constant:exact *	# ptr
        nop 	# 3 bytes pad for loops and calls
518     call,static  wrapper for: _new_instance_Java
        # jdk.incubator.vector.DoubleVector::lanewiseTemplate @ bci:168 (line 651) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x00007f84690a51e0 STK[2]=#Ptr0x00007f84690a6a40 STK[3]=#4 STK[4]=RBP STK[5]=#ScObj0 STK[6]=#Ptr0x00007f846af620e0
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #0 }
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 279) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:74 (line 25) L[0]=rsp + #72 L[1]=rsp + #80 L[2]=rsp + #88 L[3]=rsp + #32 L[4]=_ L[5]=rsp + #48 L[6]=_ L[7]=rsp + #64 L[8]=rsp + #104 L[9]=_ L[10]=_ L[11]=rsp + #56 L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # OopMap {rbp=Oop [40]=Oop [56]=Oop [72]=Oop [80]=Oop [88]=Oop off=1312/0x520}

520     B42: #	out( B31 ) <- in( B41 )  Freq: 15.2527
        # Block is sole successor of call
520     movsd   XMM2, [rsp + #104]	# spill
526     vmovdqu XMM3,[rsp + 128]	# spill
52f     jmp     B31

534     B43: #	out( B66 B44 ) <- in( B34 )  Freq: 15.2529
534     vmovdqu [rsp + 160],XMM0	# spill
53d     vmovdqu [rsp + 128],XMM3	# spill
546     movsd   [rsp + #0], XMM2	# spill
54b     movq    RSI, precise klass [D: 0x00007f8467f0e730:Constant:exact *	# ptr
555     movl    RDX, #4	# int
        nop 	# 2 bytes pad for loops and calls
55c     call,static  wrapper for: _new_array_Java
        # jdk.incubator.vector.DoubleVector::lanewiseTemplate @ bci:168 (line 651) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x00007f84690a51e0 STK[2]=#Ptr0x00007f84690a6a40 STK[3]=#4 STK[4]=RBP STK[5]=#ScObj0 STK[6]=#Ptr0x00007f846af620e0
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #160 }
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 279) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:90 (line 26) L[0]=rsp + #72 L[1]=rsp + #80 L[2]=rsp + #88 L[3]=rsp + #32 L[4]=_ L[5]=rsp + #48 L[6]=_ L[7]=rsp + #64 L[8]=rsp + #0 L[9]=_ L[10]=#ScObj0 L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #128 }
        # OopMap {rbp=Oop [72]=Oop [80]=Oop [88]=Oop [104]=Oop off=1380/0x564}

564     B44: #	out( B36 ) <- in( B43 )  Freq: 15.2526
        # Block is sole successor of call
564     movsd   XMM2, [rsp + #0]	# spill
569     vmovdqu XMM3,[rsp + 128]	# spill
572     vmovdqu XMM0,[rsp + 160]	# spill
        nop 	# 5 bytes pad for loops and calls
580     jmp     B36

585     B45: #	out( N892 ) <- in( B24 )  Freq: 0.15453
585     movl    RSI, #-28	# int
58a     movq    RBP, R8	# spill
58d     movq    [rsp + #8], RDI	# spill
592     pushq   [rsp + #32]	# 64-bit mem-mem spill
	popq    [rsp + #16]
59c     pushq   [rsp + #48]	# 64-bit mem-mem spill
	popq    [rsp + #24]
5a6     movq    [rsp + #48], R9	# spill
5ab     movq    [rsp + #56], RDX	# spill
5b0     movq    [rsp + #64], RCX	# spill
5b5     movl    [rsp + #36], R10	# spill
5ba     movl    [rsp + #72], R11	# spill
        nop 	# 1 bytes pad for loops and calls
5c0     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 359) L[0]=_ L[1]=_ STK[0]=rsp + #36 STK[1]=rsp + #72 STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 74) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::fromArray @ bci:9 (line 2562) L[0]=#Ptr0x00007f846b3484a0 L[1]=rsp + #64 L[2]=_ L[3]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:71 (line 25) L[0]=RBP L[1]=rsp + #64 L[2]=rsp + #8 L[3]=rsp + #16 L[4]=_ L[5]=rsp + #24 L[6]=_ L[7]=rsp + #36 L[8]=rsp + #40 L[9]=_ L[10]=_ L[11]=rsp + #48 L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=rsp + #56
        # OopMap {rbp=Oop [8]=Oop [48]=Oop [56]=Oop [64]=Oop off=1480/0x5c8}
5c8     stop	# ShouldNotReachHere

5dc     B46: #	out( N892 ) <- in( B31 )  Freq: 0.15453
5dc     movl    RSI, #-28	# int
5e1     movq    RBP, [rsp + #72]	# spill
5e6     pushq   [rsp + #88]	# 64-bit mem-mem spill
	popq    [rsp + #8]
5f0     pushq   [rsp + #32]	# 64-bit mem-mem spill
	popq    [rsp + #16]
5fa     pushq   [rsp + #48]	# 64-bit mem-mem spill
	popq    [rsp + #24]
604     movsd   [rsp + #40], XMM2	# spill
60a     pushq   [rsp + #56]	# 64-bit mem-mem spill
	popq    [rsp + #48]
614     movl    [rsp + #36], R10	# spill
619     movq    [rsp - #8], rax	# 32-bit mem-mem spill
	movl    rax, [rsp + #96]
	movl    [rsp + #64], rax
	movq    rax, [rsp - #8]
62b     vmovdqu [rsp + 96],XMM3	# spill
        nop 	# 3 bytes pad for loops and calls
634     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 359) L[0]=_ L[1]=_ STK[0]=rsp + #36 STK[1]=rsp + #64 STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 74) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::fromArray @ bci:9 (line 2562) L[0]=#Ptr0x00007f846b3484a0 L[1]=rsp + #8 L[2]=_ L[3]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:87 (line 26) L[0]=RBP L[1]=rsp + #80 L[2]=rsp + #8 L[3]=rsp + #16 L[4]=_ L[5]=rsp + #24 L[6]=_ L[7]=rsp + #36 L[8]=rsp + #40 L[9]=_ L[10]=#ScObj0 L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=rsp + #48
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #96 }
        # OopMap {rbp=Oop [8]=Oop [48]=Oop [80]=Oop off=1596/0x63c}
63c     stop	# ShouldNotReachHere

650     B47: #	out( N892 ) <- in( B26 )  Freq: 0.152505
650     movl    RSI, #-34	# int
655     movq    RBP, R8	# spill
658     movq    [rsp + #0], RCX	# spill
65c     movq    [rsp + #8], RDI	# spill
661     pushq   [rsp + #32]	# 64-bit mem-mem spill
	popq    [rsp + #16]
66b     pushq   [rsp + #48]	# 64-bit mem-mem spill
	popq    [rsp + #24]
675     movl    [rsp + #32], R10	# spill
67a     movq    [rsp + #48], R9	# spill
67f     movq    [rsp + #56], RDX	# spill
684     vmovdqu [rsp + 64],XMM0	# spill
        nop 	# 2 bytes pad for loops and calls
68c     call,static  wrapper for: uncommon_trap(reason='class_check' action='maybe_recompile' debug_id='0')
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_ STK[0]=rsp + #56 STK[1]=#Ptr0x00007f846a963ef0 STK[2]=#ScObj0
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #64 }
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:74 (line 25) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=rsp + #16 L[4]=_ L[5]=rsp + #24 L[6]=_ L[7]=rsp + #32 L[8]=rsp + #40 L[9]=_ L[10]=_ L[11]=rsp + #48 L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # OopMap {rbp=Oop [0]=Oop [8]=Oop [48]=Oop [56]=Oop off=1684/0x694}
694     stop	# ShouldNotReachHere

6a8     B48: #	out( N892 ) <- in( B33 )  Freq: 0.152504
6a8     movl    RSI, #-34	# int
6ad     movq    RBP, [rsp + #72]	# spill
6b2     pushq   [rsp + #80]	# 64-bit mem-mem spill
	popq    [rsp + #0]
6bb     pushq   [rsp + #88]	# 64-bit mem-mem spill
	popq    [rsp + #8]
6c5     pushq   [rsp + #32]	# 64-bit mem-mem spill
	popq    [rsp + #16]
6cf     pushq   [rsp + #48]	# 64-bit mem-mem spill
	popq    [rsp + #24]
6d9     movl    [rsp + #32], R11	# spill
6de     movsd   [rsp + #40], XMM2	# spill
6e4     vmovdqu [rsp + 64],XMM0	# spill
6ea     vmovdqu [rsp + 96],XMM3	# spill
6f0     call,static  wrapper for: uncommon_trap(reason='class_check' action='maybe_recompile' debug_id='0')
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_ STK[0]=rsp + #56 STK[1]=#Ptr0x00007f846a963ef0 STK[2]=#ScObj0
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #64 }
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:90 (line 26) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=rsp + #16 L[4]=_ L[5]=rsp + #24 L[6]=_ L[7]=rsp + #32 L[8]=rsp + #40 L[9]=_ L[10]=#ScObj0 L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #96 }
        # OopMap {rbp=Oop [0]=Oop [8]=Oop [56]=Oop off=1784/0x6f8}
6f8     stop	# ShouldNotReachHere

70c     B49: #	out( N892 ) <- in( B23 )  Freq: 0.0762525
70c     ucomisd XMM2, XMM0
	movl    RBP, #-1
	jp,s    done
	jb,s    done
	setne   RBP
	movzbl  RBP, RBP
done:
729     negl    RBP	# int
72b     movl    RSI, #-187	# int
730     movq    [rsp + #0], R8	# spill
734     movq    [rsp + #8], RCX	# spill
739     movq    [rsp + #16], RDI	# spill
73e     pushq   [rsp + #32]	# 64-bit mem-mem spill
	popq    [rsp + #24]
748     pushq   [rsp + #48]	# 64-bit mem-mem spill
	popq    [rsp + #32]
752     movq    [rsp - #8], rax	# 32-bit mem-mem spill
	movl    rax, [rsp + #56]
	movl    [rsp + #40], rax
	movq    rax, [rsp - #8]
764     movsd   [rsp + #48], XMM2	# spill
76a     movq    [rsp + #56], RDX	# spill
76f     movq    [rsp + #64], R9	# spill
774     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:60 (line 24) L[0]=rsp + #0 L[1]=rsp + #8 L[2]=rsp + #16 L[3]=rsp + #24 L[4]=_ L[5]=rsp + #32 L[6]=_ L[7]=rsp + #40 L[8]=rsp + #48 L[9]=_ L[10]=rsp + #56 L[11]=rsp + #64 L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=RBP
        # OopMap {[0]=Oop [8]=Oop [16]=Oop [56]=Oop [64]=Oop off=1916/0x77c}
77c     stop	# ShouldNotReachHere

790     B50: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
790     xorl    R8, R8	# ptr
793     jmp     B4

798     B51: #	out( B7 ) <- in( B4 )  Freq: 0.000999986
798     xorl    RCX, RCX	# ptr
79a     jmp     B7

79f     B52: #	out( B10 ) <- in( B7 )  Freq: 0.000999985
79f     xorl    RDI, RDI	# ptr
7a1     jmp     B10

7a6     B53: #	out( B13 ) <- in( B10 )  Freq: 0.000999984
7a6     xorl    RDX, RDX	# ptr
7a8     jmp     B13

7ad     B54: #	out( B16 ) <- in( B13 )  Freq: 0.000999983
7ad     xorl    R9, R9	# ptr
7b0     jmp     B16

7b5     B55: #	out( B57 ) <- in( B2 )  Freq: 9.99e-07
7b5     movq    R12, RBP	# spill
7b8     movq    R9, [rsp + #0]	# spill
7bc     jmp,s   B57

7be     B56: #	out( B57 ) <- in( B5 )  Freq: 9.98999e-07
7be     movq    R9, [rsp + #0]	# spill

7c2     B57: #	out( N892 ) <- in( B55 B56 B58 B59 B14 )  Freq: 4.99499e-06
7c2     movl    RSI, #-115	# int
7c7     movq    RBP, [rsp + #32]	# spill
7cc     pushq   [rsp + #48]	# 64-bit mem-mem spill
	popq    [rsp + #0]
7d5     movq    [rsp - #8], rax	# 32-bit mem-mem spill
	movl    rax, [rsp + #56]
	movl    [rsp + #8], rax
	movq    rax, [rsp - #8]
7e7     pushq   [rsp + #40]	# 64-bit mem-mem spill
	popq    [rsp + #16]
7f1     movq    [rsp + #24], R9	# spill
7f6     movq    [rsp + #32], RBX	# spill
7fb     movq    [rsp + #40], R12	# spill
800     movq    [rsp + #48], R13	# spill
805     movq    [rsp + #56], R14	# spill
        nop 	# 2 bytes pad for loops and calls
80c     call,static  wrapper for: uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:54 (line 24) L[0]=rsp + #32 L[1]=rsp + #40 L[2]=rsp + #48 L[3]=RBP L[4]=_ L[5]=rsp + #0 L[6]=_ L[7]=rsp + #8 L[8]=rsp + #16 L[9]=_ L[10]=rsp + #56 L[11]=rsp + #24 L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # OopMap {[24]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop off=2068/0x814}
814     stop	# ShouldNotReachHere

828     B58: #	out( B57 ) <- in( B8 )  Freq: 9.98998e-07
828     movq    R9, [rsp + #0]	# spill
82c     jmp,s   B57

82e     B59: #	out( B57 ) <- in( B11 )  Freq: 9.98997e-07
82e     movq    R9, [rsp + #0]	# spill
832     jmp,s   B57

834     B60: #	out( N892 ) <- in( B25 )  Freq: 0.15453
834     movl    RSI, #-10	# int
839     vmovdqu [rsp + 0],XMM0	# spill
        nop 	# 2 bytes pad for loops and calls
840     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:74 (line 25) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=#NULL STK[1]=#ScObj0
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #0 }
        # OopMap {off=2120/0x848}
848     stop	# ShouldNotReachHere

85c     B61: #	out( N892 ) <- in( B32 )  Freq: 0.15453
85c     movl    RSI, #-10	# int
861     vmovdqu [rsp + 0],XMM0	# spill
        nop 	# 2 bytes pad for loops and calls
868     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:90 (line 26) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=#NULL STK[1]=#ScObj0
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #0 }
        # OopMap {off=2160/0x870}
870     stop	# ShouldNotReachHere

884     B62: #	out( B64 ) <- in( B41 )  Freq: 0.00015253
884     # exception oop is in rax; no code emitted
884     jmp,s   B64

886     B63: #	out( B64 ) <- in( B39 )  Freq: 0.00015253
886     # exception oop is in rax; no code emitted

886     B64: #	out( B68 ) <- in( B63 B62 )  Freq: 0.00030506
886     movq    RSI, RAX	# spill
889     jmp,s   B68

88b     B65: #	out( B67 ) <- in( B37 )  Freq: 0.000152529
88b     # exception oop is in rax; no code emitted
88b     jmp,s   B67

88d     B66: #	out( B67 ) <- in( B43 )  Freq: 0.000152529
88d     # exception oop is in rax; no code emitted

88d     B67: #	out( B68 ) <- in( B66 B65 )  Freq: 0.000305059
88d     movq    RSI, RAX	# spill

890     B68: #	out( N892 ) <- in( B67 B64 )  Freq: 0.000610119
890     vzeroupper
	addq    rsp, 208	# Destroy frame
	popq    rbp

89b     jmp     rethrow_stub

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    2880 1093 %     4       org.jml.regression.linear.DoubleVectorLinearRegression::fit @ 54 (378 bytes)
 total in heap  [0x000000011868ca10,0x000000011868e0f0] = 5856
 relocation     [0x000000011868cb88,0x000000011868cc48] = 192
 main code      [0x000000011868cc60,0x000000011868d500] = 2208
 stub code      [0x000000011868d500,0x000000011868d518] = 24
 oops           [0x000000011868d518,0x000000011868d548] = 48
 metadata       [0x000000011868d548,0x000000011868d5e8] = 160
 scopes data    [0x000000011868d5e8,0x000000011868dbc0] = 1496
 scopes pcs     [0x000000011868dbc0,0x000000011868e050] = 1168
 dependencies   [0x000000011868e050,0x000000011868e068] = 24
 handler table  [0x000000011868e068,0x000000011868e0c8] = 96
 nul chk table  [0x000000011868e0c8,0x000000011868e0f0] = 40

[Constant Pool (empty)]

[MachCode]
[Verified Entry Point]
  # {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
 ;; N892: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x000000011868cc60: ;   {runtime_call os::breakpoint()}
  0x000000011868cc60: e83b b3fe | f090 9090 | 9090 9090 | 9090 9090 
 ;; B1: #	out( B50 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x000000011868cc70: 8984 2400 | a0fe ff55 | 4881 ecd0 | 0000 0048 | 8b9e b000 | 0000 488b | aea8 0000 | 00c5 fb10 
  0x000000011868cc90: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x000000011868cc90: 4668 c5fb 

  0x000000011868cc94: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011868cc94: 1144 2428 | 4c8b aea0 | 0000 004c | 8b76 604c 

  0x000000011868cca4: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x000000011868cca4: 8b56 584c 

  0x000000011868cca8: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011868cca8: 8914 24c5 | fb10 8690 

  0x000000011868ccb0: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x000000011868ccb0: 0000 00c5 | fb11 4424 

  0x000000011868ccb8: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011868ccb8: 20c5 fb10 | 8680 0000 

  0x000000011868ccc0: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x000000011868ccc0: 00c5 fb11 

  0x000000011868ccc4: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011868ccc4: 4424 3044 

  0x000000011868ccc8: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x000000011868ccc8: 8b66 7844 | 8964 2438 | 488b fe90 | 9090 9090 | 9090 9090 | 9090 9090 | c5f8 7749 | baa0 1078 
  0x000000011868cce8: 0901 0000 | 0041 ffd2 

  0x000000011868ccf0: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011868ccf0: 4885 db0f | 84f7 0600 | 0044 8b5b | 0890 9090 

  0x000000011868cd00: ;   {metadata('org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011868cd00: 4181 fb20 | 1dba 440f | 8508 0700 

  0x000000011868cd0c: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x000000011868cd0c: 004c 8bc3 
 ;; B4: #	out( B51 B5 ) <- in( B3 B50 )  Freq: 0.999999
  0x000000011868cd10: 4c8b e548 

  0x000000011868cd14: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011868cd14: 85ed 0f84 | dc06 0000 
 ;; B5: #	out( B56 B6 ) <- in( B4 )  Freq: 0.998999
  0x000000011868cd1c: 448b 5508 

  0x000000011868cd20: ;   {metadata({type array double})}
  0x000000011868cd20: 4181 fac3 | 80b8 440f | 85f1 0600 

  0x000000011868cd2c: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x000000011868cd2c: 0048 8bcd 
 ;; B7: #	out( B52 B8 ) <- in( B6 B51 )  Freq: 0.999998
  0x000000011868cd30: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011868cd30: 4d85 ed0f | 84c6 0600 | 0045 8b5d | 0890 9090 

  0x000000011868cd40: ;   {metadata({type array double})}
  0x000000011868cd40: 4181 fbc3 | 80b8 440f | 853b 0700 

  0x000000011868cd4c: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x000000011868cd4c: 0049 8bfd 
 ;; B10: #	out( B53 B11 ) <- in( B9 B52 )  Freq: 0.999997
  0x000000011868cd50: ;   {metadata('jdk/incubator/vector/DoubleVector')}
  0x000000011868cd50: 48be 30ce | d425 0200 | 0000 9090 | 9090 9090 

  0x000000011868cd60: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011868cd60: 4d85 f60f | 849d 0600 | 0045 8b56 | 084d 33db | 4f8d 1cd3 | 4d8b 5360 | 4c3b d690 | 9090 9090 
  0x000000011868cd80: 0f85 0807 | 0000 498b 

  0x000000011868cd88: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x000000011868cd88: d64c 8b0c 

  0x000000011868cd8c: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011868cd8c: 244d 85c9 | 0f84 7706 | 0000 458b | 5908 4d33 | d24f 8d14 | da4d 8b52 | 604c 3bd6 | 0f85 7406 
  0x000000011868cdac: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x000000011868cdac: 0000 448b | 590c 4183 | c3fd 4585 | db7c 1390 | 9090 9090 

  0x000000011868cdc0: ; implicit exception: dispatches to 0x000000011868cdce
                      ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011868cdc0: 8b6f 0c83 | c5fd 85ed | 0f8d ca00 

  0x000000011868cdcc: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x000000011868cdcc: 0000 be76 | ffff ff49 | 8be8 4889 | 0c24 4889 | 7c24 0848 | ff74 2420 | 488f 4424 | 1048 ff74 
  0x000000011868cdec: 2430 488f | 4424 1848 | 8944 24f8 | 8b44 2438 | 8944 2420 | 488b 4424 | f848 8954 | 2430 4c89 
  0x000000011868ce0c: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011868ce0c: 4c24 3890 

  0x000000011868ce10: ;   {runtime_call UncommonTrapBlob}
  0x000000011868ce10: c5f8 77e8 

  0x000000011868ce14: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [48]=Oop [56]=Oop }
                      ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x000000011868ce14: 28d7 56f8 

  0x000000011868ce18: ;   {external_word}
  0x000000011868ce18: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011868ce24: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011868ce24: e4f0 e825 

  0x000000011868ce28: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x000000011868ce28: 41e5 f0f4 | 9090 9090 
 ;; B21: #	out( B22 ) <- in( B36 ) top-of-loop Freq: 152489
  0x000000011868ce30: 4d89 9748 | 0100 0041 | 0f0d 8ac0 | 0000 0048 | c700 0100 

  0x000000011868ce44: ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x000000011868ce44: 0000 c740 | 0814 a4ba | 44c7 400c | 0000 0000 
 ;; B22: #	out( B23 ) <- in( B38 B21 ) top-of-loop Freq: 152504
  0x000000011868ce54: 4c8b 5424 | 284c 8950 

  0x000000011868ce5c: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
  0x000000011868ce5c: 104c 8bc8 | 4d8b 9730 | 0100 008b 

  0x000000011868ce68: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011868ce68: 6c24 4083 | c504 896c 

  0x000000011868ce70: ; ImmutableOopMap {r9=Oop [72]=Oop [80]=Oop [88]=Oop [104]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
                      ;   {poll}
  0x000000011868ce70: 2438 4185 | 02c5 fb11 | 5424 284c | 8b44 2448 | 488b 4c24 | 5048 8b7c | 2458 488b | 5424 6844 
  0x000000011868ce90: 8b5c 2444 | 8b6c 2460 
 ;; B23: #	out( B49 B24 ) <- in( B19 B22 ) Loop( B23-B22 inner ) Freq: 152505
  0x000000011868ce98: 448b 5424 

  0x000000011868ce9c: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011868ce9c: 38c4 c17b 

  0x000000011868cea0: ;*i2d {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@56 (line 24)
  0x000000011868cea0: 2ac2 c5fb | 1054 2428 

  0x000000011868cea8: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011868cea8: c5f9 2ed0 | 0f86 ba04 | 0000 453b | d30f 832a | 0300 0089 | 6c24 6044 | 895c 2444 | 4889 7c24 
  0x000000011868cec8: 584c 8944 | 2448 4c89 

  0x000000011868ced0: ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011868ced0: 4c24 38c4 | a17e 6f44 

  0x000000011868ced8: ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011868ced8: d110 4889 | 4c24 5044 | 8954 2440 

  0x000000011868cee4: ; implicit exception: dispatches to 0x000000011868d494
  0x000000011868cee4: 448b 5a08 
 ;; B26: #	out( B47 B27 ) <- in( B25 )  Freq: 152505
  0x000000011868cee8: ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x000000011868cee8: 4181 fb14 

  0x000000011868ceec: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011868ceec: a4ba 440f | 85bb 0300 

  0x000000011868cef4: ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x000000011868cef4: 0048 8bea | 498b 8748 | 0100 004c | 8bd0 4983 | c230 4d3b | 9758 0100 | 000f 8306 

  0x000000011868cf10: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
  0x000000011868cf10: 0200 004d | 8997 4801 | 0000 410f | 0d8a c000 | 0000 48c7 | 0001 0000 | 0041 0f0d | 8a00 0100 
  0x000000011868cf30: ;   {metadata({type array double})}
  0x000000011868cf30: 00c7 4008 | c380 b844 | 410f 0d8a | 4001 0000 | c740 0c04 | 0000 0041 | 0f0d 8a80 | 0100 0048 
  0x000000011868cf50: c740 1000 | 0000 0048 | c740 1800 | 0000 0048 | c740 2000 | 0000 0048 | c740 2800 | 0000 0048 
  0x000000011868cf70: 8944 2428 

  0x000000011868cf74: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011868cf74: 4c8b 5510 | c4c1 7d58 

  0x000000011868cf7c: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x000000011868cf7c: 5a10 c5fe | 7f58 1049 | 8b87 4801 | 0000 4c8b | d049 83c2 | 184d 3b97 | 5801 0000 | 0f83 b901 
  0x000000011868cf9c: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
  0x000000011868cf9c: 0000 4d89 | 9748 0100 | 0041 0f0d | 8ac0 0000 | 0048 c700 | 0100 0000 

  0x000000011868cfb4: ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x000000011868cfb4: c740 0814 | a4ba 44c7 | 400c 0000 | 0000 4c8b | 5424 284c | 8950 1048 | 8944 2468 | 448b 5424 
  0x000000011868cfd4: 4044 3b54 | 2460 9090 | 9090 9090 | 0f83 5602 | 0000 4c8b | 5424 5844 

  0x000000011868cfec: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011868cfec: 8b5c 2440 | c481 7e6f 

  0x000000011868cff4: ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011868cff4: 44da 104c | 8b54 2438 | 9090 9090 

  0x000000011868d000: ; implicit exception: dispatches to 0x000000011868d4bc
  0x000000011868d000: 458b 5208 
 ;; B33: #	out( B48 B34 ) <- in( B32 )  Freq: 152504
  0x000000011868d004: ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x000000011868d004: 4181 fa14 

  0x000000011868d008: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011868d008: a4ba 440f | 85f7 0200 | 004c 8b54 

  0x000000011868d014: ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011868d014: 2438 498b | ea49 8b87 | 4801 0000 | 4c8b d049 | 83c2 304d | 3b97 5801 | 0000 0f83 | 6001 0000 
 ;; B35: #	out( B36 ) <- in( B34 )  Freq: 152489
  0x000000011868d034: 4d89 9748 | 0100 0041 | 0f0d 8ac0 | 0000 0048 | c700 0100 | 0000 410f | 0d8a 0001 

  0x000000011868d050: ;   {metadata({type array double})}
  0x000000011868d050: 0000 c740 | 08c3 80b8 | 4441 0f0d | 8a40 0100 | 00c7 400c | 0400 0000 | 410f 0d8a | 8001 0000 
  0x000000011868d070: 48c7 4010 | 0000 0000 | 48c7 4018 | 0000 0000 | 48c7 4020 | 0000 0000 | 48c7 4028 | 0000 0000 
 ;; B36: #	out( B21 B37 ) <- in( B44 B35 )  Freq: 152504
  0x000000011868d090: 4889 4424 | 284c 8b55 | 10c4 c17d | 584a 10c5 | fe7f 4810 | 498b 8748 | 0100 004c | 8bd0 4983 
  0x000000011868d0b0: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
  0x000000011868d0b0: c218 9090 | 9090 9090 | 9090 9090 | 9090 9090 | 4d3b 9758 | 0100 000f | 8263 fdff | ffc5 fe7f 
  0x000000011868d0d0: 8c24 a000 | 0000 c5fe | 7f9c 2480 | 0000 00c5 | fb11 5424 | 38c5 fe7f 

  0x000000011868d0e8: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
                      ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x000000011868d0e8: 0424 48be | a020 d525 | 0200 0000 

  0x000000011868d0f4: ;   {runtime_call _new_instance_Java}
  0x000000011868d0f4: c5f8 77e8 

  0x000000011868d0f8: ; ImmutableOopMap {rbp=Oop [40]=Oop [72]=Oop [80]=Oop [88]=Oop [104]=Oop }
                      ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                      ; - (reexecute) jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011868d0f8: a4c3 4af8 
 ;; B38: #	out( B22 ) <- in( B37 )  Freq: 15.2526
  0x000000011868d0fc: c5fb 1054 | 2438 c5fe | 6f9c 2480 | 0000 00c5 | fe6f 8c24 | a000 0000 | e93b fdff | ffc5 fe7f 
  0x000000011868d11c: 8424 8000 | 0000 48ff | 7424 2848 

  0x000000011868d128: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
                      ;   {metadata({type array double})}
  0x000000011868d128: 8f04 2448 | be18 06c4 | 2502 0000 | 00ba 0400 | 0000 9090 

  0x000000011868d13c: ;   {runtime_call _new_array_Java}
  0x000000011868d13c: c5f8 77e8 

  0x000000011868d140: ; ImmutableOopMap {rbp=Oop [56]=Oop [72]=Oop [80]=Oop [88]=Oop }
                      ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                      ; - (reexecute) jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x000000011868d140: 5cc0 4af8 
 ;; B40: #	out( B29 ) <- in( B39 )  Freq: 15.2527
  0x000000011868d144: c5fb 1014 | 24c5 fe6f | 8424 8000 | 0000 e918 | feff ffc5 | fe7f 9c24 | 8000 0000 | c5fb 1154 
  0x000000011868d164: 2468 c5fe 

  0x000000011868d168: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
                      ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x000000011868d168: 7f04 2448 | bea0 20d5 | 2502 0000 | 0090 9090 

  0x000000011868d178: ;   {runtime_call _new_instance_Java}
  0x000000011868d178: c5f8 77e8 

  0x000000011868d17c: ; ImmutableOopMap {rbp=Oop [40]=Oop [56]=Oop [72]=Oop [80]=Oop [88]=Oop }
                      ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                      ; - (reexecute) jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x000000011868d17c: 20c3 4af8 
 ;; B42: #	out( B31 ) <- in( B41 )  Freq: 15.2527
  0x000000011868d180: c5fb 1054 | 2468 c5fe | 6f9c 2480 | 0000 00e9 | 2efe ffff 
 ;; B43: #	out( B66 B44 ) <- in( B34 )  Freq: 15.2529
  0x000000011868d194: c5fe 7f84 | 24a0 0000 | 00c5 fe7f | 9c24 8000 | 0000 c5fb 

  0x000000011868d1a8: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
                      ;   {metadata({type array double})}
  0x000000011868d1a8: 1114 2448 | be18 06c4 | 2502 0000 | 00ba 0400 | 0000 9090 

  0x000000011868d1bc: ;   {runtime_call _new_array_Java}
  0x000000011868d1bc: c5f8 77e8 

  0x000000011868d1c0: ; ImmutableOopMap {rbp=Oop [72]=Oop [80]=Oop [88]=Oop [104]=Oop }
                      ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                      ; - (reexecute) jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011868d1c0: dcbf 4af8 
 ;; B44: #	out( B36 ) <- in( B43 )  Freq: 15.2526
  0x000000011868d1c4: c5fb 1014 | 24c5 fe6f | 9c24 8000 | 0000 c5fe | 6f84 24a0 | 0000 0090 | 9090 9090 | e9ab feff 
  0x000000011868d1e4: ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011868d1e4: ffbe e4ff | ffff 498b | e848 897c | 2408 48ff | 7424 2048 | 8f44 2410 | 48ff 7424 | 3048 8f44 
  0x000000011868d204: 2418 4c89 | 4c24 3048 | 8954 2438 | 4889 4c24 | 4044 8954 | 2424 4489 

  0x000000011868d21c: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011868d21c: 5c24 4890 

  0x000000011868d220: ;   {runtime_call UncommonTrapBlob}
  0x000000011868d220: c5f8 77e8 

  0x000000011868d224: ; ImmutableOopMap {rbp=Oop [8]=Oop [48]=Oop [56]=Oop [64]=Oop }
                      ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011868d224: 18d3 56f8 

  0x000000011868d228: ;   {external_word}
  0x000000011868d228: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011868d234: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011868d234: e4f0 e815 | 3de5 f0f4 
 ;; B46: #	out( N892 ) <- in( B31 )  Freq: 0.15453
  0x000000011868d23c: bee4 ffff | ff48 8b6c | 2448 48ff | 7424 5848 | 8f44 2408 | 48ff 7424 | 2048 8f44 | 2410 48ff 
  0x000000011868d25c: 7424 3048 | 8f44 2418 | c5fb 1154 | 2428 48ff | 7424 3848 | 8f44 2430 | 4489 5424 | 2448 8944 
  0x000000011868d27c: 24f8 8b44 | 2460 8944 | 2440 488b | 4424 f8c5 | fe7f 5c24 

  0x000000011868d290: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011868d290: 6090 9090 

  0x000000011868d294: ;   {runtime_call UncommonTrapBlob}
  0x000000011868d294: c5f8 77e8 

  0x000000011868d298: ; ImmutableOopMap {rbp=Oop [8]=Oop [48]=Oop [80]=Oop }
                      ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011868d298: a4d2 56f8 

  0x000000011868d29c: ;   {external_word}
  0x000000011868d29c: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011868d2a8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011868d2a8: e4f0 e8a1 | 3ce5 f0f4 
 ;; B47: #	out( N892 ) <- in( B26 )  Freq: 0.152505
  0x000000011868d2b0: bede ffff | ff49 8be8 | 4889 0c24 | 4889 7c24 | 0848 ff74 | 2420 488f | 4424 1048 | ff74 2430 
  0x000000011868d2d0: 488f 4424 | 1844 8954 | 2420 4c89 | 4c24 3048 | 8954 2438 | c5fe 7f44 

  0x000000011868d2e8: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011868d2e8: 2440 9090 

  0x000000011868d2ec: ;   {runtime_call UncommonTrapBlob}
  0x000000011868d2ec: c5f8 77e8 

  0x000000011868d2f0: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [48]=Oop [56]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x000000011868d2f0: 4cd2 56f8 

  0x000000011868d2f4: ;   {external_word}
  0x000000011868d2f4: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011868d300: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011868d300: e4f0 e849 | 3ce5 f0f4 
 ;; B48: #	out( N892 ) <- in( B33 )  Freq: 0.152504
  0x000000011868d308: bede ffff | ff48 8b6c | 2448 48ff | 7424 5048 | 8f04 2448 | ff74 2458 | 488f 4424 | 0848 ff74 
  0x000000011868d328: 2420 488f | 4424 1048 | ff74 2430 | 488f 4424 | 1844 895c | 2420 c5fb | 1154 2428 | c5fe 7f44 
  0x000000011868d348: 2440 c5fe | 7f5c 2460 

  0x000000011868d350: ;   {runtime_call UncommonTrapBlob}
  0x000000011868d350: c5f8 77e8 

  0x000000011868d354: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [56]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011868d354: e8d1 56f8 

  0x000000011868d358: ;   {external_word}
  0x000000011868d358: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011868d364: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011868d364: e4f0 e8e5 

  0x000000011868d368: ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@60 (line 24)
  0x000000011868d368: 3be5 f0f4 
 ;; B49: #	out( N892 ) <- in( B23 )  Freq: 0.0762525
  0x000000011868d36c: c5f9 2ed0 | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 | c540 0fb6 

  0x000000011868d388: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011868d388: edf7 ddbe | 45ff ffff | 4c89 0424 | 4889 4c24 | 0848 897c | 2410 48ff | 7424 2048 | 8f44 2418 
  0x000000011868d3a8: 48ff 7424 | 3048 8f44 | 2420 4889 | 4424 f88b | 4424 3889 | 4424 2848 | 8b44 24f8 | c5fb 1154 
  0x000000011868d3c8: 2430 4889 | 5424 384c | 894c 2440 

  0x000000011868d3d4: ;   {runtime_call UncommonTrapBlob}
  0x000000011868d3d4: c5f8 77e8 

  0x000000011868d3d8: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [56]=Oop [64]=Oop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@60 (line 24)
  0x000000011868d3d8: 64d1 56f8 

  0x000000011868d3dc: ;   {external_word}
  0x000000011868d3dc: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011868d3e8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011868d3e8: e4f0 e861 | 3be5 f0f4 
 ;; B50: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
  0x000000011868d3f0: 4533 c0e9 | 18f9 ffff 
 ;; B51: #	out( B7 ) <- in( B4 )  Freq: 0.000999986
  0x000000011868d3f8: 33c9 e931 | f9ff ff33 | ffe9 4af9 | ffff 33d2 | e97c f9ff | ff45 33c9 | e999 f9ff | ff4c 8be5 
  0x000000011868d418: 4c8b 0c24 | eb04 4c8b 

  0x000000011868d420: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x000000011868d420: 0c24 be8d | ffff ff48 | 8b6c 2420 | 48ff 7424 | 3048 8f04 | 2448 8944 | 24f8 8b44 | 2438 8944 
  0x000000011868d440: 2408 488b | 4424 f848 | ff74 2428 | 488f 4424 | 104c 894c | 2418 4889 | 5c24 204c | 8964 2428 
  0x000000011868d460: 4c89 6c24 | 304c 8974 

  0x000000011868d468: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011868d468: 2438 9090 

  0x000000011868d46c: ;   {runtime_call UncommonTrapBlob}
  0x000000011868d46c: c5f8 77e8 

  0x000000011868d470: ; ImmutableOopMap {[24]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop }
                      ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x000000011868d470: ccd0 56f8 

  0x000000011868d474: ;   {external_word}
  0x000000011868d474: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011868d480: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011868d480: e4f0 e8c9 | 3ae5 f0f4 
 ;; B58: #	out( B57 ) <- in( B8 )  Freq: 9.98998e-07
  0x000000011868d488: 4c8b 0c24 | eb94 4c8b | 0c24 eb8e 
 ;; B60: #	out( N892 ) <- in( B25 )  Freq: 0.15453
  0x000000011868d494: bef6 ffff | ffc5 fe7f 

  0x000000011868d49c: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011868d49c: 0424 9090 

  0x000000011868d4a0: ;   {runtime_call UncommonTrapBlob}
  0x000000011868d4a0: c5f8 77e8 

  0x000000011868d4a4: ; ImmutableOopMap {}
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x000000011868d4a4: 98d0 56f8 

  0x000000011868d4a8: ;   {external_word}
  0x000000011868d4a8: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011868d4b4: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011868d4b4: e4f0 e895 | 3ae5 f0f4 
 ;; B61: #	out( N892 ) <- in( B32 )  Freq: 0.15453
  0x000000011868d4bc: bef6 ffff | ffc5 fe7f 

  0x000000011868d4c4: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011868d4c4: 0424 9090 

  0x000000011868d4c8: ;   {runtime_call UncommonTrapBlob}
  0x000000011868d4c8: c5f8 77e8 

  0x000000011868d4cc: ; ImmutableOopMap {}
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011868d4cc: 70d0 56f8 

  0x000000011868d4d0: ;   {external_word}
  0x000000011868d4d0: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011868d4dc: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011868d4dc: e4f0 e86d | 3ae5 f0f4 
 ;; B62: #	out( B64 ) <- in( B41 )  Freq: 0.00015253
  0x000000011868d4e4: eb00 488b | f0eb 05eb 

  0x000000011868d4ec: ;*synchronization entry
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@-1 (line 15)
  0x000000011868d4ec: 0048 8bf0 
 ;; B68: #	out( N892 ) <- in( B67 B64 )  Freq: 0.000610119
  0x000000011868d4f0: c5f8 7748 | 81c4 d000 

  0x000000011868d4f8: ;   {runtime_call _rethrow_Java}
  0x000000011868d4f8: 0000 5de9 

  0x000000011868d4fc: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011868d4fc: a0b9 4af8 
[Exception Handler]
  0x000000011868d500: ;   {no_reloc}
  0x000000011868d500: e91b 7c4b | f8e8 0000 | 0000 4883 

  0x000000011868d50c: ;   {runtime_call DeoptimizationBlob}
  0x000000011868d50c: 2c24 05e9 | 4cd3 56f8 | f4f4 f4f4 
[/MachCode]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x000000011868d518:   0x000000017e000128 a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
  0x000000011868d520:   0x000000011ff8c550 a 'java/lang/Class'{0x000000011ff8c550} = double
  0x000000011868d528:   0x000000017e004370 a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000017e004370}
  0x000000011868d530:   0x000000017e000078 a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
  0x000000011868d538:   0x000000017e000250 a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000017e000250}
  0x000000011868d540:   0x000000011ff58b48 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011ff58b48}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x000000011868d548:   0x000000026788fe18 {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
  0x000000011868d550:   0x0000000267b18ef0 {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x000000011868d558:   0x0000000267b72458 {method} {0x0000000267b72458} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
  0x000000011868d560:   0x0000000267b6f070 {method} {0x0000000267b6f070} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/Double256Vector;' in 'jdk/incubator/vector/Double256Vector'
  0x000000011868d568:   0x0000000267b17fb0 {method} {0x0000000267b17fb0} 'lanewiseTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x000000011868d570:   0x0000000225d0e900 'org/jml/regression/linear/DoubleVectorLinearRegression'
  0x000000011868d578:   0x0000000225c40618 {type array double}
  0x000000011868d580:   0x0000000225d520a0 'jdk/incubator/vector/Double256Vector'
  0x000000011868d588:   0x0000000267b1ded0 {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x000000011868d590:   0x0000000267b96280 {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x000000011868d598:   0x000000011015f0e0 {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
  0x000000011868d5a0:   0x0000000267b710c0 {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
  0x000000011868d5a8:   0x0000000267b1f228 {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x000000011868d5b0:   0x0000000225d4eb10 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
  0x000000011868d5b8:   0x0000000267b3ef30 {method} {0x0000000267b3ef30} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  0x000000011868d5c0:   0x0000000225d5a670 'jdk/incubator/vector/VectorOperators$AssociativeImpl'
  0x000000011868d5c8:   0x0000000267a862a0 {method} {0x0000000267a862a0} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x000000011868d5d0:   0x0000000267a85e38 {method} {0x0000000267a85e38} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x000000011868d5d8:   0x0000000267a85f10 {method} {0x0000000267a85f10} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x000000011868d5e0:   0x0000000267b33200 {method} {0x0000000267b33200} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x000000011868cc5f offset=ffffffff bits=0):
PcDesc(pc=0x000000011868cc92 offset=32 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x000000011868cc98 offset=38 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011868cca7 offset=47 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x000000011868ccab offset=4b bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011868ccb3 offset=53 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x000000011868ccb9 offset=59 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011868ccc1 offset=61 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x000000011868ccc7 offset=67 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011868cccb offset=6b bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x000000011868ccf3 offset=93 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011868cd10 offset=b0 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x000000011868cd16 offset=b6 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011868cd30 offset=d0 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x000000011868cd33 offset=d3 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011868cd50 offset=f0 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x000000011868cd63 offset=103 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011868cd89 offset=129 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x000000011868cd90 offset=130 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011868cdae offset=14e bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x000000011868cdc3 offset=163 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011868cdce offset=16e bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x000000011868ce0f offset=1af bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011868ce18 offset=1b8 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[16],double
    - l5: 0
    - l6: stack[24],double
    - l7: stack[32]
    - l8: 0
    - l9: stack[40],double
    - l10: stack[48],oop
    - l11: stack[56],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011868ce2c offset=1cc bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x000000011868ce60 offset=200 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
PcDesc(pc=0x000000011868ce6b offset=20b bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011868ce72 offset=212 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)  reexecute=true
   Locals
    - l0: stack[72],oop
    - l1: stack[80],oop
    - l2: stack[88],oop
    - l3: 0
    - l4: stack[32],double
    - l5: 0
    - l6: stack[48],double
    - l7: reg rbp [10],int
    - l8: 0
    - l9: reg xmm2 [80],double
    - l10: obj[344]
    - l11: obj[345]
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 344: jdk.incubator.vector.Double256Vector reg xmm3 [96]Wrong location type 7
    - 345: jdk.incubator.vector.Double256Vector reg xmm1 [64]Wrong location type 7
PcDesc(pc=0x000000011868ce9d offset=23d bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011868cea2 offset=242 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@56 (line 24)
PcDesc(pc=0x000000011868ceac offset=24c bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011868ced3 offset=273 bits=0):   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x000000011868ceda offset=27a bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x000000011868ceef offset=28f bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011868cef5 offset=295 bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x000000011868cf13 offset=2b3 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
PcDesc(pc=0x000000011868cf78 offset=318 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011868cf7e offset=31e bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x000000011868cf9e offset=33e bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
PcDesc(pc=0x000000011868cff0 offset=390 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011868cff7 offset=397 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x000000011868d00b offset=3ab bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011868d016 offset=3b6 bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011868d0b2 offset=452 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
PcDesc(pc=0x000000011868d0ea offset=48a bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011868d0fc offset=49c bits=5):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: reg rbp [10],oop
    - @5: obj[332]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000017e004370}
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: stack[72],oop
    - l1: stack[80],oop
    - l2: stack[88],oop
    - l3: 0
    - l4: stack[32],double
    - l5: 0
    - l6: stack[48],double
    - l7: stack[64]
    - l8: 0
    - l9: stack[56],double
    - l10: obj[331]
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 331: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
    - 332: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
PcDesc(pc=0x000000011868d12b offset=4cb bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011868d144 offset=4e4 bits=5):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: reg rbp [10],oop
    - @5: obj[277]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000017e004370}
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: stack[72],oop
    - l1: stack[80],oop
    - l2: stack[88],oop
    - l3: 0
    - l4: stack[32],double
    - l5: 0
    - l6: stack[48],double
    - l7: stack[64]
    - l8: 0
    - l9: stack[0],double
    - l10: empty
    - l11: stack[56],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 277: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
PcDesc(pc=0x000000011868d16b offset=50b bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011868d180 offset=520 bits=5):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: reg rbp [10],oop
    - @5: obj[296]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000017e004370}
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: stack[72],oop
    - l1: stack[80],oop
    - l2: stack[88],oop
    - l3: 0
    - l4: stack[32],double
    - l5: 0
    - l6: stack[48],double
    - l7: stack[64]
    - l8: 0
    - l9: stack[104],double
    - l10: empty
    - l11: stack[56],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 296: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
PcDesc(pc=0x000000011868d1ab offset=54b bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011868d1c4 offset=564 bits=5):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: reg rbp [10],oop
    - @5: obj[312]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000017e004370}
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: stack[72],oop
    - l1: stack[80],oop
    - l2: stack[88],oop
    - l3: 0
    - l4: stack[32],double
    - l5: 0
    - l6: stack[48],double
    - l7: stack[64]
    - l8: 0
    - l9: stack[0],double
    - l10: obj[311]
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 311: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
    - 312: jdk.incubator.vector.Double256Vector stack[160]Wrong location type 7
PcDesc(pc=0x000000011868d1e5 offset=585 bits=0):   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x000000011868d21f offset=5bf bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011868d228 offset=5c8 bits=0):   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[36]
    - @1: stack[72]
    - @2: NULL
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[64],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[64],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[16],double
    - l5: 0
    - l6: stack[24],double
    - l7: stack[36]
    - l8: 0
    - l9: stack[40],double
    - l10: empty
    - l11: stack[48],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[56],oop
PcDesc(pc=0x000000011868d291 offset=631 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011868d29c offset=63c bits=0):   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[36]
    - @1: stack[64]
    - @2: NULL
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[8],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[80],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[16],double
    - l5: 0
    - l6: stack[24],double
    - l7: stack[36]
    - l8: 0
    - l9: stack[40],double
    - l10: obj[391]
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[48],oop
   Objects
    - 391: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
PcDesc(pc=0x000000011868d2ea offset=68a bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011868d2f4 offset=694 bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[56],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000017e000250}
    - @2: obj[363]
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[16],double
    - l5: 0
    - l6: stack[24],double
    - l7: stack[32]
    - l8: 0
    - l9: stack[40],double
    - l10: empty
    - l11: stack[48],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 363: jdk.incubator.vector.Double256Vector stack[64]Wrong location type 7
PcDesc(pc=0x000000011868d358 offset=6f8 bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[56],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000017e000250}
    - @2: obj[400]
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[16],double
    - l5: 0
    - l6: stack[24],double
    - l7: stack[32]
    - l8: 0
    - l9: stack[40],double
    - l10: obj[399]
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 399: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
    - 400: jdk.incubator.vector.Double256Vector stack[64]Wrong location type 7
PcDesc(pc=0x000000011868d36c offset=70c bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@60 (line 24)
PcDesc(pc=0x000000011868d389 offset=729 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011868d3dc offset=77c bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@60 (line 24)  reexecute=true
   Locals
    - l0: stack[0],oop
    - l1: stack[8],oop
    - l2: stack[16],oop
    - l3: 0
    - l4: stack[24],double
    - l5: 0
    - l6: stack[32],double
    - l7: stack[40]
    - l8: 0
    - l9: stack[48],double
    - l10: stack[56],oop
    - l11: stack[64],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: reg rbp [10],int
PcDesc(pc=0x000000011868d422 offset=7c2 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x000000011868d46a offset=80a bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011868d474 offset=814 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
   Locals
    - l0: stack[32],oop
    - l1: stack[40],oop
    - l2: stack[48],oop
    - l3: 0
    - l4: reg rbp [10],double
    - l5: 0
    - l6: stack[0],double
    - l7: stack[8]
    - l8: 0
    - l9: stack[16],double
    - l10: stack[56],oop
    - l11: stack[24],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011868d49e offset=83e bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011868d4a8 offset=848 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: NULL
    - @1: obj[371]
   Objects
    - 371: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
PcDesc(pc=0x000000011868d4c6 offset=866 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011868d4d0 offset=870 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: NULL
    - @1: obj[446]
   Objects
    - 446: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
PcDesc(pc=0x000000011868d4f0 offset=890 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@-1 (line 15)
PcDesc(pc=0x000000011868d500 offset=8a0 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x000000011868d519 offset=8b9 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 14 OopMaps

ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [48]=Oop [56]=Oop } pc offsets: 440 
ImmutableOopMap {r9=Oop [72]=Oop [80]=Oop [88]=Oop [104]=Oop } pc offsets: 530 
ImmutableOopMap {rbp=Oop [40]=Oop [72]=Oop [80]=Oop [88]=Oop [104]=Oop } pc offsets: 1180 
ImmutableOopMap {rbp=Oop [56]=Oop [72]=Oop [80]=Oop [88]=Oop } pc offsets: 1252 
ImmutableOopMap {rbp=Oop [40]=Oop [56]=Oop [72]=Oop [80]=Oop [88]=Oop } pc offsets: 1312 
ImmutableOopMap {rbp=Oop [72]=Oop [80]=Oop [88]=Oop [104]=Oop } pc offsets: 1380 
ImmutableOopMap {rbp=Oop [8]=Oop [48]=Oop [56]=Oop [64]=Oop } pc offsets: 1480 
ImmutableOopMap {rbp=Oop [8]=Oop [48]=Oop [80]=Oop } pc offsets: 1596 
ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [48]=Oop [56]=Oop } pc offsets: 1684 
ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [56]=Oop } pc offsets: 1784 
ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [56]=Oop [64]=Oop } pc offsets: 1916 
ImmutableOopMap {[24]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop } pc offsets: 2068 
ImmutableOopMap {} pc offsets: 2120 2160 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x000000011868cc92 offset=32):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x000000011868cc98 offset=38):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011868cc98 offset=38):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011868cc98 offset=38):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011868cc98 offset=38):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868cc98 offset=38):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x000000011868cca7 offset=47):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x000000011868ccab offset=4b):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011868ccab offset=4b):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011868ccab offset=4b):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011868ccab offset=4b):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868ccab offset=4b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x000000011868ccb3 offset=53):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x000000011868ccb9 offset=59):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011868ccb9 offset=59):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011868ccb9 offset=59):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011868ccb9 offset=59):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868ccb9 offset=59):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x000000011868ccc1 offset=61):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x000000011868ccc7 offset=67):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011868ccc7 offset=67):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011868ccc7 offset=67):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011868ccc7 offset=67):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868ccc7 offset=67):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x000000011868cccb offset=6b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x000000011868ccf3 offset=93):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011868ccf3 offset=93):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011868ccf3 offset=93):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011868ccf3 offset=93):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868ccf3 offset=93):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x000000011868cd10 offset=b0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x000000011868cd16 offset=b6):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011868cd16 offset=b6):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011868cd16 offset=b6):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011868cd16 offset=b6):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868cd16 offset=b6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x000000011868cd30 offset=d0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x000000011868cd33 offset=d3):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011868cd33 offset=d3):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011868cd33 offset=d3):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011868cd33 offset=d3):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868cd33 offset=d3):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x000000011868cd50 offset=f0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x000000011868cd63 offset=103):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011868cd63 offset=103):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011868cd63 offset=103):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011868cd63 offset=103):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868cd63 offset=103):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x000000011868cd89 offset=129):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x000000011868cd90 offset=130):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011868cd90 offset=130):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011868cd90 offset=130):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011868cd90 offset=130):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868cd90 offset=130):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x000000011868cdae offset=14e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x000000011868cdc3 offset=163):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011868cdc3 offset=163):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011868cdc3 offset=163):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011868cdc3 offset=163):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868cdc3 offset=163):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x000000011868cdce offset=16e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x000000011868ce0f offset=1af):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011868ce0f offset=1af):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011868ce0f offset=1af):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011868ce0f offset=1af):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868ce0f offset=1af):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x000000011868ce18 offset=1b8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[16],double
    - l5: 0
    - l6: stack[24],double
    - l7: stack[32]
    - l8: 0
    - l9: stack[40],double
    - l10: stack[48],oop
    - l11: stack[56],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011868ce2c offset=1cc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x000000011868ce60 offset=200):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
ScopeDesc(pc=0x000000011868ce6b offset=20b):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011868ce6b offset=20b):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011868ce6b offset=20b):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011868ce6b offset=20b):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868ce6b offset=20b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x000000011868ce72 offset=212):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)  reexecute=true
   Locals
    - l0: stack[72],oop
    - l1: stack[80],oop
    - l2: stack[88],oop
    - l3: 0
    - l4: stack[32],double
    - l5: 0
    - l6: stack[48],double
    - l7: reg rbp [10],int
    - l8: 0
    - l9: reg xmm2 [80],double
    - l10: obj[344]
    - l11: obj[345]
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 344: jdk.incubator.vector.Double256Vector reg xmm3 [96]Wrong location type 7
    - 345: jdk.incubator.vector.Double256Vector reg xmm1 [64]Wrong location type 7
ScopeDesc(pc=0x000000011868ce9d offset=23d):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011868ce9d offset=23d):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011868ce9d offset=23d):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011868ce9d offset=23d):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868ce9d offset=23d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x000000011868cea2 offset=242):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@56 (line 24)
ScopeDesc(pc=0x000000011868ceac offset=24c):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011868ceac offset=24c):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011868ceac offset=24c):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011868ceac offset=24c):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868ceac offset=24c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x000000011868ced3 offset=273):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011868ced3 offset=273):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011868ced3 offset=273):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011868ced3 offset=273):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x000000011868ceda offset=27a):
   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
ScopeDesc(pc=0x000000011868ceda offset=27a):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011868ceda offset=27a):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011868ceda offset=27a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x000000011868ceef offset=28f):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011868ceef offset=28f):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011868ceef offset=28f):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011868ceef offset=28f):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868ceef offset=28f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x000000011868cef5 offset=295):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868cef5 offset=295):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x000000011868cf13 offset=2b3):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
ScopeDesc(pc=0x000000011868cf78 offset=318):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011868cf78 offset=318):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011868cf78 offset=318):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011868cf78 offset=318):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868cf78 offset=318):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x000000011868cf7e offset=31e):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011868cf7e offset=31e):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011868cf7e offset=31e):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011868cf7e offset=31e):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868cf7e offset=31e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x000000011868cf9e offset=33e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
ScopeDesc(pc=0x000000011868cff0 offset=390):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011868cff0 offset=390):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011868cff0 offset=390):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011868cff0 offset=390):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868cff0 offset=390):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x000000011868cff7 offset=397):
   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
ScopeDesc(pc=0x000000011868cff7 offset=397):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011868cff7 offset=397):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011868cff7 offset=397):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x000000011868d00b offset=3ab):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011868d00b offset=3ab):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011868d00b offset=3ab):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011868d00b offset=3ab):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868d00b offset=3ab):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x000000011868d016 offset=3b6):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868d016 offset=3b6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x000000011868d0b2 offset=452):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
ScopeDesc(pc=0x000000011868d0ea offset=48a):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011868d0ea offset=48a):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011868d0ea offset=48a):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011868d0ea offset=48a):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868d0ea offset=48a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x000000011868d0fc offset=49c):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: reg rbp [10],oop
    - @5: obj[332]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000017e004370}
ScopeDesc(pc=0x000000011868d0fc offset=49c):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011868d0fc offset=49c):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011868d0fc offset=49c):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011868d0fc offset=49c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: stack[72],oop
    - l1: stack[80],oop
    - l2: stack[88],oop
    - l3: 0
    - l4: stack[32],double
    - l5: 0
    - l6: stack[48],double
    - l7: stack[64]
    - l8: 0
    - l9: stack[56],double
    - l10: obj[331]
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 331: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
    - 332: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
ScopeDesc(pc=0x000000011868d12b offset=4cb):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011868d12b offset=4cb):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011868d12b offset=4cb):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011868d12b offset=4cb):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868d12b offset=4cb):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x000000011868d144 offset=4e4):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: reg rbp [10],oop
    - @5: obj[277]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000017e004370}
ScopeDesc(pc=0x000000011868d144 offset=4e4):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011868d144 offset=4e4):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011868d144 offset=4e4):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011868d144 offset=4e4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: stack[72],oop
    - l1: stack[80],oop
    - l2: stack[88],oop
    - l3: 0
    - l4: stack[32],double
    - l5: 0
    - l6: stack[48],double
    - l7: stack[64]
    - l8: 0
    - l9: stack[0],double
    - l10: empty
    - l11: stack[56],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 277: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
ScopeDesc(pc=0x000000011868d16b offset=50b):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011868d16b offset=50b):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011868d16b offset=50b):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011868d16b offset=50b):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868d16b offset=50b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x000000011868d180 offset=520):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: reg rbp [10],oop
    - @5: obj[296]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000017e004370}
ScopeDesc(pc=0x000000011868d180 offset=520):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011868d180 offset=520):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011868d180 offset=520):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011868d180 offset=520):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: stack[72],oop
    - l1: stack[80],oop
    - l2: stack[88],oop
    - l3: 0
    - l4: stack[32],double
    - l5: 0
    - l6: stack[48],double
    - l7: stack[64]
    - l8: 0
    - l9: stack[104],double
    - l10: empty
    - l11: stack[56],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 296: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
ScopeDesc(pc=0x000000011868d1ab offset=54b):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011868d1ab offset=54b):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011868d1ab offset=54b):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011868d1ab offset=54b):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868d1ab offset=54b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x000000011868d1c4 offset=564):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: reg rbp [10],oop
    - @5: obj[312]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000017e004370}
ScopeDesc(pc=0x000000011868d1c4 offset=564):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011868d1c4 offset=564):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011868d1c4 offset=564):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011868d1c4 offset=564):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: stack[72],oop
    - l1: stack[80],oop
    - l2: stack[88],oop
    - l3: 0
    - l4: stack[32],double
    - l5: 0
    - l6: stack[48],double
    - l7: stack[64]
    - l8: 0
    - l9: stack[0],double
    - l10: obj[311]
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 311: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
    - 312: jdk.incubator.vector.Double256Vector stack[160]Wrong location type 7
ScopeDesc(pc=0x000000011868d1e5 offset=585):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011868d1e5 offset=585):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011868d1e5 offset=585):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011868d1e5 offset=585):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x000000011868d21f offset=5bf):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011868d21f offset=5bf):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011868d21f offset=5bf):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011868d21f offset=5bf):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868d21f offset=5bf):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x000000011868d228 offset=5c8):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[36]
    - @1: stack[72]
    - @2: NULL
ScopeDesc(pc=0x000000011868d228 offset=5c8):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011868d228 offset=5c8):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[64],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011868d228 offset=5c8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[64],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[16],double
    - l5: 0
    - l6: stack[24],double
    - l7: stack[36]
    - l8: 0
    - l9: stack[40],double
    - l10: empty
    - l11: stack[48],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[56],oop
ScopeDesc(pc=0x000000011868d291 offset=631):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011868d291 offset=631):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011868d291 offset=631):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011868d291 offset=631):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868d291 offset=631):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x000000011868d29c offset=63c):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[36]
    - @1: stack[64]
    - @2: NULL
ScopeDesc(pc=0x000000011868d29c offset=63c):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011868d29c offset=63c):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[8],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011868d29c offset=63c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[80],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[16],double
    - l5: 0
    - l6: stack[24],double
    - l7: stack[36]
    - l8: 0
    - l9: stack[40],double
    - l10: obj[391]
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[48],oop
   Objects
    - 391: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
ScopeDesc(pc=0x000000011868d2ea offset=68a):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011868d2ea offset=68a):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011868d2ea offset=68a):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011868d2ea offset=68a):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868d2ea offset=68a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x000000011868d2f4 offset=694):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[56],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000017e000250}
    - @2: obj[363]
ScopeDesc(pc=0x000000011868d2f4 offset=694):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[16],double
    - l5: 0
    - l6: stack[24],double
    - l7: stack[32]
    - l8: 0
    - l9: stack[40],double
    - l10: empty
    - l11: stack[48],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 363: jdk.incubator.vector.Double256Vector stack[64]Wrong location type 7
ScopeDesc(pc=0x000000011868d358 offset=6f8):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[56],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000017e000250}
    - @2: obj[400]
ScopeDesc(pc=0x000000011868d358 offset=6f8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[16],double
    - l5: 0
    - l6: stack[24],double
    - l7: stack[32]
    - l8: 0
    - l9: stack[40],double
    - l10: obj[399]
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 399: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
    - 400: jdk.incubator.vector.Double256Vector stack[64]Wrong location type 7
ScopeDesc(pc=0x000000011868d36c offset=70c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@60 (line 24)
ScopeDesc(pc=0x000000011868d389 offset=729):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011868d389 offset=729):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011868d389 offset=729):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011868d389 offset=729):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868d389 offset=729):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x000000011868d3dc offset=77c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@60 (line 24)  reexecute=true
   Locals
    - l0: stack[0],oop
    - l1: stack[8],oop
    - l2: stack[16],oop
    - l3: 0
    - l4: stack[24],double
    - l5: 0
    - l6: stack[32],double
    - l7: stack[40]
    - l8: 0
    - l9: stack[48],double
    - l10: stack[56],oop
    - l11: stack[64],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: reg rbp [10],int
ScopeDesc(pc=0x000000011868d422 offset=7c2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x000000011868d46a offset=80a):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011868d46a offset=80a):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011868d46a offset=80a):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011868d46a offset=80a):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868d46a offset=80a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x000000011868d474 offset=814):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
   Locals
    - l0: stack[32],oop
    - l1: stack[40],oop
    - l2: stack[48],oop
    - l3: 0
    - l4: reg rbp [10],double
    - l5: 0
    - l6: stack[0],double
    - l7: stack[8]
    - l8: 0
    - l9: stack[16],double
    - l10: stack[56],oop
    - l11: stack[24],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011868d49e offset=83e):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011868d49e offset=83e):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011868d49e offset=83e):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011868d49e offset=83e):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868d49e offset=83e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x000000011868d4a8 offset=848):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: NULL
    - @1: obj[371]
   Objects
    - 371: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
ScopeDesc(pc=0x000000011868d4c6 offset=866):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011868d4c6 offset=866):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011868d4c6 offset=866):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011868d4c6 offset=866):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868d4c6 offset=866):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x000000011868d4d0 offset=870):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: NULL
    - @1: obj[446]
   Objects
    - 446: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
ScopeDesc(pc=0x000000011868d4f0 offset=890):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@-1 (line 15)
ScopeDesc(pc=0x000000011868d500 offset=8a0):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011868d500 offset=8a0):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011868d500 offset=8a0):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011868d500 offset=8a0):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011868d500 offset=8a0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x000000011868cb88: 6400
relocInfo@0x000000011868cb88 [type=6(runtime_call) addr=0x000000011868cc60 offset=0 format=1] | [destination=0x0000000109677fa0]
         @0x000000011868cb8a: f006cca0
relocInfo@0x000000011868cb8c [type=12(metadata) addr=0x000000011868cd00 offset=160 format=3 data=6] | [metadata_addr=0x000000011868d570 *=0x0000000225d0e900 offset=0]metadata_value=0x0000000225d0e900: 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011868cb8e: f007cc20
relocInfo@0x000000011868cb90 [type=12(metadata) addr=0x000000011868cd20 offset=32 format=3 data=7] | [metadata_addr=0x000000011868d578 *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011868cb92: f007cc20
relocInfo@0x000000011868cb94 [type=12(metadata) addr=0x000000011868cd40 offset=32 format=3 data=7] | [metadata_addr=0x000000011868d578 *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011868cb96: c010
relocInfo@0x000000011868cb96 [type=12(metadata) addr=0x000000011868cd50 offset=16] | [metadata_addr=0x000000011868cd52 *=0x0000000225d4ce30 offset=0]metadata_value=0x0000000225d4ce30: 'jdk/incubator/vector/DoubleVector'
         @0x000000011868cb98: 64c3
relocInfo@0x000000011868cb98 [type=6(runtime_call) addr=0x000000011868ce13 offset=195 format=1] | [destination=0x0000000110bfa540]
         @0x000000011868cb9a: f80309ba777700017005
relocInfo@0x000000011868cba2 [type=7(external_word) addr=0x000000011868ce18 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011868cba4: 640e
relocInfo@0x000000011868cba4 [type=6(runtime_call) addr=0x000000011868ce26 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011868cba6: f008cc20
relocInfo@0x000000011868cba8 [type=12(metadata) addr=0x000000011868ce46 offset=32 format=3 data=8] | [metadata_addr=0x000000011868d580 *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011868cbaa: a02c
relocInfo@0x000000011868cbaa [type=10(poll) addr=0x000000011868ce72 offset=44]
         @0x000000011868cbac: f008cc76
relocInfo@0x000000011868cbae [type=12(metadata) addr=0x000000011868cee8 offset=118 format=3 data=8] | [metadata_addr=0x000000011868d580 *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011868cbb0: f007cc49
relocInfo@0x000000011868cbb2 [type=12(metadata) addr=0x000000011868cf31 offset=73 format=3 data=7] | [metadata_addr=0x000000011868d578 *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011868cbb4: f008cc83
relocInfo@0x000000011868cbb6 [type=12(metadata) addr=0x000000011868cfb4 offset=131 format=3 data=8] | [metadata_addr=0x000000011868d580 *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011868cbb8: f008cc50
relocInfo@0x000000011868cbba [type=12(metadata) addr=0x000000011868d004 offset=80 format=3 data=8] | [metadata_addr=0x000000011868d580 *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011868cbbc: f007cc4e
relocInfo@0x000000011868cbbe [type=12(metadata) addr=0x000000011868d052 offset=78 format=3 data=7] | [metadata_addr=0x000000011868d578 *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011868cbc0: c098
relocInfo@0x000000011868cbc0 [type=12(metadata) addr=0x000000011868d0ea offset=152] | [metadata_addr=0x000000011868d0ec *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011868cbc2: 640d
relocInfo@0x000000011868cbc2 [type=6(runtime_call) addr=0x000000011868d0f7 offset=13 format=1] | [destination=0x0000000110b394a0]
         @0x000000011868cbc4: c034
relocInfo@0x000000011868cbc4 [type=12(metadata) addr=0x000000011868d12b offset=52] | [metadata_addr=0x000000011868d12d *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011868cbc6: 6414
relocInfo@0x000000011868cbc6 [type=6(runtime_call) addr=0x000000011868d13f offset=20 format=1] | [destination=0x0000000110b391a0]
         @0x000000011868cbc8: c02c
relocInfo@0x000000011868cbc8 [type=12(metadata) addr=0x000000011868d16b offset=44] | [metadata_addr=0x000000011868d16d *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011868cbca: 6410
relocInfo@0x000000011868cbca [type=6(runtime_call) addr=0x000000011868d17b offset=16 format=1] | [destination=0x0000000110b394a0]
         @0x000000011868cbcc: c030
relocInfo@0x000000011868cbcc [type=12(metadata) addr=0x000000011868d1ab offset=48] | [metadata_addr=0x000000011868d1ad *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011868cbce: 6414
relocInfo@0x000000011868cbce [type=6(runtime_call) addr=0x000000011868d1bf offset=20 format=1] | [destination=0x0000000110b391a0]
         @0x000000011868cbd0: 6464
relocInfo@0x000000011868cbd0 [type=6(runtime_call) addr=0x000000011868d223 offset=100 format=1] | [destination=0x0000000110bfa540]
         @0x000000011868cbd2: f80309ba777700017005
relocInfo@0x000000011868cbda [type=7(external_word) addr=0x000000011868d228 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011868cbdc: 640e
relocInfo@0x000000011868cbdc [type=6(runtime_call) addr=0x000000011868d236 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011868cbde: 6461
relocInfo@0x000000011868cbde [type=6(runtime_call) addr=0x000000011868d297 offset=97 format=1] | [destination=0x0000000110bfa540]
         @0x000000011868cbe0: f80309ba777700017005
relocInfo@0x000000011868cbe8 [type=7(external_word) addr=0x000000011868d29c offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011868cbea: 640e
relocInfo@0x000000011868cbea [type=6(runtime_call) addr=0x000000011868d2aa offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011868cbec: 6445
relocInfo@0x000000011868cbec [type=6(runtime_call) addr=0x000000011868d2ef offset=69 format=1] | [destination=0x0000000110bfa540]
         @0x000000011868cbee: f80309ba777700017005
relocInfo@0x000000011868cbf6 [type=7(external_word) addr=0x000000011868d2f4 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011868cbf8: 640e
relocInfo@0x000000011868cbf8 [type=6(runtime_call) addr=0x000000011868d302 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011868cbfa: 6451
relocInfo@0x000000011868cbfa [type=6(runtime_call) addr=0x000000011868d353 offset=81 format=1] | [destination=0x0000000110bfa540]
         @0x000000011868cbfc: f80309ba777700017005
relocInfo@0x000000011868cc04 [type=7(external_word) addr=0x000000011868d358 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011868cc06: 640e
relocInfo@0x000000011868cc06 [type=6(runtime_call) addr=0x000000011868d366 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011868cc08: 6471
relocInfo@0x000000011868cc08 [type=6(runtime_call) addr=0x000000011868d3d7 offset=113 format=1] | [destination=0x0000000110bfa540]
         @0x000000011868cc0a: f80309ba777700017005
relocInfo@0x000000011868cc12 [type=7(external_word) addr=0x000000011868d3dc offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011868cc14: 640e
relocInfo@0x000000011868cc14 [type=6(runtime_call) addr=0x000000011868d3ea offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011868cc16: 6485
relocInfo@0x000000011868cc16 [type=6(runtime_call) addr=0x000000011868d46f offset=133 format=1] | [destination=0x0000000110bfa540]
         @0x000000011868cc18: f80309ba777700017005
relocInfo@0x000000011868cc20 [type=7(external_word) addr=0x000000011868d474 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011868cc22: 640e
relocInfo@0x000000011868cc22 [type=6(runtime_call) addr=0x000000011868d482 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011868cc24: 6421
relocInfo@0x000000011868cc24 [type=6(runtime_call) addr=0x000000011868d4a3 offset=33 format=1] | [destination=0x0000000110bfa540]
         @0x000000011868cc26: f80309ba777700017005
relocInfo@0x000000011868cc2e [type=7(external_word) addr=0x000000011868d4a8 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011868cc30: 640e
relocInfo@0x000000011868cc30 [type=6(runtime_call) addr=0x000000011868d4b6 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011868cc32: 6415
relocInfo@0x000000011868cc32 [type=6(runtime_call) addr=0x000000011868d4cb offset=21 format=1] | [destination=0x0000000110bfa540]
         @0x000000011868cc34: f80309ba777700017005
relocInfo@0x000000011868cc3c [type=7(external_word) addr=0x000000011868d4d0 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011868cc3e: 640e
relocInfo@0x000000011868cc3e [type=6(runtime_call) addr=0x000000011868d4de offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011868cc40: 641d
relocInfo@0x000000011868cc40 [type=6(runtime_call) addr=0x000000011868d4fb offset=29 format=1] | [destination=0x0000000110b38ea0]
         @0x000000011868cc42: 0005
relocInfo@0x000000011868cc42 [type=0(none) addr=0x000000011868d500 offset=5]
         @0x000000011868cc44: 6400
relocInfo@0x000000011868cc44 [type=6(runtime_call) addr=0x000000011868d500 offset=0 format=1] | [destination=0x0000000110b45120]
         @0x000000011868cc46: 640f
relocInfo@0x000000011868cc46 [type=6(runtime_call) addr=0x000000011868d50f offset=15 format=1] | [destination=0x0000000110bfa860]
         @0x000000011868cc48: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type leaf_type
  context = org.jml.regression.linear.DoubleVectorLinearRegression
   [nmethod<=klass]org.jml.regression.linear.DoubleVectorLinearRegression
Dependency of type unique_concrete_method
  context = jdk.incubator.vector.DoubleVector$DoubleSpecies
  method  = {method} {0x0000000267b3ef30} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
   [nmethod<=klass]jdk.incubator.vector.DoubleVector$DoubleSpecies
Dependency of type unique_concrete_method
  context = jdk.incubator.vector.VectorOperators$AssociativeImpl
  method  = {method} {0x0000000267a862a0} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$AssociativeImpl
Dependency of type unique_concrete_method
  context = jdk.incubator.vector.VectorOperators$AssociativeImpl
  method  = {method} {0x0000000267a85e38} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$AssociativeImpl
Dependency of type unique_concrete_method
  context = jdk.incubator.vector.VectorOperators$AssociativeImpl
  method  = {method} {0x0000000267a85f10} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$AssociativeImpl
Dependency of type unique_concrete_method
  context = jdk.incubator.vector.VectorOperators$ImplCache
  method  = {method} {0x0000000267b33200} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$ImplCache
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 96 bytes)
catch_pco = 1180 (1 entries)
  bci -1 at scope depth 0 -> pco 2187
catch_pco = 1252 (1 entries)
  bci -1 at scope depth 0 -> pco 2182
catch_pco = 1312 (1 entries)
  bci -1 at scope depth 0 -> pco 2180
catch_pco = 1380 (1 entries)
  bci -1 at scope depth 0 -> pco 2189
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 4 entries, 36 bytes):
{
   < 0x000000011868cdae, 0x000000011868cdce > < 0x000000011868cdc0, 0x000000011868cdce > < 0x000000011868cee4, 0x000000011868d494 > 
   < 0x000000011868d000, 0x000000011868d4bc > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 NULL-oop
#1: 0x000000017e000128 a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
#2: 0x000000011ff8c550 a 'java/lang/Class'{0x000000011ff8c550} = double
#3: 0x000000017e004370 a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000017e004370}
#4: 0x000000017e000078 a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
#5: 0x000000017e000250 a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000017e000250}
#6: 0x000000011ff58b48 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011ff58b48}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 NULL-oop
# 1: 0x000000026788fe18 {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
# 2: 0x0000000267b18ef0 {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
# 3: 0x0000000267b72458 {method} {0x0000000267b72458} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
# 4: 0x0000000267b6f070 {method} {0x0000000267b6f070} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/Double256Vector;' in 'jdk/incubator/vector/Double256Vector'
# 5: 0x0000000267b17fb0 {method} {0x0000000267b17fb0} 'lanewiseTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
# 6: 0x0000000225d0e900 'org/jml/regression/linear/DoubleVectorLinearRegression'
# 7: 0x0000000225c40618 {type array double}
# 8: 0x0000000225d520a0 'jdk/incubator/vector/Double256Vector'
# 9: 0x0000000267b1ded0 {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
#10: 0x0000000267b96280 {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
#11: 0x000000011015f0e0 {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
#12: 0x0000000267b710c0 {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
#13: 0x0000000267b1f228 {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
#14: 0x0000000225d4eb10 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
#15: 0x0000000267b3ef30 {method} {0x0000000267b3ef30} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
#16: 0x0000000225d5a670 'jdk/incubator/vector/VectorOperators$AssociativeImpl'
#17: 0x0000000267a862a0 {method} {0x0000000267a862a0} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#18: 0x0000000267a85e38 {method} {0x0000000267a85e38} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#19: 0x0000000267a85f10 {method} {0x0000000267a85f10} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#20: 0x0000000267b33200 {method} {0x0000000267b33200} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    2990 1138 %     3       org.jml.regression.linear.DoubleVectorLinearRegression::fit @ 199 (378 bytes)
 total in heap  [0x0000000111267990,0x000000011126fb60] = 33232
 relocation     [0x0000000111267b08,0x00000001112682d8] = 2000
 constants      [0x00000001112682e0,0x0000000111268300] = 32
 main code      [0x0000000111268300,0x000000011126d1c0] = 20160
 stub code      [0x000000011126d1c0,0x000000011126d3c8] = 520
 oops           [0x000000011126d3c8,0x000000011126d418] = 80
 metadata       [0x000000011126d418,0x000000011126d4c8] = 176
 scopes data    [0x000000011126d4c8,0x000000011126eaf0] = 5672
 scopes pcs     [0x000000011126eaf0,0x000000011126fa90] = 4000
 dependencies   [0x000000011126fa90,0x000000011126fa98] = 8
 nul chk table  [0x000000011126fa98,0x000000011126fb60] = 200


[Constant Pool]
             Address          hex4                    hex8      
  0x00000001112682e0:   0x00000000      0x0000000000000000      
  0x00000001112682e4:   0x00000000                              
  0x00000001112682e8:   0x00000000      0x0000000000000000      
  0x00000001112682ec:   0x00000000                              
  0x00000001112682f0:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00000001112682f4:   0xf4f4f4f4                              
  0x00000001112682f8:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00000001112682fc:   0xf4f4f4f4                              

[MachCode]
[Entry Point]
  # {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
 ;;  block B254 [0, 0]
  0x0000000111268300: ;   {no_reloc}
  0x0000000111268300: 448b 5608 | 49c1 e203 

  0x0000000111268308: ;   {runtime_call ic_miss_stub}
  0x0000000111268308: 4c3b d00f | 850f 1699 | ff90 9090 | 9090 9090 | 9090 9090 | 9090 9090 
[Verified Entry Point]
  0x0000000111268320: 8984 2400 | a0fe ff55 | 4881 ec10 | 0300 0048 | 89b4 2420 | 0100 0048 | 8994 2410 | 0100 0048 
  0x0000000111268340: 898c 2418 

  0x0000000111268344: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111268344: 0100 0049 | b840 46a0 | 6702 0000 | 0045 8b88 | 1c01 0000 | 4183 c102 | 4589 881c | 0100 0041 
  0x0000000111268364: 81e1 fe07 | 0000 4183 | f900 0f84 

  0x0000000111268370: ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@0 (line 15)
  0x0000000111268370: 0f3f 0000 
 ;;  block B255 [0, 0]
 ;;  block B0 [0, 4]
  0x0000000111268374: ; implicit exception: dispatches to 0x000000011126c2a4
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@1 (line 15)
  0x0000000111268374: 8b5a 0c89 | 9c24 5801 | 0000 8b41 

  0x0000000111268380: ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@3 (line 15)
  0x0000000111268380: 0c89 8424 | 5c01 0000 

  0x0000000111268388: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111268388: 3bd8 49b8 | 4046 a067 | 0200 0000 | 49b9 7001 | 0000 0000 | 0000 0f85 | 0a00 0000 | 49b9 6001 
  0x00000001112683a8: 0000 0000 | 0000 4b8b | 3c08 488d | 7f01 4b89 | 3c08 0f85 

  0x00000001112683bc: ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@4 (line 15)
  0x00000001112683bc: 7c3c 0000 
 ;;  block B3 [17, 5]
  0x00000001112683c0: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078})}
  0x00000001112683c0: 49b8 7800 | 007e 0100 

  0x00000001112683c8: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x00000001112683c8: 0000 49b9 | 4046 a067 | 0200 0000 | 458b 4008 | 49c1 e003 | 4d3b 81a0 | 0100 0075 | 0d49 8381 
  0x00000001112683e8: a801 0000 | 01e9 6600 | 0000 4d3b | 81b0 0100 | 0075 0d49 | 8381 b801 | 0000 01e9 | 5000 0000 
  0x0000000111268408: 4981 b9a0 | 0100 0000 | 0000 0075 | 174d 8981 | a001 0000 | 49c7 81a8 | 0100 0001 | 0000 00e9 
  0x0000000111268428: 2c00 0000 | 4981 b9b0 | 0100 0000 | 0000 0075 | 174d 8981 | b001 0000 | 49c7 81b8 | 0100 0001 
  0x0000000111268448: 0000 00e9 | 0800 0000 | 4983 8190 | 0100 0001 

  0x0000000111268458: ;   {metadata(method data for {method} {0x0000000267b3fa08} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies')}
  0x0000000111268458: 49b8 18dc | a967 0200 | 0000 458b | 881c 0100 | 0041 83c1 | 0245 8988 | 1c01 0000 | 4181 e1fe 
  0x0000000111268478: ff1f 0041 | 83f9 000f | 8451 3e00 

  0x0000000111268484: ;   {metadata(method data for {method} {0x0000000267b3fa08} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies')}
  0x0000000111268484: 0049 b818 | dca9 6702 | 0000 0049 | 8380 6001 

  0x0000000111268494: ;   {metadata(method data for {method} {0x0000000267b96588} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x0000000111268494: 0000 0149 | b8d0 dda9 | 6702 0000 | 0045 8b88 | 1c01 0000 | 4183 c102 | 4589 881c | 0100 0041 
  0x00000001112684b4: 81e1 feff | 1f00 4183 | f900 0f84 | 333e 0000 

  0x00000001112684c4: ;   {metadata(method data for {method} {0x0000000267b96588} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x00000001112684c4: 49b8 d0dd | a967 0200 | 0000 41ff | 8070 0100 

  0x00000001112684d4: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorIntrinsics::roundDown@5 (line 106)
                      ; - jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
  0x00000001112684d4: 004c 8bc3 | 4183 e0fc 
 ;;  block B15 [35, 54]
  0x00000001112684dc: c4c1 7b2a | c0c5 fb11 | 8424 9002 

  0x00000001112684e8: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x00000001112684e8: 0000 49b8 | 4046 a067 | 0200 0000 | 4983 80c8 | 0100 0001 

  0x00000001112684fc: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112684fc: 49b8 a8df | a967 0200 | 0000 458b | 881c 0100 | 0041 83c1 | 0245 8988 | 1c01 0000 | 4181 e1fe 
  0x000000011126851c: ff1f 0041 | 83f9 000f | 84ef 3d00 

  0x0000000111268528: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078})}
  0x0000000111268528: 0049 bb78 | 0000 7e01 | 0000 004d 

  0x0000000111268534: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111268534: 8bc3 49b9 | a8df a967 | 0200 0000 | 4983 8198 | 0100 0001 

  0x0000000111268548: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111268548: 4d8b c349 | b9a8 dfa9 | 6702 0000 | 0045 8b40 | 0849 c1e0 | 034d 3b81 | e001 0000 | 750d 4983 
  0x0000000111268568: 81e8 0100 | 0001 e966 | 0000 004d | 3b81 f001 | 0000 750d | 4983 81f8 | 0100 0001 | e950 0000 
  0x0000000111268588: 0049 81b9 | e001 0000 | 0000 0000 | 7517 4d89 | 81e0 0100 | 0049 c781 | e801 0000 | 0100 0000 
  0x00000001112685a8: e92c 0000 | 0049 81b9 | f001 0000 | 0000 0000 | 7517 4d89 | 81f0 0100 | 0049 c781 | f801 0000 
  0x00000001112685c8: 0100 0000 | e908 0000 | 0049 8381 | d001 0000 

  0x00000001112685d8: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112685d8: 0149 b8a8 | dfa9 6702 | 0000 0049 | 8380 0802 

  0x00000001112685e8: ;   {metadata(method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112685e8: 0000 0149 | b868 e2a9 | 6702 0000 | 0045 8b88 | 1c01 0000 | 4183 c102 | 4589 881c | 0100 0041 
  0x0000000111268608: 81e1 feff | 1f00 4183 | f900 0f84 | 213d 0000 

  0x0000000111268618: ;   {metadata(method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111268618: 49b8 68e2 | a967 0200 | 0000 4983 | 8060 0100 

  0x0000000111268628: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111268628: 0001 49b8 | 08ad 4010 | 0100 0000 | 4d8d 8038 

  0x0000000111268638: ;   {oop(a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e0000e8})}
  0x0000000111268638: 0200 0049 | bde8 0000 | 7e01 0000 | 004d 8bcd | 4d85 c975 | 0749 8108 | 0100 0000 

  0x0000000111268654: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111268654: 49b8 a8df | a967 0200 | 0000 4983 | 8018 0200 

  0x0000000111268664: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111268664: 0001 49b8 | 08ad 4010 | 0100 0000 | 458b 881c | 0100 0041 | 83c1 0245 | 8988 1c01 | 0000 4181 
  0x0000000111268684: e1fe ff1f | 0041 83f9 | 000f 84c7 

  0x0000000111268690: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x0000000111268690: 3c00 0049 | b808 9d40 | 1001 0000 | 004d 8d80 | f001 0000 | 4d8b cd4d | 85c9 7507 | 4981 0801 
  0x00000001112686b0: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x00000001112686b0: 0000 0049 | b808 ad40 | 1001 0000 | 0049 8380 | 9801 0000 

  0x00000001112686c4: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x00000001112686c4: 0149 b808 | 9d40 1001 | 0000 0045 | 8b88 1c01 | 0000 4183 | c102 4589 | 881c 0100 | 0041 81e1 
  0x00000001112686e4: feff 1f00 | 4183 f900 
 ;;  212 branch [EQ] [CounterOverflowStub: 0x00007f8469312040]
  0x00000001112686ec: 0f84 893c 

  0x00000001112686f0: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x00000001112686f0: 0000 49b8 | 08ad 4010 | 0100 0000 | 4d8d 80d0 

  0x0000000111268700: ;   {oop(a 'jdk/incubator/vector/DoubleVector$$Lambda$87+0x0000000225d54960'{0x000000017e000118})}
  0x0000000111268700: 0100 0049 | be18 0100 | 7e01 0000 | 004d 8bce | 4d85 c975 | 0749 8108 | 0100 0000 

  0x000000011126871c: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126871c: 49b8 a8df | a967 0200 | 0000 4d8d | 8028 0200 | 004d 8bce | 4d85 c975 | 0749 8108 | 0100 0000 
  0x000000011126873c: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126873c: 49b8 a8df | a967 0200 | 0000 4983 | 8038 0200 

  0x000000011126874c: ;   {oop(a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector')}
  0x000000011126874c: 0001 49bc | 2801 007e | 0100 0000 

  0x0000000111268758: ;   {oop(a 'java/lang/Class'{0x000000011ff8c550} = double)}
  0x0000000111268758: 48bf 50c5 | f81f 0100 | 0000 49b9 | 0000 0000 | 0000 0000 | 498b f448 | 8bd7 b904 | 0000 004d 
  0x0000000111268778: 8bc1 4c89 | 8c24 2801 | 0000 4d8b | cb48 89bc | 2430 0100 

  0x000000011126878c: ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@28 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x000000011126878c: 0049 8bfe | 4c89 a424 | 5001 0000 | 4c89 b424 | 4801 0000 | 4c89 ac24 | 4001 0000 | 4c89 9c24 
  0x00000001112687ac: 3801 0000 | 9090 9090 

  0x00000001112687b4: ;   {static_call}
  0x00000001112687b4: 9090 90e8 

  0x00000001112687b8: ; ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [304]=Oop [336]=Oop [328]=Oop [320]=Oop [312]=Oop }
                      ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@28 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x00000001112687b8: 641a 99ff | 4883 f800 

  0x00000001112687c0: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112687c0: 7516 48b9 | a8df a967 | 0200 0000 | 8089 4102 | 0000 01e9 | c100 0000 

  0x00000001112687d8: ;   {metadata('jdk/incubator/vector/DoubleVector')}
  0x00000001112687d8: 48ba 30ce | d425 0200 | 0000 8b48 | 0848 c1e1 | 0348 3b51 | 600f 858a 

  0x00000001112687f0: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112687f0: 0000 0048 | b9a8 dfa9 | 6702 0000 | 008b 5008 | 48c1 e203 | 483b 9158 | 0200 0075 | 0d48 8381 
  0x0000000111268810: 6002 0000 | 01e9 7f00 | 0000 483b | 9168 0200 | 0075 0d48 | 8381 7002 | 0000 01e9 | 6900 0000 
  0x0000000111268830: 4881 b958 | 0200 0000 | 0000 0075 | 1748 8991 | 5802 0000 | 48c7 8160 | 0200 0001 | 0000 00e9 
  0x0000000111268850: 4500 0000 | 4881 b968 | 0200 0000 | 0000 0075 | 1748 8991 | 6802 0000 | 48c7 8170 | 0200 0001 
  0x0000000111268870: 0000 00e9 | 2100 0000 | e91c 0000 

  0x000000011126887c: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126887c: 0048 b9a8 | dfa9 6702 | 0000 0048 | 83a9 4802 | 0000 01e9 | 083b 0000 | e900 0000 

  0x0000000111268898: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@31 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x0000000111268898: 0048 8bd8 

  0x000000011126889c: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011126889c: 48be 4046 | a067 0200 | 0000 4883 | 86d8 0100 

  0x00000001112688ac: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112688ac: 0001 48be | a8df a967 | 0200 0000 | 8b96 1c01 | 0000 83c2 | 0289 961c | 0100 0081 | e2fe ff1f 
  0x00000001112688cc: 0083 fa00 
 ;;  270 branch [EQ] [CounterOverflowStub: 0x00007f8469313a60]
  0x00000001112688d0: 0f84 e33a | 0000 4c8b | 9c24 3801 

  0x00000001112688dc: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112688dc: 0000 48be | a8df a967 | 0200 0000 | 4883 8698 | 0100 0001 | 4c8b 9c24 | 3801 0000 

  0x00000001112688f8: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112688f8: 48be a8df | a967 0200 | 0000 458b | 5b08 49c1 | e303 4c3b | 9ee0 0100 | 0075 0d48 | 8386 e801 
  0x0000000111268918: 0000 01e9 | 6600 0000 | 4c3b 9ef0 | 0100 0075 | 0d48 8386 | f801 0000 | 01e9 5000 | 0000 4881 
  0x0000000111268938: bee0 0100 | 0000 0000 | 0075 174c | 899e e001 | 0000 48c7 | 86e8 0100 | 0001 0000 | 00e9 2c00 
  0x0000000111268958: 0000 4881 | bef0 0100 | 0000 0000 | 0075 174c | 899e f001 | 0000 48c7 | 86f8 0100 | 0001 0000 
  0x0000000111268978: 00e9 0800 | 0000 4883 | 86d0 0100 

  0x0000000111268984: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111268984: 0001 48be | a8df a967 | 0200 0000 | 4883 8608 | 0200 0001 

  0x0000000111268998: ;   {metadata(method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111268998: 48be 68e2 | a967 0200 | 0000 8b96 | 1c01 0000 | 83c2 0289 | 961c 0100 | 0081 e2fe | ff1f 0083 
  0x00000001112689b8: fa00 0f84 | 1a3a 0000 

  0x00000001112689c0: ;   {metadata(method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112689c0: 48be 68e2 | a967 0200 | 0000 4883 | 8660 0100 

  0x00000001112689d0: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x00000001112689d0: 0001 48be | 08ad 4010 | 0100 0000 | 488d b638 | 0200 004c | 8bac 2440 | 0100 0049 | 8bd5 4885 
  0x00000001112689f0: d275 0748 | 810e 0100 

  0x00000001112689f8: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112689f8: 0000 48be | a8df a967 | 0200 0000 | 4883 8618 | 0200 0001 

  0x0000000111268a0c: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111268a0c: 48be 08ad | 4010 0100 | 0000 8b96 | 1c01 0000 | 83c2 0289 | 961c 0100 | 0081 e2fe | ff1f 0083 
  0x0000000111268a2c: fa00 0f84 | c739 0000 

  0x0000000111268a34: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x0000000111268a34: 48be 089d | 4010 0100 | 0000 488d | b6f0 0100 | 0049 8bd5 | 4885 d275 | 0748 810e | 0100 0000 
  0x0000000111268a54: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111268a54: 48be 08ad | 4010 0100 | 0000 4883 | 8698 0100 

  0x0000000111268a64: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x0000000111268a64: 0001 48be | 089d 4010 | 0100 0000 | 8b96 1c01 | 0000 83c2 | 0289 961c | 0100 0081 | e2fe ff1f 
  0x0000000111268a84: 0083 fa00 
 ;;  346 branch [EQ] [CounterOverflowStub: 0x00007f8469315480]
  0x0000000111268a88: 0f84 8e39 

  0x0000000111268a8c: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111268a8c: 0000 48be | 08ad 4010 | 0100 0000 | 488d b6d0 | 0100 004c | 8bb4 2448 | 0100 0049 | 8bd6 4885 
  0x0000000111268aac: d275 0748 | 810e 0100 

  0x0000000111268ab4: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111268ab4: 0000 48be | a8df a967 | 0200 0000 | 488d b628 | 0200 0049 | 8bd6 4885 | d275 0748 | 810e 0100 
  0x0000000111268ad4: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111268ad4: 0000 48be | a8df a967 | 0200 0000 | 4883 8638 | 0200 0001 | 488b b424 | 5001 0000 | 488b 9424 
  0x0000000111268af4: 3001 0000 | b904 0000 | 004c 8b84 | 2428 0100 | 004c 8b8c | 2438 0100 

  0x0000000111268b0c: ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@28 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
  0x0000000111268b0c: 0049 8bfe | 4889 9c24 | 6001 0000 | 9090 9090 

  0x0000000111268b1c: ;   {static_call}
  0x0000000111268b1c: 9090 90e8 

  0x0000000111268b20: ; ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [352]=Oop }
                      ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@28 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
  0x0000000111268b20: fc16 99ff | 4883 f800 

  0x0000000111268b28: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111268b28: 7517 49b8 | a8df a967 | 0200 0000 | 4180 8841 | 0200 0001 | e9c2 0000 

  0x0000000111268b40: ;   {metadata('jdk/incubator/vector/DoubleVector')}
  0x0000000111268b40: 0048 ba30 | ced4 2502 | 0000 0044 | 8b40 0849 | c1e0 0349 | 3b50 600f | 858a 0000 

  0x0000000111268b5c: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111268b5c: 0049 b8a8 | dfa9 6702 | 0000 008b | 5008 48c1 | e203 493b | 9058 0200 | 0075 0d49 | 8380 6002 
  0x0000000111268b7c: 0000 01e9 | 7f00 0000 | 493b 9068 | 0200 0075 | 0d49 8380 | 7002 0000 | 01e9 6900 | 0000 4981 
  0x0000000111268b9c: b858 0200 | 0000 0000 | 0075 1749 | 8990 5802 | 0000 49c7 | 8060 0200 | 0001 0000 | 00e9 4500 
  0x0000000111268bbc: 0000 4981 | b868 0200 | 0000 0000 | 0075 1749 | 8990 6802 | 0000 49c7 | 8070 0200 | 0001 0000 
  0x0000000111268bdc: 00e9 2100 | 0000 e91c 

  0x0000000111268be4: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111268be4: 0000 0049 | b8a8 dfa9 | 6702 0000 | 0049 83a8 | 4802 0000 | 01e9 3f38 | 0000 e900 | 0000 0048 
  0x0000000111268c04: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@31 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
  0x0000000111268c04: 8bc8 488b | 9c24 6001 | 0000 b800 

  0x0000000111268c10: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x0000000111268c10: 0000 0048 | 898c 2480 | 0100 0048 | 899c 2470 | 0100 0090 | 9090 9090 
 ;;  block B4 [54, 60]
  0x0000000111268c28: c5fb 1084 | 2490 0200 | 008b 9c24 | 5801 0000 | 488b 9424 | 1001 0000 | c5f3 2ac8 | c5f9 2ec8 
  0x0000000111268c48: be01 0000 | 000f 8a13 | 0000 000f | 870d 0000 | 00be 0000 | 0000 0f84 | 0200 0000 

  0x0000000111268c64: ;*dcmpg {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@59 (line 24)
  0x0000000111268c64: ffce 83fe 

  0x0000000111268c68: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111268c68: 0048 be40 | 46a0 6702 | 0000 0049 | b8e8 0100 | 0000 0000 | 000f 8d0a | 0000 0049 | b8f8 0100 
  0x0000000111268c88: 0000 0000 | 004e 8b0c | 064d 8d49 | 014e 890c | 060f 8d5c 

  0x0000000111268c9c: ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@60 (line 24)
                      ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111268c9c: 0f00 0048 | be40 46a0 | 6702 0000 | 0048 8386 | 0802 0000 

  0x0000000111268cb0: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111268cb0: 0148 be90 | 5aa9 6702 | 0000 0044 | 8b86 1c01 | 0000 4183 | c002 4489 | 861c 0100 | 0041 81e0 
  0x0000000111268cd0: feff 1f00 | 4183 f800 
 ;;  428 branch [EQ] [CounterOverflowStub: 0x00007f8469319ad0]
  0x0000000111268cd8: 0f84 7c37 

  0x0000000111268cdc: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078})}
  0x0000000111268cdc: 0000 48be | 7800 007e | 0100 0000 

  0x0000000111268ce8: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111268ce8: 49b8 905a | a967 0200 | 0000 8b76 | 0848 c1e6 | 0349 3bb0 | 7001 0000 | 750d 4983 | 8078 0100 
  0x0000000111268d08: 0001 e966 | 0000 0049 | 3bb0 8001 | 0000 750d | 4983 8088 | 0100 0001 | e950 0000 | 0049 81b8 
  0x0000000111268d28: 7001 0000 | 0000 0000 | 7517 4989 | b070 0100 | 0049 c780 | 7801 0000 | 0100 0000 | e92c 0000 
  0x0000000111268d48: 0049 81b8 | 8001 0000 | 0000 0000 | 7517 4989 | b080 0100 | 0049 c780 | 8801 0000 | 0100 0000 
  0x0000000111268d68: e908 0000 | 0049 8380 | 6001 0000 

  0x0000000111268d74: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111268d74: 0148 be90 | 5aa9 6702 | 0000 0048 | 8386 9801 

  0x0000000111268d84: ;   {metadata(method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x0000000111268d84: 0000 0148 | be30 5da9 | 6702 0000 | 0044 8b86 | 1c01 0000 | 4183 c002 | 4489 861c | 0100 0041 
  0x0000000111268da4: 81e0 feff | 1f00 4183 | f800 0f84 | c736 0000 
 ;;  block B53 [37, 1]
  0x0000000111268db4: 488b fb83 

  0x0000000111268db8: ;   {metadata(method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x0000000111268db8: ef03 48be | 305d a967 | 0200 0000 | 4883 86c0 | 0100 0001 

  0x0000000111268dcc: ;   {metadata(method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x0000000111268dcc: 48be 184c | 9f67 0200 | 0000 448b | 861c 0100 | 0041 83c0 | 0244 8986 | 1c01 0000 | 4181 e0fe 
  0x0000000111268dec: ff1f 0041 | 83f8 000f | 84a3 3600 

  0x0000000111268df8: ;   {metadata(method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x0000000111268df8: 0048 be18 | 4c9f 6702 | 0000 0048 | 8386 6001 

  0x0000000111268e08: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x0000000111268e08: 0000 0148 | bed0 4d9f | 6702 0000 | 0044 8b86 | 1c01 0000 | 4183 c002 | 4489 861c | 0100 0041 
  0x0000000111268e28: 81e0 feff | 1f00 4183 | f800 0f84 | 8536 0000 

  0x0000000111268e38: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x0000000111268e38: 83f8 0048 | bed0 4d9f | 6702 0000 | 0049 b860 | 0100 0000 | 0000 000f | 8c0a 0000 | 0049 b870 
  0x0000000111268e58: 0100 0000 | 0000 004e | 8b0c 064d | 8d49 014e | 890c 060f | 8c4b 3100 

  0x0000000111268e70: ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@1 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
                      ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x0000000111268e70: 003b c748 | bed0 4d9f | 6702 0000 | 0049 b890 | 0100 0000 | 0000 000f | 8d0a 0000 | 0049 b880 
  0x0000000111268e90: 0100 0000 | 0000 004e | 8b0c 064d | 8d49 014e | 890c 060f | 8d13 3100 

  0x0000000111268ea8: ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@6 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
                      ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078})}
  0x0000000111268ea8: 0048 be78 | 0000 7e01 | 0000 004c 

  0x0000000111268eb4: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111268eb4: 8bc6 49b9 | 905a a967 | 0200 0000 | 4983 81e0 | 0100 0001 

  0x0000000111268ec8: ;   {metadata(method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x0000000111268ec8: 49b8 b048 | a967 0200 | 0000 458b | 881c 0100 | 0041 83c1 | 0245 8988 | 1c01 0000 | 4181 e1fe 
  0x0000000111268ee8: ff1f 0041 | 83f9 000f | 84e9 3500 

  0x0000000111268ef4: ;   {metadata(method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x0000000111268ef4: 0049 b8b0 | 48a9 6702 | 0000 0049 | 8380 6001 

  0x0000000111268f04: ;   {metadata(method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x0000000111268f04: 0000 0148 | be98 4aa9 | 6702 0000 | 0044 8b86 | 1c01 0000 | 4183 c002 | 4489 861c | 0100 0041 
  0x0000000111268f24: 81e0 feff | 1f00 4183 | f800 0f84 | cb35 0000 

  0x0000000111268f34: ;   {metadata(method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x0000000111268f34: 48be 984a | a967 0200 | 0000 ff86 

  0x0000000111268f40: ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x0000000111268f40: 7001 0000 
 ;;  block B62 [22, 74]
  0x0000000111268f44: ;   {oop(a 'jdk/incubator/vector/Double256Vector'{0x000000017e000000})}
  0x0000000111268f44: 48be 0000 | 007e 0100 | 0000 4c8b 

  0x0000000111268f50: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111268f50: c649 b990 | 5aa9 6702 | 0000 0049 | 8381 1802 

  0x0000000111268f60: ;   {metadata(method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x0000000111268f60: 0000 0149 | b860 5fa9 | 6702 0000 | 0045 8b88 | 1c01 0000 | 4183 c102 | 4589 881c | 0100 0041 
  0x0000000111268f80: 81e1 feff | 1f00 4183 | f900 0f84 | 9035 0000 

  0x0000000111268f90: ;   {metadata(method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x0000000111268f90: 4c8b c649 | b960 5fa9 | 6702 0000 | 0049 8381 | 6001 0000 

  0x0000000111268fa4: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111268fa4: 0149 b800 | 61a9 6702 | 0000 0045 | 8b88 1c01 | 0000 4183 | c102 4589 | 881c 0100 | 0041 81e1 
  0x0000000111268fc4: feff 1f00 | 4183 f900 
 ;;  644 branch [EQ] [CounterOverflowStub: 0x00007f846b755a20]
  0x0000000111268fcc: 0f84 6f35 

  0x0000000111268fd0: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111268fd0: 0000 49b8 | 0061 a967 | 0200 0000 | 4983 8060 | 0100 0001 

  0x0000000111268fe4: ;   {metadata(method data for {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector')}
  0x0000000111268fe4: 48be 0864 | a967 0200 | 0000 448b | 861c 0100 | 0041 83c0 | 0244 8986 | 1c01 0000 | 4181 e0fe 
  0x0000000111269004: ff1f 0041 | 83f8 000f | 8451 3500 

  0x0000000111269010: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078})}
  0x0000000111269010: 0048 be78 | 0000 7e01 | 0000 004c 

  0x000000011126901c: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126901c: 8bc6 49b9 | 0061 a967 | 0200 0000 | 4983 8198 | 0100 0001 

  0x0000000111269030: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111269030: 4c8b c649 | b900 61a9 | 6702 0000 | 0049 8381 | d001 0000 

  0x0000000111269044: ;   {metadata(method data for {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x0000000111269044: 0149 b810 | 59a9 6702 | 0000 0045 | 8b88 1c01 | 0000 4183 | c102 4589 | 881c 0100 | 0041 81e1 
  0x0000000111269064: feff 1f00 | 4183 f900 
 ;;  690 branch [EQ] [CounterOverflowStub: 0x00007f846b756bc0]
  0x000000011126906c: 0f84 1135 

  0x0000000111269070: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111269070: 0000 49b8 | 0061 a967 | 0200 0000 | 4983 8008 | 0200 0001 

  0x0000000111269084: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111269084: 48be 0061 | a967 0200 | 0000 4883 | 8640 0200 

  0x0000000111269094: ;   {metadata(method data for {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111269094: 0001 48be | 8865 a967 | 0200 0000 | 448b 861c | 0100 0041 | 83c0 0244 | 8986 1c01 | 0000 4181 
  0x00000001112690b4: e0fe ff1f | 0041 83f8 | 000f 84e1 | 3400 0048 | 63f0 b903 | 0000 0048 | d3e6 49ba | 1000 0000 
  0x00000001112690d4: 0000 0000 

  0x00000001112690d8: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x00000001112690d8: 4903 f248 | b908 ad40 | 1001 0000 | 0048 8d89 | 3802 0000 

  0x00000001112690ec: ;   {oop(a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e000210})}
  0x00000001112690ec: 49b8 1002 | 007e 0100 | 0000 4d8b | c84d 85c9 | 7507 4881 | 0901 0000 

  0x0000000111269104: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111269104: 0048 b900 | 61a9 6702 | 0000 0048 | 8381 5002 

  0x0000000111269114: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111269114: 0000 0148 | b908 ad40 | 1001 0000 | 0044 8b89 | 1c01 0000 | 4183 c102 | 4489 891c | 0100 0041 
  0x0000000111269134: 81e1 feff | 1f00 4183 | f900 0f84 | 8134 0000 

  0x0000000111269144: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x0000000111269144: 48b9 089d | 4010 0100 | 0000 488d | 89f0 0100 | 004d 85c0 | 7507 4881 | 0901 0000 

  0x0000000111269160: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111269160: 0048 b908 | ad40 1001 | 0000 0048 | 8381 9801 

  0x0000000111269170: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x0000000111269170: 0000 0148 | b908 9d40 | 1001 0000 | 0044 8b81 | 1c01 0000 | 4183 c002 | 4489 811c | 0100 0041 
  0x0000000111269190: 81e0 feff | 1f00 4183 | f800 0f84 | 4634 0000 

  0x00000001112691a0: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x00000001112691a0: 48b9 08ad | 4010 0100 | 0000 488d | 89d0 0100 

  0x00000001112691b0: ;   {oop(a 'jdk/incubator/vector/DoubleVector$$Lambda$94+0x0000000225d597d0'{0x000000017e000240})}
  0x00000001112691b0: 0049 b840 | 0200 7e01 | 0000 004d | 8bc8 4d85 | c975 0748 | 8109 0100 

  0x00000001112691c8: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112691c8: 0000 48b9 | 0061 a967 | 0200 0000 | 488d 8960 | 0200 004d | 85c0 7507 | 4881 0901 

  0x00000001112691e4: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112691e4: 0000 0048 | b900 61a9 | 6702 0000 | 0048 8381 | 7002 0000 

  0x00000001112691f8: ;   {oop(a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector')}
  0x00000001112691f8: 0148 b928 | 0100 7e01 

  0x0000000111269200: ;   {oop(a 'java/lang/Class'{0x000000011ff8c550} = double)}
  0x0000000111269200: 0000 0049 | b850 c5f8 | 1f01 0000 | 0048 8bfe | 488b f14c | 8bca 498b | d0b9 0400 | 0000 4d8b 
  0x0000000111269220: c14c 8bcf | 4889 bc24 | 6801 0000 | 488b bc24 | 1001 0000 

  0x0000000111269234: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078})}
  0x0000000111269234: 8904 2449 | ba78 0000 | 7e01 0000 | 004c 8954 

  0x0000000111269244: ;   {oop(a 'jdk/incubator/vector/DoubleVector$$Lambda$94+0x0000000225d597d0'{0x000000017e000240})}
  0x0000000111269244: 2408 49ba | 4002 007e | 0100 0000 | 4c89 5424 

  0x0000000111269254: ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x0000000111269254: 1089 8424 | 7801 0000 

  0x000000011126925c: ;   {static_call}
  0x000000011126925c: 9090 90e8 

  0x0000000111269260: ; ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop [368]=Oop }
                      ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x0000000111269260: bc0f 99ff | 4883 f800 

  0x0000000111269268: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111269268: 7516 48bf | 0061 a967 | 0200 0000 | 808f 7902 | 0000 01e9 | c100 0000 

  0x0000000111269280: ;   {metadata('jdk/incubator/vector/DoubleVector')}
  0x0000000111269280: 48be 30ce | d425 0200 | 0000 8b78 | 0848 c1e7 | 0348 3b77 | 600f 858a 

  0x0000000111269298: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111269298: 0000 0048 | bf00 61a9 | 6702 0000 | 008b 7008 | 48c1 e603 | 483b b790 | 0200 0075 | 0d48 8387 
  0x00000001112692b8: 9802 0000 | 01e9 7f00 | 0000 483b | b7a0 0200 | 0075 0d48 | 8387 a802 | 0000 01e9 | 6900 0000 
  0x00000001112692d8: 4881 bf90 | 0200 0000 | 0000 0075 | 1748 89b7 | 9002 0000 | 48c7 8798 | 0200 0001 | 0000 00e9 
  0x00000001112692f8: 4500 0000 | 4881 bfa0 | 0200 0000 | 0000 0075 | 1748 89b7 | a002 0000 | 48c7 87a8 | 0200 0001 
  0x0000000111269318: 0000 00e9 | 2100 0000 | e91c 0000 

  0x0000000111269324: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111269324: 0048 bf00 | 61a9 6702 | 0000 0048 | 83af 8002 | 0000 01e9 | cb32 0000 | e900 0000 

  0x0000000111269340: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x0000000111269340: 0048 8bc8 | 488b 9c24 | 7001 0000 
 ;;  block B45 [74, 3]
  0x000000011126934c: ; implicit exception: dispatches to 0x000000011126c624
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x000000011126934c: 483b 0348 

  0x0000000111269350: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111269350: 8bd3 48be | 4046 a067 | 0200 0000 | 4883 8618 | 0200 0001 

  0x0000000111269364: ;   {metadata(method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111269364: 48ba 9872 | a967 0200 | 0000 8bb2 | 1c01 0000 | 83c6 0289 | b21c 0100 | 0081 e6fe | ff1f 0083 
  0x0000000111269384: fe00 0f84 | b132 0000 

  0x000000011126938c: ;   {metadata(method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126938c: 488b d348 | be98 72a9 | 6702 0000 | 008b 5208 | 48c1 e203 | 483b 9670 | 0100 0075 | 0d48 8386 
  0x00000001112693ac: 7801 0000 | 01e9 6600 | 0000 483b | 9680 0100 | 0075 0d48 | 8386 8801 | 0000 01e9 | 5000 0000 
  0x00000001112693cc: 4881 be70 | 0100 0000 | 0000 0075 | 1748 8996 | 7001 0000 | 48c7 8678 | 0100 0001 | 0000 00e9 
  0x00000001112693ec: 2c00 0000 | 4881 be80 | 0100 0000 | 0000 0075 | 1748 8996 | 8001 0000 | 48c7 8688 | 0100 0001 
  0x000000011126940c: 0000 00e9 | 0800 0000 | 4883 8660 | 0100 0001 

  0x000000011126941c: ;   {oop(a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000017e000250})}
  0x000000011126941c: 48ba 5002 | 007e 0100 | 0000 488b 

  0x0000000111269428: ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x0000000111269428: f390 9090 | 9048 b8ff | ffff ffff 

  0x0000000111269434: ;   {virtual_call}
  0x0000000111269434: ffff ffe8 

  0x0000000111269438: ; ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x0000000111269438: e40a 99ff | 4889 8424 | 8801 0000 

  0x0000000111269444: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111269444: 48be 4046 | a067 0200 | 0000 4883 | 8650 0200 

  0x0000000111269454: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111269454: 0001 48be | 905a a967 | 0200 0000 | 8b96 1c01 | 0000 83c2 | 0289 961c | 0100 0081 | e2fe ff1f 
  0x0000000111269474: 0083 fa00 
 ;;  878 branch [EQ] [CounterOverflowStub: 0x00007f846b37b440]
  0x0000000111269478: 0f84 e031 

  0x000000011126947c: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078})}
  0x000000011126947c: 0000 48be | 7800 007e | 0100 0000 

  0x0000000111269488: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111269488: 48ba 905a | a967 0200 | 0000 8b76 | 0848 c1e6 | 0348 3bb2 | 7001 0000 | 750d 4883 | 8278 0100 
  0x00000001112694a8: 0001 e966 | 0000 0048 | 3bb2 8001 | 0000 750d | 4883 8288 | 0100 0001 | e950 0000 | 0048 81ba 
  0x00000001112694c8: 7001 0000 | 0000 0000 | 7517 4889 | b270 0100 | 0048 c782 | 7801 0000 | 0100 0000 | e92c 0000 
  0x00000001112694e8: 0048 81ba | 8001 0000 | 0000 0000 | 7517 4889 | b280 0100 | 0048 c782 | 8801 0000 | 0100 0000 
  0x0000000111269508: e908 0000 | 0048 8382 | 6001 0000 

  0x0000000111269514: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111269514: 0148 be90 | 5aa9 6702 | 0000 0048 | 8386 9801 

  0x0000000111269524: ;   {metadata(method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x0000000111269524: 0000 0148 | be30 5da9 | 6702 0000 | 008b 961c | 0100 0083 | c202 8996 | 1c01 0000 | 81e2 feff 
  0x0000000111269544: 1f00 83fa | 000f 8430 | 3100 008b | 9c24 7801 | 0000 8bbc | 245c 0100 | 0083 ef03 

  0x0000000111269560: ;   {metadata(method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x0000000111269560: 48be 305d | a967 0200 | 0000 4883 | 86c0 0100 

  0x0000000111269570: ;   {metadata(method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x0000000111269570: 0001 48be | 184c 9f67 | 0200 0000 | 8b96 1c01 | 0000 83c2 | 0289 961c | 0100 0081 | e2fe ff1f 
  0x0000000111269590: 0083 fa00 
 ;;  928 branch [EQ] [CounterOverflowStub: 0x00007f846b37c720]
  0x0000000111269594: 0f84 0631 

  0x0000000111269598: ;   {metadata(method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x0000000111269598: 0000 48be | 184c 9f67 | 0200 0000 | 4883 8660 | 0100 0001 

  0x00000001112695ac: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x00000001112695ac: 48be d04d | 9f67 0200 | 0000 8b96 | 1c01 0000 | 83c2 0289 | 961c 0100 | 0081 e2fe | ff1f 0083 
  0x00000001112695cc: fa00 0f84 | ed30 0000 

  0x00000001112695d4: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x00000001112695d4: 83fb 0048 | bed0 4d9f | 6702 0000 | 0048 ba60 | 0100 0000 | 0000 000f | 8c0a 0000 | 0048 ba70 
  0x00000001112695f4: 0100 0000 | 0000 0048 | 8b0c 1648 | 8d49 0148 | 890c 160f | 8cef 2900 

  0x000000011126960c: ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@1 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
                      ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011126960c: 003b df48 | bed0 4d9f | 6702 0000 | 0048 ba90 | 0100 0000 | 0000 000f | 8d0a 0000 | 0048 ba80 
  0x000000011126962c: 0100 0000 | 0000 0048 | 8b0c 1648 | 8d49 0148 | 890c 160f | 8db7 2900 

  0x0000000111269644: ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@6 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
                      ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078})}
  0x0000000111269644: 0048 be78 | 0000 7e01 | 0000 0048 

  0x0000000111269650: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111269650: 8bd6 48b9 | 905a a967 | 0200 0000 | 4883 81e0 | 0100 0001 

  0x0000000111269664: ;   {metadata(method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x0000000111269664: 48ba b048 | a967 0200 | 0000 8b8a | 1c01 0000 | 83c1 0289 | 8a1c 0100 | 0081 e1fe | ff1f 0083 
  0x0000000111269684: f900 0f84 | 5630 0000 

  0x000000011126968c: ;   {metadata(method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011126968c: 48ba b048 | a967 0200 | 0000 4883 | 8260 0100 

  0x000000011126969c: ;   {metadata(method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011126969c: 0001 48be | 984a a967 | 0200 0000 | 8b96 1c01 | 0000 83c2 | 0289 961c | 0100 0081 | e2fe ff1f 
  0x00000001112696bc: 0083 fa00 
 ;; 1036 branch [EQ] [CounterOverflowStub: 0x00007f846b37ee30]
  0x00000001112696c0: 0f84 3d30 

  0x00000001112696c4: ;   {metadata(method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x00000001112696c4: 0000 48be | 984a a967 | 0200 0000 | ff86 7001 

  0x00000001112696d4: ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x00000001112696d4: 0000 4c8b | 8c24 6801 

  0x00000001112696dc: ;   {oop(a 'jdk/incubator/vector/Double256Vector'{0x000000017e000000})}
  0x00000001112696dc: 0000 48be | 0000 007e | 0100 0000 

  0x00000001112696e8: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112696e8: 488b d648 | b990 5aa9 | 6702 0000 | 0048 8381 | 1802 0000 

  0x00000001112696fc: ;   {metadata(method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x00000001112696fc: 0148 ba60 | 5fa9 6702 | 0000 008b | 8a1c 0100 | 0083 c102 | 898a 1c01 | 0000 81e1 | feff 1f00 
  0x000000011126971c: 83f9 000f | 84ff 2f00 | 0048 8bd6 

  0x0000000111269728: ;   {metadata(method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x0000000111269728: 48b9 605f | a967 0200 | 0000 4883 | 8160 0100 

  0x0000000111269738: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111269738: 0001 48ba | 0061 a967 | 0200 0000 | 8b8a 1c01 | 0000 83c1 | 0289 8a1c | 0100 0081 | e1fe ff1f 
  0x0000000111269758: 0083 f900 
 ;; 1094 branch [EQ] [CounterOverflowStub: 0x00007f846b3803b0]
  0x000000011126975c: 0f84 e32f 

  0x0000000111269760: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111269760: 0000 48ba | 0061 a967 | 0200 0000 | 4883 8260 | 0100 0001 

  0x0000000111269774: ;   {metadata(method data for {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector')}
  0x0000000111269774: 48be 0864 | a967 0200 | 0000 8b96 | 1c01 0000 | 83c2 0289 | 961c 0100 | 0081 e2fe | ff1f 0083 
  0x0000000111269794: fa00 0f84 | ca2f 0000 

  0x000000011126979c: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078})}
  0x000000011126979c: 48be 7800 | 007e 0100 | 0000 488b 

  0x00000001112697a8: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112697a8: d648 b900 | 61a9 6702 | 0000 0048 | 8381 9801 | 0000 0148 

  0x00000001112697bc: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112697bc: 8bd6 48b9 | 0061 a967 | 0200 0000 | 4883 81d0 | 0100 0001 

  0x00000001112697d0: ;   {metadata(method data for {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x00000001112697d0: 48ba 1059 | a967 0200 | 0000 8b8a | 1c01 0000 | 83c1 0289 | 8a1c 0100 | 0081 e1fe | ff1f 0083 
  0x00000001112697f0: f900 0f84 | 8f2f 0000 

  0x00000001112697f8: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112697f8: 48ba 0061 | a967 0200 | 0000 4883 | 8208 0200 

  0x0000000111269808: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111269808: 0001 48be | 0061 a967 | 0200 0000 | 4883 8640 | 0200 0001 

  0x000000011126981c: ;   {metadata(method data for {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126981c: 48be 8865 | a967 0200 | 0000 8b96 | 1c01 0000 | 83c2 0289 | 961c 0100 | 0081 e2fe | ff1f 0083 
  0x000000011126983c: fa00 0f84 | 642f 0000 

  0x0000000111269844: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111269844: 48be 08ad | 4010 0100 | 0000 488d | b638 0200 

  0x0000000111269854: ;   {oop(a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e000210})}
  0x0000000111269854: 0048 ba10 | 0200 7e01 | 0000 0048 | 8bca 4885 | c975 0748 | 810e 0100 

  0x000000011126986c: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126986c: 0000 48be | 0061 a967 | 0200 0000 | 4883 8650 | 0200 0001 

  0x0000000111269880: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111269880: 48be 08ad | 4010 0100 | 0000 8b8e | 1c01 0000 | 83c1 0289 | 8e1c 0100 | 0081 e1fe | ff1f 0083 
  0x00000001112698a0: f900 0f84 | 212f 0000 

  0x00000001112698a8: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x00000001112698a8: 48be 089d | 4010 0100 | 0000 488d | b6f0 0100 | 0048 85d2 | 7507 4881 | 0e01 0000 

  0x00000001112698c4: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x00000001112698c4: 0048 be08 | ad40 1001 | 0000 0048 | 8386 9801 

  0x00000001112698d4: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x00000001112698d4: 0000 0148 | be08 9d40 | 1001 0000 | 008b 961c | 0100 0083 | c202 8996 | 1c01 0000 | 81e2 feff 
  0x00000001112698f4: 1f00 83fa | 000f 84eb 

  0x00000001112698fc: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x00000001112698fc: 2e00 0048 | be08 ad40 | 1001 0000 | 0048 8db6 | d001 0000 

  0x0000000111269910: ;   {oop(a 'jdk/incubator/vector/DoubleVector$$Lambda$94+0x0000000225d597d0'{0x000000017e000240})}
  0x0000000111269910: 48ba 4002 | 007e 0100 | 0000 488b | ca48 85c9 | 7507 4881 | 0e01 0000 

  0x0000000111269928: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111269928: 0048 be00 | 61a9 6702 | 0000 0048 | 8db6 6002 | 0000 4885 | d275 0748 | 810e 0100 

  0x0000000111269944: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111269944: 0000 48be | 0061 a967 | 0200 0000 | 4883 8670 | 0200 0001 

  0x0000000111269958: ;   {oop(a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector')}
  0x0000000111269958: 48be 2801 | 007e 0100 

  0x0000000111269960: ;   {oop(a 'java/lang/Class'{0x000000011ff8c550} = double)}
  0x0000000111269960: 0000 48ba | 50c5 f81f | 0100 0000 | b904 0000 | 004c 8b84 | 2418 0100 | 0048 8bbc | 2418 0100 
  0x0000000111269980: 0089 1c24 

  0x0000000111269984: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078})}
  0x0000000111269984: 49ba 7800 | 007e 0100 | 0000 4c89 

  0x0000000111269990: ;   {oop(a 'jdk/incubator/vector/DoubleVector$$Lambda$94+0x0000000225d597d0'{0x000000017e000240})}
  0x0000000111269990: 5424 0849 | ba40 0200 | 7e01 0000 | 004c 8954 

  0x00000001112699a0: ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x00000001112699a0: 2410 899c | 2478 0100 | 0090 9090 

  0x00000001112699ac: ;   {static_call}
  0x00000001112699ac: 9090 90e8 

  0x00000001112699b0: ; ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop [392]=Oop }
                      ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x00000001112699b0: 6c08 99ff | 4883 f800 

  0x00000001112699b8: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112699b8: 7516 48bf | 0061 a967 | 0200 0000 | 808f 7902 | 0000 01e9 | c100 0000 

  0x00000001112699d0: ;   {metadata('jdk/incubator/vector/DoubleVector')}
  0x00000001112699d0: 48be 30ce | d425 0200 | 0000 8b78 | 0848 c1e7 | 0348 3b77 | 600f 858a 

  0x00000001112699e8: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112699e8: 0000 0048 | bf00 61a9 | 6702 0000 | 008b 7008 | 48c1 e603 | 483b b790 | 0200 0075 | 0d48 8387 
  0x0000000111269a08: 9802 0000 | 01e9 7f00 | 0000 483b | b7a0 0200 | 0075 0d48 | 8387 a802 | 0000 01e9 | 6900 0000 
  0x0000000111269a28: 4881 bf90 | 0200 0000 | 0000 0075 | 1748 89b7 | 9002 0000 | 48c7 8798 | 0200 0001 | 0000 00e9 
  0x0000000111269a48: 4500 0000 | 4881 bfa0 | 0200 0000 | 0000 0075 | 1748 89b7 | a002 0000 | 48c7 87a8 | 0200 0001 
  0x0000000111269a68: 0000 00e9 | 2100 0000 | e91c 0000 

  0x0000000111269a74: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111269a74: 0048 bf00 | 61a9 6702 | 0000 0048 | 83af 8002 | 0000 01e9 | 7f2d 0000 | e900 0000 

  0x0000000111269a90: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x0000000111269a90: 0048 8bc8 | 488b 8424 | 8001 0000 
 ;;  block B88 [90, 103]
  0x0000000111269a9c: ; implicit exception: dispatches to 0x000000011126c828
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x0000000111269a9c: 483b 0048 

  0x0000000111269aa0: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111269aa0: 8bd0 48be | 4046 a067 | 0200 0000 | 4883 8660 | 0200 0001 

  0x0000000111269ab4: ;   {metadata(method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111269ab4: 48ba 9872 | a967 0200 | 0000 8bb2 | 1c01 0000 | 83c6 0289 | b21c 0100 | 0081 e6fe | ff1f 0083 
  0x0000000111269ad4: fe00 0f84 | 652d 0000 

  0x0000000111269adc: ;   {metadata(method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111269adc: 488b d048 | be98 72a9 | 6702 0000 | 008b 5208 | 48c1 e203 | 483b 9670 | 0100 0075 | 0d48 8386 
  0x0000000111269afc: 7801 0000 | 01e9 6600 | 0000 483b | 9680 0100 | 0075 0d48 | 8386 8801 | 0000 01e9 | 5000 0000 
  0x0000000111269b1c: 4881 be70 | 0100 0000 | 0000 0075 | 1748 8996 | 7001 0000 | 48c7 8678 | 0100 0001 | 0000 00e9 
  0x0000000111269b3c: 2c00 0000 | 4881 be80 | 0100 0000 | 0000 0075 | 1748 8996 | 8001 0000 | 48c7 8688 | 0100 0001 
  0x0000000111269b5c: 0000 00e9 | 0800 0000 | 4883 8660 | 0100 0001 

  0x0000000111269b6c: ;   {oop(a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000017e000250})}
  0x0000000111269b6c: 48ba 5002 | 007e 0100 | 0000 488b 

  0x0000000111269b78: ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x0000000111269b78: f090 9090 | 9048 b8ff | ffff ffff 

  0x0000000111269b84: ;   {virtual_call}
  0x0000000111269b84: ffff ffe8 

  0x0000000111269b88: ; ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [392]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x0000000111269b88: 9403 99ff | 8b94 2478 | 0100 0083 

  0x0000000111269b94: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111269b94: c204 48be | 4046 a067 | 0200 0000 | 8bbe 2001 | 0000 83c7 | 0289 be20 | 0100 0081 | e7fe 3f00 
  0x0000000111269bb4: 0083 ff00 
 ;; 1318 branch [EQ] [CounterOverflowStub: 0x00007f846974bcc0]
  0x0000000111269bb8: 0f84 a42c 

  0x0000000111269bbc: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
  0x0000000111269bbc: 0000 4d8b | 9730 0100 

  0x0000000111269bc4: ; ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [392]=Oop rax=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
                      ;   {poll}
  0x0000000111269bc4: 0041 8502 

  0x0000000111269bc8: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111269bc8: 48be 4046 | a067 0200 | 0000 ff86 | 9802 0000 | 488b 9c24 | 8801 0000 | 488b ca48 | 8984 2480 
  0x0000000111269be8: 0100 0048 | 899c 2470 | 0100 0048 | 8bc1 e92d 

  0x0000000111269bf8: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
  0x0000000111269bf8: f0ff ff89 | 8424 7801 | 0000 488b | 9c24 7001 | 0000 483b | 0348 8bd3 

  0x0000000111269c10: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111269c10: 48be 4046 | a067 0200 | 0000 8b52 | 0848 c1e2 | 0348 3b96 | c002 0000 | 750d 4883 | 86c8 0200 
  0x0000000111269c30: 0001 e966 | 0000 0048 | 3b96 d002 | 0000 750d | 4883 86d8 | 0200 0001 | e950 0000 | 0048 81be 
  0x0000000111269c50: c002 0000 | 0000 0000 | 7517 4889 | 96c0 0200 | 0048 c786 | c802 0000 | 0100 0000 | e92c 0000 
  0x0000000111269c70: 0048 81be | d002 0000 | 0000 0000 | 7517 4889 | 96d0 0200 | 0048 c786 | d802 0000 | 0100 0000 
  0x0000000111269c90: e908 0000 | 0048 8386 | b002 0000 

  0x0000000111269c9c: ;   {oop(a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000017e000250})}
  0x0000000111269c9c: 0148 bf50 | 0200 7e01 | 0000 0048 | 8bd7 488b 

  0x0000000111269cac: ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
  0x0000000111269cac: f348 899c | 2470 0100 | 0048 89bc | 2490 0100 | 0048 b8ff | ffff ffff 

  0x0000000111269cc4: ;   {virtual_call}
  0x0000000111269cc4: ffff ffe8 

  0x0000000111269cc8: ; ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [400]=Oop [384]=Oop [368]=Oop }
                      ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
  0x0000000111269cc8: 5402 99ff 

  0x0000000111269ccc: ;   {section_word}
  0x0000000111269ccc: c5fb 5805 | 0ce6 ffff | 488b 8c24 | 8001 0000 

  0x0000000111269cdc: ; implicit exception: dispatches to 0x000000011126c89c
  0x0000000111269cdc: 483b 0148 

  0x0000000111269ce0: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111269ce0: 8bd1 48be | 4046 a067 | 0200 0000 | 8b52 0848 | c1e2 0348 | 3b96 f802 | 0000 750d | 4883 8600 
  0x0000000111269d00: 0300 0001 | e966 0000 | 0048 3b96 | 0803 0000 | 750d 4883 | 8610 0300 | 0001 e950 | 0000 0048 
  0x0000000111269d20: 81be f802 | 0000 0000 | 0000 7517 | 4889 96f8 | 0200 0048 | c786 0003 | 0000 0100 | 0000 e92c 
  0x0000000111269d40: 0000 0048 | 81be 0803 | 0000 0000 | 0000 7517 | 4889 9608 | 0300 0048 | c786 1003 | 0000 0100 
  0x0000000111269d60: 0000 e908 | 0000 0048 | 8386 e802 | 0000 0148 | 8b94 2490 | 0100 0048 

  0x0000000111269d78: ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
  0x0000000111269d78: 8bf1 4889 | 8c24 8001 | 0000 c5fb | 1184 2498 | 0200 0090 | 9048 b8ff | ffff ffff 

  0x0000000111269d94: ;   {virtual_call}
  0x0000000111269d94: ffff ffe8 

  0x0000000111269d98: ; ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [368]=Oop [384]=Oop }
                      ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
  0x0000000111269d98: 8401 99ff 

  0x0000000111269d9c: ;   {section_word}
  0x0000000111269d9c: c5fb 5805 | 44e5 ffff | 8b84 2478 | 0100 00c5 | fb10 8c24 | 9802 0000 | 488b 8c24 | 1801 0000 
  0x0000000111269dbc: 488b 9424 | 1001 0000 
 ;; 1398 branch [AL] [B7] 
  0x0000000111269dc4: e984 0000 

  0x0000000111269dc8: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@130 (line 32)
  0x0000000111269dc8: 0090 9090 | 9090 9090 
 ;;  block B8 [137, 156]
  0x0000000111269dd0: 3b42 0c0f | 83dc 2a00 | 0048 63f0 | c5fb 1054 

  0x0000000111269de0: ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@141 (line 33)
  0x0000000111269de0: f210 c5eb | 58d1 3b41 | 0c0f 83e8 | 2a00 0048 | 63f0 c5fb 

  0x0000000111269df4: ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@149 (line 34)
  0x0000000111269df4: 104c f110 | c5f3 58c8 

  0x0000000111269dfc: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111269dfc: ffc0 48be | 4046 a067 | 0200 0000 | 448b 8620 | 0100 0041 | 83c0 0244 | 8986 2001 | 0000 4181 
  0x0000000111269e1c: e0fe 3f00 | 0041 83f8 | 000f 84ce 

  0x0000000111269e28: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)
  0x0000000111269e28: 2a00 004d | 8b97 3001 

  0x0000000111269e30: ; ImmutableOopMap {[288]=Oop [368]=Oop [384]=Oop rdx=Oop [272]=Oop rcx=Oop [280]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)
                      ;   {poll}
  0x0000000111269e30: 0000 4185 

  0x0000000111269e34: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111269e34: 0248 be40 | 46a0 6702 | 0000 00ff | 8640 0300 | 00c5 f928 | c1c5 f928 

  0x0000000111269e4c: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)
  0x0000000111269e4c: ca3b 8424 | 5801 0000 

  0x0000000111269e54: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111269e54: 48be 4046 | a067 0200 | 0000 49b8 | 3003 0000 | 0000 0000 | 0f8c 0a00 | 0000 49b8 | 2003 0000 
  0x0000000111269e74: 0000 0000 | 4e8b 0c06 | 4d8d 4901 | 4e89 0c06 
 ;; 1414 branch [LT] [B8] 
  0x0000000111269e84: 0f8c 46ff 

  0x0000000111269e88: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@134 (line 32)
  0x0000000111269e88: ffff 8b9c | 2458 0100 | 00c5 eb2a | d3c5 f35e | cac5 fb5e 

  0x0000000111269e9c: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111269e9c: c248 be40 | 46a0 6702 | 0000 0048 | 8386 5803 

  0x0000000111269eac: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111269eac: 0000 0148 | bea8 dfa9 | 6702 0000 | 0044 8b86 | 1c01 0000 | 4183 c002 | 4489 861c | 0100 0041 
  0x0000000111269ecc: 81e0 feff | 1f00 4183 | f800 0f84 | 3e2a 0000 

  0x0000000111269edc: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078})}
  0x0000000111269edc: 48bb 7800 | 007e 0100 | 0000 488b 

  0x0000000111269ee8: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111269ee8: f349 b8a8 | dfa9 6702 | 0000 0049 | 8380 9801 | 0000 0148 

  0x0000000111269efc: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111269efc: 8bf3 49b8 | a8df a967 | 0200 0000 | 8b76 0848 | c1e6 0349 | 3bb0 e001 | 0000 750d | 4983 80e8 
  0x0000000111269f1c: 0100 0001 | e966 0000 | 0049 3bb0 | f001 0000 | 750d 4983 | 80f8 0100 | 0001 e950 | 0000 0049 
  0x0000000111269f3c: 81b8 e001 | 0000 0000 | 0000 7517 | 4989 b0e0 | 0100 0049 | c780 e801 | 0000 0100 | 0000 e92c 
  0x0000000111269f5c: 0000 0049 | 81b8 f001 | 0000 0000 | 0000 7517 | 4989 b0f0 | 0100 0049 | c780 f801 | 0000 0100 
  0x0000000111269f7c: 0000 e908 | 0000 0049 | 8380 d001 

  0x0000000111269f88: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111269f88: 0000 0148 | bea8 dfa9 | 6702 0000 | 0048 8386 | 0802 0000 

  0x0000000111269f9c: ;   {metadata(method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111269f9c: 0148 be68 | e2a9 6702 | 0000 0044 | 8b86 1c01 | 0000 4183 | c002 4489 | 861c 0100 | 0041 81e0 
  0x0000000111269fbc: feff 1f00 | 4183 f800 
 ;; 1532 branch [EQ] [CounterOverflowStub: 0x00007f846b725ec0]
  0x0000000111269fc4: 0f84 7129 

  0x0000000111269fc8: ;   {metadata(method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111269fc8: 0000 48be | 68e2 a967 | 0200 0000 | 4883 8660 | 0100 0001 

  0x0000000111269fdc: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111269fdc: 48be 08ad | 4010 0100 | 0000 488d | b638 0200 

  0x0000000111269fec: ;   {oop(a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e0000e8})}
  0x0000000111269fec: 0048 b8e8 | 0000 7e01 | 0000 004c | 8bc0 4d85 | c075 0748 | 810e 0100 

  0x000000011126a004: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126a004: 0000 48be | a8df a967 | 0200 0000 | 4883 8618 | 0200 0001 

  0x000000011126a018: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011126a018: 48be 08ad | 4010 0100 | 0000 448b | 861c 0100 | 0041 83c0 | 0244 8986 | 1c01 0000 | 4181 e0fe 
  0x000000011126a038: ff1f 0041 | 83f8 000f | 8417 2900 

  0x000000011126a044: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011126a044: 0048 be08 | 9d40 1001 | 0000 0048 | 8db6 f001 | 0000 4c8b | c04d 85c0 | 7507 4881 | 0e01 0000 
  0x000000011126a064: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011126a064: 0048 be08 | ad40 1001 | 0000 0048 | 8386 9801 

  0x000000011126a074: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011126a074: 0000 0148 | be08 9d40 | 1001 0000 | 0044 8b86 | 1c01 0000 | 4183 c002 | 4489 861c | 0100 0041 
  0x000000011126a094: 81e0 feff | 1f00 4183 | f800 0f84 | d928 0000 

  0x000000011126a0a4: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011126a0a4: 48be 08ad | 4010 0100 | 0000 488d | b6d0 0100 

  0x000000011126a0b4: ;   {oop(a 'jdk/incubator/vector/DoubleVector$$Lambda$87+0x0000000225d54960'{0x000000017e000118})}
  0x000000011126a0b4: 0049 bb18 | 0100 7e01 | 0000 004d | 8bc3 4d85 | c075 0748 | 810e 0100 

  0x000000011126a0cc: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126a0cc: 0000 48be | a8df a967 | 0200 0000 | 488d b628 | 0200 004d | 8bc3 4d85 | c075 0748 | 810e 0100 
  0x000000011126a0ec: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126a0ec: 0000 48be | a8df a967 | 0200 0000 | 4883 8638 | 0200 0001 

  0x000000011126a100: ;   {oop(a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector')}
  0x000000011126a100: 49bd 2801 | 007e 0100 

  0x000000011126a108: ;   {oop(a 'java/lang/Class'{0x000000011ff8c550} = double)}
  0x000000011126a108: 0000 49be | 50c5 f81f | 0100 0000 | 49bc 0000 | 0000 0000 | 0000 498b | f549 8bd6 | b904 0000 
  0x000000011126a128: 004d 8bc4 | 4c8b cb49 

  0x000000011126a130: ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@28 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
  0x000000011126a130: 8bfb 4c89 | a424 c001 | 0000 4c89 | b424 b801 | 0000 4c89 | ac24 b001 | 0000 4c89 | 9c24 a801 
  0x000000011126a150: 0000 4889 | 8424 a001 | 0000 4889 | 9c24 9801 | 0000 c5fb | 118c 24a8 | 0200 00c5 | fb11 8424 
  0x000000011126a170: a002 0000 

  0x000000011126a174: ;   {static_call}
  0x000000011126a174: 9090 90e8 

  0x000000011126a178: ; ImmutableOopMap {[288]=Oop [368]=Oop [384]=Oop [280]=Oop [272]=Oop [424]=Oop [408]=Oop [416]=Oop [440]=Oop [432]=Oop }
                      ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@28 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
  0x000000011126a178: a400 99ff | 4883 f800 

  0x000000011126a180: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126a180: 7516 48b9 | a8df a967 | 0200 0000 | 8089 4102 | 0000 01e9 | c100 0000 

  0x000000011126a198: ;   {metadata('jdk/incubator/vector/DoubleVector')}
  0x000000011126a198: 48ba 30ce | d425 0200 | 0000 8b48 | 0848 c1e1 | 0348 3b51 | 600f 858a 

  0x000000011126a1b0: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126a1b0: 0000 0048 | b9a8 dfa9 | 6702 0000 | 008b 5008 | 48c1 e203 | 483b 9158 | 0200 0075 | 0d48 8381 
  0x000000011126a1d0: 6002 0000 | 01e9 7f00 | 0000 483b | 9168 0200 | 0075 0d48 | 8381 7002 | 0000 01e9 | 6900 0000 
  0x000000011126a1f0: 4881 b958 | 0200 0000 | 0000 0075 | 1748 8991 | 5802 0000 | 48c7 8160 | 0200 0001 | 0000 00e9 
  0x000000011126a210: 4500 0000 | 4881 b968 | 0200 0000 | 0000 0075 | 1748 8991 | 6802 0000 | 48c7 8170 | 0200 0001 
  0x000000011126a230: 0000 00e9 | 2100 0000 | e91c 0000 

  0x000000011126a23c: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126a23c: 0048 b9a8 | dfa9 6702 | 0000 0048 | 83a9 4802 | 0000 01e9 | 4a27 0000 | e900 0000 

  0x000000011126a258: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@31 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
  0x000000011126a258: 0048 8bd8 

  0x000000011126a25c: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011126a25c: 48be 4046 | a067 0200 | 0000 4883 | 8668 0300 

  0x000000011126a26c: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126a26c: 0001 48be | a8df a967 | 0200 0000 | 8b96 1c01 | 0000 83c2 | 0289 961c | 0100 0081 | e2fe ff1f 
  0x000000011126a28c: 0083 fa00 
 ;; 1642 branch [EQ] [CounterOverflowStub: 0x00007f846b728bf0]
  0x000000011126a290: 0f84 2527 | 0000 488b | b424 9801 

  0x000000011126a29c: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126a29c: 0000 48ba | a8df a967 | 0200 0000 | 4883 8298 | 0100 0001 | 488b b424 | 9801 0000 

  0x000000011126a2b8: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126a2b8: 48ba a8df | a967 0200 | 0000 8b76 | 0848 c1e6 | 0348 3bb2 | e001 0000 | 750d 4883 | 82e8 0100 
  0x000000011126a2d8: 0001 e966 | 0000 0048 | 3bb2 f001 | 0000 750d | 4883 82f8 | 0100 0001 | e950 0000 | 0048 81ba 
  0x000000011126a2f8: e001 0000 | 0000 0000 | 7517 4889 | b2e0 0100 | 0048 c782 | e801 0000 | 0100 0000 | e92c 0000 
  0x000000011126a318: 0048 81ba | f001 0000 | 0000 0000 | 7517 4889 | b2f0 0100 | 0048 c782 | f801 0000 | 0100 0000 
  0x000000011126a338: e908 0000 | 0048 8382 | d001 0000 

  0x000000011126a344: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126a344: 0148 bea8 | dfa9 6702 | 0000 0048 | 8386 0802 

  0x000000011126a354: ;   {metadata(method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126a354: 0000 0148 | be68 e2a9 | 6702 0000 | 008b 961c | 0100 0083 | c202 8996 | 1c01 0000 | 81e2 feff 
  0x000000011126a374: 1f00 83fa | 000f 845d 

  0x000000011126a37c: ;   {metadata(method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126a37c: 2600 0048 | be68 e2a9 | 6702 0000 | 0048 8386 | 6001 0000 

  0x000000011126a390: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011126a390: 0148 be08 | ad40 1001 | 0000 0048 | 8db6 3802 | 0000 488b | 8424 a001 | 0000 488b | d048 85d2 
  0x000000011126a3b0: 7507 4881 | 0e01 0000 

  0x000000011126a3b8: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126a3b8: 0048 bea8 | dfa9 6702 | 0000 0048 | 8386 1802 

  0x000000011126a3c8: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011126a3c8: 0000 0148 | be08 ad40 | 1001 0000 | 008b 961c | 0100 0083 | c202 8996 | 1c01 0000 | 81e2 feff 
  0x000000011126a3e8: 1f00 83fa | 000f 840a 

  0x000000011126a3f0: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011126a3f0: 2600 0048 | be08 9d40 | 1001 0000 | 0048 8db6 | f001 0000 | 488b d048 | 85d2 7507 | 4881 0e01 
  0x000000011126a410: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011126a410: 0000 0048 | be08 ad40 | 1001 0000 | 0048 8386 | 9801 0000 

  0x000000011126a424: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011126a424: 0148 be08 | 9d40 1001 | 0000 008b | 961c 0100 | 0083 c202 | 8996 1c01 | 0000 81e2 | feff 1f00 
  0x000000011126a444: 83fa 000f | 84d1 2500 

  0x000000011126a44c: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011126a44c: 0048 be08 | ad40 1001 | 0000 0048 | 8db6 d001 | 0000 4c8b | 9c24 a801 | 0000 498b | d348 85d2 
  0x000000011126a46c: 7507 4881 | 0e01 0000 

  0x000000011126a474: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126a474: 0048 bea8 | dfa9 6702 | 0000 0048 | 8db6 2802 | 0000 498b | d348 85d2 | 7507 4881 | 0e01 0000 
  0x000000011126a494: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126a494: 0048 bea8 | dfa9 6702 | 0000 0048 | 8386 3802 | 0000 0148 | 8bb4 24b0 | 0100 0048 | 8b94 24b8 
  0x000000011126a4b4: 0100 00b9 | 0400 0000 | 4c8b 8424 | c001 0000 | 4c8b 8c24 | 9801 0000 

  0x000000011126a4cc: ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@28 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
  0x000000011126a4cc: 498b fb48 | 899c 24c8 

  0x000000011126a4d4: ;   {static_call}
  0x000000011126a4d4: 0100 00e8 

  0x000000011126a4d8: ; ImmutableOopMap {[288]=Oop [368]=Oop [384]=Oop [280]=Oop [272]=Oop [456]=Oop }
                      ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@28 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
  0x000000011126a4d8: 44fd 98ff | 4883 f800 

  0x000000011126a4e0: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126a4e0: 7516 48be | a8df a967 | 0200 0000 | 808e 4102 | 0000 01e9 | c100 0000 

  0x000000011126a4f8: ;   {metadata('jdk/incubator/vector/DoubleVector')}
  0x000000011126a4f8: 48bb 30ce | d425 0200 | 0000 8b70 | 0848 c1e6 | 0348 3b5e | 600f 858a 

  0x000000011126a510: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126a510: 0000 0048 | bea8 dfa9 | 6702 0000 | 008b 5808 | 48c1 e303 | 483b 9e58 | 0200 0075 | 0d48 8386 
  0x000000011126a530: 6002 0000 | 01e9 7f00 | 0000 483b | 9e68 0200 | 0075 0d48 | 8386 7002 | 0000 01e9 | 6900 0000 
  0x000000011126a550: 4881 be58 | 0200 0000 | 0000 0075 | 1748 899e | 5802 0000 | 48c7 8660 | 0200 0001 | 0000 00e9 
  0x000000011126a570: 4500 0000 | 4881 be68 | 0200 0000 | 0000 0075 | 1748 899e | 6802 0000 | 48c7 8670 | 0200 0001 
  0x000000011126a590: 0000 00e9 | 2100 0000 | e91c 0000 

  0x000000011126a59c: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126a59c: 0048 bea8 | dfa9 6702 | 0000 0048 | 83ae 4802 | 0000 01e9 | 8b24 0000 | e900 0000 

  0x000000011126a5b8: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@31 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
  0x000000011126a5b8: 0048 8bf0 | 488b 9c24 | c801 0000 | c5fb 1084 | 24a0 0200 | 00c5 fb10 | 8c24 a802 | 0000 488b 
  0x000000011126a5d8: 8c24 8001 | 0000 488b | 8424 7001 | 0000 c5fb | 1094 2490 | 0200 004c | 8b9c 2418 | 0100 0048 
  0x000000011126a5f8: 8b94 2410 | 0100 004c | 8bac 2420 | 0100 00c5 | e157 dbc5 | d957 e441 | be00 0000 

  0x000000011126a614: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011126a614: 0048 89b4 | 2418 0200 | 0048 899c | 2430 0200 | 00c5 fb11 | 9c24 f802 | 0000 c5fb | 11a4 24f0 
  0x000000011126a634: 0200 00c5 | fb11 8424 | e002 0000 | c5fb 118c | 24d8 0200 | 0048 898c | 2440 0200 | 0048 8984 
  0x000000011126a654: 2438 0200 | 004c 899c | 2420 0200 | 004c 89ac | 2448 0200 | 0090 9090 | 9090 9090 
 ;;  block B1 [199, 205]
  0x000000011126a670: c4c1 532a | eec5 f92e | ea41 b801 | 0000 000f | 8a15 0000 | 000f 870f | 0000 0041 | b800 0000 
  0x000000011126a690: 000f 8403 | 0000 0041 

  0x000000011126a698: ;*dcmpg {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@204 (line 46)
  0x000000011126a698: ffc8 4183 

  0x000000011126a69c: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011126a69c: f800 49b8 | 4046 a067 | 0200 0000 | 49b9 7803 | 0000 0000 | 0000 0f8d | 0a00 0000 | 49b9 8803 
  0x000000011126a6bc: 0000 0000 | 0000 4b8b | 3c08 488d | 7f01 4b89 | 3c08 0f8d 

  0x000000011126a6d0: ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@205 (line 46)
  0x000000011126a6d0: 6715 0000 
 ;;  block B10 [208, 3]
  0x000000011126a6d4: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011126a6d4: 49b8 4046 | a067 0200 | 0000 4983 | 8098 0300 

  0x000000011126a6e4: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126a6e4: 0001 49b8 | 905a a967 | 0200 0000 | 458b 881c | 0100 0041 | 83c1 0245 | 8988 1c01 | 0000 4181 
  0x000000011126a704: e1fe ff1f | 0041 83f9 | 000f 8449 

  0x000000011126a710: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078})}
  0x000000011126a710: 2300 0049 | b878 0000 | 7e01 0000 

  0x000000011126a71c: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126a71c: 0049 b990 | 5aa9 6702 | 0000 0045 | 8b40 0849 | c1e0 034d | 3b81 7001 | 0000 750d | 4983 8178 
  0x000000011126a73c: 0100 0001 | e966 0000 | 004d 3b81 | 8001 0000 | 750d 4983 | 8188 0100 | 0001 e950 | 0000 0049 
  0x000000011126a75c: 81b9 7001 | 0000 0000 | 0000 7517 | 4d89 8170 | 0100 0049 | c781 7801 | 0000 0100 | 0000 e92c 
  0x000000011126a77c: 0000 0049 | 81b9 8001 | 0000 0000 | 0000 7517 | 4d89 8180 | 0100 0049 | c781 8801 | 0000 0100 
  0x000000011126a79c: 0000 e908 | 0000 0049 | 8381 6001 | 0000 0144 

  0x000000011126a7ac: ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
                      ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126a7ac: 8b42 0c49 | b990 5aa9 | 6702 0000 | 0049 8381 | 9801 0000 

  0x000000011126a7c0: ;   {metadata(method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x000000011126a7c0: 0149 b930 | 5da9 6702 | 0000 0041 | 8bb9 1c01 | 0000 83c7 | 0241 89b9 | 1c01 0000 | 81e7 feff 
  0x000000011126a7e0: 1f00 83ff | 000f 84ab | 2200 0041 

  0x000000011126a7ec: ;   {metadata(method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x000000011126a7ec: 83e8 0349 | b930 5da9 | 6702 0000 | 0049 8381 | c001 0000 

  0x000000011126a800: ;   {metadata(method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x000000011126a800: 0149 b918 | 4c9f 6702 | 0000 0041 | 8bb9 1c01 | 0000 83c7 | 0241 89b9 | 1c01 0000 | 81e7 feff 
  0x000000011126a820: 1f00 83ff | 000f 848c 

  0x000000011126a828: ;   {metadata(method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x000000011126a828: 2200 0049 | b918 4c9f | 6702 0000 | 0049 8381 | 6001 0000 

  0x000000011126a83c: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011126a83c: 0149 b9d0 | 4d9f 6702 | 0000 0041 | 8bb9 1c01 | 0000 83c7 | 0241 89b9 | 1c01 0000 | 81e7 feff 
  0x000000011126a85c: 1f00 83ff | 000f 8471 | 2200 0041 

  0x000000011126a868: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011126a868: 83fe 0049 | b9d0 4d9f | 6702 0000 | 0048 bf60 | 0100 0000 | 0000 000f | 8c0a 0000 | 0048 bf70 
  0x000000011126a888: 0100 0000 | 0000 004d | 8b24 394d | 8d64 2401 | 4d89 2439 
 ;; 1970 branch [LT] [B171] 
  0x000000011126a89c: 0f8c 8816 

  0x000000011126a8a0: ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@1 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011126a8a0: 0000 453b 

  0x000000011126a8a4: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011126a8a4: f049 b9d0 | 4d9f 6702 | 0000 0048 | bf90 0100 | 0000 0000 | 000f 8d0a | 0000 0048 | bf80 0100 
  0x000000011126a8c4: 0000 0000 | 004d 8b24 | 394d 8d64 | 2401 4d89 | 2439 0f8d 

  0x000000011126a8d8: ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@6 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011126a8d8: 4e16 0000 
 ;;  block B160 [12, 6]
  0x000000011126a8dc: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078})}
  0x000000011126a8dc: 49b8 7800 | 007e 0100 | 0000 4d8b 

  0x000000011126a8e8: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126a8e8: c848 bf90 | 5aa9 6702 | 0000 0048 | 8387 e001 

  0x000000011126a8f8: ;   {metadata(method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011126a8f8: 0000 0149 | b9b0 48a9 | 6702 0000 | 0041 8bb9 | 1c01 0000 | 83c7 0241 | 89b9 1c01 | 0000 81e7 
  0x000000011126a918: feff 1f00 | 83ff 000f | 84d4 2100 

  0x000000011126a924: ;   {metadata(method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011126a924: 0049 b9b0 | 48a9 6702 | 0000 0049 | 8381 6001 

  0x000000011126a934: ;   {metadata(method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011126a934: 0000 0149 | b898 4aa9 | 6702 0000 | 0045 8b88 | 1c01 0000 | 4183 c102 | 4589 881c | 0100 0041 
  0x000000011126a954: 81e1 feff | 1f00 4183 | f900 0f84 | b621 0000 

  0x000000011126a964: ;   {metadata(method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011126a964: 49b8 984a | a967 0200 | 0000 41ff | 8070 0100 

  0x000000011126a974: ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011126a974: 00c5 fb11 | 9424 e802 

  0x000000011126a97c: ;   {oop(a 'jdk/incubator/vector/Double256Vector'{0x000000017e000000})}
  0x000000011126a97c: 0000 49b8 | 0000 007e | 0100 0000 

  0x000000011126a988: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126a988: 4d8b c848 | bf90 5aa9 | 6702 0000 | 0048 8387 | 1802 0000 

  0x000000011126a99c: ;   {metadata(method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011126a99c: 0149 b960 | 5fa9 6702 | 0000 0041 | 8bb9 1c01 | 0000 83c7 | 0241 89b9 | 1c01 0000 | 81e7 feff 
  0x000000011126a9bc: 1f00 83ff | 000f 8474 | 2100 004d 

  0x000000011126a9c8: ;   {metadata(method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011126a9c8: 8bc8 48bf | 605f a967 | 0200 0000 | 4883 8760 | 0100 0001 

  0x000000011126a9dc: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126a9dc: 49b9 0061 | a967 0200 | 0000 418b | b91c 0100 | 0083 c702 | 4189 b91c | 0100 0081 | e7fe ff1f 
  0x000000011126a9fc: 0083 ff00 
 ;; 2102 branch [EQ] [CounterOverflowStub: 0x00007f846a8db4a0]
  0x000000011126aa00: 0f84 5621 

  0x000000011126aa04: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126aa04: 0000 49b9 | 0061 a967 | 0200 0000 | 4983 8160 | 0100 0001 

  0x000000011126aa18: ;   {metadata(method data for {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011126aa18: 49b8 0864 | a967 0200 | 0000 458b | 881c 0100 | 0041 83c1 | 0245 8988 | 1c01 0000 | 4181 e1fe 
  0x000000011126aa38: ff1f 0041 | 83f9 000f | 8438 2100 

  0x000000011126aa44: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078})}
  0x000000011126aa44: 0049 b878 | 0000 7e01 | 0000 004d 

  0x000000011126aa50: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126aa50: 8bc8 48bf | 0061 a967 | 0200 0000 | 4883 8798 | 0100 0001 

  0x000000011126aa64: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126aa64: 4d8b c848 | bf00 61a9 | 6702 0000 | 0048 8387 | d001 0000 

  0x000000011126aa78: ;   {metadata(method data for {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011126aa78: 0149 b910 | 59a9 6702 | 0000 0041 | 8bb9 1c01 | 0000 83c7 | 0241 89b9 | 1c01 0000 | 81e7 feff 
  0x000000011126aa98: 1f00 83ff | 000f 84fb 

  0x000000011126aaa0: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126aaa0: 2000 0049 | b900 61a9 | 6702 0000 | 0049 8381 | 0802 0000 

  0x000000011126aab4: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126aab4: 0149 b800 | 61a9 6702 | 0000 0049 | 8380 4002 

  0x000000011126aac4: ;   {metadata(method data for {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126aac4: 0000 0149 | b888 65a9 | 6702 0000 | 0045 8b88 | 1c01 0000 | 4183 c102 | 4589 881c | 0100 0041 
  0x000000011126aae4: 81e1 feff | 1f00 4183 | f900 0f84 | cb20 0000 | 4d63 c6b9 | 0300 0000 | 49d3 e049 | ba10 0000 
  0x000000011126ab04: 0000 0000 | 004d 03c2 

  0x000000011126ab0c: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011126ab0c: 48b9 08ad | 4010 0100 | 0000 488d | 8938 0200 

  0x000000011126ab1c: ;   {oop(a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e000210})}
  0x000000011126ab1c: 0049 b910 | 0200 7e01 | 0000 0049 | 8bf9 4885 | ff75 0748 | 8109 0100 

  0x000000011126ab34: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126ab34: 0000 48b9 | 0061 a967 | 0200 0000 | 4883 8150 | 0200 0001 

  0x000000011126ab48: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011126ab48: 48b9 08ad | 4010 0100 | 0000 8bb9 | 1c01 0000 | 83c7 0289 | b91c 0100 | 0081 e7fe | ff1f 0083 
  0x000000011126ab68: ff00 0f84 | 7020 0000 

  0x000000011126ab70: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011126ab70: 48b9 089d | 4010 0100 | 0000 488d | 89f0 0100 | 004d 85c9 | 7507 4881 | 0901 0000 

  0x000000011126ab8c: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011126ab8c: 0048 b908 | ad40 1001 | 0000 0048 | 8381 9801 

  0x000000011126ab9c: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011126ab9c: 0000 0148 | b908 9d40 | 1001 0000 | 0044 8b89 | 1c01 0000 | 4183 c102 | 4489 891c | 0100 0041 
  0x000000011126abbc: 81e1 feff | 1f00 4183 | f900 0f84 | 3520 0000 

  0x000000011126abcc: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011126abcc: 48b9 08ad | 4010 0100 | 0000 488d | 89d0 0100 

  0x000000011126abdc: ;   {oop(a 'jdk/incubator/vector/DoubleVector$$Lambda$94+0x0000000225d597d0'{0x000000017e000240})}
  0x000000011126abdc: 0049 b940 | 0200 7e01 | 0000 0049 | 8bf9 4885 | ff75 0748 | 8109 0100 

  0x000000011126abf4: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126abf4: 0000 48b9 | 0061 a967 | 0200 0000 | 488d 8960 | 0200 004d | 85c9 7507 | 4881 0901 

  0x000000011126ac10: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126ac10: 0000 0048 | b900 61a9 | 6702 0000 | 0048 8381 | 7002 0000 

  0x000000011126ac24: ;   {oop(a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector')}
  0x000000011126ac24: 0148 b928 | 0100 7e01 

  0x000000011126ac2c: ;   {oop(a 'java/lang/Class'{0x000000011ff8c550} = double)}
  0x000000011126ac2c: 0000 0049 | b950 c5f8 | 1f01 0000 | 0048 8bf1 | 488b ca49 | 8bd1 4c8b | c9b9 0400 | 0000 4c89 
  0x000000011126ac4c: 8424 0802 | 0000 4d8b | c14c 898c | 2410 0200 | 004c 8b8c | 2408 0200 | 0048 8bbc | 2410 0200 
  0x000000011126ac6c: 0044 8934 

  0x000000011126ac70: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078})}
  0x000000011126ac70: 2449 ba78 | 0000 7e01 | 0000 004c | 8954 2408 

  0x000000011126ac80: ;   {oop(a 'jdk/incubator/vector/DoubleVector$$Lambda$94+0x0000000225d597d0'{0x000000017e000240})}
  0x000000011126ac80: 49ba 4002 | 007e 0100 | 0000 4c89 

  0x000000011126ac8c: ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011126ac8c: 5424 1044 | 89b4 2428 

  0x000000011126ac94: ;   {static_call}
  0x000000011126ac94: 0200 00e8 

  0x000000011126ac98: ; ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [544]=Oop [584]=Oop [576]=Oop }
                      ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011126ac98: 2498 4107 | 4883 f800 

  0x000000011126aca0: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126aca0: 7516 48bf | 0061 a967 | 0200 0000 | 808f 7902 | 0000 01e9 | c100 0000 

  0x000000011126acb8: ;   {metadata('jdk/incubator/vector/DoubleVector')}
  0x000000011126acb8: 48bb 30ce | d425 0200 | 0000 8b78 | 0848 c1e7 | 0348 3b5f | 600f 858a 

  0x000000011126acd0: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126acd0: 0000 0048 | bf00 61a9 | 6702 0000 | 008b 5808 | 48c1 e303 | 483b 9f90 | 0200 0075 | 0d48 8387 
  0x000000011126acf0: 9802 0000 | 01e9 7f00 | 0000 483b | 9fa0 0200 | 0075 0d48 | 8387 a802 | 0000 01e9 | 6900 0000 
  0x000000011126ad10: 4881 bf90 | 0200 0000 | 0000 0075 | 1748 899f | 9002 0000 | 48c7 8798 | 0200 0001 | 0000 00e9 
  0x000000011126ad30: 4500 0000 | 4881 bfa0 | 0200 0000 | 0000 0075 | 1748 899f | a002 0000 | 48c7 87a8 | 0200 0001 
  0x000000011126ad50: 0000 00e9 | 2100 0000 | e91c 0000 

  0x000000011126ad5c: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126ad5c: 0048 bf00 | 61a9 6702 | 0000 0048 | 83af 8002 | 0000 01e9 | ae1e 0000 | e900 0000 

  0x000000011126ad78: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011126ad78: 0048 8bf8 
 ;;  block B156 [217, 3]
  0x000000011126ad7c: ; implicit exception: dispatches to 0x000000011126cc3f
                      ;*invokevirtual sub {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x000000011126ad7c: 483b 0748 

  0x000000011126ad80: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011126ad80: 8bf7 48bb | 4046 a067 | 0200 0000 | 4883 83a8 | 0300 0001 

  0x000000011126ad94: ;   {metadata(method data for {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126ad94: 48be 88e6 | a967 0200 | 0000 8b9e | 1c01 0000 | 83c3 0289 | 9e1c 0100 | 0081 e3fe | ff1f 0083 
  0x000000011126adb4: fb00 0f84 | 9c1e 0000 

  0x000000011126adbc: ;   {metadata(method data for {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126adbc: 488b f748 | bb88 e6a9 | 6702 0000 | 0048 8383 | 6001 0000 

  0x000000011126add0: ;   {metadata(method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126add0: 0148 be70 | e8a9 6702 | 0000 008b | 9e1c 0100 | 0083 c302 | 899e 1c01 | 0000 81e3 | feff 1f00 
  0x000000011126adf0: 83fb 000f | 8480 1e00 | 0048 8bf7 

  0x000000011126adfc: ;   {metadata(method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126adfc: 48bb 70e8 | a967 0200 | 0000 8b76 | 0848 c1e6 | 0348 3bb3 | 7001 0000 | 750d 4883 | 8378 0100 
  0x000000011126ae1c: 0001 e966 | 0000 0048 | 3bb3 8001 | 0000 750d | 4883 8388 | 0100 0001 | e950 0000 | 0048 81bb 
  0x000000011126ae3c: 7001 0000 | 0000 0000 | 7517 4889 | b370 0100 | 0048 c783 | 7801 0000 | 0100 0000 | e92c 0000 
  0x000000011126ae5c: 0048 81bb | 8001 0000 | 0000 0000 | 7517 4889 | b380 0100 | 0048 c783 | 8801 0000 | 0100 0000 
  0x000000011126ae7c: e908 0000 | 0048 8383 | 6001 0000 | 01c5 fb10 | 8424 d802 | 0000 488b 

  0x000000011126ae94: ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x000000011126ae94: f748 89bc | 2450 0200 | 0048 b8a0 | 20d5 2502 

  0x000000011126aea4: ;   {virtual_call}
  0x000000011126aea4: 0000 00e8 

  0x000000011126aea8: ; ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop [592]=Oop [544]=Oop }
                      ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x000000011126aea8: 14a3 4207 | 488b bc24 | 5002 0000 

  0x000000011126aeb4: ;   {metadata(method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126aeb4: 48ba 70e8 | a967 0200 | 0000 8b7f | 0848 c1e7 | 0348 3bba | a801 0000 | 750d 4883 | 82b0 0100 
  0x000000011126aed4: 0001 e966 | 0000 0048 | 3bba b801 | 0000 750d | 4883 82c0 | 0100 0001 | e950 0000 | 0048 81ba 
  0x000000011126aef4: a801 0000 | 0000 0000 | 7517 4889 | baa8 0100 | 0048 c782 | b001 0000 | 0100 0000 | e92c 0000 
  0x000000011126af14: 0048 81ba | b801 0000 | 0000 0000 | 7517 4889 | bab8 0100 | 0048 c782 | c001 0000 | 0100 0000 
  0x000000011126af34: e908 0000 | 0048 8382 | 9801 0000 

  0x000000011126af40: ;   {oop(a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x000000017e000270})}
  0x000000011126af40: 0148 ba70 | 0200 7e01 | 0000 0048 | 8bc8 488b | b424 5002 

  0x000000011126af54: ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x000000011126af54: 0000 9090 | 9090 9090 | 9048 b8a0 | 20d5 2502 

  0x000000011126af64: ;   {virtual_call}
  0x000000011126af64: 0000 00e8 

  0x000000011126af68: ; ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x000000011126af68: b490 4207 | 4889 8424 | 5802 0000 

  0x000000011126af74: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011126af74: 48be 4046 | a067 0200 | 0000 4883 | 86e0 0300 

  0x000000011126af84: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126af84: 0001 48be | 905a a967 | 0200 0000 | 8b96 1c01 | 0000 83c2 | 0289 961c | 0100 0081 | e2fe ff1f 
  0x000000011126afa4: 0083 fa00 
 ;; 2368 branch [EQ] [CounterOverflowStub: 0x00007f846aacdc50]
  0x000000011126afa8: 0f84 ec1c 

  0x000000011126afac: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078})}
  0x000000011126afac: 0000 48be | 7800 007e | 0100 0000 

  0x000000011126afb8: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126afb8: 48ba 905a | a967 0200 | 0000 8b76 | 0848 c1e6 | 0348 3bb2 | 7001 0000 | 750d 4883 | 8278 0100 
  0x000000011126afd8: 0001 e966 | 0000 0048 | 3bb2 8001 | 0000 750d | 4883 8288 | 0100 0001 | e950 0000 | 0048 81ba 
  0x000000011126aff8: 7001 0000 | 0000 0000 | 7517 4889 | b270 0100 | 0048 c782 | 7801 0000 | 0100 0000 | e92c 0000 
  0x000000011126b018: 0048 81ba | 8001 0000 | 0000 0000 | 7517 4889 | b280 0100 | 0048 c782 | 8801 0000 | 0100 0000 
  0x000000011126b038: e908 0000 | 0048 8382 | 6001 0000 | 014c 8b9c | 2420 0200 | 0041 8b73 

  0x000000011126b050: ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
                      ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126b050: 0c48 ba90 | 5aa9 6702 | 0000 0048 | 8382 9801 

  0x000000011126b060: ;   {metadata(method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x000000011126b060: 0000 0148 | ba30 5da9 | 6702 0000 | 008b 8a1c | 0100 0083 | c102 898a | 1c01 0000 | 81e1 feff 
  0x000000011126b080: 1f00 83f9 | 000f 8449 | 1c00 0044 | 8bb4 2428 | 0200 0048 | 8bfe 83ef 

  0x000000011126b098: ;   {metadata(method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x000000011126b098: 0348 be30 | 5da9 6702 | 0000 0048 | 8386 c001 

  0x000000011126b0a8: ;   {metadata(method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x000000011126b0a8: 0000 0148 | be18 4c9f | 6702 0000 | 008b 961c | 0100 0083 | c202 8996 | 1c01 0000 | 81e2 feff 
  0x000000011126b0c8: 1f00 83fa | 000f 8422 

  0x000000011126b0d0: ;   {metadata(method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x000000011126b0d0: 1c00 0048 | be18 4c9f | 6702 0000 | 0048 8386 | 6001 0000 

  0x000000011126b0e4: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011126b0e4: 0148 bed0 | 4d9f 6702 | 0000 008b | 961c 0100 | 0083 c202 | 8996 1c01 | 0000 81e2 | feff 1f00 
  0x000000011126b104: 83fa 000f | 8409 1c00 | 0041 83fe 

  0x000000011126b110: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011126b110: 0048 bed0 | 4d9f 6702 | 0000 0048 | ba60 0100 | 0000 0000 | 000f 8c0a | 0000 0048 | ba70 0100 
  0x000000011126b130: 0000 0000 | 0048 8b0c | 1648 8d49 | 0148 890c | 160f 8c35 

  0x000000011126b144: ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@1 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011126b144: 0e00 0044 

  0x000000011126b148: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011126b148: 3bf7 48be | d04d 9f67 | 0200 0000 | 48ba 9001 | 0000 0000 | 0000 0f8d | 0a00 0000 | 48ba 8001 
  0x000000011126b168: 0000 0000 | 0000 488b | 0c16 488d | 4901 4889 | 0c16 0f8d 

  0x000000011126b17c: ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@6 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011126b17c: fc0d 0000 
 ;;  block B205 [12, 6]
  0x000000011126b180: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078})}
  0x000000011126b180: 48be 7800 | 007e 0100 | 0000 488b 

  0x000000011126b18c: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126b18c: d648 b990 | 5aa9 6702 | 0000 0048 | 8381 e001 

  0x000000011126b19c: ;   {metadata(method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011126b19c: 0000 0148 | bab0 48a9 | 6702 0000 | 008b 8a1c | 0100 0083 | c102 898a | 1c01 0000 | 81e1 feff 
  0x000000011126b1bc: 1f00 83f9 | 000f 8470 

  0x000000011126b1c4: ;   {metadata(method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011126b1c4: 1b00 0048 | bab0 48a9 | 6702 0000 | 0048 8382 | 6001 0000 

  0x000000011126b1d8: ;   {metadata(method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011126b1d8: 0148 be98 | 4aa9 6702 | 0000 008b | 961c 0100 | 0083 c202 | 8996 1c01 | 0000 81e2 | feff 1f00 
  0x000000011126b1f8: 83fa 000f | 8457 1b00 

  0x000000011126b200: ;   {metadata(method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011126b200: 0048 be98 | 4aa9 6702 | 0000 00ff | 8670 0100 

  0x000000011126b210: ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011126b210: 004c 8b8c | 2408 0200 

  0x000000011126b218: ;   {oop(a 'jdk/incubator/vector/Double256Vector'{0x000000017e000000})}
  0x000000011126b218: 0048 be00 | 0000 7e01 | 0000 0048 

  0x000000011126b224: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126b224: 8bd6 48b9 | 905a a967 | 0200 0000 | 4883 8118 | 0200 0001 

  0x000000011126b238: ;   {metadata(method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011126b238: 48ba 605f | a967 0200 | 0000 8b8a | 1c01 0000 | 83c1 0289 | 8a1c 0100 | 0081 e1fe | ff1f 0083 
  0x000000011126b258: f900 0f84 | 191b 0000 

  0x000000011126b260: ;   {metadata(method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011126b260: 488b d648 | b960 5fa9 | 6702 0000 | 0048 8381 | 6001 0000 

  0x000000011126b274: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126b274: 0148 ba00 | 61a9 6702 | 0000 008b | 8a1c 0100 | 0083 c102 | 898a 1c01 | 0000 81e1 | feff 1f00 
  0x000000011126b294: 83f9 000f | 84fd 1a00 

  0x000000011126b29c: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126b29c: 0048 ba00 | 61a9 6702 | 0000 0048 | 8382 6001 

  0x000000011126b2ac: ;   {metadata(method data for {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011126b2ac: 0000 0148 | be08 64a9 | 6702 0000 | 008b 961c | 0100 0083 | c202 8996 | 1c01 0000 | 81e2 feff 
  0x000000011126b2cc: 1f00 83fa | 000f 84e4 

  0x000000011126b2d4: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078})}
  0x000000011126b2d4: 1a00 0048 | be78 0000 | 7e01 0000 | 0048 8bd6 

  0x000000011126b2e4: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126b2e4: 48b9 0061 | a967 0200 | 0000 4883 | 8198 0100 | 0001 488b 

  0x000000011126b2f8: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126b2f8: d648 b900 | 61a9 6702 | 0000 0048 | 8381 d001 

  0x000000011126b308: ;   {metadata(method data for {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011126b308: 0000 0148 | ba10 59a9 | 6702 0000 | 008b 8a1c | 0100 0083 | c102 898a | 1c01 0000 | 81e1 feff 
  0x000000011126b328: 1f00 83f9 | 000f 84a9 

  0x000000011126b330: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126b330: 1a00 0048 | ba00 61a9 | 6702 0000 | 0048 8382 | 0802 0000 

  0x000000011126b344: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126b344: 0148 be00 | 61a9 6702 | 0000 0048 | 8386 4002 

  0x000000011126b354: ;   {metadata(method data for {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126b354: 0000 0148 | be88 65a9 | 6702 0000 | 008b 961c | 0100 0083 | c202 8996 | 1c01 0000 | 81e2 feff 
  0x000000011126b374: 1f00 83fa | 000f 847e 

  0x000000011126b37c: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011126b37c: 1a00 0048 | be08 ad40 | 1001 0000 | 0048 8db6 | 3802 0000 

  0x000000011126b390: ;   {oop(a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e000210})}
  0x000000011126b390: 48ba 1002 | 007e 0100 | 0000 488b | ca48 85c9 | 7507 4881 | 0e01 0000 

  0x000000011126b3a8: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126b3a8: 0048 be00 | 61a9 6702 | 0000 0048 | 8386 5002 

  0x000000011126b3b8: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011126b3b8: 0000 0148 | be08 ad40 | 1001 0000 | 008b 8e1c | 0100 0083 | c102 898e | 1c01 0000 | 81e1 feff 
  0x000000011126b3d8: 1f00 83f9 | 000f 843b 

  0x000000011126b3e0: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011126b3e0: 1a00 0048 | be08 9d40 | 1001 0000 | 0048 8db6 | f001 0000 | 4885 d275 | 0748 810e | 0100 0000 
  0x000000011126b400: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011126b400: 48be 08ad | 4010 0100 | 0000 4883 | 8698 0100 

  0x000000011126b410: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011126b410: 0001 48be | 089d 4010 | 0100 0000 | 8b96 1c01 | 0000 83c2 | 0289 961c | 0100 0081 | e2fe ff1f 
  0x000000011126b430: 0083 fa00 
 ;; 2704 branch [EQ] [CounterOverflowStub: 0x00007f8469696aa0]
  0x000000011126b434: 0f84 051a 

  0x000000011126b438: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011126b438: 0000 48be | 08ad 4010 | 0100 0000 | 488d b6d0 

  0x000000011126b448: ;   {oop(a 'jdk/incubator/vector/DoubleVector$$Lambda$94+0x0000000225d597d0'{0x000000017e000240})}
  0x000000011126b448: 0100 0048 | ba40 0200 | 7e01 0000 | 0048 8bca | 4885 c975 | 0748 810e | 0100 0000 

  0x000000011126b464: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126b464: 48be 0061 | a967 0200 | 0000 488d | b660 0200 | 0048 85d2 | 7507 4881 | 0e01 0000 

  0x000000011126b480: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126b480: 0048 be00 | 61a9 6702 | 0000 0048 | 8386 7002 

  0x000000011126b490: ;   {oop(a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector')}
  0x000000011126b490: 0000 0148 | be28 0100 | 7e01 0000 

  0x000000011126b49c: ;   {oop(a 'java/lang/Class'{0x000000011ff8c550} = double)}
  0x000000011126b49c: 0048 ba50 | c5f8 1f01 | 0000 00b9 | 0400 0000 | 4d8b c349 | 8bfb 4489 

  0x000000011126b4b4: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078})}
  0x000000011126b4b4: 3424 49ba | 7800 007e | 0100 0000 | 4c89 5424 

  0x000000011126b4c4: ;   {oop(a 'jdk/incubator/vector/DoubleVector$$Lambda$94+0x0000000225d597d0'{0x000000017e000240})}
  0x000000011126b4c4: 0849 ba40 | 0200 7e01 | 0000 004c 

  0x000000011126b4d0: ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011126b4d0: 8954 2410 | 4c89 9c24 | 2002 0000 | 4489 b424 | 2802 0000 

  0x000000011126b4e4: ;   {static_call}
  0x000000011126b4e4: 9090 90e8 

  0x000000011126b4e8: ; ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [600]=Oop }
                      ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011126b4e8: d48f 4107 | 4883 f800 

  0x000000011126b4f0: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126b4f0: 7516 48bf | 0061 a967 | 0200 0000 | 808f 7902 | 0000 01e9 | c100 0000 

  0x000000011126b508: ;   {metadata('jdk/incubator/vector/DoubleVector')}
  0x000000011126b508: 48bb 30ce | d425 0200 | 0000 8b78 | 0848 c1e7 | 0348 3b5f | 600f 858a 

  0x000000011126b520: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126b520: 0000 0048 | bf00 61a9 | 6702 0000 | 008b 5808 | 48c1 e303 | 483b 9f90 | 0200 0075 | 0d48 8387 
  0x000000011126b540: 9802 0000 | 01e9 7f00 | 0000 483b | 9fa0 0200 | 0075 0d48 | 8387 a802 | 0000 01e9 | 6900 0000 
  0x000000011126b560: 4881 bf90 | 0200 0000 | 0000 0075 | 1748 899f | 9002 0000 | 48c7 8798 | 0200 0001 | 0000 00e9 
  0x000000011126b580: 4500 0000 | 4881 bfa0 | 0200 0000 | 0000 0075 | 1748 899f | a002 0000 | 48c7 87a8 | 0200 0001 
  0x000000011126b5a0: 0000 00e9 | 2100 0000 | e91c 0000 

  0x000000011126b5ac: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126b5ac: 0048 bf00 | 61a9 6702 | 0000 0048 | 83af 8002 | 0000 01e9 | 9c18 0000 | e900 0000 

  0x000000011126b5c8: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011126b5c8: 0048 8bf8 
 ;;  block B201 [235, 272]
  0x000000011126b5cc: ; implicit exception: dispatches to 0x000000011126ce7d
                      ;*invokevirtual sub {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x000000011126b5cc: 483b 0748 

  0x000000011126b5d0: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011126b5d0: 8bd7 48b9 | 4046 a067 | 0200 0000 | 4883 81f0 | 0300 0001 

  0x000000011126b5e4: ;   {metadata(method data for {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126b5e4: 48ba 88e6 | a967 0200 | 0000 8b8a | 1c01 0000 | 83c1 0289 | 8a1c 0100 | 0081 e1fe | ff1f 0083 
  0x000000011126b604: f900 0f84 | 8a18 0000 

  0x000000011126b60c: ;   {metadata(method data for {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126b60c: 488b d748 | b988 e6a9 | 6702 0000 | 0048 8381 | 6001 0000 

  0x000000011126b620: ;   {metadata(method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126b620: 0148 ba70 | e8a9 6702 | 0000 008b | 8a1c 0100 | 0083 c102 | 898a 1c01 | 0000 81e1 | feff 1f00 
  0x000000011126b640: 83f9 000f | 846e 1800 | 0048 8bd7 

  0x000000011126b64c: ;   {metadata(method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126b64c: 48b9 70e8 | a967 0200 | 0000 8b52 | 0848 c1e2 | 0348 3b91 | 7001 0000 | 750d 4883 | 8178 0100 
  0x000000011126b66c: 0001 e966 | 0000 0048 | 3b91 8001 | 0000 750d | 4883 8188 | 0100 0001 | e950 0000 | 0048 81b9 
  0x000000011126b68c: 7001 0000 | 0000 0000 | 7517 4889 | 9170 0100 | 0048 c781 | 7801 0000 | 0100 0000 | e92c 0000 
  0x000000011126b6ac: 0048 81b9 | 8001 0000 | 0000 0000 | 7517 4889 | 9180 0100 | 0048 c781 | 8801 0000 | 0100 0000 
  0x000000011126b6cc: e908 0000 | 0048 8381 | 6001 0000 | 01c5 fb10 | 8424 e002 | 0000 488b 

  0x000000011126b6e4: ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x000000011126b6e4: f748 89bc | 2460 0200 | 0048 b8a0 | 20d5 2502 

  0x000000011126b6f4: ;   {virtual_call}
  0x000000011126b6f4: 0000 00e8 

  0x000000011126b6f8: ; ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [608]=Oop [560]=Oop [536]=Oop [600]=Oop }
                      ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x000000011126b6f8: c49a 4207 | 488b bc24 | 6002 0000 

  0x000000011126b704: ;   {metadata(method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126b704: 48ba 70e8 | a967 0200 | 0000 8b7f | 0848 c1e7 | 0348 3bba | a801 0000 | 750d 4883 | 82b0 0100 
  0x000000011126b724: 0001 e966 | 0000 0048 | 3bba b801 | 0000 750d | 4883 82c0 | 0100 0001 | e950 0000 | 0048 81ba 
  0x000000011126b744: a801 0000 | 0000 0000 | 7517 4889 | baa8 0100 | 0048 c782 | b001 0000 | 0100 0000 | e92c 0000 
  0x000000011126b764: 0048 81ba | b801 0000 | 0000 0000 | 7517 4889 | bab8 0100 | 0048 c782 | c001 0000 | 0100 0000 
  0x000000011126b784: e908 0000 | 0048 8382 | 9801 0000 

  0x000000011126b790: ;   {oop(a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x000000017e000270})}
  0x000000011126b790: 0148 ba70 | 0200 7e01 | 0000 0048 | 8bc8 488b | b424 6002 

  0x000000011126b7a4: ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x000000011126b7a4: 0000 9090 | 9090 9090 | 9048 b8a0 | 20d5 2502 

  0x000000011126b7b4: ;   {virtual_call}
  0x000000011126b7b4: 0000 00e8 

  0x000000011126b7b8: ; ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [560]=Oop [536]=Oop [600]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x000000011126b7b8: 6488 4207 

  0x000000011126b7bc: ; implicit exception: dispatches to 0x000000011126ced8
                      ;*invokevirtual mul {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
  0x000000011126b7bc: 483b 0048 

  0x000000011126b7c0: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011126b7c0: 8bd0 48b9 | 4046 a067 | 0200 0000 | 4883 8128 | 0400 0001 

  0x000000011126b7d4: ;   {metadata(method data for {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126b7d4: 48ba 98ea | a967 0200 | 0000 8b8a | 1c01 0000 | 83c1 0289 | 8a1c 0100 | 0081 e1fe | ff1f 0083 
  0x000000011126b7f4: f900 0f84 | f516 0000 

  0x000000011126b7fc: ;   {metadata(method data for {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126b7fc: 488b d048 | b998 eaa9 | 6702 0000 | 008b 5208 | 48c1 e203 | 483b 9170 | 0100 0075 | 0d48 8381 
  0x000000011126b81c: 7801 0000 | 01e9 6600 | 0000 483b | 9180 0100 | 0075 0d48 | 8381 8801 | 0000 01e9 | 5000 0000 
  0x000000011126b83c: 4881 b970 | 0100 0000 | 0000 0075 | 1748 8991 | 7001 0000 | 48c7 8178 | 0100 0001 | 0000 00e9 
  0x000000011126b85c: 2c00 0000 | 4881 b980 | 0100 0000 | 0000 0075 | 1748 8991 | 8001 0000 | 48c7 8188 | 0100 0001 
  0x000000011126b87c: 0000 00e9 | 0800 0000 | 4883 8160 | 0100 0001 

  0x000000011126b88c: ;   {oop(a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000017e000290})}
  0x000000011126b88c: 48bf 9002 | 007e 0100 | 0000 488b | d748 8b8c | 2458 0200 

  0x000000011126b8a0: ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
  0x000000011126b8a0: 0048 8bf0 | 4889 bc24 | 6802 0000 | 9048 b8a0 | 20d5 2502 

  0x000000011126b8b4: ;   {virtual_call}
  0x000000011126b8b4: 0000 00e8 

  0x000000011126b8b8: ; ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [560]=Oop [536]=Oop [600]=Oop [616]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
  0x000000011126b8b8: 6487 4207 | 488b 9c24 | 3002 0000 

  0x000000011126b8c4: ; implicit exception: dispatches to 0x000000011126cf12
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
  0x000000011126b8c4: 483b 0348 

  0x000000011126b8c8: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011126b8c8: 8bd3 48b9 | 4046 a067 | 0200 0000 | 4883 8160 | 0400 0001 

  0x000000011126b8dc: ;   {metadata(method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126b8dc: 48ba 9872 | a967 0200 | 0000 8b8a | 1c01 0000 | 83c1 0289 | 8a1c 0100 | 0081 e1fe | ff1f 0083 
  0x000000011126b8fc: f900 0f84 | 2716 0000 

  0x000000011126b904: ;   {metadata(method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126b904: 488b d348 | b998 72a9 | 6702 0000 | 008b 5208 | 48c1 e203 | 483b 9170 | 0100 0075 | 0d48 8381 
  0x000000011126b924: 7801 0000 | 01e9 6600 | 0000 483b | 9180 0100 | 0075 0d48 | 8381 8801 | 0000 01e9 | 5000 0000 
  0x000000011126b944: 4881 b970 | 0100 0000 | 0000 0075 | 1748 8991 | 7001 0000 | 48c7 8178 | 0100 0001 | 0000 00e9 
  0x000000011126b964: 2c00 0000 | 4881 b980 | 0100 0000 | 0000 0075 | 1748 8991 | 8001 0000 | 48c7 8188 | 0100 0001 
  0x000000011126b984: 0000 00e9 | 0800 0000 | 4883 8160 | 0100 0001 

  0x000000011126b994: ;   {oop(a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000017e000250})}
  0x000000011126b994: 48bf 5002 | 007e 0100 | 0000 488b | d748 8bc8 

  0x000000011126b9a4: ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
  0x000000011126b9a4: 488b f348 | 89bc 2470 | 0200 0090 | 9090 9090 | 9048 b8a0 | 20d5 2502 

  0x000000011126b9bc: ;   {virtual_call}
  0x000000011126b9bc: 0000 00e8 

  0x000000011126b9c0: ; ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [536]=Oop [600]=Oop [616]=Oop [624]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
  0x000000011126b9c0: 5c86 4207 | 4c8b 8424 | 5802 0000 

  0x000000011126b9cc: ; implicit exception: dispatches to 0x000000011126cf4c
                      ;*invokevirtual mul {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
  0x000000011126b9cc: 493b 0049 

  0x000000011126b9d0: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011126b9d0: 8bd0 48b9 | 4046 a067 | 0200 0000 | 4883 8198 | 0400 0001 

  0x000000011126b9e4: ;   {metadata(method data for {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126b9e4: 48ba 98ea | a967 0200 | 0000 8b8a | 1c01 0000 | 83c1 0289 | 8a1c 0100 | 0081 e1fe | ff1f 0083 
  0x000000011126ba04: f900 0f84 | 5915 0000 

  0x000000011126ba0c: ;   {metadata(method data for {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126ba0c: 498b d048 | b998 eaa9 | 6702 0000 | 008b 5208 | 48c1 e203 | 483b 9170 | 0100 0075 | 0d48 8381 
  0x000000011126ba2c: 7801 0000 | 01e9 6600 | 0000 483b | 9180 0100 | 0075 0d48 | 8381 8801 | 0000 01e9 | 5000 0000 
  0x000000011126ba4c: 4881 b970 | 0100 0000 | 0000 0075 | 1748 8991 | 7001 0000 | 48c7 8178 | 0100 0001 | 0000 00e9 
  0x000000011126ba6c: 2c00 0000 | 4881 b980 | 0100 0000 | 0000 0075 | 1748 8991 | 8001 0000 | 48c7 8188 | 0100 0001 
  0x000000011126ba8c: 0000 00e9 | 0800 0000 | 4883 8160 | 0100 0001 | 488b 9424 | 6802 0000 | 498b c849 

  0x000000011126baa8: ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
  0x000000011126baa8: 8bf0 4889 | 8424 7802 | 0000 9090 | 9048 b8a0 | 20d5 2502 

  0x000000011126babc: ;   {virtual_call}
  0x000000011126babc: 0000 00e8 

  0x000000011126bac0: ; ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [536]=Oop [624]=Oop [632]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
  0x000000011126bac0: 5c85 4207 | 488b b424 | 1802 0000 

  0x000000011126bacc: ; implicit exception: dispatches to 0x000000011126cf86
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011126bacc: 483b 0648 

  0x000000011126bad0: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011126bad0: 8bd6 48b9 | 4046 a067 | 0200 0000 | 4883 81d0 | 0400 0001 

  0x000000011126bae4: ;   {metadata(method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126bae4: 48ba 9872 | a967 0200 | 0000 8b8a | 1c01 0000 | 83c1 0289 | 8a1c 0100 | 0081 e1fe | ff1f 0083 
  0x000000011126bb04: f900 0f84 | 9314 0000 

  0x000000011126bb0c: ;   {metadata(method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126bb0c: 488b d648 | b998 72a9 | 6702 0000 | 008b 5208 | 48c1 e203 | 483b 9170 | 0100 0075 | 0d48 8381 
  0x000000011126bb2c: 7801 0000 | 01e9 6600 | 0000 483b | 9180 0100 | 0075 0d48 | 8381 8801 | 0000 01e9 | 5000 0000 
  0x000000011126bb4c: 4881 b970 | 0100 0000 | 0000 0075 | 1748 8991 | 7001 0000 | 48c7 8178 | 0100 0001 | 0000 00e9 
  0x000000011126bb6c: 2c00 0000 | 4881 b980 | 0100 0000 | 0000 0075 | 1748 8991 | 8001 0000 | 48c7 8188 | 0100 0001 
  0x000000011126bb8c: 0000 00e9 | 0800 0000 | 4883 8160 | 0100 0001 | 488b 9424 | 7002 0000 

  0x000000011126bba4: ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011126bba4: 488b c890 | 9090 9090 | 9048 b8a0 | 20d5 2502 

  0x000000011126bbb4: ;   {virtual_call}
  0x000000011126bbb4: 0000 00e8 

  0x000000011126bbb8: ; ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [632]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011126bbb8: 6484 4207 | 448b b424 | 2802 0000 | 4183 c604 

  0x000000011126bbc8: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011126bbc8: 48ba 4046 | a067 0200 | 0000 8bb2 | 2001 0000 | 83c6 0289 | b220 0100 | 0081 e6fe | 3f00 0083 
  0x000000011126bbe8: fe00 0f84 

  0x000000011126bbec: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)
  0x000000011126bbec: d013 0000 | 4d8b 9730 

  0x000000011126bbf4: ; ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [632]=Oop rax=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)
                      ;   {poll}
  0x000000011126bbf4: 0100 0041 

  0x000000011126bbf8: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011126bbf8: 8502 48ba | 4046 a067 | 0200 0000 | ff82 0805 | 0000 488b | f048 8b9c | 2478 0200 | 0048 89b4 
  0x000000011126bc18: 2418 0200 | 0048 899c | 2430 0200 | 00c5 fb10 | 9424 e802 | 0000 488b | 9424 1002 | 0000 e935 
  0x000000011126bc38: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)
  0x000000011126bc38: eaff ff48 | 8b84 2438 | 0200 0044 | 89b4 2428 | 0200 0048 | 8994 2410 | 0200 0048 | 3b00 488b 
  0x000000011126bc58: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011126bc58: d048 be40 | 46a0 6702 | 0000 008b | 5208 48c1 | e203 483b | 9630 0500 | 0075 0d48 | 8386 3805 
  0x000000011126bc78: 0000 01e9 | 6600 0000 | 483b 9640 | 0500 0075 | 0d48 8386 | 4805 0000 | 01e9 5000 | 0000 4881 
  0x000000011126bc98: be30 0500 | 0000 0000 | 0075 1748 | 8996 3005 | 0000 48c7 | 8638 0500 | 0001 0000 | 00e9 2c00 
  0x000000011126bcb8: 0000 4881 | be40 0500 | 0000 0000 | 0075 1748 | 8996 4005 | 0000 48c7 | 8648 0500 | 0001 0000 
  0x000000011126bcd8: 00e9 0800 | 0000 4883 | 8620 0500 

  0x000000011126bce4: ;   {oop(a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000017e000250})}
  0x000000011126bce4: 0001 48bf | 5002 007e | 0100 0000 | 488b d748 

  0x000000011126bcf4: ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@282 (line 52)
  0x000000011126bcf4: 8bf0 4889 | bc24 8002 | 0000 9090 | 9090 9090 | 9048 b8ff | ffff ffff 

  0x000000011126bd0c: ;   {virtual_call}
  0x000000011126bd0c: ffff ffe8 

  0x000000011126bd10: ; ImmutableOopMap {[528]=Oop [584]=Oop [544]=Oop [640]=Oop [576]=Oop }
                      ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@282 (line 52)
  0x000000011126bd10: 0ce2 98ff | c5fb 5884 | 24f0 0200 | 0048 8b8c | 2440 0200 | 0048 3b01 

  0x000000011126bd28: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011126bd28: 488b d148 | be40 46a0 | 6702 0000 | 008b 5208 | 48c1 e203 | 483b 9668 | 0500 0075 | 0d48 8386 
  0x000000011126bd48: 7005 0000 | 01e9 6600 | 0000 483b | 9678 0500 | 0075 0d48 | 8386 8005 | 0000 01e9 | 5000 0000 
  0x000000011126bd68: 4881 be68 | 0500 0000 | 0000 0075 | 1748 8996 | 6805 0000 | 48c7 8670 | 0500 0001 | 0000 00e9 
  0x000000011126bd88: 2c00 0000 | 4881 be78 | 0500 0000 | 0000 0075 | 1748 8996 | 7805 0000 | 48c7 8680 | 0500 0001 
  0x000000011126bda8: 0000 00e9 | 0800 0000 | 4883 8658 | 0500 0001 | 488b 9424 | 8002 0000 

  0x000000011126bdc0: ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011126bdc0: 488b f1c5 | fb11 8424 | 0003 0000 | 9048 b8ff | ffff ffff 

  0x000000011126bdd4: ;   {virtual_call}
  0x000000011126bdd4: ffff ffe8 

  0x000000011126bdd8: ; ImmutableOopMap {[528]=Oop [584]=Oop [544]=Oop }
                      ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011126bdd8: 44e1 98ff | c5fb 5884 | 24f8 0200 | 00c5 fb10 | 8c24 0003 | 0000 448b | b424 2802 | 0000 4c8b 
  0x000000011126bdf8: 9c24 2002 | 0000 488b | 9424 1002 | 0000 e99f 

  0x000000011126be08: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@301 (line 55)
  0x000000011126be08: 0000 0090 | 9090 9090 
 ;;  block B13 [308, 351]
  0x000000011126be10: 443b 720c 
 ;; 3096 branch [AE] [RangeCheckStub: 0x00007f8469565da0] [bci:313]
  0x000000011126be14: 0f83 f911 | 0000 4963 | f6c5 fb10 

  0x000000011126be20: ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@313 (line 56)
  0x000000011126be20: 54f2 10c5 | eb5c 9424 | d802 0000 | c5f9 28da | c5e3 59da | c5e3 58d9 

  0x000000011126be38: ; implicit exception: dispatches to 0x000000011126d035
  0x000000011126be38: 453b 730c 
 ;; 3116 branch [AE] [RangeCheckStub: 0x00007f8469566500] [bci:340]
  0x000000011126be3c: 0f83 2512 | 0000 4963 | f6c4 c17b 

  0x000000011126be48: ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
  0x000000011126be48: 104c f310 | c5f3 5c8c | 24e0 0200 | 00c5 f359 | cac5 f358 | c841 ffc6 

  0x000000011126be60: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011126be60: 48be 4046 | a067 0200 | 0000 8b8e | 2001 0000 | 83c1 0289 | 8e20 0100 | 0081 e1fe | 3f00 0083 
  0x000000011126be80: f900 0f84 

  0x000000011126be84: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)
  0x000000011126be84: 0112 0000 | 4d8b 9730 

  0x000000011126be8c: ; ImmutableOopMap {[584]=Oop rdx=Oop r11=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)
                      ;   {poll}
  0x000000011126be8c: 0100 0041 

  0x000000011126be90: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011126be90: 8502 48be | 4046 a067 | 0200 0000 | ff86 b005 | 0000 c5f9 | 28c1 c5f9 

  0x000000011126bea8: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)
  0x000000011126bea8: 28cb 8b72 

  0x000000011126beac: ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@304 (line 55)
  0x000000011126beac: 0c44 3bf6 

  0x000000011126beb0: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011126beb0: 48be 4046 | a067 0200 | 0000 48b9 | a005 0000 | 0000 0000 | 0f8c 0a00 | 0000 48b9 | 9005 0000 
  0x000000011126bed0: 0000 0000 | 488b 3c0e | 488d 7f01 | 4889 3c0e 
 ;; 3088 branch [LT] [B13] 
  0x000000011126bee0: 0f8c 2aff 

  0x000000011126bee4: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@305 (line 55)
  0x000000011126bee4: ffff 4c8b | ac24 4802 | 0000 c5fb | 5ec1 c4c1 

  0x000000011126bef4: ;*putfield slope {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@360 (line 60)
  0x000000011126bef4: 7b11 4518 | c5fb 5984 | 24d8 0200 | 00c5 fb10 | 8c24 e002 | 0000 c5f3 | 5cc8 c4c1 

  0x000000011126bf10: ;*putfield intercept {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@374 (line 61)
  0x000000011126bf10: 7b11 4d10 | 4881 c410 | 0300 005d 

  0x000000011126bf1c: ;   {poll_return}
  0x000000011126bf1c: 493b a728 | 0100 000f | 87b3 1100 

  0x000000011126bf28: ;*return {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@377 (line 62)
  0x000000011126bf28: 00c3 c5fb | 1194 24e8 | 0200 0044 | 89b4 2428 | 0200 0048 | 8994 2410 

  0x000000011126bf40: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011126bf40: 0200 0048 | bfd0 4d9f | 6702 0000 | 0048 8387 | a001 0000 

  0x000000011126bf54: ;   {oop(NULL)}
  0x000000011126bf54: 0148 be00 | 0000 0000 | 0000 008b | 9424 2802 | 0000 498b 

  0x000000011126bf68: ;*invokestatic outOfBoundsCheckIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@12 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011126bf68: c890 9090 

  0x000000011126bf6c: ;   {static_call}
  0x000000011126bf6c: 9090 90e8 

  0x000000011126bf70: ; ImmutableOopMap {[584]=Oop [544]=Oop [528]=Oop [568]=Oop [560]=Oop [536]=Oop [576]=Oop }
                      ;*invokestatic outOfBoundsCheckIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@12 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011126bf70: ace2 98ff 

  0x000000011126bf74: ; implicit exception: dispatches to 0x000000011126d0f2
  0x000000011126bf74: 483b 00e9 

  0x000000011126bf78: ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@15 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011126bf78: 1f12 0000 
 ;;  block B216 [9, 15]
  0x000000011126bf7c: 4c89 9c24 | 2002 0000 

  0x000000011126bf84: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011126bf84: 49b9 d04d | 9f67 0200 | 0000 4983 | 81a0 0100 

  0x000000011126bf94: ;   {oop(NULL)}
  0x000000011126bf94: 0001 48be | 0000 0000 | 0000 0000 | 498b d648 

  0x000000011126bfa4: ;*invokestatic outOfBoundsCheckIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@12 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011126bfa4: 8bcf 4489 | b424 2802 

  0x000000011126bfac: ;   {static_call}
  0x000000011126bfac: 0000 90e8 

  0x000000011126bfb0: ; ImmutableOopMap {[576]=Oop [536]=Oop [528]=Oop [560]=Oop [568]=Oop [544]=Oop [584]=Oop [600]=Oop }
                      ;*invokestatic outOfBoundsCheckIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@12 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011126bfb0: 6ce2 98ff 

  0x000000011126bfb4: ; implicit exception: dispatches to 0x000000011126d10b
  0x000000011126bfb4: 483b 00e9 

  0x000000011126bfb8: ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@15 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011126bfb8: df11 0000 
 ;;  block B60 [9, 15]
  0x000000011126bfbc: 8984 2478 

  0x000000011126bfc0: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011126bfc0: 0100 0048 | bed0 4d9f | 6702 0000 | 0048 8386 | a001 0000 

  0x000000011126bfd4: ;   {oop(NULL)}
  0x000000011126bfd4: 0148 be00 | 0000 0000 | 0000 008b | 9424 7801 | 0000 488b 

  0x000000011126bfe8: ;*invokestatic outOfBoundsCheckIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@12 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011126bfe8: cf90 9090 

  0x000000011126bfec: ;   {static_call}
  0x000000011126bfec: 9090 90e8 

  0x000000011126bff0: ; ImmutableOopMap {[384]=Oop [280]=Oop [272]=Oop [288]=Oop [368]=Oop }
                      ;*invokestatic outOfBoundsCheckIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@12 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011126bff0: 2ce2 98ff 

  0x000000011126bff4: ; implicit exception: dispatches to 0x000000011126d124
  0x000000011126bff4: 483b 00e9 

  0x000000011126bff8: ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@15 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011126bff8: 9f11 0000 
 ;;  block B103 [9, 15]
  0x000000011126bffc: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011126bffc: 488b c349 | b9d0 4d9f | 6702 0000 | 0049 8381 | a001 0000 

  0x000000011126c010: ;   {oop(NULL)}
  0x000000011126c010: 0148 be00 | 0000 0000 | 0000 0048 | 8bd0 488b 

  0x000000011126c020: ;*invokestatic outOfBoundsCheckIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@12 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011126c020: cf89 8424 | 7801 0000 | 9090 9090 

  0x000000011126c02c: ;   {static_call}
  0x000000011126c02c: 9090 90e8 

  0x000000011126c030: ; ImmutableOopMap {[392]=Oop [384]=Oop [280]=Oop [272]=Oop [288]=Oop }
                      ;*invokestatic outOfBoundsCheckIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@12 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011126c030: ece1 98ff 

  0x000000011126c034: ; implicit exception: dispatches to 0x000000011126d13d
  0x000000011126c034: 483b 00e9 

  0x000000011126c038: ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@15 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011126c038: 5f11 0000 
 ;;  block B2 [7, 16]
 ;; 3270 move [metadata:0x0000000000000000|M] [rdx|M] [patch_normal] [bci:7]
  0x000000011126c03c: 9090 9090 

  0x000000011126c040: ;   {no_reloc}
  0x000000011126c040: e920 1100 | 0000 0000 | 0000 498b | 8748 0100 | 0048 8d78 | 3849 3bbf | 5801 0000 | 0f87 0d11 
  0x000000011126c060: 0000 4989 | bf48 0100 | 0048 c700 | 0100 0000 | 488b ca48 | c1e9 0389 | 4808 4833 | c989 480c 
  0x000000011126c080: 4833 c948 | bf05 0000 | 0000 0000 | 0048 894c | f808 48ff 

  0x000000011126c094: ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@7 (line 15)
  0x000000011126c094: cf75 f648 

  0x000000011126c098: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011126c098: 8bd0 48be | 4046 a067 | 0200 0000 | 4883 8680 | 0100 0001 

  0x000000011126c0ac: ;   {oop("Arrays length are not equals"{0x000000017e0002b0})}
  0x000000011126c0ac: 48ba b002 | 007e 0100 | 0000 488b 

  0x000000011126c0b8: ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@13 (line 15)
  0x000000011126c0b8: f048 8984 | 2488 0200 | 0090 9090 

  0x000000011126c0c4: ;   {optimized virtual_call}
  0x000000011126c0c4: 9090 90e8 

  0x000000011126c0c8: ; ImmutableOopMap {[648]=Oop }
                      ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@13 (line 15)
  0x000000011126c0c8: 54db 98ff | 488b 8424 | 8802 0000 | e9c2 1000 

  0x000000011126c0d8: ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@16 (line 15)
  0x000000011126c0d8: 0089 8424 | 00a0 feff | 5548 81ec | 1003 0000 | 488b 9eb0 | 0000 0048 | 8b86 a800 | 0000 488b 
  0x000000011126c0f8: 96a0 0000 | 008b 4e78 | c5fb 1046 | 684c 8b46 | 604c 8b4e | 58c5 fb10 | 4e48 c5fb | 1056 38c5 
  0x000000011126c118: fb10 5e28 | c5fb 1066 | 184c 8b5e | 104c 8b6e | 0848 8bfe | 4889 9c24 | 0002 0000 | 4889 8424 
  0x000000011126c138: f801 0000 | 4889 9424 | f001 0000 | 898c 247c | 0100 004c | 8984 24e8 | 0100 004c | 898c 24e0 
  0x000000011126c158: 0100 004c | 899c 24d8 | 0100 004c | 89ac 24d0 | 0100 00c5 | fb11 8424 | d002 0000 | c5fb 118c 
  0x000000011126c178: 24c8 0200 | 00c5 fb11 | 9424 c002 | 0000 c5fb | 119c 24b8 | 0200 00c5 | fb11 a424 | b002 0000 
  0x000000011126c198: ;   {runtime_call SharedRuntime::OSR_migration_end(long*)}
  0x000000011126c198: e803 4f51 | f84c 8bac | 24d0 0100 | 0049 8bf5 | 4c8b 9c24 | d801 0000 | 498b dbc5 | fb10 a424 
  0x000000011126c1b8: b002 0000 | c5f9 28dc | c5fb 1084 | 24b8 0200 | 00c5 f928 | e0c5 fb10 | 9424 c002 | 0000 c5f9 
  0x000000011126c1d8: 28c2 c5fb | 108c 24c8 | 0200 004c | 8b8c 24e0 | 0100 0049 | 8bc9 4c8b | 8424 e801 | 0000 498b 
  0x000000011126c1f8: c0c5 fb10 | 9424 d002 | 0000 8b94 | 247c 0100 | 004c 8bf2 | 488b 9424 | f001 0000 | 4c8b da48 
  0x000000011126c218: 8b94 24f8 | 0100 004c | 8b84 2400 | 0200 004d | 8be8 4889 | b424 1802 | 0000 4889 | 9c24 3002 
  0x000000011126c238: 0000 c5fb | 119c 24f8 | 0200 00c5 | fb11 a424 | f002 0000 | c5fb 1184 | 24e0 0200 | 00c5 fb11 
  0x000000011126c258: 8c24 d802 | 0000 4889 | 8c24 4002 | 0000 4889 | 8424 3802 | 0000 4c89 | 9c24 2002 | 0000 4c89 
  0x000000011126c278: ac24 4802 | 0000 e9ed 

  0x000000011126c280: ;   {metadata({method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011126c280: e3ff ff49 | ba18 fe88 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011126c298: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c298: ffff e821 

  0x000000011126c29c: ; ImmutableOopMap {rsi=Oop [288]=Oop rdx=Oop [272]=Oop rcx=Oop [280]=Oop }
                      ;*synchronization entry
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@-1 (line 15)
  0x000000011126c29c: 238d ffe9 | d0c0 ffff 
 ;; ImplicitNullCheckStub slow case
  0x000000011126c2a4: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011126c2a4: e897 828d 

  0x000000011126c2a8: ; ImmutableOopMap {rsi=Oop [288]=Oop rdx=Oop [272]=Oop rcx=Oop [280]=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@1 (line 15)
                      ;   {external_word}
  0x000000011126c2a8: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x000000011126c2b4: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126c2b4: 83e4 f0e8 | 944c 27f8 

  0x000000011126c2bc: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011126c2bc: f4e8 7e82 

  0x000000011126c2c0: ; ImmutableOopMap {rsi=Oop [288]=Oop rdx=Oop [272]=Oop rcx=Oop [280]=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@3 (line 15)
                      ;   {external_word}
  0x000000011126c2c0: 8dff 48bf | 696b b209 | 0100 0000 | 4883 e4f0 

  0x000000011126c2d0: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126c2d0: e87b 4c27 

  0x000000011126c2d4: ;   {metadata({method} {0x0000000267b3fa08} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011126c2d4: f8f4 49ba | 08fa b367 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011126c2ec: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c2ec: ffe8 ce22 

  0x000000011126c2f0: ; ImmutableOopMap {rsi=Oop [288]=Oop rdx=Oop [272]=Oop rcx=Oop [280]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.AbstractSpecies::loopBound@-1 (line 203)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
  0x000000011126c2f0: 8dff e98e 

  0x000000011126c2f4: ;   {metadata({method} {0x0000000267b96588} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x000000011126c2f4: c1ff ff49 | ba88 65b9 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011126c30c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c30c: ffff e8ad 

  0x000000011126c310: ; ImmutableOopMap {rsi=Oop [288]=Oop rdx=Oop [272]=Oop rcx=Oop [280]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.VectorIntrinsics::roundDown@-1 (line 106)
                      ; - jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
  0x000000011126c310: 228d ffe9 | acc1 ffff 
 ;; CounterOverflowStub slow case
  0x000000011126c318: ;   {metadata({method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126c318: 49ba 4874 | b167 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011126c32c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c32c: ffff ffe8 

  0x000000011126c330: ; ImmutableOopMap {[272]=Oop [288]=Oop [280]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x000000011126c330: 8c22 8dff | e9f0 c1ff 

  0x000000011126c338: ;   {metadata({method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126c338: ff49 ba70 | 72b1 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011126c350: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c350: e86b 228d 

  0x000000011126c354: ; ImmutableOopMap {[272]=Oop [288]=Oop [280]=Oop r11=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
                      ; - jdk.incubator.vector.DoubleVector::zero@19 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x000000011126c354: ffe9 bec2 

  0x000000011126c358: ;   {metadata({method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011126c358: ffff 49ba | 78aa 4010 | 0100 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011126c370: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c370: ffe8 4a22 

  0x000000011126c374: ; ImmutableOopMap {[272]=Oop [288]=Oop [280]=Oop r11=Oop r13=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
                      ; - jdk.incubator.vector.DoubleVector::zero@23 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x000000011126c374: 8dff e918 

  0x000000011126c378: ;   {metadata({method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011126c378: c3ff ff49 | ba78 9a40 | 1001 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011126c390: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c390: ffff e829 

  0x000000011126c394: ; ImmutableOopMap {[272]=Oop [288]=Oop [280]=Oop r11=Oop r13=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
                      ; - jdk.incubator.vector.DoubleVector::zero@23 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x000000011126c394: 228d ffe9 | 56c3 ffff 
 ;; SimpleExceptionStub slow case
  0x000000011126c39c: 4889 0424 

  0x000000011126c3a0: ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011126c3a0: e81b 578d 

  0x000000011126c3a4: ; ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [304]=Oop [336]=Oop [328]=Oop [320]=Oop [312]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@31 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
                      ;   {external_word}
  0x000000011126c3a4: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x000000011126c3b0: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126c3b0: 83e4 f0e8 | 984b 27f8 

  0x000000011126c3b8: ;   {metadata({method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126c3b8: f449 ba48 | 74b1 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011126c3d0: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c3d0: e8eb 218d 

  0x000000011126c3d4: ; ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [304]=Oop [336]=Oop [328]=Oop [320]=Oop [312]=Oop rbx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
  0x000000011126c3d4: ffe9 fcc4 

  0x000000011126c3d8: ;   {metadata({method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126c3d8: ffff 49ba | 7072 b167 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011126c3f0: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c3f0: ffe8 ca21 

  0x000000011126c3f4: ; ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [304]=Oop [336]=Oop [328]=Oop [320]=Oop [312]=Oop rbx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
                      ; - jdk.incubator.vector.DoubleVector::zero@19 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
  0x000000011126c3f4: 8dff e9c5 

  0x000000011126c3f8: ;   {metadata({method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011126c3f8: c5ff ff49 | ba78 aa40 | 1001 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011126c410: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c410: ffff e8a9 

  0x000000011126c414: ; ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [304]=Oop [336]=Oop [328]=Oop [312]=Oop rbx=Oop r13=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
                      ; - jdk.incubator.vector.DoubleVector::zero@23 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
  0x000000011126c414: 218d ffe9 | 18c6 ffff 
 ;; CounterOverflowStub slow case
  0x000000011126c41c: ;   {metadata({method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011126c41c: 49ba 789a | 4010 0100 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011126c430: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c430: ffff ffe8 

  0x000000011126c434: ; ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [304]=Oop [336]=Oop [328]=Oop [312]=Oop rbx=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
                      ; - jdk.incubator.vector.DoubleVector::zero@23 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
  0x000000011126c434: 8821 8dff | e951 c6ff | ff48 8904 

  0x000000011126c440: ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011126c440: 24e8 7a56 

  0x000000011126c444: ; ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [352]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@31 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
                      ;   {external_word}
  0x000000011126c444: 8dff 48bf | 696b b209 | 0100 0000 | 4883 e4f0 

  0x000000011126c454: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126c454: e8f7 4a27 

  0x000000011126c458: ;   {metadata({method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126c458: f8f4 49ba | d0de b167 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011126c470: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c470: ffe8 4a21 

  0x000000011126c474: ; ImmutableOopMap {[288]=Oop rdx=Oop [272]=Oop [368]=Oop [384]=Oop [280]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011126c474: 8dff e963 

  0x000000011126c478: ;   {metadata({method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x000000011126c478: c8ff ff49 | ba80 62b9 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011126c490: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c490: ffff e829 

  0x000000011126c494: ; ImmutableOopMap {[288]=Oop rdx=Oop [272]=Oop [368]=Oop [384]=Oop [280]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011126c494: 218d ffe9 | 18c9 ffff 
 ;; CounterOverflowStub slow case
  0x000000011126c49c: ;   {metadata({method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x000000011126c49c: 49ba e0f0 | 1510 0100 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011126c4b0: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c4b0: ffff ffe8 

  0x000000011126c4b4: ; ImmutableOopMap {[288]=Oop rdx=Oop [272]=Oop [368]=Oop [384]=Oop [280]=Oop }
                      ;*synchronization entry
                      ; - java.util.Objects::checkIndex@-1 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011126c4b4: 0821 8dff | e93c c9ff 

  0x000000011126c4bc: ;   {metadata({method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011126c4bc: ff49 ba08 | 343f 1001 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011126c4d4: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c4d4: e8e7 208d 

  0x000000011126c4d8: ; ImmutableOopMap {[288]=Oop rdx=Oop [272]=Oop [368]=Oop [384]=Oop [280]=Oop }
                      ;*synchronization entry
                      ; - jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011126c4d8: ffe9 5ac9 

  0x000000011126c4dc: ;   {metadata({method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011126c4dc: ffff 49ba | 309e b367 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011126c4f4: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c4f4: ffe8 c620 

  0x000000011126c4f8: ; ImmutableOopMap {[288]=Oop rdx=Oop [272]=Oop [368]=Oop [384]=Oop [280]=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011126c4f8: 8dff e9f6 

  0x000000011126c4fc: ;   {metadata({method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011126c4fc: c9ff ff49 | ba08 05b4 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011126c514: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c514: ffff e8a5 

  0x000000011126c518: ; ImmutableOopMap {[288]=Oop rdx=Oop [272]=Oop [368]=Oop [384]=Oop [280]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011126c518: 208d ffe9 | 14ca ffff 
 ;; CounterOverflowStub slow case
  0x000000011126c520: ;   {metadata({method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011126c520: 49ba c010 | b767 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011126c534: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c534: ffff ffe8 

  0x000000011126c538: ; ImmutableOopMap {[288]=Oop [384]=Oop [280]=Oop [368]=Oop rdx=Oop [272]=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011126c538: 8420 8dff | e94f caff 

  0x000000011126c540: ;   {metadata({method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126c540: ff49 ba28 | f2b1 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011126c558: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c558: e863 208d 

  0x000000011126c55c: ; ImmutableOopMap {[288]=Oop [384]=Oop [280]=Oop [368]=Oop rdx=Oop [272]=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011126c55c: ffe9 70ca 

  0x000000011126c560: ;   {metadata({method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011126c560: ffff 49ba | 20d6 b667 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011126c578: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c578: ffe8 4220 

  0x000000011126c57c: ; ImmutableOopMap {[288]=Oop [384]=Oop [280]=Oop [368]=Oop rdx=Oop [272]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011126c57c: 8dff e98e 

  0x000000011126c580: ;   {metadata({method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011126c580: caff ff49 | bab0 93b3 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011126c598: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c598: ffff e821 

  0x000000011126c59c: ; ImmutableOopMap {[288]=Oop [384]=Oop [280]=Oop [368]=Oop rdx=Oop [272]=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011126c59c: 208d ffe9 | ceca ffff 
 ;; CounterOverflowStub slow case
  0x000000011126c5a4: ;   {metadata({method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126c5a4: 49ba 80fe | b167 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011126c5b8: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c5b8: ffff ffe8 

  0x000000011126c5bc: ; ImmutableOopMap {[288]=Oop [384]=Oop [280]=Oop [368]=Oop rdx=Oop [272]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011126c5bc: 0020 8dff | e9fe caff 

  0x000000011126c5c4: ;   {metadata({method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011126c5c4: ff49 ba78 | aa40 1001 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011126c5dc: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c5dc: e8df 1f8d 

  0x000000011126c5e0: ; ImmutableOopMap {[288]=Oop [384]=Oop [368]=Oop rdx=Oop [272]=Oop [280]=Oop r8=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011126c5e0: ffe9 5ecb 

  0x000000011126c5e4: ;   {metadata({method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011126c5e4: ffff 49ba | 789a 4010 | 0100 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011126c5fc: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c5fc: ffe8 be1f 

  0x000000011126c600: ; ImmutableOopMap {[288]=Oop [384]=Oop [368]=Oop rdx=Oop [272]=Oop [280]=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011126c600: 8dff e999 | cbff ff48 

  0x000000011126c608: ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011126c608: 8904 24e8 

  0x000000011126c60c: ; ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop [368]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011126c60c: b054 8dff 

  0x000000011126c610: ;   {external_word}
  0x000000011126c610: 48bf 696b | b209 0100 | 0000 4883 

  0x000000011126c61c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126c61c: e4f0 e82d | 4927 f8f4 
 ;; ImplicitNullCheckStub slow case
  0x000000011126c624: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011126c624: e817 7f8d 

  0x000000011126c628: ; ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop rcx=Oop rbx=Oop }
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
                      ;   {external_word}
  0x000000011126c628: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x000000011126c634: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126c634: 83e4 f0e8 | 1449 27f8 

  0x000000011126c63c: ;   {metadata({method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126c63c: f449 baf0 | 8eb1 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011126c654: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c654: e867 1f8d 

  0x000000011126c658: ; ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop rcx=Oop rbx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x000000011126c658: ffe9 2ecd 

  0x000000011126c65c: ;   {metadata({method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126c65c: ffff 49ba | d0de b167 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011126c674: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c674: ffe8 461f 

  0x000000011126c678: ; ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop rax=Oop [392]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011126c678: 8dff e9ff 

  0x000000011126c67c: ;   {metadata({method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x000000011126c67c: cdff ff49 | ba80 62b9 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011126c694: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c694: ffff e825 

  0x000000011126c698: ; ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop rax=Oop [392]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011126c698: 1f8d ffe9 | afce ffff 
 ;; CounterOverflowStub slow case
  0x000000011126c6a0: ;   {metadata({method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x000000011126c6a0: 49ba e0f0 | 1510 0100 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011126c6b4: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c6b4: ffff ffe8 

  0x000000011126c6b8: ; ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop rax=Oop [392]=Oop }
                      ;*synchronization entry
                      ; - java.util.Objects::checkIndex@-1 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011126c6b8: 041f 8dff | e9d9 ceff 

  0x000000011126c6c0: ;   {metadata({method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011126c6c0: ff49 ba08 | 343f 1001 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011126c6d8: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c6d8: e8e3 1e8d 

  0x000000011126c6dc: ; ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop rax=Oop [392]=Oop }
                      ;*synchronization entry
                      ; - jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011126c6dc: ffe9 f2ce 

  0x000000011126c6e0: ;   {metadata({method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011126c6e0: ffff 49ba | 309e b367 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011126c6f8: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c6f8: ffe8 c21e 

  0x000000011126c6fc: ; ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop rax=Oop [392]=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011126c6fc: 8dff e989 

  0x000000011126c700: ;   {metadata({method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011126c700: cfff ff49 | ba08 05b4 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011126c718: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c718: ffff e8a1 

  0x000000011126c71c: ; ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop rax=Oop [392]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011126c71c: 1e8d ffe9 | a2cf ffff 
 ;; CounterOverflowStub slow case
  0x000000011126c724: ;   {metadata({method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011126c724: 49ba c010 | b767 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011126c738: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c738: ffff ffe8 

  0x000000011126c73c: ; ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop [392]=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011126c73c: 801e 8dff | e9e0 cfff 

  0x000000011126c744: ;   {metadata({method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126c744: ff49 ba28 | f2b1 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011126c75c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c75c: e85f 1e8d 

  0x000000011126c760: ; ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop [392]=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011126c760: ffe9 fccf 

  0x000000011126c764: ;   {metadata({method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011126c764: ffff 49ba | 20d6 b667 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011126c77c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c77c: ffe8 3e1e 

  0x000000011126c780: ; ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop [392]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011126c780: 8dff e915 

  0x000000011126c784: ;   {metadata({method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011126c784: d0ff ff49 | bab0 93b3 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011126c79c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c79c: ffff e81d 

  0x000000011126c7a0: ; ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop [392]=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011126c7a0: 1e8d ffe9 | 50d0 ffff 
 ;; CounterOverflowStub slow case
  0x000000011126c7a8: ;   {metadata({method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126c7a8: 49ba 80fe | b167 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011126c7bc: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c7bc: ffff ffe8 

  0x000000011126c7c0: ; ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop [392]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011126c7c0: fc1d 8dff | e97b d0ff 

  0x000000011126c7c8: ;   {metadata({method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011126c7c8: ff49 ba78 | aa40 1001 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011126c7e0: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c7e0: e8db 1d8d 

  0x000000011126c7e4: ; ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop [392]=Oop rdx=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011126c7e4: ffe9 bed0 

  0x000000011126c7e8: ;   {metadata({method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011126c7e8: ffff 49ba | 789a 4010 | 0100 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011126c800: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c800: ffe8 ba1d 

  0x000000011126c804: ; ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop [392]=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011126c804: 8dff e9f4 | d0ff ff48 

  0x000000011126c80c: ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011126c80c: 8904 24e8 

  0x000000011126c810: ; ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop [392]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011126c810: ac52 8dff 

  0x000000011126c814: ;   {external_word}
  0x000000011126c814: 48bf 696b | b209 0100 | 0000 4883 

  0x000000011126c820: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126c820: e4f0 e829 | 4727 f8f4 
 ;; ImplicitNullCheckStub slow case
  0x000000011126c828: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011126c828: e813 7d8d 

  0x000000011126c82c: ; ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [392]=Oop rcx=Oop rax=Oop }
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
                      ;   {external_word}
  0x000000011126c82c: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x000000011126c838: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126c838: 83e4 f0e8 | 1047 27f8 

  0x000000011126c840: ;   {metadata({method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126c840: f449 baf0 | 8eb1 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011126c858: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c858: e863 1d8d 

  0x000000011126c85c: ; ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [392]=Oop rcx=Oop rax=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011126c85c: ffe9 7ad2 

  0x000000011126c860: ;   {metadata({method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011126c860: ffff 49ba | 18fe 8867 | 0200 0000 | 4c89 5424 | 0848 c704 | 2467 0000 

  0x000000011126c878: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c878: 00e8 421d 

  0x000000011126c87c: ; ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [392]=Oop rax=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
  0x000000011126c87c: 8dff e93b 

  0x000000011126c880: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011126c880: d3ff ffe8 

  0x000000011126c884: ; ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop rbx=Oop [384]=Oop }
                      ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
  0x000000011126c884: b87c 8dff 

  0x000000011126c888: ;   {external_word}
  0x000000011126c888: 48bf 696b | b209 0100 | 0000 4883 

  0x000000011126c894: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126c894: e4f0 e8b5 | 4627 f8f4 
 ;; ImplicitNullCheckStub slow case
  0x000000011126c89c: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011126c89c: e89f 7c8d 

  0x000000011126c8a0: ; ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [400]=Oop [368]=Oop rcx=Oop }
                      ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
                      ;   {external_word}
  0x000000011126c8a0: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x000000011126c8ac: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126c8ac: 83e4 f0e8 | 9c46 27f8 | f448 8904 | 2448 8954 

  0x000000011126c8bc: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011126c8bc: 2408 e87d 

  0x000000011126c8c0: ; ImmutableOopMap {[288]=Oop [368]=Oop [384]=Oop rdx=Oop [272]=Oop rcx=Oop [280]=Oop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@141 (line 33)
                      ;   {external_word}
  0x000000011126c8c0: 858d ff48 | bf69 6bb2 | 0901 0000 | 0048 83e4 

  0x000000011126c8d0: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126c8d0: f0e8 7a46 | 27f8 f448 | 8904 2448 | 894c 2408 

  0x000000011126c8e0: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011126c8e0: e85b 858d 

  0x000000011126c8e4: ; ImmutableOopMap {[288]=Oop [368]=Oop [384]=Oop rdx=Oop [272]=Oop rcx=Oop [280]=Oop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@149 (line 34)
                      ;   {external_word}
  0x000000011126c8e4: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x000000011126c8f0: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126c8f0: 83e4 f0e8 | 5846 27f8 

  0x000000011126c8f8: ;   {metadata({method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011126c8f8: f449 ba18 | fe88 6702 | 0000 004c | 8954 2408 | 48c7 0424 | 9c00 0000 

  0x000000011126c910: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c910: e8ab 1c8d 

  0x000000011126c914: ; ImmutableOopMap {[288]=Oop [368]=Oop [384]=Oop rdx=Oop [272]=Oop rcx=Oop [280]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)
  0x000000011126c914: ffe9 11d5 

  0x000000011126c918: ;   {metadata({method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126c918: ffff 49ba | 4874 b167 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011126c930: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c930: ffe8 8a1c 

  0x000000011126c934: ; ImmutableOopMap {[288]=Oop [368]=Oop [384]=Oop [280]=Oop [272]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
  0x000000011126c934: 8dff e9a1 

  0x000000011126c938: ;   {metadata({method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126c938: d5ff ff49 | ba70 72b1 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011126c950: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c950: ffff e869 

  0x000000011126c954: ; ImmutableOopMap {[288]=Oop [368]=Oop [384]=Oop [280]=Oop [272]=Oop rbx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
                      ; - jdk.incubator.vector.DoubleVector::zero@19 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
  0x000000011126c954: 1c8d ffe9 | 6ed6 ffff 
 ;; CounterOverflowStub slow case
  0x000000011126c95c: ;   {metadata({method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011126c95c: 49ba 78aa | 4010 0100 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011126c970: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c970: ffff ffe8 

  0x000000011126c974: ; ImmutableOopMap {[288]=Oop [368]=Oop [384]=Oop [280]=Oop [272]=Oop rbx=Oop rax=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
                      ; - jdk.incubator.vector.DoubleVector::zero@23 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
  0x000000011126c974: 481c 8dff | e9c8 d6ff 

  0x000000011126c97c: ;   {metadata({method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011126c97c: ff49 ba78 | 9a40 1001 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011126c994: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c994: e827 1c8d 

  0x000000011126c998: ; ImmutableOopMap {[288]=Oop [368]=Oop [384]=Oop [280]=Oop [272]=Oop rbx=Oop rax=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
                      ; - jdk.incubator.vector.DoubleVector::zero@23 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
  0x000000011126c998: ffe9 06d7 | ffff 4889 

  0x000000011126c9a0: ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011126c9a0: 0424 e819 

  0x000000011126c9a4: ; ImmutableOopMap {[288]=Oop [368]=Oop [384]=Oop [280]=Oop [272]=Oop [424]=Oop [408]=Oop [416]=Oop [440]=Oop [432]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@31 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
                      ;   {external_word}
  0x000000011126c9a4: 518d ff48 | bf69 6bb2 | 0901 0000 | 0048 83e4 

  0x000000011126c9b4: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126c9b4: f0e8 9645 

  0x000000011126c9b8: ;   {metadata({method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126c9b8: 27f8 f449 | ba48 74b1 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011126c9d0: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c9d0: ffff e8e9 

  0x000000011126c9d4: ; ImmutableOopMap {[288]=Oop [368]=Oop [384]=Oop [280]=Oop [272]=Oop [424]=Oop [408]=Oop [416]=Oop [440]=Oop [432]=Oop rbx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
  0x000000011126c9d4: 1b8d ffe9 | bad8 ffff 
 ;; CounterOverflowStub slow case
  0x000000011126c9dc: ;   {metadata({method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126c9dc: 49ba 7072 | b167 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011126c9f0: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126c9f0: ffff ffe8 

  0x000000011126c9f4: ; ImmutableOopMap {[288]=Oop [368]=Oop [384]=Oop [280]=Oop [272]=Oop [424]=Oop [408]=Oop [416]=Oop [440]=Oop [432]=Oop rbx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
                      ; - jdk.incubator.vector.DoubleVector::zero@19 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
  0x000000011126c9f4: c81b 8dff | e982 d9ff 

  0x000000011126c9fc: ;   {metadata({method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011126c9fc: ff49 ba78 | aa40 1001 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011126ca14: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126ca14: e8a7 1b8d 

  0x000000011126ca18: ; ImmutableOopMap {[288]=Oop [368]=Oop [384]=Oop [280]=Oop [272]=Oop [424]=Oop [408]=Oop [440]=Oop [432]=Oop rbx=Oop rax=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
                      ; - jdk.incubator.vector.DoubleVector::zero@23 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
  0x000000011126ca18: ffe9 d5d9 

  0x000000011126ca1c: ;   {metadata({method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011126ca1c: ffff 49ba | 789a 4010 | 0100 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011126ca34: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126ca34: ffe8 861b 

  0x000000011126ca38: ; ImmutableOopMap {[288]=Oop [368]=Oop [384]=Oop [280]=Oop [272]=Oop [424]=Oop [408]=Oop [440]=Oop [432]=Oop rbx=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
                      ; - jdk.incubator.vector.DoubleVector::zero@23 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
  0x000000011126ca38: 8dff e90e | daff ff48 

  0x000000011126ca40: ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011126ca40: 8904 24e8 

  0x000000011126ca44: ; ImmutableOopMap {[288]=Oop [368]=Oop [384]=Oop [280]=Oop [272]=Oop [456]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@31 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
  0x000000011126ca44: 7850 8dff 

  0x000000011126ca48: ;   {external_word}
  0x000000011126ca48: 48bf 696b | b209 0100 | 0000 4883 

  0x000000011126ca54: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126ca54: e4f0 e8f5 | 4427 f8f4 
 ;; CounterOverflowStub slow case
  0x000000011126ca5c: ;   {metadata({method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126ca5c: 49ba d0de | b167 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011126ca70: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126ca70: ffff ffe8 

  0x000000011126ca74: ; ImmutableOopMap {rdx=Oop [536]=Oop [584]=Oop [544]=Oop [568]=Oop [560]=Oop [576]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011126ca74: 481b 8dff | e996 dcff 

  0x000000011126ca7c: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011126ca7c: ffe8 be7a 

  0x000000011126ca80: ; ImmutableOopMap {rdx=Oop [536]=Oop [584]=Oop [544]=Oop [568]=Oop [560]=Oop [576]=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
                      ;   {external_word}
  0x000000011126ca80: 8dff 48bf | 696b b209 | 0100 0000 | 4883 e4f0 

  0x000000011126ca90: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126ca90: e8bb 4427 

  0x000000011126ca94: ;   {metadata({method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x000000011126ca94: f8f4 49ba | 8062 b967 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011126caac: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126caac: ffe8 0e1b 

  0x000000011126cab0: ; ImmutableOopMap {rdx=Oop [536]=Oop [584]=Oop [544]=Oop [568]=Oop [560]=Oop [576]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011126cab0: 8dff e934 

  0x000000011126cab4: ;   {metadata({method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x000000011126cab4: ddff ff49 | bae0 f015 | 1001 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011126cacc: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126cacc: ffff e8ed 

  0x000000011126cad0: ; ImmutableOopMap {rdx=Oop [536]=Oop [584]=Oop [544]=Oop [568]=Oop [560]=Oop [576]=Oop }
                      ;*synchronization entry
                      ; - java.util.Objects::checkIndex@-1 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011126cad0: 1a8d ffe9 | 53dd ffff 
 ;; CounterOverflowStub slow case
  0x000000011126cad8: ;   {metadata({method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011126cad8: 49ba 0834 | 3f10 0100 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011126caec: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126caec: ffff ffe8 

  0x000000011126caf0: ; ImmutableOopMap {rdx=Oop [536]=Oop [584]=Oop [544]=Oop [568]=Oop [560]=Oop [576]=Oop }
                      ;*synchronization entry
                      ; - jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011126caf0: cc1a 8dff | e96e ddff 

  0x000000011126caf8: ;   {metadata({method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011126caf8: ff49 ba30 | 9eb3 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011126cb10: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126cb10: e8ab 1a8d 

  0x000000011126cb14: ; ImmutableOopMap {rdx=Oop [536]=Oop [584]=Oop [544]=Oop [568]=Oop [560]=Oop [576]=Oop r8=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011126cb14: ffe9 0bde 

  0x000000011126cb18: ;   {metadata({method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011126cb18: ffff 49ba | 0805 b467 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011126cb30: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126cb30: ffe8 8a1a 

  0x000000011126cb34: ; ImmutableOopMap {rdx=Oop [536]=Oop [584]=Oop [544]=Oop [568]=Oop [560]=Oop [576]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011126cb34: 8dff e929 

  0x000000011126cb38: ;   {metadata({method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011126cb38: deff ff49 | bac0 10b7 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011126cb50: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126cb50: ffff e869 

  0x000000011126cb54: ; ImmutableOopMap {rdx=Oop [584]=Oop [576]=Oop [568]=Oop [536]=Oop [560]=Oop [544]=Oop r8=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011126cb54: 1a8d ffe9 | 6bde ffff 
 ;; CounterOverflowStub slow case
  0x000000011126cb5c: ;   {metadata({method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126cb5c: 49ba 28f2 | b167 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011126cb70: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126cb70: ffff ffe8 

  0x000000011126cb74: ; ImmutableOopMap {rdx=Oop [584]=Oop [576]=Oop [568]=Oop [536]=Oop [560]=Oop [544]=Oop r8=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011126cb74: 481a 8dff | e989 deff 

  0x000000011126cb7c: ;   {metadata({method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011126cb7c: ff49 ba20 | d6b6 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011126cb94: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126cb94: e827 1a8d 

  0x000000011126cb98: ; ImmutableOopMap {rdx=Oop [584]=Oop [576]=Oop [568]=Oop [536]=Oop [560]=Oop [544]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011126cb98: ffe9 a7de 

  0x000000011126cb9c: ;   {metadata({method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011126cb9c: ffff 49ba | b093 b367 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011126cbb4: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126cbb4: ffe8 061a 

  0x000000011126cbb8: ; ImmutableOopMap {rdx=Oop [584]=Oop [576]=Oop [568]=Oop [536]=Oop [560]=Oop [544]=Oop r8=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011126cbb8: 8dff e9e4 

  0x000000011126cbbc: ;   {metadata({method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126cbbc: deff ff49 | ba80 feb1 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011126cbd4: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126cbd4: ffff e8e5 

  0x000000011126cbd8: ; ImmutableOopMap {rdx=Oop [584]=Oop [576]=Oop [568]=Oop [536]=Oop [560]=Oop [544]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011126cbd8: 198d ffe9 | 14df ffff 
 ;; CounterOverflowStub slow case
  0x000000011126cbe0: ;   {metadata({method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011126cbe0: 49ba 78aa | 4010 0100 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011126cbf4: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126cbf4: ffff ffe8 

  0x000000011126cbf8: ; ImmutableOopMap {rdx=Oop [584]=Oop [568]=Oop [536]=Oop [560]=Oop [544]=Oop [576]=Oop r9=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011126cbf8: c419 8dff | e96f dfff 

  0x000000011126cc00: ;   {metadata({method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011126cc00: ff49 ba78 | 9a40 1001 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011126cc18: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126cc18: e8a3 198d 

  0x000000011126cc1c: ; ImmutableOopMap {rdx=Oop [584]=Oop [568]=Oop [536]=Oop [560]=Oop [544]=Oop [576]=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011126cc1c: ffe9 aadf | ffff 4889 

  0x000000011126cc24: ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011126cc24: 0424 e895 

  0x000000011126cc28: ; ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [544]=Oop [584]=Oop [576]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
                      ;   {external_word}
  0x000000011126cc28: 4e8d ff48 | bf69 6bb2 | 0901 0000 | 0048 83e4 

  0x000000011126cc38: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126cc38: f0e8 1243 

  0x000000011126cc3c: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011126cc3c: 27f8 f4e8 

  0x000000011126cc40: ; ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop rdi=Oop [544]=Oop }
                      ;*invokevirtual sub {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x000000011126cc40: fc78 8dff 

  0x000000011126cc44: ;   {external_word}
  0x000000011126cc44: 48bf 696b | b209 0100 | 0000 4883 

  0x000000011126cc50: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126cc50: e4f0 e8f9 | 4227 f8f4 
 ;; CounterOverflowStub slow case
  0x000000011126cc58: ;   {metadata({method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126cc58: 49ba 7893 | b167 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011126cc6c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126cc6c: ffff ffe8 

  0x000000011126cc70: ; ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop rdi=Oop [544]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::sub@-1 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x000000011126cc70: 4c19 8dff | e943 e1ff 

  0x000000011126cc78: ;   {metadata({method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126cc78: ff49 baa0 | 81b1 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011126cc90: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126cc90: e82b 198d 

  0x000000011126cc94: ; ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop rdi=Oop [544]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::lanewise@-1 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x000000011126cc94: ffe9 5fe1 

  0x000000011126cc98: ;   {metadata({method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126cc98: ffff 49ba | d0de b167 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011126ccb0: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126ccb0: ffe8 0a19 

  0x000000011126ccb4: ; ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop rax=Oop [600]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011126ccb4: 8dff e9f3 

  0x000000011126ccb8: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011126ccb8: e2ff ffe8 

  0x000000011126ccbc: ; ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop rax=Oop [600]=Oop r11=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011126ccbc: 8078 8dff 

  0x000000011126ccc0: ;   {external_word}
  0x000000011126ccc0: 48bf 696b | b209 0100 | 0000 4883 

  0x000000011126cccc: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126cccc: e4f0 e87d | 4227 f8f4 
 ;; CounterOverflowStub slow case
  0x000000011126ccd4: ;   {metadata({method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x000000011126ccd4: 49ba 8062 | b967 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011126cce8: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126cce8: ffff ffe8 

  0x000000011126ccec: ; ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop rax=Oop [600]=Oop r11=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011126ccec: d018 8dff | e996 e3ff 

  0x000000011126ccf4: ;   {metadata({method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x000000011126ccf4: ff49 bae0 | f015 1001 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011126cd0c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126cd0c: e8af 188d 

  0x000000011126cd10: ; ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop rax=Oop [600]=Oop r11=Oop }
                      ;*synchronization entry
                      ; - java.util.Objects::checkIndex@-1 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011126cd10: ffe9 bde3 

  0x000000011126cd14: ;   {metadata({method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011126cd14: ffff 49ba | 0834 3f10 | 0100 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011126cd2c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126cd2c: ffe8 8e18 

  0x000000011126cd30: ; ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop rax=Oop [600]=Oop r11=Oop }
                      ;*synchronization entry
                      ; - jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011126cd30: 8dff e9d6 

  0x000000011126cd34: ;   {metadata({method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011126cd34: e3ff ff49 | ba30 9eb3 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011126cd4c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126cd4c: ffff e86d 

  0x000000011126cd50: ; ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop rax=Oop [600]=Oop r11=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011126cd50: 188d ffe9 | 6fe4 ffff 
 ;; CounterOverflowStub slow case
  0x000000011126cd58: ;   {metadata({method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011126cd58: 49ba 0805 | b467 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011126cd6c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126cd6c: ffff ffe8 

  0x000000011126cd70: ; ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop rax=Oop [600]=Oop r11=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011126cd70: 4c18 8dff | e988 e4ff 

  0x000000011126cd78: ;   {metadata({method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011126cd78: ff49 bac0 | 10b7 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011126cd90: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126cd90: e82b 188d 

  0x000000011126cd94: ; ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop r11=Oop [600]=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011126cd94: ffe9 c6e4 

  0x000000011126cd98: ;   {metadata({method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126cd98: ffff 49ba | 28f2 b167 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011126cdb0: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126cdb0: ffe8 0a18 

  0x000000011126cdb4: ; ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop r11=Oop [600]=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011126cdb4: 8dff e9e2 

  0x000000011126cdb8: ;   {metadata({method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011126cdb8: e4ff ff49 | ba20 d6b6 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011126cdd0: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126cdd0: ffff e8e9 

  0x000000011126cdd4: ; ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop r11=Oop [600]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011126cdd4: 178d ffe9 | fbe4 ffff 
 ;; CounterOverflowStub slow case
  0x000000011126cddc: ;   {metadata({method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011126cddc: 49ba b093 | b367 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011126cdf0: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126cdf0: ffff ffe8 

  0x000000011126cdf4: ; ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop r11=Oop [600]=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011126cdf4: c817 8dff | e936 e5ff 

  0x000000011126cdfc: ;   {metadata({method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126cdfc: ff49 ba80 | feb1 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011126ce14: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126ce14: e8a7 178d 

  0x000000011126ce18: ; ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop r11=Oop [600]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011126ce18: ffe9 61e5 

  0x000000011126ce1c: ;   {metadata({method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011126ce1c: ffff 49ba | 78aa 4010 | 0100 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011126ce34: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126ce34: ffe8 8617 

  0x000000011126ce38: ; ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop r11=Oop [600]=Oop rdx=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011126ce38: 8dff e9a4 

  0x000000011126ce3c: ;   {metadata({method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011126ce3c: e5ff ff49 | ba78 9a40 | 1001 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011126ce54: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126ce54: ffff e865 

  0x000000011126ce58: ; ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop r11=Oop [600]=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011126ce58: 178d ffe9 | dae5 ffff 
 ;; SimpleExceptionStub slow case
  0x000000011126ce60: 4889 0424 

  0x000000011126ce64: ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011126ce64: e857 4c8d 

  0x000000011126ce68: ; ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [600]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
                      ;   {external_word}
  0x000000011126ce68: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x000000011126ce74: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126ce74: 83e4 f0e8 | d440 27f8 

  0x000000011126ce7c: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011126ce7c: f4e8 be76 

  0x000000011126ce80: ; ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop rdi=Oop [560]=Oop [600]=Oop [536]=Oop }
                      ;*invokevirtual sub {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
                      ;   {external_word}
  0x000000011126ce80: 8dff 48bf | 696b b209 | 0100 0000 | 4883 e4f0 

  0x000000011126ce90: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126ce90: e8bb 4027 

  0x000000011126ce94: ;   {metadata({method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126ce94: f8f4 49ba | 7893 b167 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011126ceac: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126ceac: ffe8 0e17 

  0x000000011126ceb0: ; ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop rdi=Oop [560]=Oop [600]=Oop [536]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::sub@-1 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x000000011126ceb0: 8dff e955 

  0x000000011126ceb4: ;   {metadata({method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126ceb4: e7ff ff49 | baa0 81b1 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011126cecc: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126cecc: ffff e8ed 

  0x000000011126ced0: ; ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop rdi=Oop [560]=Oop [600]=Oop [536]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::lanewise@-1 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x000000011126ced0: 168d ffe9 | 71e7 ffff 
 ;; ImplicitNullCheckStub slow case
  0x000000011126ced8: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011126ced8: e863 768d 

  0x000000011126cedc: ; ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [560]=Oop [536]=Oop [600]=Oop rax=Oop }
                      ;*invokevirtual mul {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
                      ;   {external_word}
  0x000000011126cedc: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x000000011126cee8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126cee8: 83e4 f0e8 | 6040 27f8 

  0x000000011126cef0: ;   {metadata({method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126cef0: f449 ba40 | 96b1 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011126cf08: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126cf08: e8b3 168d 

  0x000000011126cf0c: ; ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [560]=Oop [536]=Oop [600]=Oop rax=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::mul@-1 (line 1187)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
  0x000000011126cf0c: ffe9 eae8 

  0x000000011126cf10: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011126cf10: ffff e829 

  0x000000011126cf14: ; ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [536]=Oop [600]=Oop [616]=Oop rax=Oop rbx=Oop }
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
                      ;   {external_word}
  0x000000011126cf14: 768d ff48 | bf69 6bb2 | 0901 0000 | 0048 83e4 

  0x000000011126cf24: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126cf24: f0e8 2640 

  0x000000011126cf28: ;   {metadata({method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126cf28: 27f8 f449 | baf0 8eb1 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011126cf40: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126cf40: ffff e879 

  0x000000011126cf44: ; ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [536]=Oop [600]=Oop [616]=Oop rax=Oop rbx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
  0x000000011126cf44: 168d ffe9 | b8e9 ffff 
 ;; ImplicitNullCheckStub slow case
  0x000000011126cf4c: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011126cf4c: e8ef 758d 

  0x000000011126cf50: ; ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [536]=Oop [616]=Oop [624]=Oop rax=Oop r8=Oop [600]=Oop }
                      ;*invokevirtual mul {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
                      ;   {external_word}
  0x000000011126cf50: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x000000011126cf5c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126cf5c: 83e4 f0e8 | ec3f 27f8 

  0x000000011126cf64: ;   {metadata({method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126cf64: f449 ba40 | 96b1 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011126cf7c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126cf7c: e83f 168d 

  0x000000011126cf80: ; ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [536]=Oop [616]=Oop [624]=Oop rax=Oop r8=Oop [600]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::mul@-1 (line 1187)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
  0x000000011126cf80: ffe9 86ea 

  0x000000011126cf84: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011126cf84: ffff e8b5 

  0x000000011126cf88: ; ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [624]=Oop [632]=Oop rax=Oop rsi=Oop }
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
                      ;   {external_word}
  0x000000011126cf88: 758d ff48 | bf69 6bb2 | 0901 0000 | 0048 83e4 

  0x000000011126cf98: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126cf98: f0e8 b23f 

  0x000000011126cf9c: ;   {metadata({method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011126cf9c: 27f8 f449 | baf0 8eb1 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011126cfb4: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126cfb4: ffff e805 

  0x000000011126cfb8: ; ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [624]=Oop [632]=Oop rax=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011126cfb8: 168d ffe9 | 4ceb ffff 
 ;; CounterOverflowStub slow case
  0x000000011126cfc0: ;   {metadata({method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011126cfc0: 49ba 18fe | 8867 0200 | 0000 4c89 | 5424 0848 | c704 2410 

  0x000000011126cfd4: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126cfd4: 0100 00e8 

  0x000000011126cfd8: ; ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [632]=Oop rax=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)
  0x000000011126cfd8: e415 8dff | e90f ecff 

  0x000000011126cfe0: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011126cfe0: ffe8 5a75 

  0x000000011126cfe4: ; ImmutableOopMap {[528]=Oop [584]=Oop [544]=Oop [576]=Oop rax=Oop }
                      ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@282 (line 52)
                      ;   {external_word}
  0x000000011126cfe4: 8dff 48bf | 696b b209 | 0100 0000 | 4883 e4f0 

  0x000000011126cff4: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126cff4: e857 3f27 

  0x000000011126cff8: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011126cff8: f8f4 e841 

  0x000000011126cffc: ; ImmutableOopMap {[528]=Oop [584]=Oop [544]=Oop [640]=Oop rcx=Oop }
                      ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
                      ;   {external_word}
  0x000000011126cffc: 758d ff48 | bf69 6bb2 | 0901 0000 | 0048 83e4 

  0x000000011126d00c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126d00c: f0e8 3e3f | 27f8 f44c | 8934 2448 | 8954 2408 

  0x000000011126d01c: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011126d01c: e81f 7e8d 

  0x000000011126d020: ; ImmutableOopMap {[584]=Oop rdx=Oop r11=Oop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@313 (line 56)
                      ;   {external_word}
  0x000000011126d020: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x000000011126d02c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126d02c: 83e4 f0e8 | 1c3f 27f8 

  0x000000011126d034: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011126d034: f4e8 0675 

  0x000000011126d038: ; ImmutableOopMap {[584]=Oop rdx=Oop r11=Oop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
                      ;   {external_word}
  0x000000011126d038: 8dff 48bf | 696b b209 | 0100 0000 | 4883 e4f0 

  0x000000011126d048: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126d048: e803 3f27 

  0x000000011126d04c: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011126d04c: f8f4 e8ed 

  0x000000011126d050: ; ImmutableOopMap {[584]=Oop rdx=Oop r11=Oop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
                      ;   {external_word}
  0x000000011126d050: 748d ff48 | bf69 6bb2 | 0901 0000 | 0048 83e4 

  0x000000011126d060: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126d060: f0e8 ea3e | 27f8 f44c | 8934 244c | 895c 2408 

  0x000000011126d070: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011126d070: e8cb 7d8d 

  0x000000011126d074: ; ImmutableOopMap {[584]=Oop rdx=Oop r11=Oop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
                      ;   {external_word}
  0x000000011126d074: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x000000011126d080: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126d080: 83e4 f0e8 | c83e 27f8 

  0x000000011126d088: ;   {metadata({method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011126d088: f449 ba18 | fe88 6702 | 0000 004c | 8954 2408 | 48c7 0424 | 5f01 0000 

  0x000000011126d0a0: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011126d0a0: e81b 158d 

  0x000000011126d0a4: ; ImmutableOopMap {[584]=Oop rdx=Oop r11=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)
  0x000000011126d0a4: ffe9 deed 

  0x000000011126d0a8: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011126d0a8: ffff e891 

  0x000000011126d0ac: ; ImmutableOopMap {[584]=Oop rdx=Oop r11=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@304 (line 55)
                      ;   {external_word}
  0x000000011126d0ac: 748d ff48 | bf69 6bb2 | 0901 0000 | 0048 83e4 

  0x000000011126d0bc: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126d0bc: f0e8 8e3e 

  0x000000011126d0c0: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011126d0c0: 27f8 f4e8 

  0x000000011126d0c4: ; ImmutableOopMap {r13=Oop }
                      ;*putfield slope {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@360 (line 60)
  0x000000011126d0c4: 7874 8dff 

  0x000000011126d0c8: ;   {external_word}
  0x000000011126d0c8: 48bf 696b | b209 0100 | 0000 4883 

  0x000000011126d0d4: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126d0d4: e4f0 e875 | 3e27 f8f4 
 ;; C1SafepointPollStub slow case
  0x000000011126d0dc: ;   {internal_word}
  0x000000011126d0dc: 49ba 1cbf | 2611 0100 | 0000 4d89 | 97e8 0300 

  0x000000011126d0ec: ;   {runtime_call SafepointBlob}
  0x000000011126d0ec: 00e9 2ee1 

  0x000000011126d0f0: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011126d0f0: 98ff e849 

  0x000000011126d0f4: ; ImmutableOopMap {[584]=Oop [544]=Oop [528]=Oop [568]=Oop [560]=Oop [536]=Oop [576]=Oop rax=Oop }
                      ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.util.Preconditions::checkIndex@15 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
                      ;   {external_word}
  0x000000011126d0f4: 748d ff48 | bf69 6bb2 | 0901 0000 | 0048 83e4 

  0x000000011126d104: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126d104: f0e8 463e 

  0x000000011126d108: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011126d108: 27f8 f4e8 

  0x000000011126d10c: ; ImmutableOopMap {[576]=Oop [536]=Oop [528]=Oop [560]=Oop [568]=Oop [544]=Oop [584]=Oop [600]=Oop rax=Oop }
                      ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.util.Preconditions::checkIndex@15 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011126d10c: 3074 8dff 

  0x000000011126d110: ;   {external_word}
  0x000000011126d110: 48bf 696b | b209 0100 | 0000 4883 

  0x000000011126d11c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126d11c: e4f0 e82d | 3e27 f8f4 
 ;; ImplicitNullCheckStub slow case
  0x000000011126d124: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011126d124: e817 748d 

  0x000000011126d128: ; ImmutableOopMap {[384]=Oop [280]=Oop [272]=Oop [288]=Oop [368]=Oop rax=Oop }
                      ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.util.Preconditions::checkIndex@15 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
                      ;   {external_word}
  0x000000011126d128: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x000000011126d134: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126d134: 83e4 f0e8 | 143e 27f8 

  0x000000011126d13c: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011126d13c: f4e8 fe73 

  0x000000011126d140: ; ImmutableOopMap {[392]=Oop [384]=Oop [280]=Oop [272]=Oop [288]=Oop rax=Oop }
                      ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.util.Preconditions::checkIndex@15 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
                      ;   {external_word}
  0x000000011126d140: 8dff 48bf | 696b b209 | 0100 0000 | 4883 e4f0 

  0x000000011126d150: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126d150: e8fb 3d27 

  0x000000011126d154: ;   {metadata(NULL)}
  0x000000011126d154: f8f4 48ba | 0000 0000 | 0000 0000 
 ;; patch data encoded as movl
  0x000000011126d160: b800 0f05 

  0x000000011126d164: ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011126d164: 0ae8 1627 

  0x000000011126d168: ; ImmutableOopMap {}
                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@7 (line 15)
  0x000000011126d168: 8dff e9d1 | eeff ff48 

  0x000000011126d170: ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011126d170: 8bd2 e849 

  0x000000011126d174: ; ImmutableOopMap {}
                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@7 (line 15)
  0x000000011126d174: 698d ffe9 | 1bef ffff | 9090 498b | 8750 0400 | 0049 c787 | 5004 0000 | 0000 0000 | 49c7 8758 
  0x000000011126d194: 0400 0000 | 0000 0048 | 81c4 1003 

  0x000000011126d1a0: ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011126d1a0: 0000 5de9 | 9886 8dff | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 
[Stub Code]
  0x000000011126d1c0: ;   {no_reloc}
  0x000000011126d1c0: 9090 9090 

  0x000000011126d1c4: ;   {static_stub}
  0x000000011126d1c4: 9048 bb00 | 0000 0000 

  0x000000011126d1cc: ;   {runtime_call}
  0x000000011126d1cc: 0000 00e9 | fbff ffff 

  0x000000011126d1d4: ;   {static_stub}
  0x000000011126d1d4: 9048 bb00 | 0000 0000 

  0x000000011126d1dc: ;   {runtime_call}
  0x000000011126d1dc: 0000 00e9 | fbff ffff 

  0x000000011126d1e4: ;   {static_stub}
  0x000000011126d1e4: 9048 bb00 | 0000 0000 

  0x000000011126d1ec: ;   {runtime_call}
  0x000000011126d1ec: 0000 00e9 | fbff ffff 

  0x000000011126d1f4: ;   {static_stub}
  0x000000011126d1f4: 9048 bb00 | 0000 0000 

  0x000000011126d1fc: ;   {runtime_call}
  0x000000011126d1fc: 0000 00e9 | fbff ffff 

  0x000000011126d204: ;   {static_stub}
  0x000000011126d204: 9048 bb00 | 0000 0000 

  0x000000011126d20c: ;   {runtime_call}
  0x000000011126d20c: 0000 00e9 | fbff ffff 

  0x000000011126d214: ;   {static_stub}
  0x000000011126d214: 9048 bb00 | 0000 0000 

  0x000000011126d21c: ;   {runtime_call}
  0x000000011126d21c: 0000 00e9 | fbff ffff 

  0x000000011126d224: ;   {static_stub}
  0x000000011126d224: 9048 bb00 | 0000 0000 

  0x000000011126d22c: ;   {runtime_call}
  0x000000011126d22c: 0000 00e9 | fbff ffff 

  0x000000011126d234: ;   {static_stub}
  0x000000011126d234: 9048 bb00 | 0000 0000 

  0x000000011126d23c: ;   {runtime_call}
  0x000000011126d23c: 0000 00e9 | fbff ffff 

  0x000000011126d244: ;   {static_stub}
  0x000000011126d244: 9048 bb00 | 0000 0000 

  0x000000011126d24c: ;   {runtime_call}
  0x000000011126d24c: 0000 00e9 | fbff ffff 

  0x000000011126d254: ;   {static_stub}
  0x000000011126d254: 9048 bb00 | 0000 0000 

  0x000000011126d25c: ;   {runtime_call}
  0x000000011126d25c: 0000 00e9 | fbff ffff 

  0x000000011126d264: ;   {static_stub}
  0x000000011126d264: 9048 bb00 | 0000 0000 

  0x000000011126d26c: ;   {runtime_call}
  0x000000011126d26c: 0000 00e9 | fbff ffff 

  0x000000011126d274: ;   {static_stub}
  0x000000011126d274: 9048 bb00 | 0000 0000 

  0x000000011126d27c: ;   {runtime_call}
  0x000000011126d27c: 0000 00e9 | fbff ffff 

  0x000000011126d284: ;   {static_stub}
  0x000000011126d284: 9048 bb00 | 0000 0000 

  0x000000011126d28c: ;   {runtime_call}
  0x000000011126d28c: 0000 00e9 | fbff ffff 

  0x000000011126d294: ;   {static_stub}
  0x000000011126d294: 9048 bb00 | 0000 0000 

  0x000000011126d29c: ;   {runtime_call}
  0x000000011126d29c: 0000 00e9 | fbff ffff 

  0x000000011126d2a4: ;   {static_stub}
  0x000000011126d2a4: 9048 bb00 | 0000 0000 

  0x000000011126d2ac: ;   {runtime_call}
  0x000000011126d2ac: 0000 00e9 | fbff ffff 

  0x000000011126d2b4: ;   {static_stub}
  0x000000011126d2b4: 9048 bb00 | 0000 0000 

  0x000000011126d2bc: ;   {runtime_call}
  0x000000011126d2bc: 0000 00e9 | fbff ffff 

  0x000000011126d2c4: ;   {static_stub}
  0x000000011126d2c4: 9048 bb00 | 0000 0000 

  0x000000011126d2cc: ;   {runtime_call}
  0x000000011126d2cc: 0000 00e9 | fbff ffff 

  0x000000011126d2d4: ;   {static_stub}
  0x000000011126d2d4: 9048 bb00 | 0000 0000 

  0x000000011126d2dc: ;   {runtime_call}
  0x000000011126d2dc: 0000 00e9 | fbff ffff 

  0x000000011126d2e4: ;   {static_stub}
  0x000000011126d2e4: 9048 bb00 | 0000 0000 

  0x000000011126d2ec: ;   {runtime_call}
  0x000000011126d2ec: 0000 00e9 | fbff ffff 

  0x000000011126d2f4: ;   {static_stub}
  0x000000011126d2f4: 9048 bb00 | 0000 0000 

  0x000000011126d2fc: ;   {runtime_call}
  0x000000011126d2fc: 0000 00e9 | fbff ffff 

  0x000000011126d304: ;   {static_stub}
  0x000000011126d304: 9048 bb00 | 0000 0000 

  0x000000011126d30c: ;   {runtime_call}
  0x000000011126d30c: 0000 00e9 | fbff ffff 

  0x000000011126d314: ;   {static_stub}
  0x000000011126d314: 9048 bb00 | 0000 0000 

  0x000000011126d31c: ;   {runtime_call}
  0x000000011126d31c: 0000 00e9 | fbff ffff 

  0x000000011126d324: ;   {static_stub}
  0x000000011126d324: 9048 bb00 | 0000 0000 

  0x000000011126d32c: ;   {runtime_call}
  0x000000011126d32c: 0000 00e9 | fbff ffff 

  0x000000011126d334: ;   {static_stub}
  0x000000011126d334: 9048 bb00 | 0000 0000 

  0x000000011126d33c: ;   {runtime_call}
  0x000000011126d33c: 0000 00e9 | fbff ffff 

  0x000000011126d344: ;   {static_stub}
  0x000000011126d344: 9048 bb00 | 0000 0000 

  0x000000011126d34c: ;   {runtime_call}
  0x000000011126d34c: 0000 00e9 | fbff ffff 

  0x000000011126d354: ;   {static_stub}
  0x000000011126d354: 9048 bb00 | 0000 0000 

  0x000000011126d35c: ;   {runtime_call}
  0x000000011126d35c: 0000 00e9 | fbff ffff 

  0x000000011126d364: ;   {static_stub}
  0x000000011126d364: 9048 bb00 | 0000 0000 

  0x000000011126d36c: ;   {runtime_call}
  0x000000011126d36c: 0000 00e9 | fbff ffff 
[Exception Handler]
  0x000000011126d374: 48bb adde | 0000 0000 | 0000 48b9 | adde 0000 | 0000 0000 | 48be adde | 0000 0000 | 0000 48bf 
  0x000000011126d394: adde 0000 | 0000 0000 

  0x000000011126d39c: ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011126d39c: e83f 4d8d 

  0x000000011126d3a0: ;   {external_word}
  0x000000011126d3a0: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x000000011126d3ac: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011126d3ac: 83e4 f0e8 | 9c3b 27f8 

  0x000000011126d3b4: ;   {section_word}
  0x000000011126d3b4: f449 bab5 | d326 1101 | 0000 0041 

  0x000000011126d3c0: ;   {runtime_call DeoptimizationBlob}
  0x000000011126d3c0: 52e9 9ad4 | 98ff f4f4 
[/MachCode]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x000000011126d3c8:   0x000000017e000270 a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x000000017e000270}
  0x000000011126d3d0:   0x000000017e000078 a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
  0x000000011126d3d8:   0x000000017e000128 a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
  0x000000011126d3e0:   0x000000011ff8c550 a 'java/lang/Class'{0x000000011ff8c550} = double
  0x000000011126d3e8:   0x000000017e0000e8 a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e0000e8}
  0x000000011126d3f0:   0x000000017e000000 a 'jdk/incubator/vector/Double256Vector'{0x000000017e000000}
  0x000000011126d3f8:   0x000000017e000210 a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e000210}
  0x000000011126d400:   0x000000011ff58b48 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011ff58b48}
  0x000000011126d408:   0x00000001200a7938 a 'java/lang/Class'{0x00000001200a7938} = 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
  0x000000011126d410:   0x000000011ffc7b70 a 'java/lang/Class'{0x000000011ffc7b70} = 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x000000011126d418:   0x000000026788fe18 {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
  0x000000011126d420:   0x0000000267b3fa08 {method} {0x0000000267b3fa08} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
  0x000000011126d428:   0x0000000267b96588 {method} {0x0000000267b96588} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x000000011126d430:   0x0000000267b17448 {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x000000011126d438:   0x0000000267b1ded0 {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x000000011126d440:   0x0000000267b96280 {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x000000011126d448:   0x000000011015f0e0 {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
  0x000000011126d450:   0x00000001103f3408 {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
  0x000000011126d458:   0x0000000267b39e30 {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
  0x000000011126d460:   0x0000000267b40508 {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
  0x000000011126d468:   0x0000000267b710c0 {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
  0x000000011126d470:   0x0000000267b1f228 {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x000000011126d478:   0x0000000267b18ef0 {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x000000011126d480:   0x0000000267b19378 {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x000000011126d488:   0x0000000267b181a0 {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x000000011126d490:   0x0000000267b19640 {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x000000011126d498:   0x0000000267b17270 {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
  0x000000011126d4a0:   0x000000011040aa78 {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
  0x000000011126d4a8:   0x0000000110409a78 {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
  0x000000011126d4b0:   0x0000000267b6d620 {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
  0x000000011126d4b8:   0x0000000267b393b0 {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
  0x000000011126d4c0:   0x0000000267b1fe80 {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00000001112682ff offset=ffffffff bits=0):
PcDesc(pc=0x0000000111268374 offset=74 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@0 (line 15)
PcDesc(pc=0x0000000111268377 offset=77 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@1 (line 15)
PcDesc(pc=0x0000000111268381 offset=81 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@3 (line 15)
PcDesc(pc=0x00000001112683c0 offset=c0 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@4 (line 15)
PcDesc(pc=0x00000001112684d5 offset=1d5 bits=0):   jdk.incubator.vector.VectorIntrinsics::roundDown@5 (line 106)
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
PcDesc(pc=0x0000000111268790 offset=490 bits=0):   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
PcDesc(pc=0x00000001112687bc offset=4bc bits=0):   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126889c offset=59c bits=0):   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
PcDesc(pc=0x0000000111268b10 offset=810 bits=0):   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
PcDesc(pc=0x0000000111268b24 offset=824 bits=0):   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: stack[352],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111268c06 offset=906 bits=0):   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
PcDesc(pc=0x0000000111268c13 offset=913 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x0000000111268c66 offset=966 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@59 (line 24)
PcDesc(pc=0x0000000111268c9f offset=99f bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@60 (line 24)
PcDesc(pc=0x0000000111268e71 offset=b71 bits=0):   jdk.internal.util.Preconditions::checkIndex@1 (line 265)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x0000000111268ea9 offset=ba9 bits=0):   jdk.internal.util.Preconditions::checkIndex@6 (line 265)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x0000000111268f44 offset=c44 bits=0):   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x0000000111269255 offset=f55 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x0000000111269264 offset=f64 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
PcDesc(pc=0x0000000111269344 offset=1044 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x000000011126934f offset=104f bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x0000000111269429 offset=1129 bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x000000011126943c offset=113c bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126960d offset=130d bits=0):   jdk.internal.util.Preconditions::checkIndex@1 (line 265)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x0000000111269645 offset=1345 bits=0):   jdk.internal.util.Preconditions::checkIndex@6 (line 265)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x00000001112696d6 offset=13d6 bits=0):   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x00000001112699a2 offset=16a2 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x00000001112699b4 offset=16b4 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: stack[392],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
PcDesc(pc=0x0000000111269a94 offset=1794 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x0000000111269a9f offset=179f bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x0000000111269b79 offset=1879 bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x0000000111269b8c offset=188c bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: stack[392],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111269bbe offset=18be bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
PcDesc(pc=0x0000000111269bc5 offset=18c5 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)  reexecute=true
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rdx [4],int
    - l8: 0
    - l9: stack[656],double
    - l10: stack[392],oop
    - l11: reg rax [0],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111269bfb offset=18fb bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
PcDesc(pc=0x0000000111269cad offset=19ad bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
PcDesc(pc=0x0000000111269ccc offset=19cc bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: empty
    - l4: empty
    - l5: 0
    - l6: 0
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: 0
PcDesc(pc=0x0000000111269d7a offset=1a7a bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
PcDesc(pc=0x0000000111269d9c offset=1a9c bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: stack[664],double
    - l5: empty
    - l6: empty
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: 0
PcDesc(pc=0x0000000111269dc9 offset=1ac9 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@130 (line 32)
PcDesc(pc=0x0000000111269de2 offset=1ae2 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@141 (line 33)
PcDesc(pc=0x0000000111269df8 offset=1af8 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@149 (line 34)
PcDesc(pc=0x0000000111269e2b offset=1b2b bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)
PcDesc(pc=0x0000000111269e32 offset=1b32 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)  reexecute=true
   Locals
    - l0: stack[288],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: reg xmm2 [80],double
    - l5: 0
    - l6: reg xmm1 [64],double
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111269e4d offset=1b4d bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)
PcDesc(pc=0x0000000111269e8a offset=1b8a bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@134 (line 32)
PcDesc(pc=0x000000011126a132 offset=1e32 bits=0):   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
PcDesc(pc=0x000000011126a17c offset=1e7c bits=0):   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126a25c offset=1f5c bits=0):   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
PcDesc(pc=0x000000011126a4cf offset=21cf bits=0):   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
PcDesc(pc=0x000000011126a4dc offset=21dc bits=0):   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[456],oop
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126a5bc offset=22bc bits=0):   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
PcDesc(pc=0x000000011126a615 offset=2315 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011126a69a offset=239a bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@204 (line 46)
PcDesc(pc=0x000000011126a6d4 offset=23d4 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@205 (line 46)
PcDesc(pc=0x000000011126a7af offset=24af bits=0):   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011126a8a2 offset=25a2 bits=0):   jdk.internal.util.Preconditions::checkIndex@1 (line 265)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011126a8dc offset=25dc bits=0):   jdk.internal.util.Preconditions::checkIndex@6 (line 265)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011126a975 offset=2675 bits=0):   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011126ac8f offset=298f bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011126ac9c offset=299c bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x000000011126ad7c offset=2a7c bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011126ad7f offset=2a7f bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
PcDesc(pc=0x000000011126ae95 offset=2b95 bits=0):   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
PcDesc(pc=0x000000011126aeac offset=2bac bits=0):   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: stack[592],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x000000017e000270}
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x000000011126af56 offset=2c56 bits=0):   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
PcDesc(pc=0x000000011126af6c offset=2c6c bits=0):   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x000000011126b051 offset=2d51 bits=0):   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x000000011126b147 offset=2e47 bits=0):   jdk.internal.util.Preconditions::checkIndex@1 (line 265)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x000000011126b180 offset=2e80 bits=0):   jdk.internal.util.Preconditions::checkIndex@6 (line 265)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x000000011126b211 offset=2f11 bits=0):   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x000000011126b4d4 offset=31d4 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x000000011126b4ec offset=31ec bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
PcDesc(pc=0x000000011126b5cc offset=32cc bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x000000011126b5cf offset=32cf bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
PcDesc(pc=0x000000011126b6e5 offset=33e5 bits=0):   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
PcDesc(pc=0x000000011126b6fc offset=33fc bits=0):   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: stack[608],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x000000017e000270}
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
PcDesc(pc=0x000000011126b7a6 offset=34a6 bits=0):   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
PcDesc(pc=0x000000011126b7bc offset=34bc bits=0):   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
PcDesc(pc=0x000000011126b7bf offset=34bf bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
PcDesc(pc=0x000000011126b8a4 offset=35a4 bits=0):   jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
PcDesc(pc=0x000000011126b8bc offset=35bc bits=0):   jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
PcDesc(pc=0x000000011126b8c7 offset=35c7 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
PcDesc(pc=0x000000011126b9a7 offset=36a7 bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
PcDesc(pc=0x000000011126b9c4 offset=36c4 bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
PcDesc(pc=0x000000011126b9cf offset=36cf bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
PcDesc(pc=0x000000011126baaa offset=37aa bits=0):   jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
PcDesc(pc=0x000000011126bac4 offset=37c4 bits=0):   jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[632],oop
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[536],oop
PcDesc(pc=0x000000011126bacf offset=37cf bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011126bba7 offset=38a7 bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011126bbbc offset=38bc bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[632],oop
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126bbf0 offset=38f0 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)
PcDesc(pc=0x000000011126bbf7 offset=38f7 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)  reexecute=true
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[632],oop
    - l21: reg rax [0],oop
    - l22: empty
PcDesc(pc=0x000000011126bc3b offset=393b bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)
PcDesc(pc=0x000000011126bcf6 offset=39f6 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@282 (line 52)
PcDesc(pc=0x000000011126bd14 offset=3a14 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@282 (line 52)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: empty
    - l17: empty
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[752],double
PcDesc(pc=0x000000011126bdc3 offset=3ac3 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011126bddc offset=3adc bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[768],double
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[760],double
PcDesc(pc=0x000000011126be0b offset=3b0b bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@301 (line 55)
PcDesc(pc=0x000000011126be23 offset=3b23 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@313 (line 56)
PcDesc(pc=0x000000011126be4c offset=3b4c bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
PcDesc(pc=0x000000011126be88 offset=3b88 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)
PcDesc(pc=0x000000011126be8f offset=3b8f bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)  reexecute=true
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: reg xmm3 [96],double
    - l18: 0
    - l19: reg xmm1 [64],double
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126beaa offset=3baa bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)
PcDesc(pc=0x000000011126bead offset=3bad bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@304 (line 55)
PcDesc(pc=0x000000011126bee6 offset=3be6 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@305 (line 55)
PcDesc(pc=0x000000011126bef8 offset=3bf8 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@360 (line 60)
PcDesc(pc=0x000000011126bf14 offset=3c14 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@374 (line 61)
PcDesc(pc=0x000000011126bf2a offset=3c2a bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@377 (line 62)
PcDesc(pc=0x000000011126bf69 offset=3c69 bits=0):   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011126bf74 offset=3c74 bits=0):   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[528],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x000000011126bf7c offset=3c7c bits=0):   jdk.internal.util.Preconditions::checkIndex@15 (line 266)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011126bfa6 offset=3ca6 bits=0):   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x000000011126bfb4 offset=3cb4 bits=0):   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[544],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
PcDesc(pc=0x000000011126bfbc offset=3cbc bits=0):   jdk.internal.util.Preconditions::checkIndex@15 (line 266)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x000000011126bfe9 offset=3ce9 bits=0):   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x000000011126bff4 offset=3cf4 bits=0):   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[272],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
PcDesc(pc=0x000000011126bffc offset=3cfc bits=0):   jdk.internal.util.Preconditions::checkIndex@15 (line 266)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x000000011126c021 offset=3d21 bits=0):   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x000000011126c034 offset=3d34 bits=0):   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[280],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: stack[392],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
PcDesc(pc=0x000000011126c03c offset=3d3c bits=0):   jdk.internal.util.Preconditions::checkIndex@15 (line 266)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x000000011126c097 offset=3d97 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@7 (line 15)
PcDesc(pc=0x000000011126c0b9 offset=3db9 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@13 (line 15)
PcDesc(pc=0x000000011126c0cc offset=3dcc bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@13 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[648],oop
PcDesc(pc=0x000000011126c0d9 offset=3dd9 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@16 (line 15)
PcDesc(pc=0x000000011126c29f offset=3f9f bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@-1 (line 15)
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126c2a9 offset=3fa9 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@1 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126c2c2 offset=3fc2 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@3 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126c2f2 offset=3ff2 bits=0):   jdk.incubator.vector.AbstractSpecies::loopBound@-1 (line 203)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: reg rbx [6],int
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126c313 offset=4013 bits=0):   jdk.incubator.vector.VectorIntrinsics::roundDown@-1 (line 106)
   Locals
    - l0: reg rbx [6],int
    - l1: 4
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126c334 offset=4034 bits=0):   jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126c355 offset=4055 bits=0):   jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
   Locals
    - l0: 0
    - l1: 0
   jdk.incubator.vector.DoubleVector::zero@19 (line 437)
   Locals
    - l0: empty
    - l1: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126c376 offset=4076 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e0000e8}
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126c397 offset=4097 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e0000e8}
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126c3a5 offset=40a5 bits=0):   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126c3d5 offset=40d5 bits=0):   jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: reg rbx [6],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126c3f6 offset=40f6 bits=0):   jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
   Locals
    - l0: 0
    - l1: 0
   jdk.incubator.vector.DoubleVector::zero@19 (line 437)
   Locals
    - l0: empty
    - l1: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: reg rbx [6],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126c417 offset=4117 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e0000e8}
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: reg rbx [6],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126c438 offset=4138 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e0000e8}
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: reg rbx [6],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126c446 offset=4146 bits=0):   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: stack[352],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126c476 offset=4176 bits=0):   jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: reg rdx [4],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
PcDesc(pc=0x000000011126c497 offset=4197 bits=0):   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
   Locals
    - l0: reg rax [0],int
    - l1: 4
    - l2: reg rbx [6],int
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: reg rdx [4],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
PcDesc(pc=0x000000011126c4b8 offset=41b8 bits=0):   java.util.Objects::checkIndex@-1 (line 359)
   Locals
    - l0: reg rax [0],int
    - l1: reg rdi [14],int
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: reg rdx [4],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
PcDesc(pc=0x000000011126c4d9 offset=41d9 bits=0):   jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
   Locals
    - l0: reg rax [0],int
    - l1: reg rdi [14],int
    - l2: NULL
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: reg rdx [4],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
PcDesc(pc=0x000000011126c4fa offset=41fa bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: reg rdx [4],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
PcDesc(pc=0x000000011126c51b offset=421b bits=0):   jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: empty
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: reg rdx [4],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
PcDesc(pc=0x000000011126c53c offset=423c bits=0):   jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x000000017e000000}
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: reg rdx [4],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[656],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
PcDesc(pc=0x000000011126c55d offset=425d bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x000000017e000000}
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: reg rdx [4],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[656],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
PcDesc(pc=0x000000011126c57e offset=427e bits=0):   jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: reg rdx [4],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[656],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
PcDesc(pc=0x000000011126c59f offset=429f bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: reg rdx [4],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[656],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
PcDesc(pc=0x000000011126c5c0 offset=42c0 bits=0):   jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
   Locals
    - l0: empty
    - l1: reg rax [0],int
   jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: reg rdx [4],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[656],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
PcDesc(pc=0x000000011126c5e1 offset=42e1 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e000210}
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
    - @4: 0
    - @5: reg rsi [12],long
    - @6: reg rdx [4],oop
    - @7: reg rax [0],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: reg rdx [4],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[656],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
PcDesc(pc=0x000000011126c602 offset=4302 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e000210}
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
    - @4: 0
    - @5: reg rsi [12],long
    - @6: reg rdx [4],oop
    - @7: reg rax [0],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: reg rdx [4],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[656],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
PcDesc(pc=0x000000011126c610 offset=4310 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
PcDesc(pc=0x000000011126c629 offset=4329 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126c659 offset=4359 bits=0):   jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
   Locals
    - l0: reg rbx [6],oop
    - l1: reg rcx [2],oop
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126c67a offset=437a bits=0):   jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[280],oop
    - l2: stack[376]
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
PcDesc(pc=0x000000011126c69b offset=439b bits=0):   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
   Locals
    - l0: stack[376]
    - l1: 4
    - l2: stack[348]
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[280],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
PcDesc(pc=0x000000011126c6bc offset=43bc bits=0):   java.util.Objects::checkIndex@-1 (line 359)
   Locals
    - l0: reg rbx [6],int
    - l1: reg rdi [14],int
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[280],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[656],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
PcDesc(pc=0x000000011126c6dd offset=43dd bits=0):   jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
   Locals
    - l0: reg rbx [6],int
    - l1: reg rdi [14],int
    - l2: NULL
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[280],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[656],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
PcDesc(pc=0x000000011126c6fe offset=43fe bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: stack[280],oop
    - l2: reg rbx [6],int
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[656],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
PcDesc(pc=0x000000011126c71f offset=441f bits=0):   jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: empty
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: stack[280],oop
    - l2: reg rbx [6],int
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[656],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
PcDesc(pc=0x000000011126c740 offset=4440 bits=0):   jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x000000017e000000}
    - l1: stack[280],oop
    - l2: reg rbx [6],int
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[656],double
    - l10: stack[392],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
PcDesc(pc=0x000000011126c761 offset=4461 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x000000017e000000}
    - l1: stack[280],oop
    - l2: reg rbx [6],int
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[656],double
    - l10: stack[392],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
PcDesc(pc=0x000000011126c782 offset=4482 bits=0):   jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
   Locals
    - l0: empty
    - l1: stack[280],oop
    - l2: reg rbx [6],int
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[656],double
    - l10: stack[392],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
PcDesc(pc=0x000000011126c7a3 offset=44a3 bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
   Locals
    - l0: empty
    - l1: stack[280],oop
    - l2: reg rbx [6],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[656],double
    - l10: stack[392],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
PcDesc(pc=0x000000011126c7c4 offset=44c4 bits=0):   jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
   Locals
    - l0: empty
    - l1: reg rbx [6],int
   jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
   Locals
    - l0: empty
    - l1: stack[280],oop
    - l2: reg rbx [6],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: stack[280],oop
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[656],double
    - l10: stack[392],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
PcDesc(pc=0x000000011126c7e5 offset=44e5 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e000210}
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: stack[280],oop
    - @4: 0
    - @5: reg r9 [18],long
    - @6: stack[280],oop
    - @7: reg rbx [6],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[656],double
    - l10: stack[392],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
PcDesc(pc=0x000000011126c806 offset=4506 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e000210}
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: stack[280],oop
    - @4: 0
    - @5: reg r9 [18],long
    - @6: stack[280],oop
    - @7: reg rbx [6],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[656],double
    - l10: stack[392],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
PcDesc(pc=0x000000011126c814 offset=4514 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: stack[392],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
PcDesc(pc=0x000000011126c82d offset=452d bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126c85d offset=455d bits=0):   jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
   Locals
    - l0: reg rax [0],oop
    - l1: reg rcx [2],oop
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: stack[392],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126c87e offset=457e bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)  reexecute=true
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rdx [4],int
    - l8: 0
    - l9: stack[656],double
    - l10: stack[392],oop
    - l11: reg rax [0],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126c888 offset=4588 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126c8a1 offset=45a1 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126c8c3 offset=45c3 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@141 (line 33)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126c8e5 offset=45e5 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@149 (line 34)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126c915 offset=4615 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)  reexecute=true
   Locals
    - l0: stack[288],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: reg xmm2 [80],double
    - l5: 0
    - l6: reg xmm1 [64],double
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126c936 offset=4636 bits=0):   jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: 0
    - l13: reg xmm1 [64],double
    - l14: 0
    - l15: reg xmm0 [48],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126c957 offset=4657 bits=0):   jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
   Locals
    - l0: 0
    - l1: 0
   jdk.incubator.vector.DoubleVector::zero@19 (line 437)
   Locals
    - l0: empty
    - l1: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: 0
    - l13: reg xmm1 [64],double
    - l14: 0
    - l15: reg xmm0 [48],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126c978 offset=4678 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e0000e8}
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: 0
    - l13: reg xmm1 [64],double
    - l14: 0
    - l15: reg xmm0 [48],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126c999 offset=4699 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e0000e8}
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: 0
    - l13: reg xmm1 [64],double
    - l14: 0
    - l15: reg xmm0 [48],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126c9a7 offset=46a7 bits=0):   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126c9d7 offset=46d7 bits=0):   jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: reg rbx [6],oop
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126c9f8 offset=46f8 bits=0):   jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
   Locals
    - l0: 0
    - l1: 0
   jdk.incubator.vector.DoubleVector::zero@19 (line 437)
   Locals
    - l0: empty
    - l1: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: reg rbx [6],oop
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126ca19 offset=4719 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e0000e8}
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: reg rbx [6],oop
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126ca3a offset=473a bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e0000e8}
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: reg rbx [6],oop
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126ca48 offset=4748 bits=0):   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[456],oop
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126ca78 offset=4778 bits=0):   jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: reg rdx [4],oop
    - l2: reg r14 [28],int
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: reg xmm2 [80],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x000000011126ca82 offset=4782 bits=0):   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: reg xmm2 [80],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x000000011126cab2 offset=47b2 bits=0):   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
   Locals
    - l0: reg r14 [28],int
    - l1: 4
    - l2: reg r8 [16],int
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: reg xmm2 [80],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x000000011126cad3 offset=47d3 bits=0):   java.util.Objects::checkIndex@-1 (line 359)
   Locals
    - l0: reg r14 [28],int
    - l1: reg r8 [16],int
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: reg xmm2 [80],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x000000011126caf4 offset=47f4 bits=0):   jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
   Locals
    - l0: reg r14 [28],int
    - l1: reg r8 [16],int
    - l2: NULL
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: reg xmm2 [80],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x000000011126cb15 offset=4815 bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg r14 [28],int
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: reg xmm2 [80],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x000000011126cb36 offset=4836 bits=0):   jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: empty
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg r14 [28],int
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: reg xmm2 [80],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x000000011126cb57 offset=4857 bits=0):   jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x000000017e000000}
    - l1: reg rdx [4],oop
    - l2: reg r14 [28],int
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x000000011126cb78 offset=4878 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x000000017e000000}
    - l1: reg rdx [4],oop
    - l2: reg r14 [28],int
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x000000011126cb99 offset=4899 bits=0):   jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg r14 [28],int
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x000000011126cbba offset=48ba bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg r14 [28],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x000000011126cbdb offset=48db bits=0):   jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
   Locals
    - l0: empty
    - l1: reg r14 [28],int
   jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg r14 [28],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x000000011126cbfc offset=48fc bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e000210}
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
    - @4: 0
    - @5: reg r8 [16],long
    - @6: reg rdx [4],oop
    - @7: reg r14 [28],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x000000011126cc1d offset=491d bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e000210}
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
    - @4: 0
    - @5: reg r8 [16],long
    - @6: reg rdx [4],oop
    - @7: reg r14 [28],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x000000011126cc2b offset=492b bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x000000011126cc44 offset=4944 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126cc74 offset=4974 bits=0):   jdk.incubator.vector.DoubleVector::sub@-1 (line 1138)
   Locals
    - l0: reg rdi [14],oop
    - l1: 0
    - l2: stack[728],double
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x000000011126cc95 offset=4995 bits=0):   jdk.incubator.vector.DoubleVector::lanewise@-1 (line 714)
   Locals
    - l0: reg rdi [14],oop
    - l1: a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x000000017e000270}
    - l2: 0
    - l3: stack[728],double
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x000000011126ccb6 offset=49b6 bits=0):   jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[544],oop
    - l2: stack[552]
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[560],oop
PcDesc(pc=0x000000011126ccc0 offset=49c0 bits=0):   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: reg r11 [22],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[560],oop
PcDesc(pc=0x000000011126ccf0 offset=49f0 bits=0):   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
   Locals
    - l0: stack[552]
    - l1: 4
    - l2: reg rsi [12],int
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: reg r11 [22],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: reg r11 [22],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[560],oop
PcDesc(pc=0x000000011126cd11 offset=4a11 bits=0):   java.util.Objects::checkIndex@-1 (line 359)
   Locals
    - l0: reg r14 [28],int
    - l1: reg rdi [14],int
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: reg r11 [22],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: reg r11 [22],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[560],oop
PcDesc(pc=0x000000011126cd32 offset=4a32 bits=0):   jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
   Locals
    - l0: reg r14 [28],int
    - l1: reg rdi [14],int
    - l2: NULL
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: reg r11 [22],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: reg r11 [22],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[560],oop
PcDesc(pc=0x000000011126cd53 offset=4a53 bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg r11 [22],oop
    - l2: reg r14 [28],int
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: reg r11 [22],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[560],oop
PcDesc(pc=0x000000011126cd74 offset=4a74 bits=0):   jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: empty
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg r11 [22],oop
    - l2: reg r14 [28],int
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: reg r11 [22],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[560],oop
PcDesc(pc=0x000000011126cd95 offset=4a95 bits=0):   jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x000000017e000000}
    - l1: reg r11 [22],oop
    - l2: reg r14 [28],int
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: reg r11 [22],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
PcDesc(pc=0x000000011126cdb6 offset=4ab6 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x000000017e000000}
    - l1: reg r11 [22],oop
    - l2: reg r14 [28],int
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: reg r11 [22],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
PcDesc(pc=0x000000011126cdd7 offset=4ad7 bits=0):   jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
   Locals
    - l0: empty
    - l1: reg r11 [22],oop
    - l2: reg r14 [28],int
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: reg r11 [22],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
PcDesc(pc=0x000000011126cdf8 offset=4af8 bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
   Locals
    - l0: empty
    - l1: reg r11 [22],oop
    - l2: reg r14 [28],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: reg r11 [22],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
PcDesc(pc=0x000000011126ce19 offset=4b19 bits=0):   jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
   Locals
    - l0: empty
    - l1: reg r14 [28],int
   jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
   Locals
    - l0: empty
    - l1: reg r11 [22],oop
    - l2: reg r14 [28],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg r11 [22],oop
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: reg r11 [22],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
PcDesc(pc=0x000000011126ce3a offset=4b3a bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e000210}
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg r11 [22],oop
    - @4: 0
    - @5: reg r9 [18],long
    - @6: reg r11 [22],oop
    - @7: reg r14 [28],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: reg r11 [22],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
PcDesc(pc=0x000000011126ce5b offset=4b5b bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e000210}
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg r11 [22],oop
    - @4: 0
    - @5: reg r9 [18],long
    - @6: reg r11 [22],oop
    - @7: reg r14 [28],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: reg r11 [22],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
PcDesc(pc=0x000000011126ce69 offset=4b69 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
PcDesc(pc=0x000000011126ce82 offset=4b82 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126ceb2 offset=4bb2 bits=0):   jdk.incubator.vector.DoubleVector::sub@-1 (line 1138)
   Locals
    - l0: reg rdi [14],oop
    - l1: 0
    - l2: stack[736],double
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
PcDesc(pc=0x000000011126ced3 offset=4bd3 bits=0):   jdk.incubator.vector.DoubleVector::lanewise@-1 (line 714)
   Locals
    - l0: reg rdi [14],oop
    - l1: a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x000000017e000270}
    - l2: 0
    - l3: stack[736],double
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
PcDesc(pc=0x000000011126cedd offset=4bdd bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126cf0d offset=4c0d bits=0):   jdk.incubator.vector.DoubleVector::mul@-1 (line 1187)
   Locals
    - l0: reg rax [0],oop
    - l1: stack[600],oop
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
PcDesc(pc=0x000000011126cf17 offset=4c17 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126cf47 offset=4c47 bits=0):   jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
   Locals
    - l0: reg rbx [6],oop
    - l1: reg rax [0],oop
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
PcDesc(pc=0x000000011126cf51 offset=4c51 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126cf81 offset=4c81 bits=0):   jdk.incubator.vector.DoubleVector::mul@-1 (line 1187)
   Locals
    - l0: reg r8 [16],oop
    - l1: reg r8 [16],oop
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: reg rax [0],oop
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[536],oop
PcDesc(pc=0x000000011126cf8b offset=4c8b bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126cfbb offset=4cbb bits=0):   jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rax [0],oop
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[632],oop
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126cfdc offset=4cdc bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)  reexecute=true
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[632],oop
    - l21: reg rax [0],oop
    - l22: empty
PcDesc(pc=0x000000011126cfe6 offset=4ce6 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@282 (line 52)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126cfff offset=4cff bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126d021 offset=4d21 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@313 (line 56)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126d03a offset=4d3a bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126d053 offset=4d53 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126d075 offset=4d75 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126d0a5 offset=4da5 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)  reexecute=true
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: reg xmm3 [96],double
    - l18: 0
    - l19: reg xmm1 [64],double
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126d0af offset=4daf bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@304 (line 55)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126d0c8 offset=4dc8 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@360 (line 60)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126d0f7 offset=4df7 bits=1):   jdk.internal.util.Preconditions::checkIndex@15 (line 266)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[528],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
PcDesc(pc=0x000000011126d110 offset=4e10 bits=1):   jdk.internal.util.Preconditions::checkIndex@15 (line 266)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[544],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
PcDesc(pc=0x000000011126d129 offset=4e29 bits=1):   jdk.internal.util.Preconditions::checkIndex@15 (line 266)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[272],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
PcDesc(pc=0x000000011126d142 offset=4e42 bits=1):   jdk.internal.util.Preconditions::checkIndex@15 (line 266)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[280],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: stack[392],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
PcDesc(pc=0x000000011126d16a offset=4e6a bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@7 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126d177 offset=4e77 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@7 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011126d3e9 offset=50e9 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 154 OopMaps

ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [304]=Oop [336]=Oop [328]=Oop [320]=Oop [312]=Oop } pc offsets: 1212 
ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [352]=Oop } pc offsets: 2084 
ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop [368]=Oop } pc offsets: 3940 
ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop } pc offsets: 4412 
ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop [392]=Oop } pc offsets: 5812 
ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [392]=Oop } pc offsets: 6284 
ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [392]=Oop rax=Oop } pc offsets: 6341 
ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [400]=Oop [384]=Oop [368]=Oop } pc offsets: 6604 
ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [368]=Oop [384]=Oop } pc offsets: 6812 
ImmutableOopMap {[288]=Oop [368]=Oop [384]=Oop rdx=Oop [272]=Oop rcx=Oop [280]=Oop } pc offsets: 6962 
ImmutableOopMap {[288]=Oop [368]=Oop [384]=Oop [280]=Oop [272]=Oop [424]=Oop [408]=Oop [416]=Oop [440]=Oop [432]=Oop } pc offsets: 7804 
ImmutableOopMap {[288]=Oop [368]=Oop [384]=Oop [280]=Oop [272]=Oop [456]=Oop } pc offsets: 8668 
ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [544]=Oop [584]=Oop [576]=Oop } pc offsets: 10652 
ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop [592]=Oop [544]=Oop } pc offsets: 11180 
ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop } pc offsets: 11372 
ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [600]=Oop } pc offsets: 12780 
ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [608]=Oop [560]=Oop [536]=Oop [600]=Oop } pc offsets: 13308 
ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [560]=Oop [536]=Oop [600]=Oop } pc offsets: 13500 
ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [560]=Oop [536]=Oop [600]=Oop [616]=Oop } pc offsets: 13756 
ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [536]=Oop [600]=Oop [616]=Oop [624]=Oop } pc offsets: 14020 
ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [536]=Oop [624]=Oop [632]=Oop } pc offsets: 14276 
ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [632]=Oop } pc offsets: 14524 
ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [632]=Oop rax=Oop } pc offsets: 14583 
ImmutableOopMap {[528]=Oop [584]=Oop [544]=Oop [640]=Oop [576]=Oop } pc offsets: 14868 
ImmutableOopMap {[528]=Oop [584]=Oop [544]=Oop } pc offsets: 15068 
ImmutableOopMap {[584]=Oop rdx=Oop r11=Oop } pc offsets: 15247 
ImmutableOopMap {[584]=Oop [544]=Oop [528]=Oop [568]=Oop [560]=Oop [536]=Oop [576]=Oop } pc offsets: 15476 
ImmutableOopMap {[576]=Oop [536]=Oop [528]=Oop [560]=Oop [568]=Oop [544]=Oop [584]=Oop [600]=Oop } pc offsets: 15540 
ImmutableOopMap {[384]=Oop [280]=Oop [272]=Oop [288]=Oop [368]=Oop } pc offsets: 15604 
ImmutableOopMap {[392]=Oop [384]=Oop [280]=Oop [272]=Oop [288]=Oop } pc offsets: 15668 
ImmutableOopMap {[648]=Oop } pc offsets: 15820 
ImmutableOopMap {rsi=Oop [288]=Oop rdx=Oop [272]=Oop rcx=Oop [280]=Oop } pc offsets: 16287 16297 16322 16370 16403 
ImmutableOopMap {[272]=Oop [288]=Oop [280]=Oop } pc offsets: 16436 
ImmutableOopMap {[272]=Oop [288]=Oop [280]=Oop r11=Oop } pc offsets: 16469 
ImmutableOopMap {[272]=Oop [288]=Oop [280]=Oop r11=Oop r13=Oop } pc offsets: 16502 16535 
ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [304]=Oop [336]=Oop [328]=Oop [320]=Oop [312]=Oop } pc offsets: 16549 
ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [304]=Oop [336]=Oop [328]=Oop [320]=Oop [312]=Oop rbx=Oop } pc offsets: 16597 16630 
ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [304]=Oop [336]=Oop [328]=Oop [312]=Oop rbx=Oop r13=Oop } pc offsets: 16663 
ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [304]=Oop [336]=Oop [328]=Oop [312]=Oop rbx=Oop } pc offsets: 16696 
ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [352]=Oop } pc offsets: 16710 
ImmutableOopMap {[288]=Oop rdx=Oop [272]=Oop [368]=Oop [384]=Oop [280]=Oop } pc offsets: 16758 16791 16824 16857 
ImmutableOopMap {[288]=Oop rdx=Oop [272]=Oop [368]=Oop [384]=Oop [280]=Oop rsi=Oop } pc offsets: 16890 
ImmutableOopMap {[288]=Oop rdx=Oop [272]=Oop [368]=Oop [384]=Oop [280]=Oop } pc offsets: 16923 
ImmutableOopMap {[288]=Oop [384]=Oop [280]=Oop [368]=Oop rdx=Oop [272]=Oop rsi=Oop } pc offsets: 16956 16989 
ImmutableOopMap {[288]=Oop [384]=Oop [280]=Oop [368]=Oop rdx=Oop [272]=Oop } pc offsets: 17022 
ImmutableOopMap {[288]=Oop [384]=Oop [280]=Oop [368]=Oop rdx=Oop [272]=Oop rsi=Oop } pc offsets: 17055 
ImmutableOopMap {[288]=Oop [384]=Oop [280]=Oop [368]=Oop rdx=Oop [272]=Oop } pc offsets: 17088 
ImmutableOopMap {[288]=Oop [384]=Oop [368]=Oop rdx=Oop [272]=Oop [280]=Oop r8=Oop } pc offsets: 17121 
ImmutableOopMap {[288]=Oop [384]=Oop [368]=Oop rdx=Oop [272]=Oop [280]=Oop } pc offsets: 17154 
ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop [368]=Oop } pc offsets: 17168 
ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop rcx=Oop rbx=Oop } pc offsets: 17193 17241 
ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop rax=Oop [392]=Oop } pc offsets: 17274 17307 17340 17373 
ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop rax=Oop [392]=Oop rsi=Oop } pc offsets: 17406 
ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop rax=Oop [392]=Oop } pc offsets: 17439 
ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop [392]=Oop rsi=Oop } pc offsets: 17472 17505 
ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop [392]=Oop } pc offsets: 17538 
ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop [392]=Oop rsi=Oop } pc offsets: 17571 
ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop [392]=Oop } pc offsets: 17604 
ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop [392]=Oop rdx=Oop } pc offsets: 17637 
ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [384]=Oop [392]=Oop } pc offsets: 17670 17684 
ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [392]=Oop rcx=Oop rax=Oop } pc offsets: 17709 17757 
ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [392]=Oop rax=Oop } pc offsets: 17790 
ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop rbx=Oop [384]=Oop } pc offsets: 17800 
ImmutableOopMap {[288]=Oop [272]=Oop [280]=Oop [400]=Oop [368]=Oop rcx=Oop } pc offsets: 17825 
ImmutableOopMap {[288]=Oop [368]=Oop [384]=Oop rdx=Oop [272]=Oop rcx=Oop [280]=Oop } pc offsets: 17859 17893 17941 
ImmutableOopMap {[288]=Oop [368]=Oop [384]=Oop [280]=Oop [272]=Oop } pc offsets: 17974 
ImmutableOopMap {[288]=Oop [368]=Oop [384]=Oop [280]=Oop [272]=Oop rbx=Oop } pc offsets: 18007 
ImmutableOopMap {[288]=Oop [368]=Oop [384]=Oop [280]=Oop [272]=Oop rbx=Oop rax=Oop } pc offsets: 18040 18073 
ImmutableOopMap {[288]=Oop [368]=Oop [384]=Oop [280]=Oop [272]=Oop [424]=Oop [408]=Oop [416]=Oop [440]=Oop [432]=Oop } pc offsets: 18087 
ImmutableOopMap {[288]=Oop [368]=Oop [384]=Oop [280]=Oop [272]=Oop [424]=Oop [408]=Oop [416]=Oop [440]=Oop [432]=Oop rbx=Oop } pc offsets: 18135 18168 
ImmutableOopMap {[288]=Oop [368]=Oop [384]=Oop [280]=Oop [272]=Oop [424]=Oop [408]=Oop [440]=Oop [432]=Oop rbx=Oop rax=Oop } pc offsets: 18201 
ImmutableOopMap {[288]=Oop [368]=Oop [384]=Oop [280]=Oop [272]=Oop [424]=Oop [408]=Oop [440]=Oop [432]=Oop rbx=Oop } pc offsets: 18234 
ImmutableOopMap {[288]=Oop [368]=Oop [384]=Oop [280]=Oop [272]=Oop [456]=Oop } pc offsets: 18248 
ImmutableOopMap {rdx=Oop [536]=Oop [584]=Oop [544]=Oop [568]=Oop [560]=Oop [576]=Oop } pc offsets: 18296 18306 18354 18387 18420 
ImmutableOopMap {rdx=Oop [536]=Oop [584]=Oop [544]=Oop [568]=Oop [560]=Oop [576]=Oop r8=Oop } pc offsets: 18453 
ImmutableOopMap {rdx=Oop [536]=Oop [584]=Oop [544]=Oop [568]=Oop [560]=Oop [576]=Oop } pc offsets: 18486 
ImmutableOopMap {rdx=Oop [584]=Oop [576]=Oop [568]=Oop [536]=Oop [560]=Oop [544]=Oop r8=Oop } pc offsets: 18519 18552 
ImmutableOopMap {rdx=Oop [584]=Oop [576]=Oop [568]=Oop [536]=Oop [560]=Oop [544]=Oop } pc offsets: 18585 
ImmutableOopMap {rdx=Oop [584]=Oop [576]=Oop [568]=Oop [536]=Oop [560]=Oop [544]=Oop r8=Oop } pc offsets: 18618 
ImmutableOopMap {rdx=Oop [584]=Oop [576]=Oop [568]=Oop [536]=Oop [560]=Oop [544]=Oop } pc offsets: 18651 
ImmutableOopMap {rdx=Oop [584]=Oop [568]=Oop [536]=Oop [560]=Oop [544]=Oop [576]=Oop r9=Oop } pc offsets: 18684 
ImmutableOopMap {rdx=Oop [584]=Oop [568]=Oop [536]=Oop [560]=Oop [544]=Oop [576]=Oop } pc offsets: 18717 
ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [544]=Oop [584]=Oop [576]=Oop } pc offsets: 18731 
ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop rdi=Oop [544]=Oop } pc offsets: 18756 18804 18837 
ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop rax=Oop [600]=Oop } pc offsets: 18870 
ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop rax=Oop [600]=Oop r11=Oop } pc offsets: 18880 18928 18961 18994 
ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop rax=Oop [600]=Oop r11=Oop rsi=Oop } pc offsets: 19027 
ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop rax=Oop [600]=Oop r11=Oop } pc offsets: 19060 
ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop r11=Oop [600]=Oop rsi=Oop } pc offsets: 19093 19126 
ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop r11=Oop [600]=Oop } pc offsets: 19159 
ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop r11=Oop [600]=Oop rsi=Oop } pc offsets: 19192 
ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop r11=Oop [600]=Oop } pc offsets: 19225 
ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop r11=Oop [600]=Oop rdx=Oop } pc offsets: 19258 
ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop r11=Oop [600]=Oop } pc offsets: 19291 
ImmutableOopMap {[528]=Oop [536]=Oop [560]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [600]=Oop } pc offsets: 19305 
ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop rdi=Oop [560]=Oop [600]=Oop [536]=Oop } pc offsets: 19330 19378 19411 
ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [560]=Oop [536]=Oop [600]=Oop rax=Oop } pc offsets: 19421 19469 
ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [536]=Oop [600]=Oop [616]=Oop rax=Oop rbx=Oop } pc offsets: 19479 19527 
ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [536]=Oop [616]=Oop [624]=Oop rax=Oop r8=Oop [600]=Oop } pc offsets: 19537 19585 
ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [624]=Oop [632]=Oop rax=Oop rsi=Oop } pc offsets: 19595 19643 
ImmutableOopMap {[528]=Oop [568]=Oop [584]=Oop [576]=Oop [544]=Oop [632]=Oop rax=Oop } pc offsets: 19676 
ImmutableOopMap {[528]=Oop [584]=Oop [544]=Oop [576]=Oop rax=Oop } pc offsets: 19686 
ImmutableOopMap {[528]=Oop [584]=Oop [544]=Oop [640]=Oop rcx=Oop } pc offsets: 19711 
ImmutableOopMap {[584]=Oop rdx=Oop r11=Oop } pc offsets: 19745 19770 19795 19829 19877 19887 
ImmutableOopMap {r13=Oop } pc offsets: 19912 
ImmutableOopMap {[584]=Oop [544]=Oop [528]=Oop [568]=Oop [560]=Oop [536]=Oop [576]=Oop rax=Oop } pc offsets: 19959 
ImmutableOopMap {[576]=Oop [536]=Oop [528]=Oop [560]=Oop [568]=Oop [544]=Oop [584]=Oop [600]=Oop rax=Oop } pc offsets: 19984 
ImmutableOopMap {[384]=Oop [280]=Oop [272]=Oop [288]=Oop [368]=Oop rax=Oop } pc offsets: 20009 
ImmutableOopMap {[392]=Oop [384]=Oop [280]=Oop [272]=Oop [288]=Oop rax=Oop } pc offsets: 20034 
ImmutableOopMap {} pc offsets: 20074 20087 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x0000000111268374 offset=74):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@0 (line 15)
ScopeDesc(pc=0x0000000111268377 offset=77):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@1 (line 15)
ScopeDesc(pc=0x0000000111268381 offset=81):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@3 (line 15)
ScopeDesc(pc=0x00000001112683c0 offset=c0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@4 (line 15)
ScopeDesc(pc=0x00000001112684d5 offset=1d5):
   jdk.incubator.vector.VectorIntrinsics::roundDown@5 (line 106)
ScopeDesc(pc=0x00000001112684d5 offset=1d5):
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
ScopeDesc(pc=0x00000001112684d5 offset=1d5):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
ScopeDesc(pc=0x0000000111268790 offset=490):
   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
ScopeDesc(pc=0x0000000111268790 offset=490):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
ScopeDesc(pc=0x00000001112687bc offset=4bc):
   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00000001112687bc offset=4bc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126889c offset=59c):
   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
ScopeDesc(pc=0x000000011126889c offset=59c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
ScopeDesc(pc=0x0000000111268b10 offset=810):
   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
ScopeDesc(pc=0x0000000111268b10 offset=810):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
ScopeDesc(pc=0x0000000111268b24 offset=824):
   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000000111268b24 offset=824):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: stack[352],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111268c06 offset=906):
   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
ScopeDesc(pc=0x0000000111268c06 offset=906):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
ScopeDesc(pc=0x0000000111268c13 offset=913):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x0000000111268c66 offset=966):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@59 (line 24)
ScopeDesc(pc=0x0000000111268c9f offset=99f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@60 (line 24)
ScopeDesc(pc=0x0000000111268e71 offset=b71):
   jdk.internal.util.Preconditions::checkIndex@1 (line 265)
ScopeDesc(pc=0x0000000111268e71 offset=b71):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x0000000111268e71 offset=b71):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x0000000111268e71 offset=b71):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x0000000111268e71 offset=b71):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x0000000111268ea9 offset=ba9):
   jdk.internal.util.Preconditions::checkIndex@6 (line 265)
ScopeDesc(pc=0x0000000111268ea9 offset=ba9):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x0000000111268ea9 offset=ba9):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x0000000111268ea9 offset=ba9):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x0000000111268ea9 offset=ba9):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x0000000111268f44 offset=c44):
   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
ScopeDesc(pc=0x0000000111268f44 offset=c44):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
ScopeDesc(pc=0x0000000111268f44 offset=c44):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
ScopeDesc(pc=0x0000000111268f44 offset=c44):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x0000000111269255 offset=f55):
   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
ScopeDesc(pc=0x0000000111269255 offset=f55):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x0000000111269255 offset=f55):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x0000000111269255 offset=f55):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x0000000111269264 offset=f64):
   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111269264 offset=f64):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000000111269264 offset=f64):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111269264 offset=f64):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
ScopeDesc(pc=0x0000000111269344 offset=1044):
   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
ScopeDesc(pc=0x0000000111269344 offset=1044):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x0000000111269344 offset=1044):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x0000000111269344 offset=1044):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x000000011126934f offset=104f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x0000000111269429 offset=1129):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x0000000111269429 offset=1129):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x000000011126943c offset=113c):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011126943c offset=113c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126960d offset=130d):
   jdk.internal.util.Preconditions::checkIndex@1 (line 265)
ScopeDesc(pc=0x000000011126960d offset=130d):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011126960d offset=130d):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011126960d offset=130d):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011126960d offset=130d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x0000000111269645 offset=1345):
   jdk.internal.util.Preconditions::checkIndex@6 (line 265)
ScopeDesc(pc=0x0000000111269645 offset=1345):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x0000000111269645 offset=1345):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x0000000111269645 offset=1345):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x0000000111269645 offset=1345):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x00000001112696d6 offset=13d6):
   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
ScopeDesc(pc=0x00000001112696d6 offset=13d6):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
ScopeDesc(pc=0x00000001112696d6 offset=13d6):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
ScopeDesc(pc=0x00000001112696d6 offset=13d6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x00000001112699a2 offset=16a2):
   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
ScopeDesc(pc=0x00000001112699a2 offset=16a2):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x00000001112699a2 offset=16a2):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x00000001112699a2 offset=16a2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x00000001112699b4 offset=16b4):
   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00000001112699b4 offset=16b4):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001112699b4 offset=16b4):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00000001112699b4 offset=16b4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: stack[392],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
ScopeDesc(pc=0x0000000111269a94 offset=1794):
   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
ScopeDesc(pc=0x0000000111269a94 offset=1794):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x0000000111269a94 offset=1794):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x0000000111269a94 offset=1794):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x0000000111269a9f offset=179f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x0000000111269b79 offset=1879):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x0000000111269b79 offset=1879):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x0000000111269b8c offset=188c):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000000111269b8c offset=188c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: stack[392],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111269bbe offset=18be):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
ScopeDesc(pc=0x0000000111269bc5 offset=18c5):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)  reexecute=true
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rdx [4],int
    - l8: 0
    - l9: stack[656],double
    - l10: stack[392],oop
    - l11: reg rax [0],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111269bfb offset=18fb):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
ScopeDesc(pc=0x0000000111269cad offset=19ad):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
ScopeDesc(pc=0x0000000111269ccc offset=19cc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: empty
    - l4: empty
    - l5: 0
    - l6: 0
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: 0
ScopeDesc(pc=0x0000000111269d7a offset=1a7a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
ScopeDesc(pc=0x0000000111269d9c offset=1a9c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: stack[664],double
    - l5: empty
    - l6: empty
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: 0
ScopeDesc(pc=0x0000000111269dc9 offset=1ac9):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@130 (line 32)
ScopeDesc(pc=0x0000000111269de2 offset=1ae2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@141 (line 33)
ScopeDesc(pc=0x0000000111269df8 offset=1af8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@149 (line 34)
ScopeDesc(pc=0x0000000111269e2b offset=1b2b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)
ScopeDesc(pc=0x0000000111269e32 offset=1b32):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)  reexecute=true
   Locals
    - l0: stack[288],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: reg xmm2 [80],double
    - l5: 0
    - l6: reg xmm1 [64],double
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111269e4d offset=1b4d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)
ScopeDesc(pc=0x0000000111269e8a offset=1b8a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@134 (line 32)
ScopeDesc(pc=0x000000011126a132 offset=1e32):
   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
ScopeDesc(pc=0x000000011126a132 offset=1e32):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
ScopeDesc(pc=0x000000011126a17c offset=1e7c):
   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011126a17c offset=1e7c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126a25c offset=1f5c):
   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
ScopeDesc(pc=0x000000011126a25c offset=1f5c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
ScopeDesc(pc=0x000000011126a4cf offset=21cf):
   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
ScopeDesc(pc=0x000000011126a4cf offset=21cf):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
ScopeDesc(pc=0x000000011126a4dc offset=21dc):
   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011126a4dc offset=21dc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[456],oop
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126a5bc offset=22bc):
   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
ScopeDesc(pc=0x000000011126a5bc offset=22bc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
ScopeDesc(pc=0x000000011126a615 offset=2315):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011126a69a offset=239a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@204 (line 46)
ScopeDesc(pc=0x000000011126a6d4 offset=23d4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@205 (line 46)
ScopeDesc(pc=0x000000011126a7af offset=24af):
   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
ScopeDesc(pc=0x000000011126a7af offset=24af):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011126a8a2 offset=25a2):
   jdk.internal.util.Preconditions::checkIndex@1 (line 265)
ScopeDesc(pc=0x000000011126a8a2 offset=25a2):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011126a8a2 offset=25a2):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011126a8a2 offset=25a2):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011126a8a2 offset=25a2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011126a8dc offset=25dc):
   jdk.internal.util.Preconditions::checkIndex@6 (line 265)
ScopeDesc(pc=0x000000011126a8dc offset=25dc):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011126a8dc offset=25dc):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011126a8dc offset=25dc):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011126a8dc offset=25dc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011126a975 offset=2675):
   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
ScopeDesc(pc=0x000000011126a975 offset=2675):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
ScopeDesc(pc=0x000000011126a975 offset=2675):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
ScopeDesc(pc=0x000000011126a975 offset=2675):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011126ac8f offset=298f):
   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
ScopeDesc(pc=0x000000011126ac8f offset=298f):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011126ac8f offset=298f):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011126ac8f offset=298f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011126ac9c offset=299c):
   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126ac9c offset=299c):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126ac9c offset=299c):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126ac9c offset=299c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x000000011126ad7c offset=2a7c):
   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
ScopeDesc(pc=0x000000011126ad7c offset=2a7c):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011126ad7c offset=2a7c):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011126ad7c offset=2a7c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011126ad7f offset=2a7f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
ScopeDesc(pc=0x000000011126ae95 offset=2b95):
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
ScopeDesc(pc=0x000000011126ae95 offset=2b95):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x000000011126ae95 offset=2b95):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
ScopeDesc(pc=0x000000011126aeac offset=2bac):
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: stack[592],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x000000017e000270}
ScopeDesc(pc=0x000000011126aeac offset=2bac):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126aeac offset=2bac):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x000000011126af56 offset=2c56):
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
ScopeDesc(pc=0x000000011126af56 offset=2c56):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x000000011126af56 offset=2c56):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
ScopeDesc(pc=0x000000011126af6c offset=2c6c):
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126af6c offset=2c6c):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126af6c offset=2c6c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x000000011126b051 offset=2d51):
   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
ScopeDesc(pc=0x000000011126b051 offset=2d51):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x000000011126b147 offset=2e47):
   jdk.internal.util.Preconditions::checkIndex@1 (line 265)
ScopeDesc(pc=0x000000011126b147 offset=2e47):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011126b147 offset=2e47):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011126b147 offset=2e47):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011126b147 offset=2e47):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x000000011126b180 offset=2e80):
   jdk.internal.util.Preconditions::checkIndex@6 (line 265)
ScopeDesc(pc=0x000000011126b180 offset=2e80):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011126b180 offset=2e80):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011126b180 offset=2e80):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011126b180 offset=2e80):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x000000011126b211 offset=2f11):
   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
ScopeDesc(pc=0x000000011126b211 offset=2f11):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
ScopeDesc(pc=0x000000011126b211 offset=2f11):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
ScopeDesc(pc=0x000000011126b211 offset=2f11):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x000000011126b4d4 offset=31d4):
   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
ScopeDesc(pc=0x000000011126b4d4 offset=31d4):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011126b4d4 offset=31d4):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011126b4d4 offset=31d4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x000000011126b4ec offset=31ec):
   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126b4ec offset=31ec):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126b4ec offset=31ec):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126b4ec offset=31ec):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
ScopeDesc(pc=0x000000011126b5cc offset=32cc):
   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
ScopeDesc(pc=0x000000011126b5cc offset=32cc):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011126b5cc offset=32cc):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011126b5cc offset=32cc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x000000011126b5cf offset=32cf):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
ScopeDesc(pc=0x000000011126b6e5 offset=33e5):
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
ScopeDesc(pc=0x000000011126b6e5 offset=33e5):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x000000011126b6e5 offset=33e5):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
ScopeDesc(pc=0x000000011126b6fc offset=33fc):
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: stack[608],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x000000017e000270}
ScopeDesc(pc=0x000000011126b6fc offset=33fc):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126b6fc offset=33fc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
ScopeDesc(pc=0x000000011126b7a6 offset=34a6):
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
ScopeDesc(pc=0x000000011126b7a6 offset=34a6):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x000000011126b7a6 offset=34a6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
ScopeDesc(pc=0x000000011126b7bc offset=34bc):
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126b7bc offset=34bc):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126b7bc offset=34bc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
ScopeDesc(pc=0x000000011126b7bf offset=34bf):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
ScopeDesc(pc=0x000000011126b8a4 offset=35a4):
   jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
ScopeDesc(pc=0x000000011126b8a4 offset=35a4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
ScopeDesc(pc=0x000000011126b8bc offset=35bc):
   jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011126b8bc offset=35bc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
ScopeDesc(pc=0x000000011126b8c7 offset=35c7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
ScopeDesc(pc=0x000000011126b9a7 offset=36a7):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011126b9a7 offset=36a7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
ScopeDesc(pc=0x000000011126b9c4 offset=36c4):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011126b9c4 offset=36c4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
ScopeDesc(pc=0x000000011126b9cf offset=36cf):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
ScopeDesc(pc=0x000000011126baaa offset=37aa):
   jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
ScopeDesc(pc=0x000000011126baaa offset=37aa):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
ScopeDesc(pc=0x000000011126bac4 offset=37c4):
   jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011126bac4 offset=37c4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[632],oop
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[536],oop
ScopeDesc(pc=0x000000011126bacf offset=37cf):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011126bba7 offset=38a7):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011126bba7 offset=38a7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011126bbbc offset=38bc):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011126bbbc offset=38bc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[632],oop
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126bbf0 offset=38f0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)
ScopeDesc(pc=0x000000011126bbf7 offset=38f7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)  reexecute=true
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[632],oop
    - l21: reg rax [0],oop
    - l22: empty
ScopeDesc(pc=0x000000011126bc3b offset=393b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)
ScopeDesc(pc=0x000000011126bcf6 offset=39f6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@282 (line 52)
ScopeDesc(pc=0x000000011126bd14 offset=3a14):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@282 (line 52)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: empty
    - l17: empty
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[752],double
ScopeDesc(pc=0x000000011126bdc3 offset=3ac3):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011126bddc offset=3adc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[768],double
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[760],double
ScopeDesc(pc=0x000000011126be0b offset=3b0b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@301 (line 55)
ScopeDesc(pc=0x000000011126be23 offset=3b23):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@313 (line 56)
ScopeDesc(pc=0x000000011126be4c offset=3b4c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
ScopeDesc(pc=0x000000011126be88 offset=3b88):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)
ScopeDesc(pc=0x000000011126be8f offset=3b8f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)  reexecute=true
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: reg xmm3 [96],double
    - l18: 0
    - l19: reg xmm1 [64],double
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126beaa offset=3baa):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)
ScopeDesc(pc=0x000000011126bead offset=3bad):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@304 (line 55)
ScopeDesc(pc=0x000000011126bee6 offset=3be6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@305 (line 55)
ScopeDesc(pc=0x000000011126bef8 offset=3bf8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@360 (line 60)
ScopeDesc(pc=0x000000011126bf14 offset=3c14):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@374 (line 61)
ScopeDesc(pc=0x000000011126bf2a offset=3c2a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@377 (line 62)
ScopeDesc(pc=0x000000011126bf69 offset=3c69):
   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
ScopeDesc(pc=0x000000011126bf69 offset=3c69):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011126bf69 offset=3c69):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011126bf69 offset=3c69):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011126bf69 offset=3c69):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011126bf74 offset=3c74):
   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126bf74 offset=3c74):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011126bf74 offset=3c74):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126bf74 offset=3c74):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[528],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126bf74 offset=3c74):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x000000011126bf7c offset=3c7c):
   jdk.internal.util.Preconditions::checkIndex@15 (line 266)
ScopeDesc(pc=0x000000011126bf7c offset=3c7c):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011126bf7c offset=3c7c):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011126bf7c offset=3c7c):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011126bf7c offset=3c7c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011126bfa6 offset=3ca6):
   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
ScopeDesc(pc=0x000000011126bfa6 offset=3ca6):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011126bfa6 offset=3ca6):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011126bfa6 offset=3ca6):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011126bfa6 offset=3ca6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x000000011126bfb4 offset=3cb4):
   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126bfb4 offset=3cb4):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011126bfb4 offset=3cb4):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126bfb4 offset=3cb4):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[544],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126bfb4 offset=3cb4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
ScopeDesc(pc=0x000000011126bfbc offset=3cbc):
   jdk.internal.util.Preconditions::checkIndex@15 (line 266)
ScopeDesc(pc=0x000000011126bfbc offset=3cbc):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011126bfbc offset=3cbc):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011126bfbc offset=3cbc):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011126bfbc offset=3cbc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x000000011126bfe9 offset=3ce9):
   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
ScopeDesc(pc=0x000000011126bfe9 offset=3ce9):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011126bfe9 offset=3ce9):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011126bfe9 offset=3ce9):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011126bfe9 offset=3ce9):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x000000011126bff4 offset=3cf4):
   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126bff4 offset=3cf4):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011126bff4 offset=3cf4):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126bff4 offset=3cf4):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[272],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126bff4 offset=3cf4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
ScopeDesc(pc=0x000000011126bffc offset=3cfc):
   jdk.internal.util.Preconditions::checkIndex@15 (line 266)
ScopeDesc(pc=0x000000011126bffc offset=3cfc):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011126bffc offset=3cfc):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011126bffc offset=3cfc):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011126bffc offset=3cfc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x000000011126c021 offset=3d21):
   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
ScopeDesc(pc=0x000000011126c021 offset=3d21):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011126c021 offset=3d21):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011126c021 offset=3d21):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011126c021 offset=3d21):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x000000011126c034 offset=3d34):
   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126c034 offset=3d34):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011126c034 offset=3d34):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126c034 offset=3d34):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[280],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126c034 offset=3d34):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: stack[392],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
ScopeDesc(pc=0x000000011126c03c offset=3d3c):
   jdk.internal.util.Preconditions::checkIndex@15 (line 266)
ScopeDesc(pc=0x000000011126c03c offset=3d3c):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011126c03c offset=3d3c):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011126c03c offset=3d3c):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011126c03c offset=3d3c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x000000011126c097 offset=3d97):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@7 (line 15)
ScopeDesc(pc=0x000000011126c0b9 offset=3db9):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@13 (line 15)
ScopeDesc(pc=0x000000011126c0cc offset=3dcc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@13 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[648],oop
ScopeDesc(pc=0x000000011126c0d9 offset=3dd9):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@16 (line 15)
ScopeDesc(pc=0x000000011126c29f offset=3f9f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@-1 (line 15)
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126c2a9 offset=3fa9):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@1 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126c2c2 offset=3fc2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@3 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126c2f2 offset=3ff2):
   jdk.incubator.vector.AbstractSpecies::loopBound@-1 (line 203)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: reg rbx [6],int
ScopeDesc(pc=0x000000011126c2f2 offset=3ff2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126c313 offset=4013):
   jdk.incubator.vector.VectorIntrinsics::roundDown@-1 (line 106)
   Locals
    - l0: reg rbx [6],int
    - l1: 4
ScopeDesc(pc=0x000000011126c313 offset=4013):
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011126c313 offset=4013):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126c334 offset=4034):
   jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: empty
ScopeDesc(pc=0x000000011126c334 offset=4034):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126c355 offset=4055):
   jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
   Locals
    - l0: 0
    - l1: 0
ScopeDesc(pc=0x000000011126c355 offset=4055):
   jdk.incubator.vector.DoubleVector::zero@19 (line 437)
   Locals
    - l0: empty
    - l1: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
ScopeDesc(pc=0x000000011126c355 offset=4055):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126c376 offset=4076):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e0000e8}
ScopeDesc(pc=0x000000011126c376 offset=4076):
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
ScopeDesc(pc=0x000000011126c376 offset=4076):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126c397 offset=4097):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e0000e8}
ScopeDesc(pc=0x000000011126c397 offset=4097):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011126c397 offset=4097):
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
ScopeDesc(pc=0x000000011126c397 offset=4097):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126c3a5 offset=40a5):
   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011126c3a5 offset=40a5):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126c3d5 offset=40d5):
   jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: empty
ScopeDesc(pc=0x000000011126c3d5 offset=40d5):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: reg rbx [6],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126c3f6 offset=40f6):
   jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
   Locals
    - l0: 0
    - l1: 0
ScopeDesc(pc=0x000000011126c3f6 offset=40f6):
   jdk.incubator.vector.DoubleVector::zero@19 (line 437)
   Locals
    - l0: empty
    - l1: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
ScopeDesc(pc=0x000000011126c3f6 offset=40f6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: reg rbx [6],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126c417 offset=4117):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e0000e8}
ScopeDesc(pc=0x000000011126c417 offset=4117):
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
ScopeDesc(pc=0x000000011126c417 offset=4117):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: reg rbx [6],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126c438 offset=4138):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e0000e8}
ScopeDesc(pc=0x000000011126c438 offset=4138):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011126c438 offset=4138):
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
ScopeDesc(pc=0x000000011126c438 offset=4138):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: reg rbx [6],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126c446 offset=4146):
   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011126c446 offset=4146):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: stack[352],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126c476 offset=4176):
   jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: empty
ScopeDesc(pc=0x000000011126c476 offset=4176):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: reg rdx [4],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
ScopeDesc(pc=0x000000011126c497 offset=4197):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
   Locals
    - l0: reg rax [0],int
    - l1: 4
    - l2: reg rbx [6],int
ScopeDesc(pc=0x000000011126c497 offset=4197):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126c497 offset=4197):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: reg rdx [4],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
ScopeDesc(pc=0x000000011126c4b8 offset=41b8):
   java.util.Objects::checkIndex@-1 (line 359)
   Locals
    - l0: reg rax [0],int
    - l1: reg rdi [14],int
ScopeDesc(pc=0x000000011126c4b8 offset=41b8):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126c4b8 offset=41b8):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126c4b8 offset=41b8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: reg rdx [4],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
ScopeDesc(pc=0x000000011126c4d9 offset=41d9):
   jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
   Locals
    - l0: reg rax [0],int
    - l1: reg rdi [14],int
    - l2: NULL
ScopeDesc(pc=0x000000011126c4d9 offset=41d9):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011126c4d9 offset=41d9):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126c4d9 offset=41d9):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126c4d9 offset=41d9):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: reg rdx [4],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
ScopeDesc(pc=0x000000011126c4fa offset=41fa):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
ScopeDesc(pc=0x000000011126c4fa offset=41fa):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: empty
ScopeDesc(pc=0x000000011126c4fa offset=41fa):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: reg rdx [4],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
ScopeDesc(pc=0x000000011126c51b offset=421b):
   jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: empty
ScopeDesc(pc=0x000000011126c51b offset=421b):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011126c51b offset=421b):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: empty
ScopeDesc(pc=0x000000011126c51b offset=421b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: reg rdx [4],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
ScopeDesc(pc=0x000000011126c53c offset=423c):
   jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x000000017e000000}
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
ScopeDesc(pc=0x000000011126c53c offset=423c):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126c53c offset=423c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: reg rdx [4],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[656],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
ScopeDesc(pc=0x000000011126c55d offset=425d):
   jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x000000017e000000}
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: empty
ScopeDesc(pc=0x000000011126c55d offset=425d):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126c55d offset=425d):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126c55d offset=425d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: reg rdx [4],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[656],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
ScopeDesc(pc=0x000000011126c57e offset=427e):
   jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011126c57e offset=427e):
   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: empty
ScopeDesc(pc=0x000000011126c57e offset=427e):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126c57e offset=427e):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126c57e offset=427e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: reg rdx [4],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[656],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
ScopeDesc(pc=0x000000011126c59f offset=429f):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011126c59f offset=429f):
   jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
ScopeDesc(pc=0x000000011126c59f offset=429f):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126c59f offset=429f):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126c59f offset=429f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: reg rdx [4],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[656],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
ScopeDesc(pc=0x000000011126c5c0 offset=42c0):
   jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
   Locals
    - l0: empty
    - l1: reg rax [0],int
ScopeDesc(pc=0x000000011126c5c0 offset=42c0):
   jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
ScopeDesc(pc=0x000000011126c5c0 offset=42c0):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126c5c0 offset=42c0):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126c5c0 offset=42c0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: reg rdx [4],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[656],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
ScopeDesc(pc=0x000000011126c5e1 offset=42e1):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e000210}
ScopeDesc(pc=0x000000011126c5e1 offset=42e1):
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
    - @4: 0
    - @5: reg rsi [12],long
    - @6: reg rdx [4],oop
    - @7: reg rax [0],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
ScopeDesc(pc=0x000000011126c5e1 offset=42e1):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126c5e1 offset=42e1):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126c5e1 offset=42e1):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: reg rdx [4],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[656],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
ScopeDesc(pc=0x000000011126c602 offset=4302):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e000210}
ScopeDesc(pc=0x000000011126c602 offset=4302):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011126c602 offset=4302):
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
    - @4: 0
    - @5: reg rsi [12],long
    - @6: reg rdx [4],oop
    - @7: reg rax [0],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
ScopeDesc(pc=0x000000011126c602 offset=4302):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126c602 offset=4302):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126c602 offset=4302):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: reg rdx [4],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[656],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
ScopeDesc(pc=0x000000011126c610 offset=4310):
   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126c610 offset=4310):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126c610 offset=4310):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126c610 offset=4310):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
ScopeDesc(pc=0x000000011126c629 offset=4329):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126c659 offset=4359):
   jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
   Locals
    - l0: reg rbx [6],oop
    - l1: reg rcx [2],oop
ScopeDesc(pc=0x000000011126c659 offset=4359):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126c67a offset=437a):
   jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[280],oop
    - l2: stack[376]
    - l3: empty
ScopeDesc(pc=0x000000011126c67a offset=437a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
ScopeDesc(pc=0x000000011126c69b offset=439b):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
   Locals
    - l0: stack[376]
    - l1: 4
    - l2: stack[348]
ScopeDesc(pc=0x000000011126c69b offset=439b):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[280],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126c69b offset=439b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
ScopeDesc(pc=0x000000011126c6bc offset=43bc):
   java.util.Objects::checkIndex@-1 (line 359)
   Locals
    - l0: reg rbx [6],int
    - l1: reg rdi [14],int
ScopeDesc(pc=0x000000011126c6bc offset=43bc):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126c6bc offset=43bc):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[280],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126c6bc offset=43bc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[656],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
ScopeDesc(pc=0x000000011126c6dd offset=43dd):
   jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
   Locals
    - l0: reg rbx [6],int
    - l1: reg rdi [14],int
    - l2: NULL
ScopeDesc(pc=0x000000011126c6dd offset=43dd):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011126c6dd offset=43dd):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126c6dd offset=43dd):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[280],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126c6dd offset=43dd):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[656],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
ScopeDesc(pc=0x000000011126c6fe offset=43fe):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
ScopeDesc(pc=0x000000011126c6fe offset=43fe):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: stack[280],oop
    - l2: reg rbx [6],int
    - l3: empty
ScopeDesc(pc=0x000000011126c6fe offset=43fe):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[656],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
ScopeDesc(pc=0x000000011126c71f offset=441f):
   jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: empty
ScopeDesc(pc=0x000000011126c71f offset=441f):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011126c71f offset=441f):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: stack[280],oop
    - l2: reg rbx [6],int
    - l3: empty
ScopeDesc(pc=0x000000011126c71f offset=441f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[656],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
ScopeDesc(pc=0x000000011126c740 offset=4440):
   jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x000000017e000000}
    - l1: stack[280],oop
    - l2: reg rbx [6],int
ScopeDesc(pc=0x000000011126c740 offset=4440):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126c740 offset=4440):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[656],double
    - l10: stack[392],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
ScopeDesc(pc=0x000000011126c761 offset=4461):
   jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x000000017e000000}
    - l1: stack[280],oop
    - l2: reg rbx [6],int
    - l3: empty
ScopeDesc(pc=0x000000011126c761 offset=4461):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126c761 offset=4461):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126c761 offset=4461):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[656],double
    - l10: stack[392],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
ScopeDesc(pc=0x000000011126c782 offset=4482):
   jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011126c782 offset=4482):
   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
   Locals
    - l0: empty
    - l1: stack[280],oop
    - l2: reg rbx [6],int
    - l3: empty
ScopeDesc(pc=0x000000011126c782 offset=4482):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126c782 offset=4482):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126c782 offset=4482):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[656],double
    - l10: stack[392],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
ScopeDesc(pc=0x000000011126c7a3 offset=44a3):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011126c7a3 offset=44a3):
   jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
   Locals
    - l0: empty
    - l1: stack[280],oop
    - l2: reg rbx [6],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
ScopeDesc(pc=0x000000011126c7a3 offset=44a3):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126c7a3 offset=44a3):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126c7a3 offset=44a3):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[656],double
    - l10: stack[392],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
ScopeDesc(pc=0x000000011126c7c4 offset=44c4):
   jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
   Locals
    - l0: empty
    - l1: reg rbx [6],int
ScopeDesc(pc=0x000000011126c7c4 offset=44c4):
   jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
   Locals
    - l0: empty
    - l1: stack[280],oop
    - l2: reg rbx [6],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: stack[280],oop
ScopeDesc(pc=0x000000011126c7c4 offset=44c4):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126c7c4 offset=44c4):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126c7c4 offset=44c4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[656],double
    - l10: stack[392],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
ScopeDesc(pc=0x000000011126c7e5 offset=44e5):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e000210}
ScopeDesc(pc=0x000000011126c7e5 offset=44e5):
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: stack[280],oop
    - @4: 0
    - @5: reg r9 [18],long
    - @6: stack[280],oop
    - @7: reg rbx [6],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
ScopeDesc(pc=0x000000011126c7e5 offset=44e5):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126c7e5 offset=44e5):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126c7e5 offset=44e5):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[656],double
    - l10: stack[392],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
ScopeDesc(pc=0x000000011126c806 offset=4506):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e000210}
ScopeDesc(pc=0x000000011126c806 offset=4506):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011126c806 offset=4506):
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: stack[280],oop
    - @4: 0
    - @5: reg r9 [18],long
    - @6: stack[280],oop
    - @7: reg rbx [6],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
ScopeDesc(pc=0x000000011126c806 offset=4506):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126c806 offset=4506):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126c806 offset=4506):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[656],double
    - l10: stack[392],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
ScopeDesc(pc=0x000000011126c814 offset=4514):
   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126c814 offset=4514):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126c814 offset=4514):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126c814 offset=4514):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: stack[392],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
ScopeDesc(pc=0x000000011126c82d offset=452d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126c85d offset=455d):
   jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
   Locals
    - l0: reg rax [0],oop
    - l1: reg rcx [2],oop
ScopeDesc(pc=0x000000011126c85d offset=455d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: stack[392],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126c87e offset=457e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)  reexecute=true
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: reg rdx [4],int
    - l8: 0
    - l9: stack[656],double
    - l10: stack[392],oop
    - l11: reg rax [0],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126c888 offset=4588):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126c8a1 offset=45a1):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126c8c3 offset=45c3):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@141 (line 33)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126c8e5 offset=45e5):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@149 (line 34)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126c915 offset=4615):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)  reexecute=true
   Locals
    - l0: stack[288],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: reg xmm2 [80],double
    - l5: 0
    - l6: reg xmm1 [64],double
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126c936 offset=4636):
   jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: empty
ScopeDesc(pc=0x000000011126c936 offset=4636):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: 0
    - l13: reg xmm1 [64],double
    - l14: 0
    - l15: reg xmm0 [48],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126c957 offset=4657):
   jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
   Locals
    - l0: 0
    - l1: 0
ScopeDesc(pc=0x000000011126c957 offset=4657):
   jdk.incubator.vector.DoubleVector::zero@19 (line 437)
   Locals
    - l0: empty
    - l1: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
ScopeDesc(pc=0x000000011126c957 offset=4657):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: 0
    - l13: reg xmm1 [64],double
    - l14: 0
    - l15: reg xmm0 [48],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126c978 offset=4678):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e0000e8}
ScopeDesc(pc=0x000000011126c978 offset=4678):
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
ScopeDesc(pc=0x000000011126c978 offset=4678):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: 0
    - l13: reg xmm1 [64],double
    - l14: 0
    - l15: reg xmm0 [48],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126c999 offset=4699):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e0000e8}
ScopeDesc(pc=0x000000011126c999 offset=4699):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011126c999 offset=4699):
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
ScopeDesc(pc=0x000000011126c999 offset=4699):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: 0
    - l13: reg xmm1 [64],double
    - l14: 0
    - l15: reg xmm0 [48],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126c9a7 offset=46a7):
   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011126c9a7 offset=46a7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126c9d7 offset=46d7):
   jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: empty
ScopeDesc(pc=0x000000011126c9d7 offset=46d7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: reg rbx [6],oop
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126c9f8 offset=46f8):
   jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
   Locals
    - l0: 0
    - l1: 0
ScopeDesc(pc=0x000000011126c9f8 offset=46f8):
   jdk.incubator.vector.DoubleVector::zero@19 (line 437)
   Locals
    - l0: empty
    - l1: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
ScopeDesc(pc=0x000000011126c9f8 offset=46f8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: reg rbx [6],oop
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126ca19 offset=4719):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e0000e8}
ScopeDesc(pc=0x000000011126ca19 offset=4719):
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
ScopeDesc(pc=0x000000011126ca19 offset=4719):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: reg rbx [6],oop
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126ca3a offset=473a):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e0000e8}
ScopeDesc(pc=0x000000011126ca3a offset=473a):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011126ca3a offset=473a):
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
ScopeDesc(pc=0x000000011126ca3a offset=473a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: reg rbx [6],oop
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126ca48 offset=4748):
   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011126ca48 offset=4748):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[656],double
    - l10: stack[368],oop
    - l11: stack[384],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[672],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[456],oop
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126ca78 offset=4778):
   jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: reg rdx [4],oop
    - l2: reg r14 [28],int
    - l3: empty
ScopeDesc(pc=0x000000011126ca78 offset=4778):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: reg xmm2 [80],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x000000011126ca82 offset=4782):
   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126ca82 offset=4782):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: reg xmm2 [80],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x000000011126cab2 offset=47b2):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
   Locals
    - l0: reg r14 [28],int
    - l1: 4
    - l2: reg r8 [16],int
ScopeDesc(pc=0x000000011126cab2 offset=47b2):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126cab2 offset=47b2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: reg xmm2 [80],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x000000011126cad3 offset=47d3):
   java.util.Objects::checkIndex@-1 (line 359)
   Locals
    - l0: reg r14 [28],int
    - l1: reg r8 [16],int
ScopeDesc(pc=0x000000011126cad3 offset=47d3):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126cad3 offset=47d3):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126cad3 offset=47d3):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: reg xmm2 [80],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x000000011126caf4 offset=47f4):
   jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
   Locals
    - l0: reg r14 [28],int
    - l1: reg r8 [16],int
    - l2: NULL
ScopeDesc(pc=0x000000011126caf4 offset=47f4):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011126caf4 offset=47f4):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126caf4 offset=47f4):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126caf4 offset=47f4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: reg xmm2 [80],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x000000011126cb15 offset=4815):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
ScopeDesc(pc=0x000000011126cb15 offset=4815):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg r14 [28],int
    - l3: empty
ScopeDesc(pc=0x000000011126cb15 offset=4815):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: reg xmm2 [80],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x000000011126cb36 offset=4836):
   jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: empty
ScopeDesc(pc=0x000000011126cb36 offset=4836):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011126cb36 offset=4836):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg r14 [28],int
    - l3: empty
ScopeDesc(pc=0x000000011126cb36 offset=4836):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: reg xmm2 [80],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x000000011126cb57 offset=4857):
   jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x000000017e000000}
    - l1: reg rdx [4],oop
    - l2: reg r14 [28],int
ScopeDesc(pc=0x000000011126cb57 offset=4857):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126cb57 offset=4857):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x000000011126cb78 offset=4878):
   jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x000000017e000000}
    - l1: reg rdx [4],oop
    - l2: reg r14 [28],int
    - l3: empty
ScopeDesc(pc=0x000000011126cb78 offset=4878):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126cb78 offset=4878):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126cb78 offset=4878):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x000000011126cb99 offset=4899):
   jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011126cb99 offset=4899):
   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg r14 [28],int
    - l3: empty
ScopeDesc(pc=0x000000011126cb99 offset=4899):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126cb99 offset=4899):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126cb99 offset=4899):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x000000011126cbba offset=48ba):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011126cbba offset=48ba):
   jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg r14 [28],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
ScopeDesc(pc=0x000000011126cbba offset=48ba):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126cbba offset=48ba):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126cbba offset=48ba):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x000000011126cbdb offset=48db):
   jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
   Locals
    - l0: empty
    - l1: reg r14 [28],int
ScopeDesc(pc=0x000000011126cbdb offset=48db):
   jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg r14 [28],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
ScopeDesc(pc=0x000000011126cbdb offset=48db):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126cbdb offset=48db):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126cbdb offset=48db):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x000000011126cbfc offset=48fc):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e000210}
ScopeDesc(pc=0x000000011126cbfc offset=48fc):
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
    - @4: 0
    - @5: reg r8 [16],long
    - @6: reg rdx [4],oop
    - @7: reg r14 [28],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
ScopeDesc(pc=0x000000011126cbfc offset=48fc):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126cbfc offset=48fc):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126cbfc offset=48fc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x000000011126cc1d offset=491d):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e000210}
ScopeDesc(pc=0x000000011126cc1d offset=491d):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011126cc1d offset=491d):
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
    - @4: 0
    - @5: reg r8 [16],long
    - @6: reg rdx [4],oop
    - @7: reg r14 [28],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
ScopeDesc(pc=0x000000011126cc1d offset=491d):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126cc1d offset=491d):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126cc1d offset=491d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x000000011126cc2b offset=492b):
   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126cc2b offset=492b):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126cc2b offset=492b):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126cc2b offset=492b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x000000011126cc44 offset=4944):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126cc74 offset=4974):
   jdk.incubator.vector.DoubleVector::sub@-1 (line 1138)
   Locals
    - l0: reg rdi [14],oop
    - l1: 0
    - l2: stack[728],double
ScopeDesc(pc=0x000000011126cc74 offset=4974):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x000000011126cc95 offset=4995):
   jdk.incubator.vector.DoubleVector::lanewise@-1 (line 714)
   Locals
    - l0: reg rdi [14],oop
    - l1: a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x000000017e000270}
    - l2: 0
    - l3: stack[728],double
ScopeDesc(pc=0x000000011126cc95 offset=4995):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126cc95 offset=4995):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x000000011126ccb6 offset=49b6):
   jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[544],oop
    - l2: stack[552]
    - l3: empty
ScopeDesc(pc=0x000000011126ccb6 offset=49b6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[560],oop
ScopeDesc(pc=0x000000011126ccc0 offset=49c0):
   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126ccc0 offset=49c0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: reg r11 [22],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[560],oop
ScopeDesc(pc=0x000000011126ccf0 offset=49f0):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
   Locals
    - l0: stack[552]
    - l1: 4
    - l2: reg rsi [12],int
ScopeDesc(pc=0x000000011126ccf0 offset=49f0):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: reg r11 [22],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126ccf0 offset=49f0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: reg r11 [22],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[560],oop
ScopeDesc(pc=0x000000011126cd11 offset=4a11):
   java.util.Objects::checkIndex@-1 (line 359)
   Locals
    - l0: reg r14 [28],int
    - l1: reg rdi [14],int
ScopeDesc(pc=0x000000011126cd11 offset=4a11):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126cd11 offset=4a11):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: reg r11 [22],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126cd11 offset=4a11):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: reg r11 [22],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[560],oop
ScopeDesc(pc=0x000000011126cd32 offset=4a32):
   jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
   Locals
    - l0: reg r14 [28],int
    - l1: reg rdi [14],int
    - l2: NULL
ScopeDesc(pc=0x000000011126cd32 offset=4a32):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011126cd32 offset=4a32):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126cd32 offset=4a32):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: reg r11 [22],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126cd32 offset=4a32):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: reg r11 [22],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[560],oop
ScopeDesc(pc=0x000000011126cd53 offset=4a53):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
ScopeDesc(pc=0x000000011126cd53 offset=4a53):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg r11 [22],oop
    - l2: reg r14 [28],int
    - l3: empty
ScopeDesc(pc=0x000000011126cd53 offset=4a53):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: reg r11 [22],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[560],oop
ScopeDesc(pc=0x000000011126cd74 offset=4a74):
   jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: empty
ScopeDesc(pc=0x000000011126cd74 offset=4a74):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011126cd74 offset=4a74):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg r11 [22],oop
    - l2: reg r14 [28],int
    - l3: empty
ScopeDesc(pc=0x000000011126cd74 offset=4a74):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: reg r11 [22],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[560],oop
ScopeDesc(pc=0x000000011126cd95 offset=4a95):
   jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x000000017e000000}
    - l1: reg r11 [22],oop
    - l2: reg r14 [28],int
ScopeDesc(pc=0x000000011126cd95 offset=4a95):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126cd95 offset=4a95):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: reg r11 [22],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
ScopeDesc(pc=0x000000011126cdb6 offset=4ab6):
   jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x000000017e000000}
    - l1: reg r11 [22],oop
    - l2: reg r14 [28],int
    - l3: empty
ScopeDesc(pc=0x000000011126cdb6 offset=4ab6):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126cdb6 offset=4ab6):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126cdb6 offset=4ab6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: reg r11 [22],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
ScopeDesc(pc=0x000000011126cdd7 offset=4ad7):
   jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011126cdd7 offset=4ad7):
   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
   Locals
    - l0: empty
    - l1: reg r11 [22],oop
    - l2: reg r14 [28],int
    - l3: empty
ScopeDesc(pc=0x000000011126cdd7 offset=4ad7):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126cdd7 offset=4ad7):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126cdd7 offset=4ad7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: reg r11 [22],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
ScopeDesc(pc=0x000000011126cdf8 offset=4af8):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011126cdf8 offset=4af8):
   jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
   Locals
    - l0: empty
    - l1: reg r11 [22],oop
    - l2: reg r14 [28],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
ScopeDesc(pc=0x000000011126cdf8 offset=4af8):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126cdf8 offset=4af8):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126cdf8 offset=4af8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: reg r11 [22],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
ScopeDesc(pc=0x000000011126ce19 offset=4b19):
   jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
   Locals
    - l0: empty
    - l1: reg r14 [28],int
ScopeDesc(pc=0x000000011126ce19 offset=4b19):
   jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
   Locals
    - l0: empty
    - l1: reg r11 [22],oop
    - l2: reg r14 [28],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg r11 [22],oop
ScopeDesc(pc=0x000000011126ce19 offset=4b19):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126ce19 offset=4b19):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126ce19 offset=4b19):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: reg r11 [22],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
ScopeDesc(pc=0x000000011126ce3a offset=4b3a):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e000210}
ScopeDesc(pc=0x000000011126ce3a offset=4b3a):
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg r11 [22],oop
    - @4: 0
    - @5: reg r9 [18],long
    - @6: reg r11 [22],oop
    - @7: reg r14 [28],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
ScopeDesc(pc=0x000000011126ce3a offset=4b3a):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126ce3a offset=4b3a):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126ce3a offset=4b3a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: reg r11 [22],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
ScopeDesc(pc=0x000000011126ce5b offset=4b5b):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e000210}
ScopeDesc(pc=0x000000011126ce5b offset=4b5b):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011126ce5b offset=4b5b):
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg r11 [22],oop
    - @4: 0
    - @5: reg r9 [18],long
    - @6: reg r11 [22],oop
    - @7: reg r14 [28],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
ScopeDesc(pc=0x000000011126ce5b offset=4b5b):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126ce5b offset=4b5b):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126ce5b offset=4b5b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: reg r11 [22],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
ScopeDesc(pc=0x000000011126ce69 offset=4b69):
   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126ce69 offset=4b69):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126ce69 offset=4b69):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126ce69 offset=4b69):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
ScopeDesc(pc=0x000000011126ce82 offset=4b82):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126ceb2 offset=4bb2):
   jdk.incubator.vector.DoubleVector::sub@-1 (line 1138)
   Locals
    - l0: reg rdi [14],oop
    - l1: 0
    - l2: stack[736],double
ScopeDesc(pc=0x000000011126ceb2 offset=4bb2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
ScopeDesc(pc=0x000000011126ced3 offset=4bd3):
   jdk.incubator.vector.DoubleVector::lanewise@-1 (line 714)
   Locals
    - l0: reg rdi [14],oop
    - l1: a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x000000017e000270}
    - l2: 0
    - l3: stack[736],double
ScopeDesc(pc=0x000000011126ced3 offset=4bd3):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126ced3 offset=4bd3):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
ScopeDesc(pc=0x000000011126cedd offset=4bdd):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126cf0d offset=4c0d):
   jdk.incubator.vector.DoubleVector::mul@-1 (line 1187)
   Locals
    - l0: reg rax [0],oop
    - l1: stack[600],oop
ScopeDesc(pc=0x000000011126cf0d offset=4c0d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
ScopeDesc(pc=0x000000011126cf17 offset=4c17):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126cf47 offset=4c47):
   jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
   Locals
    - l0: reg rbx [6],oop
    - l1: reg rax [0],oop
ScopeDesc(pc=0x000000011126cf47 offset=4c47):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
ScopeDesc(pc=0x000000011126cf51 offset=4c51):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126cf81 offset=4c81):
   jdk.incubator.vector.DoubleVector::mul@-1 (line 1187)
   Locals
    - l0: reg r8 [16],oop
    - l1: reg r8 [16],oop
ScopeDesc(pc=0x000000011126cf81 offset=4c81):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: reg rax [0],oop
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[536],oop
ScopeDesc(pc=0x000000011126cf8b offset=4c8b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126cfbb offset=4cbb):
   jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rax [0],oop
ScopeDesc(pc=0x000000011126cfbb offset=4cbb):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[632],oop
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126cfdc offset=4cdc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)  reexecute=true
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[632],oop
    - l21: reg rax [0],oop
    - l22: empty
ScopeDesc(pc=0x000000011126cfe6 offset=4ce6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@282 (line 52)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126cfff offset=4cff):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126d021 offset=4d21):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@313 (line 56)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126d03a offset=4d3a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126d053 offset=4d53):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126d075 offset=4d75):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126d0a5 offset=4da5):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)  reexecute=true
   Locals
    - l0: stack[584],oop
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r14 [28],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: reg xmm3 [96],double
    - l18: 0
    - l19: reg xmm1 [64],double
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126d0af offset=4daf):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@304 (line 55)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126d0c8 offset=4dc8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@360 (line 60)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126d0f7 offset=4df7):
   jdk.internal.util.Preconditions::checkIndex@15 (line 266)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126d0f7 offset=4df7):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011126d0f7 offset=4df7):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126d0f7 offset=4df7):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[528],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126d0f7 offset=4df7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: stack[560],oop
    - l21: stack[536],oop
    - l22: empty
ScopeDesc(pc=0x000000011126d110 offset=4e10):
   jdk.internal.util.Preconditions::checkIndex@15 (line 266)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126d110 offset=4e10):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011126d110 offset=4e10):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126d110 offset=4e10):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[544],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126d110 offset=4e10):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[584],oop
    - l1: stack[528],oop
    - l2: stack[544],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[552]
    - l8: 0
    - l9: stack[744],double
    - l10: stack[568],oop
    - l11: stack[576],oop
    - l12: 0
    - l13: stack[728],double
    - l14: 0
    - l15: stack[736],double
    - l16: 0
    - l17: stack[752],double
    - l18: 0
    - l19: stack[760],double
    - l20: empty
    - l21: stack[536],oop
    - l22: stack[600],oop
   Expression stack
    - @0: stack[560],oop
ScopeDesc(pc=0x000000011126d129 offset=4e29):
   jdk.internal.util.Preconditions::checkIndex@15 (line 266)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126d129 offset=4e29):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011126d129 offset=4e29):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126d129 offset=4e29):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[272],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126d129 offset=4e29):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: empty
    - l11: stack[384],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[368],oop
ScopeDesc(pc=0x000000011126d142 offset=4e42):
   jdk.internal.util.Preconditions::checkIndex@15 (line 266)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126d142 offset=4e42):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011126d142 offset=4e42):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011126d142 offset=4e42):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[280],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011126d142 offset=4e42):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[288],oop
    - l1: stack[272],oop
    - l2: stack[280],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: stack[376]
    - l8: 0
    - l9: stack[656],double
    - l10: stack[392],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[384],oop
ScopeDesc(pc=0x000000011126d16a offset=4e6a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@7 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011126d177 offset=4e77):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@7 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x0000000111267b08: 0020
relocInfo@0x0000000111267b08 [type=0(none) addr=0x0000000111268300 offset=32]
         @0x0000000111267b0a: 600b
relocInfo@0x0000000111267b0a [type=6(runtime_call) addr=0x000000011126830b offset=11] | [destination=0x0000000110bf9920]
         @0x0000000111267b0c: c03c
relocInfo@0x0000000111267b0c [type=12(metadata) addr=0x0000000111268347 offset=60] | [metadata_addr=0x0000000111268349 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267b0e: c043
relocInfo@0x0000000111267b0e [type=12(metadata) addr=0x000000011126838a offset=67] | [metadata_addr=0x000000011126838c *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267b10: 1036
relocInfo@0x0000000111267b10 [type=1(oop) addr=0x00000001112683c0 offset=54] | [oop_addr=0x00000001112683c2 *=0x000000017e000078 offset=0]
         @0x0000000111267b12: c00a
relocInfo@0x0000000111267b12 [type=12(metadata) addr=0x00000001112683ca offset=10] | [metadata_addr=0x00000001112683cc *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267b14: c08e
relocInfo@0x0000000111267b14 [type=12(metadata) addr=0x0000000111268458 offset=142] | [metadata_addr=0x000000011126845a *=0x0000000267a9dc18 offset=0]metadata_value=0x0000000267a9dc18: method data for {method} {0x0000000267b3fa08} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
         @0x0000000111267b16: c02d
relocInfo@0x0000000111267b16 [type=12(metadata) addr=0x0000000111268485 offset=45] | [metadata_addr=0x0000000111268487 *=0x0000000267a9dc18 offset=0]metadata_value=0x0000000267a9dc18: method data for {method} {0x0000000267b3fa08} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
         @0x0000000111267b18: c012
relocInfo@0x0000000111267b18 [type=12(metadata) addr=0x0000000111268497 offset=18] | [metadata_addr=0x0000000111268499 *=0x0000000267a9ddd0 offset=0]metadata_value=0x0000000267a9ddd0: method data for {method} {0x0000000267b96588} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x0000000111267b1a: c02d
relocInfo@0x0000000111267b1a [type=12(metadata) addr=0x00000001112684c4 offset=45] | [metadata_addr=0x00000001112684c6 *=0x0000000267a9ddd0 offset=0]metadata_value=0x0000000267a9ddd0: method data for {method} {0x0000000267b96588} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x0000000111267b1c: c026
relocInfo@0x0000000111267b1c [type=12(metadata) addr=0x00000001112684ea offset=38] | [metadata_addr=0x00000001112684ec *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267b1e: c012
relocInfo@0x0000000111267b1e [type=12(metadata) addr=0x00000001112684fc offset=18] | [metadata_addr=0x00000001112684fe *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267b20: 102d
relocInfo@0x0000000111267b20 [type=1(oop) addr=0x0000000111268529 offset=45] | [oop_addr=0x000000011126852b *=0x000000017e000078 offset=0]
         @0x0000000111267b22: c00d
relocInfo@0x0000000111267b22 [type=12(metadata) addr=0x0000000111268536 offset=13] | [metadata_addr=0x0000000111268538 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267b24: c015
relocInfo@0x0000000111267b24 [type=12(metadata) addr=0x000000011126854b offset=21] | [metadata_addr=0x000000011126854d *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267b26: c08e
relocInfo@0x0000000111267b26 [type=12(metadata) addr=0x00000001112685d9 offset=142] | [metadata_addr=0x00000001112685db *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267b28: c012
relocInfo@0x0000000111267b28 [type=12(metadata) addr=0x00000001112685eb offset=18] | [metadata_addr=0x00000001112685ed *=0x0000000267a9e268 offset=0]metadata_value=0x0000000267a9e268: method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267b2a: c02d
relocInfo@0x0000000111267b2a [type=12(metadata) addr=0x0000000111268618 offset=45] | [metadata_addr=0x000000011126861a *=0x0000000267a9e268 offset=0]metadata_value=0x0000000267a9e268: method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267b2c: c012
relocInfo@0x0000000111267b2c [type=12(metadata) addr=0x000000011126862a offset=18] | [metadata_addr=0x000000011126862c *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267b2e: 1011
relocInfo@0x0000000111267b2e [type=1(oop) addr=0x000000011126863b offset=17] | [oop_addr=0x000000011126863d *=0x000000017e0000e8 offset=0]
         @0x0000000111267b30: c019
relocInfo@0x0000000111267b30 [type=12(metadata) addr=0x0000000111268654 offset=25] | [metadata_addr=0x0000000111268656 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267b32: c012
relocInfo@0x0000000111267b32 [type=12(metadata) addr=0x0000000111268666 offset=18] | [metadata_addr=0x0000000111268668 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267b34: c02d
relocInfo@0x0000000111267b34 [type=12(metadata) addr=0x0000000111268693 offset=45] | [metadata_addr=0x0000000111268695 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x0000000111267b36: c020
relocInfo@0x0000000111267b36 [type=12(metadata) addr=0x00000001112686b3 offset=32] | [metadata_addr=0x00000001112686b5 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267b38: c012
relocInfo@0x0000000111267b38 [type=12(metadata) addr=0x00000001112686c5 offset=18] | [metadata_addr=0x00000001112686c7 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x0000000111267b3a: c02d
relocInfo@0x0000000111267b3a [type=12(metadata) addr=0x00000001112686f2 offset=45] | [metadata_addr=0x00000001112686f4 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267b3c: 1011
relocInfo@0x0000000111267b3c [type=1(oop) addr=0x0000000111268703 offset=17] | [oop_addr=0x0000000111268705 *=0x000000017e000118 offset=0]
         @0x0000000111267b3e: c019
relocInfo@0x0000000111267b3e [type=12(metadata) addr=0x000000011126871c offset=25] | [metadata_addr=0x000000011126871e *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267b40: c020
relocInfo@0x0000000111267b40 [type=12(metadata) addr=0x000000011126873c offset=32] | [metadata_addr=0x000000011126873e *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267b42: 1012
relocInfo@0x0000000111267b42 [type=1(oop) addr=0x000000011126874e offset=18] | [oop_addr=0x0000000111268750 *=0x000000017e000128 offset=0]
         @0x0000000111267b44: 100a
relocInfo@0x0000000111267b44 [type=1(oop) addr=0x0000000111268758 offset=10] | [oop_addr=0x000000011126875a *=0x000000011ff8c550 offset=0]
         @0x0000000111267b46: 445f
relocInfo@0x0000000111267b46 [type=4(static_call) addr=0x00000001112687b7 offset=95 format=1] | [destination=0x0000000110bfa220 metadata=0x0000000000000000]
         @0x0000000111267b48: c00b
relocInfo@0x0000000111267b48 [type=12(metadata) addr=0x00000001112687c2 offset=11] | [metadata_addr=0x00000001112687c4 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267b4a: c016
relocInfo@0x0000000111267b4a [type=12(metadata) addr=0x00000001112687d8 offset=22] | [metadata_addr=0x00000001112687da *=0x0000000225d4ce30 offset=0]metadata_value=0x0000000225d4ce30: 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267b4c: c01b
relocInfo@0x0000000111267b4c [type=12(metadata) addr=0x00000001112687f3 offset=27] | [metadata_addr=0x00000001112687f5 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267b4e: c08a
relocInfo@0x0000000111267b4e [type=12(metadata) addr=0x000000011126887d offset=138] | [metadata_addr=0x000000011126887f *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267b50: c01f
relocInfo@0x0000000111267b50 [type=12(metadata) addr=0x000000011126889c offset=31] | [metadata_addr=0x000000011126889e *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267b52: c012
relocInfo@0x0000000111267b52 [type=12(metadata) addr=0x00000001112688ae offset=18] | [metadata_addr=0x00000001112688b0 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267b54: c030
relocInfo@0x0000000111267b54 [type=12(metadata) addr=0x00000001112688de offset=48] | [metadata_addr=0x00000001112688e0 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267b56: c01a
relocInfo@0x0000000111267b56 [type=12(metadata) addr=0x00000001112688f8 offset=26] | [metadata_addr=0x00000001112688fa *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267b58: c08e
relocInfo@0x0000000111267b58 [type=12(metadata) addr=0x0000000111268986 offset=142] | [metadata_addr=0x0000000111268988 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267b5a: c012
relocInfo@0x0000000111267b5a [type=12(metadata) addr=0x0000000111268998 offset=18] | [metadata_addr=0x000000011126899a *=0x0000000267a9e268 offset=0]metadata_value=0x0000000267a9e268: method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267b5c: c028
relocInfo@0x0000000111267b5c [type=12(metadata) addr=0x00000001112689c0 offset=40] | [metadata_addr=0x00000001112689c2 *=0x0000000267a9e268 offset=0]metadata_value=0x0000000267a9e268: method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267b5e: c012
relocInfo@0x0000000111267b5e [type=12(metadata) addr=0x00000001112689d2 offset=18] | [metadata_addr=0x00000001112689d4 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267b60: c028
relocInfo@0x0000000111267b60 [type=12(metadata) addr=0x00000001112689fa offset=40] | [metadata_addr=0x00000001112689fc *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267b62: c012
relocInfo@0x0000000111267b62 [type=12(metadata) addr=0x0000000111268a0c offset=18] | [metadata_addr=0x0000000111268a0e *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267b64: c028
relocInfo@0x0000000111267b64 [type=12(metadata) addr=0x0000000111268a34 offset=40] | [metadata_addr=0x0000000111268a36 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x0000000111267b66: c020
relocInfo@0x0000000111267b66 [type=12(metadata) addr=0x0000000111268a54 offset=32] | [metadata_addr=0x0000000111268a56 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267b68: c012
relocInfo@0x0000000111267b68 [type=12(metadata) addr=0x0000000111268a66 offset=18] | [metadata_addr=0x0000000111268a68 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x0000000111267b6a: c028
relocInfo@0x0000000111267b6a [type=12(metadata) addr=0x0000000111268a8e offset=40] | [metadata_addr=0x0000000111268a90 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267b6c: c028
relocInfo@0x0000000111267b6c [type=12(metadata) addr=0x0000000111268ab6 offset=40] | [metadata_addr=0x0000000111268ab8 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267b6e: c020
relocInfo@0x0000000111267b6e [type=12(metadata) addr=0x0000000111268ad6 offset=32] | [metadata_addr=0x0000000111268ad8 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267b70: 4449
relocInfo@0x0000000111267b70 [type=4(static_call) addr=0x0000000111268b1f offset=73 format=1] | [destination=0x0000000110bfa220 metadata=0x0000000000000000]
         @0x0000000111267b72: c00b
relocInfo@0x0000000111267b72 [type=12(metadata) addr=0x0000000111268b2a offset=11] | [metadata_addr=0x0000000111268b2c *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267b74: c017
relocInfo@0x0000000111267b74 [type=12(metadata) addr=0x0000000111268b41 offset=23] | [metadata_addr=0x0000000111268b43 *=0x0000000225d4ce30 offset=0]metadata_value=0x0000000225d4ce30: 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267b76: c01c
relocInfo@0x0000000111267b76 [type=12(metadata) addr=0x0000000111268b5d offset=28] | [metadata_addr=0x0000000111268b5f *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267b78: c08a
relocInfo@0x0000000111267b78 [type=12(metadata) addr=0x0000000111268be7 offset=138] | [metadata_addr=0x0000000111268be9 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267b7a: c082
relocInfo@0x0000000111267b7a [type=12(metadata) addr=0x0000000111268c69 offset=130] | [metadata_addr=0x0000000111268c6b *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267b7c: c036
relocInfo@0x0000000111267b7c [type=12(metadata) addr=0x0000000111268c9f offset=54] | [metadata_addr=0x0000000111268ca1 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267b7e: c012
relocInfo@0x0000000111267b7e [type=12(metadata) addr=0x0000000111268cb1 offset=18] | [metadata_addr=0x0000000111268cb3 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267b80: 102d
relocInfo@0x0000000111267b80 [type=1(oop) addr=0x0000000111268cde offset=45] | [oop_addr=0x0000000111268ce0 *=0x000000017e000078 offset=0]
         @0x0000000111267b82: c00a
relocInfo@0x0000000111267b82 [type=12(metadata) addr=0x0000000111268ce8 offset=10] | [metadata_addr=0x0000000111268cea *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267b84: c08d
relocInfo@0x0000000111267b84 [type=12(metadata) addr=0x0000000111268d75 offset=141] | [metadata_addr=0x0000000111268d77 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267b86: c012
relocInfo@0x0000000111267b86 [type=12(metadata) addr=0x0000000111268d87 offset=18] | [metadata_addr=0x0000000111268d89 *=0x0000000267a95d30 offset=0]metadata_value=0x0000000267a95d30: method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x0000000111267b88: c033
relocInfo@0x0000000111267b88 [type=12(metadata) addr=0x0000000111268dba offset=51] | [metadata_addr=0x0000000111268dbc *=0x0000000267a95d30 offset=0]metadata_value=0x0000000267a95d30: method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x0000000111267b8a: c012
relocInfo@0x0000000111267b8a [type=12(metadata) addr=0x0000000111268dcc offset=18] | [metadata_addr=0x0000000111268dce *=0x00000002679f4c18 offset=0]metadata_value=0x00000002679f4c18: method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x0000000111267b8c: c02d
relocInfo@0x0000000111267b8c [type=12(metadata) addr=0x0000000111268df9 offset=45] | [metadata_addr=0x0000000111268dfb *=0x00000002679f4c18 offset=0]metadata_value=0x00000002679f4c18: method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x0000000111267b8e: c012
relocInfo@0x0000000111267b8e [type=12(metadata) addr=0x0000000111268e0b offset=18] | [metadata_addr=0x0000000111268e0d *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111267b90: c030
relocInfo@0x0000000111267b90 [type=12(metadata) addr=0x0000000111268e3b offset=48] | [metadata_addr=0x0000000111268e3d *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111267b92: c038
relocInfo@0x0000000111267b92 [type=12(metadata) addr=0x0000000111268e73 offset=56] | [metadata_addr=0x0000000111268e75 *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111267b94: 1036
relocInfo@0x0000000111267b94 [type=1(oop) addr=0x0000000111268ea9 offset=54] | [oop_addr=0x0000000111268eab *=0x000000017e000078 offset=0]
         @0x0000000111267b96: c00d
relocInfo@0x0000000111267b96 [type=12(metadata) addr=0x0000000111268eb6 offset=13] | [metadata_addr=0x0000000111268eb8 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267b98: c012
relocInfo@0x0000000111267b98 [type=12(metadata) addr=0x0000000111268ec8 offset=18] | [metadata_addr=0x0000000111268eca *=0x0000000267a948b0 offset=0]metadata_value=0x0000000267a948b0: method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x0000000111267b9a: c02d
relocInfo@0x0000000111267b9a [type=12(metadata) addr=0x0000000111268ef5 offset=45] | [metadata_addr=0x0000000111268ef7 *=0x0000000267a948b0 offset=0]metadata_value=0x0000000267a948b0: method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x0000000111267b9c: c012
relocInfo@0x0000000111267b9c [type=12(metadata) addr=0x0000000111268f07 offset=18] | [metadata_addr=0x0000000111268f09 *=0x0000000267a94a98 offset=0]metadata_value=0x0000000267a94a98: method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x0000000111267b9e: c02d
relocInfo@0x0000000111267b9e [type=12(metadata) addr=0x0000000111268f34 offset=45] | [metadata_addr=0x0000000111268f36 *=0x0000000267a94a98 offset=0]metadata_value=0x0000000267a94a98: method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x0000000111267ba0: 1010
relocInfo@0x0000000111267ba0 [type=1(oop) addr=0x0000000111268f44 offset=16] | [oop_addr=0x0000000111268f46 *=0x000000017e000000 offset=0]
         @0x0000000111267ba2: c00d
relocInfo@0x0000000111267ba2 [type=12(metadata) addr=0x0000000111268f51 offset=13] | [metadata_addr=0x0000000111268f53 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267ba4: c012
relocInfo@0x0000000111267ba4 [type=12(metadata) addr=0x0000000111268f63 offset=18] | [metadata_addr=0x0000000111268f65 *=0x0000000267a95f60 offset=0]metadata_value=0x0000000267a95f60: method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x0000000111267ba6: c030
relocInfo@0x0000000111267ba6 [type=12(metadata) addr=0x0000000111268f93 offset=48] | [metadata_addr=0x0000000111268f95 *=0x0000000267a95f60 offset=0]metadata_value=0x0000000267a95f60: method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x0000000111267ba8: c012
relocInfo@0x0000000111267ba8 [type=12(metadata) addr=0x0000000111268fa5 offset=18] | [metadata_addr=0x0000000111268fa7 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267baa: c02d
relocInfo@0x0000000111267baa [type=12(metadata) addr=0x0000000111268fd2 offset=45] | [metadata_addr=0x0000000111268fd4 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267bac: c012
relocInfo@0x0000000111267bac [type=12(metadata) addr=0x0000000111268fe4 offset=18] | [metadata_addr=0x0000000111268fe6 *=0x0000000267a96408 offset=0]metadata_value=0x0000000267a96408: method data for {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
         @0x0000000111267bae: 102d
relocInfo@0x0000000111267bae [type=1(oop) addr=0x0000000111269011 offset=45] | [oop_addr=0x0000000111269013 *=0x000000017e000078 offset=0]
         @0x0000000111267bb0: c00d
relocInfo@0x0000000111267bb0 [type=12(metadata) addr=0x000000011126901e offset=13] | [metadata_addr=0x0000000111269020 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267bb2: c015
relocInfo@0x0000000111267bb2 [type=12(metadata) addr=0x0000000111269033 offset=21] | [metadata_addr=0x0000000111269035 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267bb4: c012
relocInfo@0x0000000111267bb4 [type=12(metadata) addr=0x0000000111269045 offset=18] | [metadata_addr=0x0000000111269047 *=0x0000000267a95910 offset=0]metadata_value=0x0000000267a95910: method data for {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x0000000111267bb6: c02d
relocInfo@0x0000000111267bb6 [type=12(metadata) addr=0x0000000111269072 offset=45] | [metadata_addr=0x0000000111269074 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267bb8: c012
relocInfo@0x0000000111267bb8 [type=12(metadata) addr=0x0000000111269084 offset=18] | [metadata_addr=0x0000000111269086 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267bba: c012
relocInfo@0x0000000111267bba [type=12(metadata) addr=0x0000000111269096 offset=18] | [metadata_addr=0x0000000111269098 *=0x0000000267a96588 offset=0]metadata_value=0x0000000267a96588: method data for {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267bbc: c045
relocInfo@0x0000000111267bbc [type=12(metadata) addr=0x00000001112690db offset=69] | [metadata_addr=0x00000001112690dd *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267bbe: 1011
relocInfo@0x0000000111267bbe [type=1(oop) addr=0x00000001112690ec offset=17] | [oop_addr=0x00000001112690ee *=0x000000017e000210 offset=0]
         @0x0000000111267bc0: c019
relocInfo@0x0000000111267bc0 [type=12(metadata) addr=0x0000000111269105 offset=25] | [metadata_addr=0x0000000111269107 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267bc2: c012
relocInfo@0x0000000111267bc2 [type=12(metadata) addr=0x0000000111269117 offset=18] | [metadata_addr=0x0000000111269119 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267bc4: c02d
relocInfo@0x0000000111267bc4 [type=12(metadata) addr=0x0000000111269144 offset=45] | [metadata_addr=0x0000000111269146 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x0000000111267bc6: c01d
relocInfo@0x0000000111267bc6 [type=12(metadata) addr=0x0000000111269161 offset=29] | [metadata_addr=0x0000000111269163 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267bc8: c012
relocInfo@0x0000000111267bc8 [type=12(metadata) addr=0x0000000111269173 offset=18] | [metadata_addr=0x0000000111269175 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x0000000111267bca: c02d
relocInfo@0x0000000111267bca [type=12(metadata) addr=0x00000001112691a0 offset=45] | [metadata_addr=0x00000001112691a2 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267bcc: 1011
relocInfo@0x0000000111267bcc [type=1(oop) addr=0x00000001112691b1 offset=17] | [oop_addr=0x00000001112691b3 *=0x000000017e000240 offset=0]
         @0x0000000111267bce: c019
relocInfo@0x0000000111267bce [type=12(metadata) addr=0x00000001112691ca offset=25] | [metadata_addr=0x00000001112691cc *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267bd0: c01d
relocInfo@0x0000000111267bd0 [type=12(metadata) addr=0x00000001112691e7 offset=29] | [metadata_addr=0x00000001112691e9 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267bd2: 1012
relocInfo@0x0000000111267bd2 [type=1(oop) addr=0x00000001112691f9 offset=18] | [oop_addr=0x00000001112691fb *=0x000000017e000128 offset=0]
         @0x0000000111267bd4: 100a
relocInfo@0x0000000111267bd4 [type=1(oop) addr=0x0000000111269203 offset=10] | [oop_addr=0x0000000111269205 *=0x000000011ff8c550 offset=0]
         @0x0000000111267bd6: 1034
relocInfo@0x0000000111267bd6 [type=1(oop) addr=0x0000000111269237 offset=52] | [oop_addr=0x0000000111269239 *=0x000000017e000078 offset=0]
         @0x0000000111267bd8: 100f
relocInfo@0x0000000111267bd8 [type=1(oop) addr=0x0000000111269246 offset=15] | [oop_addr=0x0000000111269248 *=0x000000017e000240 offset=0]
         @0x0000000111267bda: 4419
relocInfo@0x0000000111267bda [type=4(static_call) addr=0x000000011126925f offset=25 format=1] | [destination=0x0000000110bfa220 metadata=0x0000000000000000]
         @0x0000000111267bdc: c00b
relocInfo@0x0000000111267bdc [type=12(metadata) addr=0x000000011126926a offset=11] | [metadata_addr=0x000000011126926c *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267bde: c016
relocInfo@0x0000000111267bde [type=12(metadata) addr=0x0000000111269280 offset=22] | [metadata_addr=0x0000000111269282 *=0x0000000225d4ce30 offset=0]metadata_value=0x0000000225d4ce30: 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267be0: c01b
relocInfo@0x0000000111267be0 [type=12(metadata) addr=0x000000011126929b offset=27] | [metadata_addr=0x000000011126929d *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267be2: c08a
relocInfo@0x0000000111267be2 [type=12(metadata) addr=0x0000000111269325 offset=138] | [metadata_addr=0x0000000111269327 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267be4: c02d
relocInfo@0x0000000111267be4 [type=12(metadata) addr=0x0000000111269352 offset=45] | [metadata_addr=0x0000000111269354 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267be6: c012
relocInfo@0x0000000111267be6 [type=12(metadata) addr=0x0000000111269364 offset=18] | [metadata_addr=0x0000000111269366 *=0x0000000267a97298 offset=0]metadata_value=0x0000000267a97298: method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267be8: c02b
relocInfo@0x0000000111267be8 [type=12(metadata) addr=0x000000011126938f offset=43] | [metadata_addr=0x0000000111269391 *=0x0000000267a97298 offset=0]metadata_value=0x0000000267a97298: method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267bea: 108d
relocInfo@0x0000000111267bea [type=1(oop) addr=0x000000011126941c offset=141] | [oop_addr=0x000000011126941e *=0x000000017e000250 offset=0]
         @0x0000000111267bec: f00a241b
relocInfo@0x0000000111267bee [type=2(virtual_call) addr=0x0000000111269437 offset=27 format=1 data=10] | [destination=0x0000000110bf9f20 cached_value=0x000000011126942d metadata=0x0000000000000000]
         @0x0000000111267bf0: c00d
relocInfo@0x0000000111267bf0 [type=12(metadata) addr=0x0000000111269444 offset=13] | [metadata_addr=0x0000000111269446 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267bf2: c012
relocInfo@0x0000000111267bf2 [type=12(metadata) addr=0x0000000111269456 offset=18] | [metadata_addr=0x0000000111269458 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267bf4: 1028
relocInfo@0x0000000111267bf4 [type=1(oop) addr=0x000000011126947e offset=40] | [oop_addr=0x0000000111269480 *=0x000000017e000078 offset=0]
         @0x0000000111267bf6: c00a
relocInfo@0x0000000111267bf6 [type=12(metadata) addr=0x0000000111269488 offset=10] | [metadata_addr=0x000000011126948a *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267bf8: c08d
relocInfo@0x0000000111267bf8 [type=12(metadata) addr=0x0000000111269515 offset=141] | [metadata_addr=0x0000000111269517 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267bfa: c012
relocInfo@0x0000000111267bfa [type=12(metadata) addr=0x0000000111269527 offset=18] | [metadata_addr=0x0000000111269529 *=0x0000000267a95d30 offset=0]metadata_value=0x0000000267a95d30: method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x0000000111267bfc: c039
relocInfo@0x0000000111267bfc [type=12(metadata) addr=0x0000000111269560 offset=57] | [metadata_addr=0x0000000111269562 *=0x0000000267a95d30 offset=0]metadata_value=0x0000000267a95d30: method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x0000000111267bfe: c012
relocInfo@0x0000000111267bfe [type=12(metadata) addr=0x0000000111269572 offset=18] | [metadata_addr=0x0000000111269574 *=0x00000002679f4c18 offset=0]metadata_value=0x00000002679f4c18: method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x0000000111267c00: c028
relocInfo@0x0000000111267c00 [type=12(metadata) addr=0x000000011126959a offset=40] | [metadata_addr=0x000000011126959c *=0x00000002679f4c18 offset=0]metadata_value=0x00000002679f4c18: method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x0000000111267c02: c012
relocInfo@0x0000000111267c02 [type=12(metadata) addr=0x00000001112695ac offset=18] | [metadata_addr=0x00000001112695ae *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111267c04: c02b
relocInfo@0x0000000111267c04 [type=12(metadata) addr=0x00000001112695d7 offset=43] | [metadata_addr=0x00000001112695d9 *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111267c06: c038
relocInfo@0x0000000111267c06 [type=12(metadata) addr=0x000000011126960f offset=56] | [metadata_addr=0x0000000111269611 *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111267c08: 1036
relocInfo@0x0000000111267c08 [type=1(oop) addr=0x0000000111269645 offset=54] | [oop_addr=0x0000000111269647 *=0x000000017e000078 offset=0]
         @0x0000000111267c0a: c00d
relocInfo@0x0000000111267c0a [type=12(metadata) addr=0x0000000111269652 offset=13] | [metadata_addr=0x0000000111269654 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267c0c: c012
relocInfo@0x0000000111267c0c [type=12(metadata) addr=0x0000000111269664 offset=18] | [metadata_addr=0x0000000111269666 *=0x0000000267a948b0 offset=0]metadata_value=0x0000000267a948b0: method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x0000000111267c0e: c028
relocInfo@0x0000000111267c0e [type=12(metadata) addr=0x000000011126968c offset=40] | [metadata_addr=0x000000011126968e *=0x0000000267a948b0 offset=0]metadata_value=0x0000000267a948b0: method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x0000000111267c10: c012
relocInfo@0x0000000111267c10 [type=12(metadata) addr=0x000000011126969e offset=18] | [metadata_addr=0x00000001112696a0 *=0x0000000267a94a98 offset=0]metadata_value=0x0000000267a94a98: method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x0000000111267c12: c028
relocInfo@0x0000000111267c12 [type=12(metadata) addr=0x00000001112696c6 offset=40] | [metadata_addr=0x00000001112696c8 *=0x0000000267a94a98 offset=0]metadata_value=0x0000000267a94a98: method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x0000000111267c14: 1018
relocInfo@0x0000000111267c14 [type=1(oop) addr=0x00000001112696de offset=24] | [oop_addr=0x00000001112696e0 *=0x000000017e000000 offset=0]
         @0x0000000111267c16: c00d
relocInfo@0x0000000111267c16 [type=12(metadata) addr=0x00000001112696eb offset=13] | [metadata_addr=0x00000001112696ed *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267c18: c012
relocInfo@0x0000000111267c18 [type=12(metadata) addr=0x00000001112696fd offset=18] | [metadata_addr=0x00000001112696ff *=0x0000000267a95f60 offset=0]metadata_value=0x0000000267a95f60: method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x0000000111267c1a: c02b
relocInfo@0x0000000111267c1a [type=12(metadata) addr=0x0000000111269728 offset=43] | [metadata_addr=0x000000011126972a *=0x0000000267a95f60 offset=0]metadata_value=0x0000000267a95f60: method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x0000000111267c1c: c012
relocInfo@0x0000000111267c1c [type=12(metadata) addr=0x000000011126973a offset=18] | [metadata_addr=0x000000011126973c *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267c1e: c028
relocInfo@0x0000000111267c1e [type=12(metadata) addr=0x0000000111269762 offset=40] | [metadata_addr=0x0000000111269764 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267c20: c012
relocInfo@0x0000000111267c20 [type=12(metadata) addr=0x0000000111269774 offset=18] | [metadata_addr=0x0000000111269776 *=0x0000000267a96408 offset=0]metadata_value=0x0000000267a96408: method data for {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
         @0x0000000111267c22: 1028
relocInfo@0x0000000111267c22 [type=1(oop) addr=0x000000011126979c offset=40] | [oop_addr=0x000000011126979e *=0x000000017e000078 offset=0]
         @0x0000000111267c24: c00d
relocInfo@0x0000000111267c24 [type=12(metadata) addr=0x00000001112697a9 offset=13] | [metadata_addr=0x00000001112697ab *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267c26: c015
relocInfo@0x0000000111267c26 [type=12(metadata) addr=0x00000001112697be offset=21] | [metadata_addr=0x00000001112697c0 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267c28: c012
relocInfo@0x0000000111267c28 [type=12(metadata) addr=0x00000001112697d0 offset=18] | [metadata_addr=0x00000001112697d2 *=0x0000000267a95910 offset=0]metadata_value=0x0000000267a95910: method data for {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x0000000111267c2a: c028
relocInfo@0x0000000111267c2a [type=12(metadata) addr=0x00000001112697f8 offset=40] | [metadata_addr=0x00000001112697fa *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267c2c: c012
relocInfo@0x0000000111267c2c [type=12(metadata) addr=0x000000011126980a offset=18] | [metadata_addr=0x000000011126980c *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267c2e: c012
relocInfo@0x0000000111267c2e [type=12(metadata) addr=0x000000011126981c offset=18] | [metadata_addr=0x000000011126981e *=0x0000000267a96588 offset=0]metadata_value=0x0000000267a96588: method data for {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267c30: c028
relocInfo@0x0000000111267c30 [type=12(metadata) addr=0x0000000111269844 offset=40] | [metadata_addr=0x0000000111269846 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267c32: 1011
relocInfo@0x0000000111267c32 [type=1(oop) addr=0x0000000111269855 offset=17] | [oop_addr=0x0000000111269857 *=0x000000017e000210 offset=0]
         @0x0000000111267c34: c019
relocInfo@0x0000000111267c34 [type=12(metadata) addr=0x000000011126986e offset=25] | [metadata_addr=0x0000000111269870 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267c36: c012
relocInfo@0x0000000111267c36 [type=12(metadata) addr=0x0000000111269880 offset=18] | [metadata_addr=0x0000000111269882 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267c38: c028
relocInfo@0x0000000111267c38 [type=12(metadata) addr=0x00000001112698a8 offset=40] | [metadata_addr=0x00000001112698aa *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x0000000111267c3a: c01d
relocInfo@0x0000000111267c3a [type=12(metadata) addr=0x00000001112698c5 offset=29] | [metadata_addr=0x00000001112698c7 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267c3c: c012
relocInfo@0x0000000111267c3c [type=12(metadata) addr=0x00000001112698d7 offset=18] | [metadata_addr=0x00000001112698d9 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x0000000111267c3e: c028
relocInfo@0x0000000111267c3e [type=12(metadata) addr=0x00000001112698ff offset=40] | [metadata_addr=0x0000000111269901 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267c40: 1011
relocInfo@0x0000000111267c40 [type=1(oop) addr=0x0000000111269910 offset=17] | [oop_addr=0x0000000111269912 *=0x000000017e000240 offset=0]
         @0x0000000111267c42: c019
relocInfo@0x0000000111267c42 [type=12(metadata) addr=0x0000000111269929 offset=25] | [metadata_addr=0x000000011126992b *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267c44: c01d
relocInfo@0x0000000111267c44 [type=12(metadata) addr=0x0000000111269946 offset=29] | [metadata_addr=0x0000000111269948 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267c46: 1012
relocInfo@0x0000000111267c46 [type=1(oop) addr=0x0000000111269958 offset=18] | [oop_addr=0x000000011126995a *=0x000000017e000128 offset=0]
         @0x0000000111267c48: 100a
relocInfo@0x0000000111267c48 [type=1(oop) addr=0x0000000111269962 offset=10] | [oop_addr=0x0000000111269964 *=0x000000011ff8c550 offset=0]
         @0x0000000111267c4a: 1022
relocInfo@0x0000000111267c4a [type=1(oop) addr=0x0000000111269984 offset=34] | [oop_addr=0x0000000111269986 *=0x000000017e000078 offset=0]
         @0x0000000111267c4c: 100f
relocInfo@0x0000000111267c4c [type=1(oop) addr=0x0000000111269993 offset=15] | [oop_addr=0x0000000111269995 *=0x000000017e000240 offset=0]
         @0x0000000111267c4e: 441c
relocInfo@0x0000000111267c4e [type=4(static_call) addr=0x00000001112699af offset=28 format=1] | [destination=0x0000000110bfa220 metadata=0x0000000000000000]
         @0x0000000111267c50: c00b
relocInfo@0x0000000111267c50 [type=12(metadata) addr=0x00000001112699ba offset=11] | [metadata_addr=0x00000001112699bc *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267c52: c016
relocInfo@0x0000000111267c52 [type=12(metadata) addr=0x00000001112699d0 offset=22] | [metadata_addr=0x00000001112699d2 *=0x0000000225d4ce30 offset=0]metadata_value=0x0000000225d4ce30: 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267c54: c01b
relocInfo@0x0000000111267c54 [type=12(metadata) addr=0x00000001112699eb offset=27] | [metadata_addr=0x00000001112699ed *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267c56: c08a
relocInfo@0x0000000111267c56 [type=12(metadata) addr=0x0000000111269a75 offset=138] | [metadata_addr=0x0000000111269a77 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267c58: c02d
relocInfo@0x0000000111267c58 [type=12(metadata) addr=0x0000000111269aa2 offset=45] | [metadata_addr=0x0000000111269aa4 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267c5a: c012
relocInfo@0x0000000111267c5a [type=12(metadata) addr=0x0000000111269ab4 offset=18] | [metadata_addr=0x0000000111269ab6 *=0x0000000267a97298 offset=0]metadata_value=0x0000000267a97298: method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267c5c: c02b
relocInfo@0x0000000111267c5c [type=12(metadata) addr=0x0000000111269adf offset=43] | [metadata_addr=0x0000000111269ae1 *=0x0000000267a97298 offset=0]metadata_value=0x0000000267a97298: method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267c5e: 108d
relocInfo@0x0000000111267c5e [type=1(oop) addr=0x0000000111269b6c offset=141] | [oop_addr=0x0000000111269b6e *=0x000000017e000250 offset=0]
         @0x0000000111267c60: f00a241b
relocInfo@0x0000000111267c62 [type=2(virtual_call) addr=0x0000000111269b87 offset=27 format=1 data=10] | [destination=0x0000000110bf9f20 cached_value=0x0000000111269b7d metadata=0x0000000000000000]
         @0x0000000111267c64: c00f
relocInfo@0x0000000111267c64 [type=12(metadata) addr=0x0000000111269b96 offset=15] | [metadata_addr=0x0000000111269b98 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267c66: a02f
relocInfo@0x0000000111267c66 [type=10(poll) addr=0x0000000111269bc5 offset=47]
         @0x0000000111267c68: c003
relocInfo@0x0000000111267c68 [type=12(metadata) addr=0x0000000111269bc8 offset=3] | [metadata_addr=0x0000000111269bca *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267c6a: c048
relocInfo@0x0000000111267c6a [type=12(metadata) addr=0x0000000111269c10 offset=72] | [metadata_addr=0x0000000111269c12 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267c6c: 108d
relocInfo@0x0000000111267c6c [type=1(oop) addr=0x0000000111269c9d offset=141] | [oop_addr=0x0000000111269c9f *=0x000000017e000250 offset=0]
         @0x0000000111267c6e: f00a242a
relocInfo@0x0000000111267c70 [type=2(virtual_call) addr=0x0000000111269cc7 offset=42 format=1 data=10] | [destination=0x0000000110bf9f20 cached_value=0x0000000111269cbd metadata=0x0000000000000000]
         @0x0000000111267c72: 9405
relocInfo@0x0000000111267c72 [type=9(section_word) addr=0x0000000111269ccc offset=5 format=1] | [target=0x00000001112682e0]
         @0x0000000111267c74: c016
relocInfo@0x0000000111267c74 [type=12(metadata) addr=0x0000000111269ce2 offset=22] | [metadata_addr=0x0000000111269ce4 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267c76: f00a24b5
relocInfo@0x0000000111267c78 [type=2(virtual_call) addr=0x0000000111269d97 offset=181 format=1 data=10] | [destination=0x0000000110bf9f20 cached_value=0x0000000111269d8d metadata=0x0000000000000000]
         @0x0000000111267c7a: f801ffe09405
relocInfo@0x0000000111267c7e [type=9(section_word) addr=0x0000000111269d9c offset=5 format=1 data=-32] | [target=0x00000001112682e8]
         @0x0000000111267c80: c062
relocInfo@0x0000000111267c80 [type=12(metadata) addr=0x0000000111269dfe offset=98] | [metadata_addr=0x0000000111269e00 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267c82: a034
relocInfo@0x0000000111267c82 [type=10(poll) addr=0x0000000111269e32 offset=52]
         @0x0000000111267c84: c003
relocInfo@0x0000000111267c84 [type=12(metadata) addr=0x0000000111269e35 offset=3] | [metadata_addr=0x0000000111269e37 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267c86: c01f
relocInfo@0x0000000111267c86 [type=12(metadata) addr=0x0000000111269e54 offset=31] | [metadata_addr=0x0000000111269e56 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267c88: c049
relocInfo@0x0000000111267c88 [type=12(metadata) addr=0x0000000111269e9d offset=73] | [metadata_addr=0x0000000111269e9f *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267c8a: c012
relocInfo@0x0000000111267c8a [type=12(metadata) addr=0x0000000111269eaf offset=18] | [metadata_addr=0x0000000111269eb1 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267c8c: 102d
relocInfo@0x0000000111267c8c [type=1(oop) addr=0x0000000111269edc offset=45] | [oop_addr=0x0000000111269ede *=0x000000017e000078 offset=0]
         @0x0000000111267c8e: c00d
relocInfo@0x0000000111267c8e [type=12(metadata) addr=0x0000000111269ee9 offset=13] | [metadata_addr=0x0000000111269eeb *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267c90: c015
relocInfo@0x0000000111267c90 [type=12(metadata) addr=0x0000000111269efe offset=21] | [metadata_addr=0x0000000111269f00 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267c92: c08d
relocInfo@0x0000000111267c92 [type=12(metadata) addr=0x0000000111269f8b offset=141] | [metadata_addr=0x0000000111269f8d *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267c94: c012
relocInfo@0x0000000111267c94 [type=12(metadata) addr=0x0000000111269f9d offset=18] | [metadata_addr=0x0000000111269f9f *=0x0000000267a9e268 offset=0]metadata_value=0x0000000267a9e268: method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267c96: c02d
relocInfo@0x0000000111267c96 [type=12(metadata) addr=0x0000000111269fca offset=45] | [metadata_addr=0x0000000111269fcc *=0x0000000267a9e268 offset=0]metadata_value=0x0000000267a9e268: method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267c98: c012
relocInfo@0x0000000111267c98 [type=12(metadata) addr=0x0000000111269fdc offset=18] | [metadata_addr=0x0000000111269fde *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267c9a: 1011
relocInfo@0x0000000111267c9a [type=1(oop) addr=0x0000000111269fed offset=17] | [oop_addr=0x0000000111269fef *=0x000000017e0000e8 offset=0]
         @0x0000000111267c9c: c019
relocInfo@0x0000000111267c9c [type=12(metadata) addr=0x000000011126a006 offset=25] | [metadata_addr=0x000000011126a008 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267c9e: c012
relocInfo@0x0000000111267c9e [type=12(metadata) addr=0x000000011126a018 offset=18] | [metadata_addr=0x000000011126a01a *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267ca0: c02d
relocInfo@0x0000000111267ca0 [type=12(metadata) addr=0x000000011126a045 offset=45] | [metadata_addr=0x000000011126a047 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x0000000111267ca2: c020
relocInfo@0x0000000111267ca2 [type=12(metadata) addr=0x000000011126a065 offset=32] | [metadata_addr=0x000000011126a067 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267ca4: c012
relocInfo@0x0000000111267ca4 [type=12(metadata) addr=0x000000011126a077 offset=18] | [metadata_addr=0x000000011126a079 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x0000000111267ca6: c02d
relocInfo@0x0000000111267ca6 [type=12(metadata) addr=0x000000011126a0a4 offset=45] | [metadata_addr=0x000000011126a0a6 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267ca8: 1011
relocInfo@0x0000000111267ca8 [type=1(oop) addr=0x000000011126a0b5 offset=17] | [oop_addr=0x000000011126a0b7 *=0x000000017e000118 offset=0]
         @0x0000000111267caa: c019
relocInfo@0x0000000111267caa [type=12(metadata) addr=0x000000011126a0ce offset=25] | [metadata_addr=0x000000011126a0d0 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267cac: c020
relocInfo@0x0000000111267cac [type=12(metadata) addr=0x000000011126a0ee offset=32] | [metadata_addr=0x000000011126a0f0 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267cae: 1012
relocInfo@0x0000000111267cae [type=1(oop) addr=0x000000011126a100 offset=18] | [oop_addr=0x000000011126a102 *=0x000000017e000128 offset=0]
         @0x0000000111267cb0: 100a
relocInfo@0x0000000111267cb0 [type=1(oop) addr=0x000000011126a10a offset=10] | [oop_addr=0x000000011126a10c *=0x000000011ff8c550 offset=0]
         @0x0000000111267cb2: 446d
relocInfo@0x0000000111267cb2 [type=4(static_call) addr=0x000000011126a177 offset=109 format=1] | [destination=0x0000000110bfa220 metadata=0x0000000000000000]
         @0x0000000111267cb4: c00b
relocInfo@0x0000000111267cb4 [type=12(metadata) addr=0x000000011126a182 offset=11] | [metadata_addr=0x000000011126a184 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267cb6: c016
relocInfo@0x0000000111267cb6 [type=12(metadata) addr=0x000000011126a198 offset=22] | [metadata_addr=0x000000011126a19a *=0x0000000225d4ce30 offset=0]metadata_value=0x0000000225d4ce30: 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267cb8: c01b
relocInfo@0x0000000111267cb8 [type=12(metadata) addr=0x000000011126a1b3 offset=27] | [metadata_addr=0x000000011126a1b5 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267cba: c08a
relocInfo@0x0000000111267cba [type=12(metadata) addr=0x000000011126a23d offset=138] | [metadata_addr=0x000000011126a23f *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267cbc: c01f
relocInfo@0x0000000111267cbc [type=12(metadata) addr=0x000000011126a25c offset=31] | [metadata_addr=0x000000011126a25e *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267cbe: c012
relocInfo@0x0000000111267cbe [type=12(metadata) addr=0x000000011126a26e offset=18] | [metadata_addr=0x000000011126a270 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267cc0: c030
relocInfo@0x0000000111267cc0 [type=12(metadata) addr=0x000000011126a29e offset=48] | [metadata_addr=0x000000011126a2a0 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267cc2: c01a
relocInfo@0x0000000111267cc2 [type=12(metadata) addr=0x000000011126a2b8 offset=26] | [metadata_addr=0x000000011126a2ba *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267cc4: c08d
relocInfo@0x0000000111267cc4 [type=12(metadata) addr=0x000000011126a345 offset=141] | [metadata_addr=0x000000011126a347 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267cc6: c012
relocInfo@0x0000000111267cc6 [type=12(metadata) addr=0x000000011126a357 offset=18] | [metadata_addr=0x000000011126a359 *=0x0000000267a9e268 offset=0]metadata_value=0x0000000267a9e268: method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267cc8: c028
relocInfo@0x0000000111267cc8 [type=12(metadata) addr=0x000000011126a37f offset=40] | [metadata_addr=0x000000011126a381 *=0x0000000267a9e268 offset=0]metadata_value=0x0000000267a9e268: method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267cca: c012
relocInfo@0x0000000111267cca [type=12(metadata) addr=0x000000011126a391 offset=18] | [metadata_addr=0x000000011126a393 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267ccc: c028
relocInfo@0x0000000111267ccc [type=12(metadata) addr=0x000000011126a3b9 offset=40] | [metadata_addr=0x000000011126a3bb *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267cce: c012
relocInfo@0x0000000111267cce [type=12(metadata) addr=0x000000011126a3cb offset=18] | [metadata_addr=0x000000011126a3cd *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267cd0: c028
relocInfo@0x0000000111267cd0 [type=12(metadata) addr=0x000000011126a3f3 offset=40] | [metadata_addr=0x000000011126a3f5 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x0000000111267cd2: c020
relocInfo@0x0000000111267cd2 [type=12(metadata) addr=0x000000011126a413 offset=32] | [metadata_addr=0x000000011126a415 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267cd4: c012
relocInfo@0x0000000111267cd4 [type=12(metadata) addr=0x000000011126a425 offset=18] | [metadata_addr=0x000000011126a427 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x0000000111267cd6: c028
relocInfo@0x0000000111267cd6 [type=12(metadata) addr=0x000000011126a44d offset=40] | [metadata_addr=0x000000011126a44f *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267cd8: c028
relocInfo@0x0000000111267cd8 [type=12(metadata) addr=0x000000011126a475 offset=40] | [metadata_addr=0x000000011126a477 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267cda: c020
relocInfo@0x0000000111267cda [type=12(metadata) addr=0x000000011126a495 offset=32] | [metadata_addr=0x000000011126a497 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267cdc: 4442
relocInfo@0x0000000111267cdc [type=4(static_call) addr=0x000000011126a4d7 offset=66 format=1] | [destination=0x0000000110bfa220 metadata=0x0000000000000000]
         @0x0000000111267cde: c00b
relocInfo@0x0000000111267cde [type=12(metadata) addr=0x000000011126a4e2 offset=11] | [metadata_addr=0x000000011126a4e4 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267ce0: c016
relocInfo@0x0000000111267ce0 [type=12(metadata) addr=0x000000011126a4f8 offset=22] | [metadata_addr=0x000000011126a4fa *=0x0000000225d4ce30 offset=0]metadata_value=0x0000000225d4ce30: 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267ce2: c01b
relocInfo@0x0000000111267ce2 [type=12(metadata) addr=0x000000011126a513 offset=27] | [metadata_addr=0x000000011126a515 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267ce4: c08a
relocInfo@0x0000000111267ce4 [type=12(metadata) addr=0x000000011126a59d offset=138] | [metadata_addr=0x000000011126a59f *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267ce6: c101
relocInfo@0x0000000111267ce6 [type=12(metadata) addr=0x000000011126a69e offset=257] | [metadata_addr=0x000000011126a6a0 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267ce8: c036
relocInfo@0x0000000111267ce8 [type=12(metadata) addr=0x000000011126a6d4 offset=54] | [metadata_addr=0x000000011126a6d6 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267cea: c012
relocInfo@0x0000000111267cea [type=12(metadata) addr=0x000000011126a6e6 offset=18] | [metadata_addr=0x000000011126a6e8 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267cec: 102d
relocInfo@0x0000000111267cec [type=1(oop) addr=0x000000011126a713 offset=45] | [oop_addr=0x000000011126a715 *=0x000000017e000078 offset=0]
         @0x0000000111267cee: c00a
relocInfo@0x0000000111267cee [type=12(metadata) addr=0x000000011126a71d offset=10] | [metadata_addr=0x000000011126a71f *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267cf0: c092
relocInfo@0x0000000111267cf0 [type=12(metadata) addr=0x000000011126a7af offset=146] | [metadata_addr=0x000000011126a7b1 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267cf2: c012
relocInfo@0x0000000111267cf2 [type=12(metadata) addr=0x000000011126a7c1 offset=18] | [metadata_addr=0x000000011126a7c3 *=0x0000000267a95d30 offset=0]metadata_value=0x0000000267a95d30: method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x0000000111267cf4: c02e
relocInfo@0x0000000111267cf4 [type=12(metadata) addr=0x000000011126a7ef offset=46] | [metadata_addr=0x000000011126a7f1 *=0x0000000267a95d30 offset=0]metadata_value=0x0000000267a95d30: method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x0000000111267cf6: c012
relocInfo@0x0000000111267cf6 [type=12(metadata) addr=0x000000011126a801 offset=18] | [metadata_addr=0x000000011126a803 *=0x00000002679f4c18 offset=0]metadata_value=0x00000002679f4c18: method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x0000000111267cf8: c02a
relocInfo@0x0000000111267cf8 [type=12(metadata) addr=0x000000011126a82b offset=42] | [metadata_addr=0x000000011126a82d *=0x00000002679f4c18 offset=0]metadata_value=0x00000002679f4c18: method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x0000000111267cfa: c012
relocInfo@0x0000000111267cfa [type=12(metadata) addr=0x000000011126a83d offset=18] | [metadata_addr=0x000000011126a83f *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111267cfc: c02e
relocInfo@0x0000000111267cfc [type=12(metadata) addr=0x000000011126a86b offset=46] | [metadata_addr=0x000000011126a86d *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111267cfe: c03a
relocInfo@0x0000000111267cfe [type=12(metadata) addr=0x000000011126a8a5 offset=58] | [metadata_addr=0x000000011126a8a7 *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111267d00: 1037
relocInfo@0x0000000111267d00 [type=1(oop) addr=0x000000011126a8dc offset=55] | [oop_addr=0x000000011126a8de *=0x000000017e000078 offset=0]
         @0x0000000111267d02: c00d
relocInfo@0x0000000111267d02 [type=12(metadata) addr=0x000000011126a8e9 offset=13] | [metadata_addr=0x000000011126a8eb *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267d04: c012
relocInfo@0x0000000111267d04 [type=12(metadata) addr=0x000000011126a8fb offset=18] | [metadata_addr=0x000000011126a8fd *=0x0000000267a948b0 offset=0]metadata_value=0x0000000267a948b0: method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x0000000111267d06: c02a
relocInfo@0x0000000111267d06 [type=12(metadata) addr=0x000000011126a925 offset=42] | [metadata_addr=0x000000011126a927 *=0x0000000267a948b0 offset=0]metadata_value=0x0000000267a948b0: method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x0000000111267d08: c012
relocInfo@0x0000000111267d08 [type=12(metadata) addr=0x000000011126a937 offset=18] | [metadata_addr=0x000000011126a939 *=0x0000000267a94a98 offset=0]metadata_value=0x0000000267a94a98: method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x0000000111267d0a: c02d
relocInfo@0x0000000111267d0a [type=12(metadata) addr=0x000000011126a964 offset=45] | [metadata_addr=0x000000011126a966 *=0x0000000267a94a98 offset=0]metadata_value=0x0000000267a94a98: method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x0000000111267d0c: 101a
relocInfo@0x0000000111267d0c [type=1(oop) addr=0x000000011126a97e offset=26] | [oop_addr=0x000000011126a980 *=0x000000017e000000 offset=0]
         @0x0000000111267d0e: c00d
relocInfo@0x0000000111267d0e [type=12(metadata) addr=0x000000011126a98b offset=13] | [metadata_addr=0x000000011126a98d *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267d10: c012
relocInfo@0x0000000111267d10 [type=12(metadata) addr=0x000000011126a99d offset=18] | [metadata_addr=0x000000011126a99f *=0x0000000267a95f60 offset=0]metadata_value=0x0000000267a95f60: method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x0000000111267d12: c02d
relocInfo@0x0000000111267d12 [type=12(metadata) addr=0x000000011126a9ca offset=45] | [metadata_addr=0x000000011126a9cc *=0x0000000267a95f60 offset=0]metadata_value=0x0000000267a95f60: method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x0000000111267d14: c012
relocInfo@0x0000000111267d14 [type=12(metadata) addr=0x000000011126a9dc offset=18] | [metadata_addr=0x000000011126a9de *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267d16: c02a
relocInfo@0x0000000111267d16 [type=12(metadata) addr=0x000000011126aa06 offset=42] | [metadata_addr=0x000000011126aa08 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267d18: c012
relocInfo@0x0000000111267d18 [type=12(metadata) addr=0x000000011126aa18 offset=18] | [metadata_addr=0x000000011126aa1a *=0x0000000267a96408 offset=0]metadata_value=0x0000000267a96408: method data for {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
         @0x0000000111267d1a: 102d
relocInfo@0x0000000111267d1a [type=1(oop) addr=0x000000011126aa45 offset=45] | [oop_addr=0x000000011126aa47 *=0x000000017e000078 offset=0]
         @0x0000000111267d1c: c00d
relocInfo@0x0000000111267d1c [type=12(metadata) addr=0x000000011126aa52 offset=13] | [metadata_addr=0x000000011126aa54 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267d1e: c015
relocInfo@0x0000000111267d1e [type=12(metadata) addr=0x000000011126aa67 offset=21] | [metadata_addr=0x000000011126aa69 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267d20: c012
relocInfo@0x0000000111267d20 [type=12(metadata) addr=0x000000011126aa79 offset=18] | [metadata_addr=0x000000011126aa7b *=0x0000000267a95910 offset=0]metadata_value=0x0000000267a95910: method data for {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x0000000111267d22: c02a
relocInfo@0x0000000111267d22 [type=12(metadata) addr=0x000000011126aaa3 offset=42] | [metadata_addr=0x000000011126aaa5 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267d24: c012
relocInfo@0x0000000111267d24 [type=12(metadata) addr=0x000000011126aab5 offset=18] | [metadata_addr=0x000000011126aab7 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267d26: c012
relocInfo@0x0000000111267d26 [type=12(metadata) addr=0x000000011126aac7 offset=18] | [metadata_addr=0x000000011126aac9 *=0x0000000267a96588 offset=0]metadata_value=0x0000000267a96588: method data for {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267d28: c045
relocInfo@0x0000000111267d28 [type=12(metadata) addr=0x000000011126ab0c offset=69] | [metadata_addr=0x000000011126ab0e *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267d2a: 1011
relocInfo@0x0000000111267d2a [type=1(oop) addr=0x000000011126ab1d offset=17] | [oop_addr=0x000000011126ab1f *=0x000000017e000210 offset=0]
         @0x0000000111267d2c: c019
relocInfo@0x0000000111267d2c [type=12(metadata) addr=0x000000011126ab36 offset=25] | [metadata_addr=0x000000011126ab38 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267d2e: c012
relocInfo@0x0000000111267d2e [type=12(metadata) addr=0x000000011126ab48 offset=18] | [metadata_addr=0x000000011126ab4a *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267d30: c028
relocInfo@0x0000000111267d30 [type=12(metadata) addr=0x000000011126ab70 offset=40] | [metadata_addr=0x000000011126ab72 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x0000000111267d32: c01d
relocInfo@0x0000000111267d32 [type=12(metadata) addr=0x000000011126ab8d offset=29] | [metadata_addr=0x000000011126ab8f *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267d34: c012
relocInfo@0x0000000111267d34 [type=12(metadata) addr=0x000000011126ab9f offset=18] | [metadata_addr=0x000000011126aba1 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x0000000111267d36: c02d
relocInfo@0x0000000111267d36 [type=12(metadata) addr=0x000000011126abcc offset=45] | [metadata_addr=0x000000011126abce *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267d38: 1011
relocInfo@0x0000000111267d38 [type=1(oop) addr=0x000000011126abdd offset=17] | [oop_addr=0x000000011126abdf *=0x000000017e000240 offset=0]
         @0x0000000111267d3a: c019
relocInfo@0x0000000111267d3a [type=12(metadata) addr=0x000000011126abf6 offset=25] | [metadata_addr=0x000000011126abf8 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267d3c: c01d
relocInfo@0x0000000111267d3c [type=12(metadata) addr=0x000000011126ac13 offset=29] | [metadata_addr=0x000000011126ac15 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267d3e: 1012
relocInfo@0x0000000111267d3e [type=1(oop) addr=0x000000011126ac25 offset=18] | [oop_addr=0x000000011126ac27 *=0x000000017e000128 offset=0]
         @0x0000000111267d40: 100a
relocInfo@0x0000000111267d40 [type=1(oop) addr=0x000000011126ac2f offset=10] | [oop_addr=0x000000011126ac31 *=0x000000011ff8c550 offset=0]
         @0x0000000111267d42: 1042
relocInfo@0x0000000111267d42 [type=1(oop) addr=0x000000011126ac71 offset=66] | [oop_addr=0x000000011126ac73 *=0x000000017e000078 offset=0]
         @0x0000000111267d44: 100f
relocInfo@0x0000000111267d44 [type=1(oop) addr=0x000000011126ac80 offset=15] | [oop_addr=0x000000011126ac82 *=0x000000017e000240 offset=0]
         @0x0000000111267d46: 4417
relocInfo@0x0000000111267d46 [type=4(static_call) addr=0x000000011126ac97 offset=23 format=1] | [destination=0x00000001186844c0 metadata=0x0000000000000000]
         @0x0000000111267d48: c00b
relocInfo@0x0000000111267d48 [type=12(metadata) addr=0x000000011126aca2 offset=11] | [metadata_addr=0x000000011126aca4 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267d4a: c016
relocInfo@0x0000000111267d4a [type=12(metadata) addr=0x000000011126acb8 offset=22] | [metadata_addr=0x000000011126acba *=0x0000000225d4ce30 offset=0]metadata_value=0x0000000225d4ce30: 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267d4c: c01b
relocInfo@0x0000000111267d4c [type=12(metadata) addr=0x000000011126acd3 offset=27] | [metadata_addr=0x000000011126acd5 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267d4e: c08a
relocInfo@0x0000000111267d4e [type=12(metadata) addr=0x000000011126ad5d offset=138] | [metadata_addr=0x000000011126ad5f *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267d50: c025
relocInfo@0x0000000111267d50 [type=12(metadata) addr=0x000000011126ad82 offset=37] | [metadata_addr=0x000000011126ad84 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267d52: c012
relocInfo@0x0000000111267d52 [type=12(metadata) addr=0x000000011126ad94 offset=18] | [metadata_addr=0x000000011126ad96 *=0x0000000267a9e688 offset=0]metadata_value=0x0000000267a9e688: method data for {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267d54: c02b
relocInfo@0x0000000111267d54 [type=12(metadata) addr=0x000000011126adbf offset=43] | [metadata_addr=0x000000011126adc1 *=0x0000000267a9e688 offset=0]metadata_value=0x0000000267a9e688: method data for {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267d56: c012
relocInfo@0x0000000111267d56 [type=12(metadata) addr=0x000000011126add1 offset=18] | [metadata_addr=0x000000011126add3 *=0x0000000267a9e870 offset=0]metadata_value=0x0000000267a9e870: method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267d58: c02b
relocInfo@0x0000000111267d58 [type=12(metadata) addr=0x000000011126adfc offset=43] | [metadata_addr=0x000000011126adfe *=0x0000000267a9e870 offset=0]metadata_value=0x0000000267a9e870: method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267d5a: f00a24ab
relocInfo@0x0000000111267d5c [type=2(virtual_call) addr=0x000000011126aea7 offset=171 format=1 data=10] | [destination=0x00000001186951c0 cached_value=0x000000011126ae9d metadata=0x0000000000000000]
         @0x0000000111267d5e: c00d
relocInfo@0x0000000111267d5e [type=12(metadata) addr=0x000000011126aeb4 offset=13] | [metadata_addr=0x000000011126aeb6 *=0x0000000267a9e870 offset=0]metadata_value=0x0000000267a9e870: method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267d60: 108d
relocInfo@0x0000000111267d60 [type=1(oop) addr=0x000000011126af41 offset=141] | [oop_addr=0x000000011126af43 *=0x000000017e000270 offset=0]
         @0x0000000111267d62: f00a2426
relocInfo@0x0000000111267d64 [type=2(virtual_call) addr=0x000000011126af67 offset=38 format=1 data=10] | [destination=0x0000000118694020 cached_value=0x000000011126af5d metadata=0x0000000000000000]
         @0x0000000111267d66: c00d
relocInfo@0x0000000111267d66 [type=12(metadata) addr=0x000000011126af74 offset=13] | [metadata_addr=0x000000011126af76 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267d68: c012
relocInfo@0x0000000111267d68 [type=12(metadata) addr=0x000000011126af86 offset=18] | [metadata_addr=0x000000011126af88 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267d6a: 1028
relocInfo@0x0000000111267d6a [type=1(oop) addr=0x000000011126afae offset=40] | [oop_addr=0x000000011126afb0 *=0x000000017e000078 offset=0]
         @0x0000000111267d6c: c00a
relocInfo@0x0000000111267d6c [type=12(metadata) addr=0x000000011126afb8 offset=10] | [metadata_addr=0x000000011126afba *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267d6e: c099
relocInfo@0x0000000111267d6e [type=12(metadata) addr=0x000000011126b051 offset=153] | [metadata_addr=0x000000011126b053 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267d70: c012
relocInfo@0x0000000111267d70 [type=12(metadata) addr=0x000000011126b063 offset=18] | [metadata_addr=0x000000011126b065 *=0x0000000267a95d30 offset=0]metadata_value=0x0000000267a95d30: method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x0000000111267d72: c036
relocInfo@0x0000000111267d72 [type=12(metadata) addr=0x000000011126b099 offset=54] | [metadata_addr=0x000000011126b09b *=0x0000000267a95d30 offset=0]metadata_value=0x0000000267a95d30: method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x0000000111267d74: c012
relocInfo@0x0000000111267d74 [type=12(metadata) addr=0x000000011126b0ab offset=18] | [metadata_addr=0x000000011126b0ad *=0x00000002679f4c18 offset=0]metadata_value=0x00000002679f4c18: method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x0000000111267d76: c028
relocInfo@0x0000000111267d76 [type=12(metadata) addr=0x000000011126b0d3 offset=40] | [metadata_addr=0x000000011126b0d5 *=0x00000002679f4c18 offset=0]metadata_value=0x00000002679f4c18: method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x0000000111267d78: c012
relocInfo@0x0000000111267d78 [type=12(metadata) addr=0x000000011126b0e5 offset=18] | [metadata_addr=0x000000011126b0e7 *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111267d7a: c02c
relocInfo@0x0000000111267d7a [type=12(metadata) addr=0x000000011126b111 offset=44] | [metadata_addr=0x000000011126b113 *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111267d7c: c039
relocInfo@0x0000000111267d7c [type=12(metadata) addr=0x000000011126b14a offset=57] | [metadata_addr=0x000000011126b14c *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111267d7e: 1036
relocInfo@0x0000000111267d7e [type=1(oop) addr=0x000000011126b180 offset=54] | [oop_addr=0x000000011126b182 *=0x000000017e000078 offset=0]
         @0x0000000111267d80: c00d
relocInfo@0x0000000111267d80 [type=12(metadata) addr=0x000000011126b18d offset=13] | [metadata_addr=0x000000011126b18f *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267d82: c012
relocInfo@0x0000000111267d82 [type=12(metadata) addr=0x000000011126b19f offset=18] | [metadata_addr=0x000000011126b1a1 *=0x0000000267a948b0 offset=0]metadata_value=0x0000000267a948b0: method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x0000000111267d84: c028
relocInfo@0x0000000111267d84 [type=12(metadata) addr=0x000000011126b1c7 offset=40] | [metadata_addr=0x000000011126b1c9 *=0x0000000267a948b0 offset=0]metadata_value=0x0000000267a948b0: method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x0000000111267d86: c012
relocInfo@0x0000000111267d86 [type=12(metadata) addr=0x000000011126b1d9 offset=18] | [metadata_addr=0x000000011126b1db *=0x0000000267a94a98 offset=0]metadata_value=0x0000000267a94a98: method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x0000000111267d88: c028
relocInfo@0x0000000111267d88 [type=12(metadata) addr=0x000000011126b201 offset=40] | [metadata_addr=0x000000011126b203 *=0x0000000267a94a98 offset=0]metadata_value=0x0000000267a94a98: method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x0000000111267d8a: 1018
relocInfo@0x0000000111267d8a [type=1(oop) addr=0x000000011126b219 offset=24] | [oop_addr=0x000000011126b21b *=0x000000017e000000 offset=0]
         @0x0000000111267d8c: c00d
relocInfo@0x0000000111267d8c [type=12(metadata) addr=0x000000011126b226 offset=13] | [metadata_addr=0x000000011126b228 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267d8e: c012
relocInfo@0x0000000111267d8e [type=12(metadata) addr=0x000000011126b238 offset=18] | [metadata_addr=0x000000011126b23a *=0x0000000267a95f60 offset=0]metadata_value=0x0000000267a95f60: method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x0000000111267d90: c02b
relocInfo@0x0000000111267d90 [type=12(metadata) addr=0x000000011126b263 offset=43] | [metadata_addr=0x000000011126b265 *=0x0000000267a95f60 offset=0]metadata_value=0x0000000267a95f60: method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x0000000111267d92: c012
relocInfo@0x0000000111267d92 [type=12(metadata) addr=0x000000011126b275 offset=18] | [metadata_addr=0x000000011126b277 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267d94: c028
relocInfo@0x0000000111267d94 [type=12(metadata) addr=0x000000011126b29d offset=40] | [metadata_addr=0x000000011126b29f *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267d96: c012
relocInfo@0x0000000111267d96 [type=12(metadata) addr=0x000000011126b2af offset=18] | [metadata_addr=0x000000011126b2b1 *=0x0000000267a96408 offset=0]metadata_value=0x0000000267a96408: method data for {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
         @0x0000000111267d98: 1028
relocInfo@0x0000000111267d98 [type=1(oop) addr=0x000000011126b2d7 offset=40] | [oop_addr=0x000000011126b2d9 *=0x000000017e000078 offset=0]
         @0x0000000111267d9a: c00d
relocInfo@0x0000000111267d9a [type=12(metadata) addr=0x000000011126b2e4 offset=13] | [metadata_addr=0x000000011126b2e6 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267d9c: c015
relocInfo@0x0000000111267d9c [type=12(metadata) addr=0x000000011126b2f9 offset=21] | [metadata_addr=0x000000011126b2fb *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267d9e: c012
relocInfo@0x0000000111267d9e [type=12(metadata) addr=0x000000011126b30b offset=18] | [metadata_addr=0x000000011126b30d *=0x0000000267a95910 offset=0]metadata_value=0x0000000267a95910: method data for {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x0000000111267da0: c028
relocInfo@0x0000000111267da0 [type=12(metadata) addr=0x000000011126b333 offset=40] | [metadata_addr=0x000000011126b335 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267da2: c012
relocInfo@0x0000000111267da2 [type=12(metadata) addr=0x000000011126b345 offset=18] | [metadata_addr=0x000000011126b347 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267da4: c012
relocInfo@0x0000000111267da4 [type=12(metadata) addr=0x000000011126b357 offset=18] | [metadata_addr=0x000000011126b359 *=0x0000000267a96588 offset=0]metadata_value=0x0000000267a96588: method data for {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267da6: c028
relocInfo@0x0000000111267da6 [type=12(metadata) addr=0x000000011126b37f offset=40] | [metadata_addr=0x000000011126b381 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267da8: 1011
relocInfo@0x0000000111267da8 [type=1(oop) addr=0x000000011126b390 offset=17] | [oop_addr=0x000000011126b392 *=0x000000017e000210 offset=0]
         @0x0000000111267daa: c019
relocInfo@0x0000000111267daa [type=12(metadata) addr=0x000000011126b3a9 offset=25] | [metadata_addr=0x000000011126b3ab *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267dac: c012
relocInfo@0x0000000111267dac [type=12(metadata) addr=0x000000011126b3bb offset=18] | [metadata_addr=0x000000011126b3bd *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267dae: c028
relocInfo@0x0000000111267dae [type=12(metadata) addr=0x000000011126b3e3 offset=40] | [metadata_addr=0x000000011126b3e5 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x0000000111267db0: c01d
relocInfo@0x0000000111267db0 [type=12(metadata) addr=0x000000011126b400 offset=29] | [metadata_addr=0x000000011126b402 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267db2: c012
relocInfo@0x0000000111267db2 [type=12(metadata) addr=0x000000011126b412 offset=18] | [metadata_addr=0x000000011126b414 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x0000000111267db4: c028
relocInfo@0x0000000111267db4 [type=12(metadata) addr=0x000000011126b43a offset=40] | [metadata_addr=0x000000011126b43c *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267db6: 1011
relocInfo@0x0000000111267db6 [type=1(oop) addr=0x000000011126b44b offset=17] | [oop_addr=0x000000011126b44d *=0x000000017e000240 offset=0]
         @0x0000000111267db8: c019
relocInfo@0x0000000111267db8 [type=12(metadata) addr=0x000000011126b464 offset=25] | [metadata_addr=0x000000011126b466 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267dba: c01d
relocInfo@0x0000000111267dba [type=12(metadata) addr=0x000000011126b481 offset=29] | [metadata_addr=0x000000011126b483 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267dbc: 1012
relocInfo@0x0000000111267dbc [type=1(oop) addr=0x000000011126b493 offset=18] | [oop_addr=0x000000011126b495 *=0x000000017e000128 offset=0]
         @0x0000000111267dbe: 100a
relocInfo@0x0000000111267dbe [type=1(oop) addr=0x000000011126b49d offset=10] | [oop_addr=0x000000011126b49f *=0x000000011ff8c550 offset=0]
         @0x0000000111267dc0: 1019
relocInfo@0x0000000111267dc0 [type=1(oop) addr=0x000000011126b4b6 offset=25] | [oop_addr=0x000000011126b4b8 *=0x000000017e000078 offset=0]
         @0x0000000111267dc2: 100f
relocInfo@0x0000000111267dc2 [type=1(oop) addr=0x000000011126b4c5 offset=15] | [oop_addr=0x000000011126b4c7 *=0x000000017e000240 offset=0]
         @0x0000000111267dc4: 4422
relocInfo@0x0000000111267dc4 [type=4(static_call) addr=0x000000011126b4e7 offset=34 format=1] | [destination=0x00000001186844c0 metadata=0x0000000000000000]
         @0x0000000111267dc6: c00b
relocInfo@0x0000000111267dc6 [type=12(metadata) addr=0x000000011126b4f2 offset=11] | [metadata_addr=0x000000011126b4f4 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267dc8: c016
relocInfo@0x0000000111267dc8 [type=12(metadata) addr=0x000000011126b508 offset=22] | [metadata_addr=0x000000011126b50a *=0x0000000225d4ce30 offset=0]metadata_value=0x0000000225d4ce30: 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267dca: c01b
relocInfo@0x0000000111267dca [type=12(metadata) addr=0x000000011126b523 offset=27] | [metadata_addr=0x000000011126b525 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267dcc: c08a
relocInfo@0x0000000111267dcc [type=12(metadata) addr=0x000000011126b5ad offset=138] | [metadata_addr=0x000000011126b5af *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267dce: c025
relocInfo@0x0000000111267dce [type=12(metadata) addr=0x000000011126b5d2 offset=37] | [metadata_addr=0x000000011126b5d4 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267dd0: c012
relocInfo@0x0000000111267dd0 [type=12(metadata) addr=0x000000011126b5e4 offset=18] | [metadata_addr=0x000000011126b5e6 *=0x0000000267a9e688 offset=0]metadata_value=0x0000000267a9e688: method data for {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267dd2: c02b
relocInfo@0x0000000111267dd2 [type=12(metadata) addr=0x000000011126b60f offset=43] | [metadata_addr=0x000000011126b611 *=0x0000000267a9e688 offset=0]metadata_value=0x0000000267a9e688: method data for {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267dd4: c012
relocInfo@0x0000000111267dd4 [type=12(metadata) addr=0x000000011126b621 offset=18] | [metadata_addr=0x000000011126b623 *=0x0000000267a9e870 offset=0]metadata_value=0x0000000267a9e870: method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267dd6: c02b
relocInfo@0x0000000111267dd6 [type=12(metadata) addr=0x000000011126b64c offset=43] | [metadata_addr=0x000000011126b64e *=0x0000000267a9e870 offset=0]metadata_value=0x0000000267a9e870: method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267dd8: f00a24ab
relocInfo@0x0000000111267dda [type=2(virtual_call) addr=0x000000011126b6f7 offset=171 format=1 data=10] | [destination=0x00000001186951c0 cached_value=0x000000011126b6ed metadata=0x0000000000000000]
         @0x0000000111267ddc: c00d
relocInfo@0x0000000111267ddc [type=12(metadata) addr=0x000000011126b704 offset=13] | [metadata_addr=0x000000011126b706 *=0x0000000267a9e870 offset=0]metadata_value=0x0000000267a9e870: method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267dde: 108d
relocInfo@0x0000000111267dde [type=1(oop) addr=0x000000011126b791 offset=141] | [oop_addr=0x000000011126b793 *=0x000000017e000270 offset=0]
         @0x0000000111267de0: f00a2426
relocInfo@0x0000000111267de2 [type=2(virtual_call) addr=0x000000011126b7b7 offset=38 format=1 data=10] | [destination=0x0000000118694020 cached_value=0x000000011126b7ad metadata=0x0000000000000000]
         @0x0000000111267de4: c00b
relocInfo@0x0000000111267de4 [type=12(metadata) addr=0x000000011126b7c2 offset=11] | [metadata_addr=0x000000011126b7c4 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267de6: c012
relocInfo@0x0000000111267de6 [type=12(metadata) addr=0x000000011126b7d4 offset=18] | [metadata_addr=0x000000011126b7d6 *=0x0000000267a9ea98 offset=0]metadata_value=0x0000000267a9ea98: method data for {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267de8: c02b
relocInfo@0x0000000111267de8 [type=12(metadata) addr=0x000000011126b7ff offset=43] | [metadata_addr=0x000000011126b801 *=0x0000000267a9ea98 offset=0]metadata_value=0x0000000267a9ea98: method data for {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267dea: 108d
relocInfo@0x0000000111267dea [type=1(oop) addr=0x000000011126b88c offset=141] | [oop_addr=0x000000011126b88e *=0x000000017e000290 offset=0]
         @0x0000000111267dec: f00a242b
relocInfo@0x0000000111267dee [type=2(virtual_call) addr=0x000000011126b8b7 offset=43 format=1 data=10] | [destination=0x0000000118694020 cached_value=0x000000011126b8ad metadata=0x0000000000000000]
         @0x0000000111267df0: c013
relocInfo@0x0000000111267df0 [type=12(metadata) addr=0x000000011126b8ca offset=19] | [metadata_addr=0x000000011126b8cc *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267df2: c012
relocInfo@0x0000000111267df2 [type=12(metadata) addr=0x000000011126b8dc offset=18] | [metadata_addr=0x000000011126b8de *=0x0000000267a97298 offset=0]metadata_value=0x0000000267a97298: method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267df4: c02b
relocInfo@0x0000000111267df4 [type=12(metadata) addr=0x000000011126b907 offset=43] | [metadata_addr=0x000000011126b909 *=0x0000000267a97298 offset=0]metadata_value=0x0000000267a97298: method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267df6: 108d
relocInfo@0x0000000111267df6 [type=1(oop) addr=0x000000011126b994 offset=141] | [oop_addr=0x000000011126b996 *=0x000000017e000250 offset=0]
         @0x0000000111267df8: f00a242b
relocInfo@0x0000000111267dfa [type=2(virtual_call) addr=0x000000011126b9bf offset=43 format=1 data=10] | [destination=0x0000000118694020 cached_value=0x000000011126b9b5 metadata=0x0000000000000000]
         @0x0000000111267dfc: c013
relocInfo@0x0000000111267dfc [type=12(metadata) addr=0x000000011126b9d2 offset=19] | [metadata_addr=0x000000011126b9d4 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267dfe: c012
relocInfo@0x0000000111267dfe [type=12(metadata) addr=0x000000011126b9e4 offset=18] | [metadata_addr=0x000000011126b9e6 *=0x0000000267a9ea98 offset=0]metadata_value=0x0000000267a9ea98: method data for {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267e00: c02b
relocInfo@0x0000000111267e00 [type=12(metadata) addr=0x000000011126ba0f offset=43] | [metadata_addr=0x000000011126ba11 *=0x0000000267a9ea98 offset=0]metadata_value=0x0000000267a9ea98: method data for {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267e02: f00a24b0
relocInfo@0x0000000111267e04 [type=2(virtual_call) addr=0x000000011126babf offset=176 format=1 data=10] | [destination=0x0000000118694020 cached_value=0x000000011126bab5 metadata=0x0000000000000000]
         @0x0000000111267e06: c013
relocInfo@0x0000000111267e06 [type=12(metadata) addr=0x000000011126bad2 offset=19] | [metadata_addr=0x000000011126bad4 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267e08: c012
relocInfo@0x0000000111267e08 [type=12(metadata) addr=0x000000011126bae4 offset=18] | [metadata_addr=0x000000011126bae6 *=0x0000000267a97298 offset=0]metadata_value=0x0000000267a97298: method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267e0a: c02b
relocInfo@0x0000000111267e0a [type=12(metadata) addr=0x000000011126bb0f offset=43] | [metadata_addr=0x000000011126bb11 *=0x0000000267a97298 offset=0]metadata_value=0x0000000267a97298: method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267e0c: f00a24a8
relocInfo@0x0000000111267e0e [type=2(virtual_call) addr=0x000000011126bbb7 offset=168 format=1 data=10] | [destination=0x0000000118694020 cached_value=0x000000011126bbad metadata=0x0000000000000000]
         @0x0000000111267e10: c011
relocInfo@0x0000000111267e10 [type=12(metadata) addr=0x000000011126bbc8 offset=17] | [metadata_addr=0x000000011126bbca *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267e12: a02f
relocInfo@0x0000000111267e12 [type=10(poll) addr=0x000000011126bbf7 offset=47]
         @0x0000000111267e14: c003
relocInfo@0x0000000111267e14 [type=12(metadata) addr=0x000000011126bbfa offset=3] | [metadata_addr=0x000000011126bbfc *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267e16: c05f
relocInfo@0x0000000111267e16 [type=12(metadata) addr=0x000000011126bc59 offset=95] | [metadata_addr=0x000000011126bc5b *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267e18: 108d
relocInfo@0x0000000111267e18 [type=1(oop) addr=0x000000011126bce6 offset=141] | [oop_addr=0x000000011126bce8 *=0x000000017e000250 offset=0]
         @0x0000000111267e1a: f00a2429
relocInfo@0x0000000111267e1c [type=2(virtual_call) addr=0x000000011126bd0f offset=41 format=1 data=10] | [destination=0x0000000110bf9f20 cached_value=0x000000011126bd05 metadata=0x0000000000000000]
         @0x0000000111267e1e: c01c
relocInfo@0x0000000111267e1e [type=12(metadata) addr=0x000000011126bd2b offset=28] | [metadata_addr=0x000000011126bd2d *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267e20: f00a24ac
relocInfo@0x0000000111267e22 [type=2(virtual_call) addr=0x000000011126bdd7 offset=172 format=1 data=10] | [destination=0x0000000110bf9f20 cached_value=0x000000011126bdcd metadata=0x0000000000000000]
         @0x0000000111267e24: c089
relocInfo@0x0000000111267e24 [type=12(metadata) addr=0x000000011126be60 offset=137] | [metadata_addr=0x000000011126be62 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267e26: a02f
relocInfo@0x0000000111267e26 [type=10(poll) addr=0x000000011126be8f offset=47]
         @0x0000000111267e28: c003
relocInfo@0x0000000111267e28 [type=12(metadata) addr=0x000000011126be92 offset=3] | [metadata_addr=0x000000011126be94 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267e2a: c01e
relocInfo@0x0000000111267e2a [type=12(metadata) addr=0x000000011126beb0 offset=30] | [metadata_addr=0x000000011126beb2 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267e2c: b06c
relocInfo@0x0000000111267e2c [type=11(poll_return) addr=0x000000011126bf1c offset=108]
         @0x0000000111267e2e: c027
relocInfo@0x0000000111267e2e [type=12(metadata) addr=0x000000011126bf43 offset=39] | [metadata_addr=0x000000011126bf45 *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111267e30: 1012
relocInfo@0x0000000111267e30 [type=1(oop) addr=0x000000011126bf55 offset=18] | [oop_addr=0x000000011126bf57 *=0x0000000000000000 offset=0]
         @0x0000000111267e32: 441a
relocInfo@0x0000000111267e32 [type=4(static_call) addr=0x000000011126bf6f offset=26 format=1] | [destination=0x0000000110bfa220 metadata=0x0000000000000000]
         @0x0000000111267e34: c015
relocInfo@0x0000000111267e34 [type=12(metadata) addr=0x000000011126bf84 offset=21] | [metadata_addr=0x000000011126bf86 *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111267e36: 1012
relocInfo@0x0000000111267e36 [type=1(oop) addr=0x000000011126bf96 offset=18] | [oop_addr=0x000000011126bf98 *=0x0000000000000000 offset=0]
         @0x0000000111267e38: 4419
relocInfo@0x0000000111267e38 [type=4(static_call) addr=0x000000011126bfaf offset=25 format=1] | [destination=0x0000000110bfa220 metadata=0x0000000000000000]
         @0x0000000111267e3a: c014
relocInfo@0x0000000111267e3a [type=12(metadata) addr=0x000000011126bfc3 offset=20] | [metadata_addr=0x000000011126bfc5 *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111267e3c: 1012
relocInfo@0x0000000111267e3c [type=1(oop) addr=0x000000011126bfd5 offset=18] | [oop_addr=0x000000011126bfd7 *=0x0000000000000000 offset=0]
         @0x0000000111267e3e: 441a
relocInfo@0x0000000111267e3e [type=4(static_call) addr=0x000000011126bfef offset=26 format=1] | [destination=0x0000000110bfa220 metadata=0x0000000000000000]
         @0x0000000111267e40: c010
relocInfo@0x0000000111267e40 [type=12(metadata) addr=0x000000011126bfff offset=16] | [metadata_addr=0x000000011126c001 *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111267e42: 1012
relocInfo@0x0000000111267e42 [type=1(oop) addr=0x000000011126c011 offset=18] | [oop_addr=0x000000011126c013 *=0x0000000000000000 offset=0]
         @0x0000000111267e44: 441e
relocInfo@0x0000000111267e44 [type=4(static_call) addr=0x000000011126c02f offset=30 format=1] | [destination=0x0000000110bfa220 metadata=0x0000000000000000]
         @0x0000000111267e46: 0011
relocInfo@0x0000000111267e46 [type=0(none) addr=0x000000011126c040 offset=17]
         @0x0000000111267e48: c05a
relocInfo@0x0000000111267e48 [type=12(metadata) addr=0x000000011126c09a offset=90] | [metadata_addr=0x000000011126c09c *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267e4a: 1012
relocInfo@0x0000000111267e4a [type=1(oop) addr=0x000000011126c0ac offset=18] | [oop_addr=0x000000011126c0ae *=0x000000017e0002b0 offset=0]
         @0x0000000111267e4c: 341b
relocInfo@0x0000000111267e4c [type=3(opt_virtual_call) addr=0x000000011126c0c7 offset=27 format=1] | [destination=0x0000000110bf9c20 metadata=0x0000000000000000]
         @0x0000000111267e4e: 64d1
relocInfo@0x0000000111267e4e [type=6(runtime_call) addr=0x000000011126c198 offset=209 format=1] | [destination=0x00000001097810a0]
         @0x0000000111267e50: c0eb
relocInfo@0x0000000111267e50 [type=12(metadata) addr=0x000000011126c283 offset=235] | [metadata_addr=0x000000011126c285 *=0x000000026788fe18 offset=0]metadata_value=0x000000026788fe18: {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267e52: 6417
relocInfo@0x0000000111267e52 [type=6(runtime_call) addr=0x000000011126c29a offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267e54: 640a
relocInfo@0x0000000111267e54 [type=6(runtime_call) addr=0x000000011126c2a4 offset=10 format=1] | [destination=0x0000000110b44540]
         @0x0000000111267e56: f80309b26b6900017005
relocInfo@0x0000000111267e5e [type=7(external_word) addr=0x000000011126c2a9 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111267e60: 640e
relocInfo@0x0000000111267e60 [type=6(runtime_call) addr=0x000000011126c2b7 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111267e62: 6406
relocInfo@0x0000000111267e62 [type=6(runtime_call) addr=0x000000011126c2bd offset=6 format=1] | [destination=0x0000000110b44540]
         @0x0000000111267e64: f80309b26b6900017005
relocInfo@0x0000000111267e6c [type=7(external_word) addr=0x000000011126c2c2 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111267e6e: 640e
relocInfo@0x0000000111267e6e [type=6(runtime_call) addr=0x000000011126c2d0 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111267e70: c006
relocInfo@0x0000000111267e70 [type=12(metadata) addr=0x000000011126c2d6 offset=6] | [metadata_addr=0x000000011126c2d8 *=0x0000000267b3fa08 offset=0]metadata_value=0x0000000267b3fa08: {method} {0x0000000267b3fa08} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
         @0x0000000111267e72: 6417
relocInfo@0x0000000111267e72 [type=6(runtime_call) addr=0x000000011126c2ed offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267e74: c00a
relocInfo@0x0000000111267e74 [type=12(metadata) addr=0x000000011126c2f7 offset=10] | [metadata_addr=0x000000011126c2f9 *=0x0000000267b96588 offset=0]metadata_value=0x0000000267b96588: {method} {0x0000000267b96588} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x0000000111267e76: 6417
relocInfo@0x0000000111267e76 [type=6(runtime_call) addr=0x000000011126c30e offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267e78: c00a
relocInfo@0x0000000111267e78 [type=12(metadata) addr=0x000000011126c318 offset=10] | [metadata_addr=0x000000011126c31a *=0x0000000267b17448 offset=0]metadata_value=0x0000000267b17448: {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267e7a: 6417
relocInfo@0x0000000111267e7a [type=6(runtime_call) addr=0x000000011126c32f offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267e7c: c00a
relocInfo@0x0000000111267e7c [type=12(metadata) addr=0x000000011126c339 offset=10] | [metadata_addr=0x000000011126c33b *=0x0000000267b17270 offset=0]metadata_value=0x0000000267b17270: {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267e7e: 6417
relocInfo@0x0000000111267e7e [type=6(runtime_call) addr=0x000000011126c350 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267e80: c00a
relocInfo@0x0000000111267e80 [type=12(metadata) addr=0x000000011126c35a offset=10] | [metadata_addr=0x000000011126c35c *=0x000000011040aa78 offset=0]metadata_value=0x000000011040aa78: {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267e82: 6417
relocInfo@0x0000000111267e82 [type=6(runtime_call) addr=0x000000011126c371 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267e84: c00a
relocInfo@0x0000000111267e84 [type=12(metadata) addr=0x000000011126c37b offset=10] | [metadata_addr=0x000000011126c37d *=0x0000000110409a78 offset=0]metadata_value=0x0000000110409a78: {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x0000000111267e86: 6417
relocInfo@0x0000000111267e86 [type=6(runtime_call) addr=0x000000011126c392 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267e88: 640e
relocInfo@0x0000000111267e88 [type=6(runtime_call) addr=0x000000011126c3a0 offset=14 format=1] | [destination=0x0000000110b41ac0]
         @0x0000000111267e8a: f80309b26b6900017005
relocInfo@0x0000000111267e92 [type=7(external_word) addr=0x000000011126c3a5 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111267e94: 640e
relocInfo@0x0000000111267e94 [type=6(runtime_call) addr=0x000000011126c3b3 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111267e96: c006
relocInfo@0x0000000111267e96 [type=12(metadata) addr=0x000000011126c3b9 offset=6] | [metadata_addr=0x000000011126c3bb *=0x0000000267b17448 offset=0]metadata_value=0x0000000267b17448: {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267e98: 6417
relocInfo@0x0000000111267e98 [type=6(runtime_call) addr=0x000000011126c3d0 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267e9a: c00a
relocInfo@0x0000000111267e9a [type=12(metadata) addr=0x000000011126c3da offset=10] | [metadata_addr=0x000000011126c3dc *=0x0000000267b17270 offset=0]metadata_value=0x0000000267b17270: {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267e9c: 6417
relocInfo@0x0000000111267e9c [type=6(runtime_call) addr=0x000000011126c3f1 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267e9e: c00a
relocInfo@0x0000000111267e9e [type=12(metadata) addr=0x000000011126c3fb offset=10] | [metadata_addr=0x000000011126c3fd *=0x000000011040aa78 offset=0]metadata_value=0x000000011040aa78: {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267ea0: 6417
relocInfo@0x0000000111267ea0 [type=6(runtime_call) addr=0x000000011126c412 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267ea2: c00a
relocInfo@0x0000000111267ea2 [type=12(metadata) addr=0x000000011126c41c offset=10] | [metadata_addr=0x000000011126c41e *=0x0000000110409a78 offset=0]metadata_value=0x0000000110409a78: {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x0000000111267ea4: 6417
relocInfo@0x0000000111267ea4 [type=6(runtime_call) addr=0x000000011126c433 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267ea6: 640e
relocInfo@0x0000000111267ea6 [type=6(runtime_call) addr=0x000000011126c441 offset=14 format=1] | [destination=0x0000000110b41ac0]
         @0x0000000111267ea8: f80309b26b6900017005
relocInfo@0x0000000111267eb0 [type=7(external_word) addr=0x000000011126c446 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111267eb2: 640e
relocInfo@0x0000000111267eb2 [type=6(runtime_call) addr=0x000000011126c454 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111267eb4: c006
relocInfo@0x0000000111267eb4 [type=12(metadata) addr=0x000000011126c45a offset=6] | [metadata_addr=0x000000011126c45c *=0x0000000267b1ded0 offset=0]metadata_value=0x0000000267b1ded0: {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267eb6: 6417
relocInfo@0x0000000111267eb6 [type=6(runtime_call) addr=0x000000011126c471 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267eb8: c00a
relocInfo@0x0000000111267eb8 [type=12(metadata) addr=0x000000011126c47b offset=10] | [metadata_addr=0x000000011126c47d *=0x0000000267b96280 offset=0]metadata_value=0x0000000267b96280: {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x0000000111267eba: 6417
relocInfo@0x0000000111267eba [type=6(runtime_call) addr=0x000000011126c492 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267ebc: c00a
relocInfo@0x0000000111267ebc [type=12(metadata) addr=0x000000011126c49c offset=10] | [metadata_addr=0x000000011126c49e *=0x000000011015f0e0 offset=0]metadata_value=0x000000011015f0e0: {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x0000000111267ebe: 6417
relocInfo@0x0000000111267ebe [type=6(runtime_call) addr=0x000000011126c4b3 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267ec0: c00a
relocInfo@0x0000000111267ec0 [type=12(metadata) addr=0x000000011126c4bd offset=10] | [metadata_addr=0x000000011126c4bf *=0x00000001103f3408 offset=0]metadata_value=0x00000001103f3408: {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111267ec2: 6417
relocInfo@0x0000000111267ec2 [type=6(runtime_call) addr=0x000000011126c4d4 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267ec4: c00a
relocInfo@0x0000000111267ec4 [type=12(metadata) addr=0x000000011126c4de offset=10] | [metadata_addr=0x000000011126c4e0 *=0x0000000267b39e30 offset=0]metadata_value=0x0000000267b39e30: {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x0000000111267ec6: 6417
relocInfo@0x0000000111267ec6 [type=6(runtime_call) addr=0x000000011126c4f5 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267ec8: c00a
relocInfo@0x0000000111267ec8 [type=12(metadata) addr=0x000000011126c4ff offset=10] | [metadata_addr=0x000000011126c501 *=0x0000000267b40508 offset=0]metadata_value=0x0000000267b40508: {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x0000000111267eca: 6417
relocInfo@0x0000000111267eca [type=6(runtime_call) addr=0x000000011126c516 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267ecc: c00a
relocInfo@0x0000000111267ecc [type=12(metadata) addr=0x000000011126c520 offset=10] | [metadata_addr=0x000000011126c522 *=0x0000000267b710c0 offset=0]metadata_value=0x0000000267b710c0: {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x0000000111267ece: 6417
relocInfo@0x0000000111267ece [type=6(runtime_call) addr=0x000000011126c537 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267ed0: c00a
relocInfo@0x0000000111267ed0 [type=12(metadata) addr=0x000000011126c541 offset=10] | [metadata_addr=0x000000011126c543 *=0x0000000267b1f228 offset=0]metadata_value=0x0000000267b1f228: {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267ed2: 6417
relocInfo@0x0000000111267ed2 [type=6(runtime_call) addr=0x000000011126c558 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267ed4: c00a
relocInfo@0x0000000111267ed4 [type=12(metadata) addr=0x000000011126c562 offset=10] | [metadata_addr=0x000000011126c564 *=0x0000000267b6d620 offset=0]metadata_value=0x0000000267b6d620: {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
         @0x0000000111267ed6: 6417
relocInfo@0x0000000111267ed6 [type=6(runtime_call) addr=0x000000011126c579 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267ed8: c00a
relocInfo@0x0000000111267ed8 [type=12(metadata) addr=0x000000011126c583 offset=10] | [metadata_addr=0x000000011126c585 *=0x0000000267b393b0 offset=0]metadata_value=0x0000000267b393b0: {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x0000000111267eda: 6417
relocInfo@0x0000000111267eda [type=6(runtime_call) addr=0x000000011126c59a offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267edc: c00a
relocInfo@0x0000000111267edc [type=12(metadata) addr=0x000000011126c5a4 offset=10] | [metadata_addr=0x000000011126c5a6 *=0x0000000267b1fe80 offset=0]metadata_value=0x0000000267b1fe80: {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267ede: 6417
relocInfo@0x0000000111267ede [type=6(runtime_call) addr=0x000000011126c5bb offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267ee0: c00a
relocInfo@0x0000000111267ee0 [type=12(metadata) addr=0x000000011126c5c5 offset=10] | [metadata_addr=0x000000011126c5c7 *=0x000000011040aa78 offset=0]metadata_value=0x000000011040aa78: {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267ee2: 6417
relocInfo@0x0000000111267ee2 [type=6(runtime_call) addr=0x000000011126c5dc offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267ee4: c00a
relocInfo@0x0000000111267ee4 [type=12(metadata) addr=0x000000011126c5e6 offset=10] | [metadata_addr=0x000000011126c5e8 *=0x0000000110409a78 offset=0]metadata_value=0x0000000110409a78: {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x0000000111267ee6: 6417
relocInfo@0x0000000111267ee6 [type=6(runtime_call) addr=0x000000011126c5fd offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267ee8: 640e
relocInfo@0x0000000111267ee8 [type=6(runtime_call) addr=0x000000011126c60b offset=14 format=1] | [destination=0x0000000110b41ac0]
         @0x0000000111267eea: f80309b26b6900017005
relocInfo@0x0000000111267ef2 [type=7(external_word) addr=0x000000011126c610 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111267ef4: 640e
relocInfo@0x0000000111267ef4 [type=6(runtime_call) addr=0x000000011126c61e offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111267ef6: 6406
relocInfo@0x0000000111267ef6 [type=6(runtime_call) addr=0x000000011126c624 offset=6 format=1] | [destination=0x0000000110b44540]
         @0x0000000111267ef8: f80309b26b6900017005
relocInfo@0x0000000111267f00 [type=7(external_word) addr=0x000000011126c629 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111267f02: 640e
relocInfo@0x0000000111267f02 [type=6(runtime_call) addr=0x000000011126c637 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111267f04: c006
relocInfo@0x0000000111267f04 [type=12(metadata) addr=0x000000011126c63d offset=6] | [metadata_addr=0x000000011126c63f *=0x0000000267b18ef0 offset=0]metadata_value=0x0000000267b18ef0: {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267f06: 6417
relocInfo@0x0000000111267f06 [type=6(runtime_call) addr=0x000000011126c654 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267f08: c00a
relocInfo@0x0000000111267f08 [type=12(metadata) addr=0x000000011126c65e offset=10] | [metadata_addr=0x000000011126c660 *=0x0000000267b1ded0 offset=0]metadata_value=0x0000000267b1ded0: {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267f0a: 6417
relocInfo@0x0000000111267f0a [type=6(runtime_call) addr=0x000000011126c675 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267f0c: c00a
relocInfo@0x0000000111267f0c [type=12(metadata) addr=0x000000011126c67f offset=10] | [metadata_addr=0x000000011126c681 *=0x0000000267b96280 offset=0]metadata_value=0x0000000267b96280: {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x0000000111267f0e: 6417
relocInfo@0x0000000111267f0e [type=6(runtime_call) addr=0x000000011126c696 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267f10: c00a
relocInfo@0x0000000111267f10 [type=12(metadata) addr=0x000000011126c6a0 offset=10] | [metadata_addr=0x000000011126c6a2 *=0x000000011015f0e0 offset=0]metadata_value=0x000000011015f0e0: {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x0000000111267f12: 6417
relocInfo@0x0000000111267f12 [type=6(runtime_call) addr=0x000000011126c6b7 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267f14: c00a
relocInfo@0x0000000111267f14 [type=12(metadata) addr=0x000000011126c6c1 offset=10] | [metadata_addr=0x000000011126c6c3 *=0x00000001103f3408 offset=0]metadata_value=0x00000001103f3408: {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111267f16: 6417
relocInfo@0x0000000111267f16 [type=6(runtime_call) addr=0x000000011126c6d8 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267f18: c00a
relocInfo@0x0000000111267f18 [type=12(metadata) addr=0x000000011126c6e2 offset=10] | [metadata_addr=0x000000011126c6e4 *=0x0000000267b39e30 offset=0]metadata_value=0x0000000267b39e30: {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x0000000111267f1a: 6417
relocInfo@0x0000000111267f1a [type=6(runtime_call) addr=0x000000011126c6f9 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267f1c: c00a
relocInfo@0x0000000111267f1c [type=12(metadata) addr=0x000000011126c703 offset=10] | [metadata_addr=0x000000011126c705 *=0x0000000267b40508 offset=0]metadata_value=0x0000000267b40508: {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x0000000111267f1e: 6417
relocInfo@0x0000000111267f1e [type=6(runtime_call) addr=0x000000011126c71a offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267f20: c00a
relocInfo@0x0000000111267f20 [type=12(metadata) addr=0x000000011126c724 offset=10] | [metadata_addr=0x000000011126c726 *=0x0000000267b710c0 offset=0]metadata_value=0x0000000267b710c0: {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x0000000111267f22: 6417
relocInfo@0x0000000111267f22 [type=6(runtime_call) addr=0x000000011126c73b offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267f24: c00a
relocInfo@0x0000000111267f24 [type=12(metadata) addr=0x000000011126c745 offset=10] | [metadata_addr=0x000000011126c747 *=0x0000000267b1f228 offset=0]metadata_value=0x0000000267b1f228: {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267f26: 6417
relocInfo@0x0000000111267f26 [type=6(runtime_call) addr=0x000000011126c75c offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267f28: c00a
relocInfo@0x0000000111267f28 [type=12(metadata) addr=0x000000011126c766 offset=10] | [metadata_addr=0x000000011126c768 *=0x0000000267b6d620 offset=0]metadata_value=0x0000000267b6d620: {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
         @0x0000000111267f2a: 6417
relocInfo@0x0000000111267f2a [type=6(runtime_call) addr=0x000000011126c77d offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267f2c: c00a
relocInfo@0x0000000111267f2c [type=12(metadata) addr=0x000000011126c787 offset=10] | [metadata_addr=0x000000011126c789 *=0x0000000267b393b0 offset=0]metadata_value=0x0000000267b393b0: {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x0000000111267f2e: 6417
relocInfo@0x0000000111267f2e [type=6(runtime_call) addr=0x000000011126c79e offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267f30: c00a
relocInfo@0x0000000111267f30 [type=12(metadata) addr=0x000000011126c7a8 offset=10] | [metadata_addr=0x000000011126c7aa *=0x0000000267b1fe80 offset=0]metadata_value=0x0000000267b1fe80: {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267f32: 6417
relocInfo@0x0000000111267f32 [type=6(runtime_call) addr=0x000000011126c7bf offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267f34: c00a
relocInfo@0x0000000111267f34 [type=12(metadata) addr=0x000000011126c7c9 offset=10] | [metadata_addr=0x000000011126c7cb *=0x000000011040aa78 offset=0]metadata_value=0x000000011040aa78: {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267f36: 6417
relocInfo@0x0000000111267f36 [type=6(runtime_call) addr=0x000000011126c7e0 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267f38: c00a
relocInfo@0x0000000111267f38 [type=12(metadata) addr=0x000000011126c7ea offset=10] | [metadata_addr=0x000000011126c7ec *=0x0000000110409a78 offset=0]metadata_value=0x0000000110409a78: {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x0000000111267f3a: 6417
relocInfo@0x0000000111267f3a [type=6(runtime_call) addr=0x000000011126c801 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267f3c: 640e
relocInfo@0x0000000111267f3c [type=6(runtime_call) addr=0x000000011126c80f offset=14 format=1] | [destination=0x0000000110b41ac0]
         @0x0000000111267f3e: f80309b26b6900017005
relocInfo@0x0000000111267f46 [type=7(external_word) addr=0x000000011126c814 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111267f48: 640e
relocInfo@0x0000000111267f48 [type=6(runtime_call) addr=0x000000011126c822 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111267f4a: 6406
relocInfo@0x0000000111267f4a [type=6(runtime_call) addr=0x000000011126c828 offset=6 format=1] | [destination=0x0000000110b44540]
         @0x0000000111267f4c: f80309b26b6900017005
relocInfo@0x0000000111267f54 [type=7(external_word) addr=0x000000011126c82d offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111267f56: 640e
relocInfo@0x0000000111267f56 [type=6(runtime_call) addr=0x000000011126c83b offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111267f58: c006
relocInfo@0x0000000111267f58 [type=12(metadata) addr=0x000000011126c841 offset=6] | [metadata_addr=0x000000011126c843 *=0x0000000267b18ef0 offset=0]metadata_value=0x0000000267b18ef0: {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267f5a: 6417
relocInfo@0x0000000111267f5a [type=6(runtime_call) addr=0x000000011126c858 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267f5c: c00a
relocInfo@0x0000000111267f5c [type=12(metadata) addr=0x000000011126c862 offset=10] | [metadata_addr=0x000000011126c864 *=0x000000026788fe18 offset=0]metadata_value=0x000000026788fe18: {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267f5e: 6417
relocInfo@0x0000000111267f5e [type=6(runtime_call) addr=0x000000011126c879 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267f60: 640a
relocInfo@0x0000000111267f60 [type=6(runtime_call) addr=0x000000011126c883 offset=10 format=1] | [destination=0x0000000110b44540]
         @0x0000000111267f62: f80309b26b6900017005
relocInfo@0x0000000111267f6a [type=7(external_word) addr=0x000000011126c888 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111267f6c: 640e
relocInfo@0x0000000111267f6c [type=6(runtime_call) addr=0x000000011126c896 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111267f6e: 6406
relocInfo@0x0000000111267f6e [type=6(runtime_call) addr=0x000000011126c89c offset=6 format=1] | [destination=0x0000000110b44540]
         @0x0000000111267f70: f80309b26b6900017005
relocInfo@0x0000000111267f78 [type=7(external_word) addr=0x000000011126c8a1 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111267f7a: 640e
relocInfo@0x0000000111267f7a [type=6(runtime_call) addr=0x000000011126c8af offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111267f7c: 640f
relocInfo@0x0000000111267f7c [type=6(runtime_call) addr=0x000000011126c8be offset=15 format=1] | [destination=0x0000000110b44e40]
         @0x0000000111267f7e: f80309b26b6900017005
relocInfo@0x0000000111267f86 [type=7(external_word) addr=0x000000011126c8c3 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111267f88: 640e
relocInfo@0x0000000111267f88 [type=6(runtime_call) addr=0x000000011126c8d1 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111267f8a: 640f
relocInfo@0x0000000111267f8a [type=6(runtime_call) addr=0x000000011126c8e0 offset=15 format=1] | [destination=0x0000000110b44e40]
         @0x0000000111267f8c: f80309b26b6900017005
relocInfo@0x0000000111267f94 [type=7(external_word) addr=0x000000011126c8e5 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111267f96: 640e
relocInfo@0x0000000111267f96 [type=6(runtime_call) addr=0x000000011126c8f3 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111267f98: c006
relocInfo@0x0000000111267f98 [type=12(metadata) addr=0x000000011126c8f9 offset=6] | [metadata_addr=0x000000011126c8fb *=0x000000026788fe18 offset=0]metadata_value=0x000000026788fe18: {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111267f9a: 6417
relocInfo@0x0000000111267f9a [type=6(runtime_call) addr=0x000000011126c910 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267f9c: c00a
relocInfo@0x0000000111267f9c [type=12(metadata) addr=0x000000011126c91a offset=10] | [metadata_addr=0x000000011126c91c *=0x0000000267b17448 offset=0]metadata_value=0x0000000267b17448: {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267f9e: 6417
relocInfo@0x0000000111267f9e [type=6(runtime_call) addr=0x000000011126c931 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267fa0: c00a
relocInfo@0x0000000111267fa0 [type=12(metadata) addr=0x000000011126c93b offset=10] | [metadata_addr=0x000000011126c93d *=0x0000000267b17270 offset=0]metadata_value=0x0000000267b17270: {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267fa2: 6417
relocInfo@0x0000000111267fa2 [type=6(runtime_call) addr=0x000000011126c952 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267fa4: c00a
relocInfo@0x0000000111267fa4 [type=12(metadata) addr=0x000000011126c95c offset=10] | [metadata_addr=0x000000011126c95e *=0x000000011040aa78 offset=0]metadata_value=0x000000011040aa78: {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267fa6: 6417
relocInfo@0x0000000111267fa6 [type=6(runtime_call) addr=0x000000011126c973 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267fa8: c00a
relocInfo@0x0000000111267fa8 [type=12(metadata) addr=0x000000011126c97d offset=10] | [metadata_addr=0x000000011126c97f *=0x0000000110409a78 offset=0]metadata_value=0x0000000110409a78: {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x0000000111267faa: 6417
relocInfo@0x0000000111267faa [type=6(runtime_call) addr=0x000000011126c994 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267fac: 640e
relocInfo@0x0000000111267fac [type=6(runtime_call) addr=0x000000011126c9a2 offset=14 format=1] | [destination=0x0000000110b41ac0]
         @0x0000000111267fae: f80309b26b6900017005
relocInfo@0x0000000111267fb6 [type=7(external_word) addr=0x000000011126c9a7 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111267fb8: 640e
relocInfo@0x0000000111267fb8 [type=6(runtime_call) addr=0x000000011126c9b5 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111267fba: c006
relocInfo@0x0000000111267fba [type=12(metadata) addr=0x000000011126c9bb offset=6] | [metadata_addr=0x000000011126c9bd *=0x0000000267b17448 offset=0]metadata_value=0x0000000267b17448: {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267fbc: 6417
relocInfo@0x0000000111267fbc [type=6(runtime_call) addr=0x000000011126c9d2 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267fbe: c00a
relocInfo@0x0000000111267fbe [type=12(metadata) addr=0x000000011126c9dc offset=10] | [metadata_addr=0x000000011126c9de *=0x0000000267b17270 offset=0]metadata_value=0x0000000267b17270: {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267fc0: 6417
relocInfo@0x0000000111267fc0 [type=6(runtime_call) addr=0x000000011126c9f3 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267fc2: c00a
relocInfo@0x0000000111267fc2 [type=12(metadata) addr=0x000000011126c9fd offset=10] | [metadata_addr=0x000000011126c9ff *=0x000000011040aa78 offset=0]metadata_value=0x000000011040aa78: {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111267fc4: 6417
relocInfo@0x0000000111267fc4 [type=6(runtime_call) addr=0x000000011126ca14 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267fc6: c00a
relocInfo@0x0000000111267fc6 [type=12(metadata) addr=0x000000011126ca1e offset=10] | [metadata_addr=0x000000011126ca20 *=0x0000000110409a78 offset=0]metadata_value=0x0000000110409a78: {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x0000000111267fc8: 6417
relocInfo@0x0000000111267fc8 [type=6(runtime_call) addr=0x000000011126ca35 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267fca: 640e
relocInfo@0x0000000111267fca [type=6(runtime_call) addr=0x000000011126ca43 offset=14 format=1] | [destination=0x0000000110b41ac0]
         @0x0000000111267fcc: f80309b26b6900017005
relocInfo@0x0000000111267fd4 [type=7(external_word) addr=0x000000011126ca48 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111267fd6: 640e
relocInfo@0x0000000111267fd6 [type=6(runtime_call) addr=0x000000011126ca56 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111267fd8: c006
relocInfo@0x0000000111267fd8 [type=12(metadata) addr=0x000000011126ca5c offset=6] | [metadata_addr=0x000000011126ca5e *=0x0000000267b1ded0 offset=0]metadata_value=0x0000000267b1ded0: {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111267fda: 6417
relocInfo@0x0000000111267fda [type=6(runtime_call) addr=0x000000011126ca73 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267fdc: 640a
relocInfo@0x0000000111267fdc [type=6(runtime_call) addr=0x000000011126ca7d offset=10 format=1] | [destination=0x0000000110b44540]
         @0x0000000111267fde: f80309b26b6900017005
relocInfo@0x0000000111267fe6 [type=7(external_word) addr=0x000000011126ca82 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111267fe8: 640e
relocInfo@0x0000000111267fe8 [type=6(runtime_call) addr=0x000000011126ca90 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111267fea: c006
relocInfo@0x0000000111267fea [type=12(metadata) addr=0x000000011126ca96 offset=6] | [metadata_addr=0x000000011126ca98 *=0x0000000267b96280 offset=0]metadata_value=0x0000000267b96280: {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x0000000111267fec: 6417
relocInfo@0x0000000111267fec [type=6(runtime_call) addr=0x000000011126caad offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267fee: c00a
relocInfo@0x0000000111267fee [type=12(metadata) addr=0x000000011126cab7 offset=10] | [metadata_addr=0x000000011126cab9 *=0x000000011015f0e0 offset=0]metadata_value=0x000000011015f0e0: {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x0000000111267ff0: 6417
relocInfo@0x0000000111267ff0 [type=6(runtime_call) addr=0x000000011126cace offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267ff2: c00a
relocInfo@0x0000000111267ff2 [type=12(metadata) addr=0x000000011126cad8 offset=10] | [metadata_addr=0x000000011126cada *=0x00000001103f3408 offset=0]metadata_value=0x00000001103f3408: {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111267ff4: 6417
relocInfo@0x0000000111267ff4 [type=6(runtime_call) addr=0x000000011126caef offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267ff6: c00a
relocInfo@0x0000000111267ff6 [type=12(metadata) addr=0x000000011126caf9 offset=10] | [metadata_addr=0x000000011126cafb *=0x0000000267b39e30 offset=0]metadata_value=0x0000000267b39e30: {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x0000000111267ff8: 6417
relocInfo@0x0000000111267ff8 [type=6(runtime_call) addr=0x000000011126cb10 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267ffa: c00a
relocInfo@0x0000000111267ffa [type=12(metadata) addr=0x000000011126cb1a offset=10] | [metadata_addr=0x000000011126cb1c *=0x0000000267b40508 offset=0]metadata_value=0x0000000267b40508: {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x0000000111267ffc: 6417
relocInfo@0x0000000111267ffc [type=6(runtime_call) addr=0x000000011126cb31 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111267ffe: c00a
relocInfo@0x0000000111267ffe [type=12(metadata) addr=0x000000011126cb3b offset=10] | [metadata_addr=0x000000011126cb3d *=0x0000000267b710c0 offset=0]metadata_value=0x0000000267b710c0: {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x0000000111268000: 6417
relocInfo@0x0000000111268000 [type=6(runtime_call) addr=0x000000011126cb52 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111268002: c00a
relocInfo@0x0000000111268002 [type=12(metadata) addr=0x000000011126cb5c offset=10] | [metadata_addr=0x000000011126cb5e *=0x0000000267b1f228 offset=0]metadata_value=0x0000000267b1f228: {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111268004: 6417
relocInfo@0x0000000111268004 [type=6(runtime_call) addr=0x000000011126cb73 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111268006: c00a
relocInfo@0x0000000111268006 [type=12(metadata) addr=0x000000011126cb7d offset=10] | [metadata_addr=0x000000011126cb7f *=0x0000000267b6d620 offset=0]metadata_value=0x0000000267b6d620: {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
         @0x0000000111268008: 6417
relocInfo@0x0000000111268008 [type=6(runtime_call) addr=0x000000011126cb94 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011126800a: c00a
relocInfo@0x000000011126800a [type=12(metadata) addr=0x000000011126cb9e offset=10] | [metadata_addr=0x000000011126cba0 *=0x0000000267b393b0 offset=0]metadata_value=0x0000000267b393b0: {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x000000011126800c: 6417
relocInfo@0x000000011126800c [type=6(runtime_call) addr=0x000000011126cbb5 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011126800e: c00a
relocInfo@0x000000011126800e [type=12(metadata) addr=0x000000011126cbbf offset=10] | [metadata_addr=0x000000011126cbc1 *=0x0000000267b1fe80 offset=0]metadata_value=0x0000000267b1fe80: {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111268010: 6417
relocInfo@0x0000000111268010 [type=6(runtime_call) addr=0x000000011126cbd6 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111268012: c00a
relocInfo@0x0000000111268012 [type=12(metadata) addr=0x000000011126cbe0 offset=10] | [metadata_addr=0x000000011126cbe2 *=0x000000011040aa78 offset=0]metadata_value=0x000000011040aa78: {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111268014: 6417
relocInfo@0x0000000111268014 [type=6(runtime_call) addr=0x000000011126cbf7 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111268016: c00a
relocInfo@0x0000000111268016 [type=12(metadata) addr=0x000000011126cc01 offset=10] | [metadata_addr=0x000000011126cc03 *=0x0000000110409a78 offset=0]metadata_value=0x0000000110409a78: {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x0000000111268018: 6417
relocInfo@0x0000000111268018 [type=6(runtime_call) addr=0x000000011126cc18 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011126801a: 640e
relocInfo@0x000000011126801a [type=6(runtime_call) addr=0x000000011126cc26 offset=14 format=1] | [destination=0x0000000110b41ac0]
         @0x000000011126801c: f80309b26b6900017005
relocInfo@0x0000000111268024 [type=7(external_word) addr=0x000000011126cc2b offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111268026: 640e
relocInfo@0x0000000111268026 [type=6(runtime_call) addr=0x000000011126cc39 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111268028: 6406
relocInfo@0x0000000111268028 [type=6(runtime_call) addr=0x000000011126cc3f offset=6 format=1] | [destination=0x0000000110b44540]
         @0x000000011126802a: f80309b26b6900017005
relocInfo@0x0000000111268032 [type=7(external_word) addr=0x000000011126cc44 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111268034: 640e
relocInfo@0x0000000111268034 [type=6(runtime_call) addr=0x000000011126cc52 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111268036: c006
relocInfo@0x0000000111268036 [type=12(metadata) addr=0x000000011126cc58 offset=6] | [metadata_addr=0x000000011126cc5a *=0x0000000267b19378 offset=0]metadata_value=0x0000000267b19378: {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111268038: 6417
relocInfo@0x0000000111268038 [type=6(runtime_call) addr=0x000000011126cc6f offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011126803a: c00a
relocInfo@0x000000011126803a [type=12(metadata) addr=0x000000011126cc79 offset=10] | [metadata_addr=0x000000011126cc7b *=0x0000000267b181a0 offset=0]metadata_value=0x0000000267b181a0: {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011126803c: 6417
relocInfo@0x000000011126803c [type=6(runtime_call) addr=0x000000011126cc90 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011126803e: c00a
relocInfo@0x000000011126803e [type=12(metadata) addr=0x000000011126cc9a offset=10] | [metadata_addr=0x000000011126cc9c *=0x0000000267b1ded0 offset=0]metadata_value=0x0000000267b1ded0: {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111268040: 6417
relocInfo@0x0000000111268040 [type=6(runtime_call) addr=0x000000011126ccb1 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111268042: 640a
relocInfo@0x0000000111268042 [type=6(runtime_call) addr=0x000000011126ccbb offset=10 format=1] | [destination=0x0000000110b44540]
         @0x0000000111268044: f80309b26b6900017005
relocInfo@0x000000011126804c [type=7(external_word) addr=0x000000011126ccc0 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011126804e: 640e
relocInfo@0x000000011126804e [type=6(runtime_call) addr=0x000000011126ccce offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111268050: c006
relocInfo@0x0000000111268050 [type=12(metadata) addr=0x000000011126ccd4 offset=6] | [metadata_addr=0x000000011126ccd6 *=0x0000000267b96280 offset=0]metadata_value=0x0000000267b96280: {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x0000000111268052: 6417
relocInfo@0x0000000111268052 [type=6(runtime_call) addr=0x000000011126cceb offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111268054: c00a
relocInfo@0x0000000111268054 [type=12(metadata) addr=0x000000011126ccf5 offset=10] | [metadata_addr=0x000000011126ccf7 *=0x000000011015f0e0 offset=0]metadata_value=0x000000011015f0e0: {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x0000000111268056: 6417
relocInfo@0x0000000111268056 [type=6(runtime_call) addr=0x000000011126cd0c offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111268058: c00a
relocInfo@0x0000000111268058 [type=12(metadata) addr=0x000000011126cd16 offset=10] | [metadata_addr=0x000000011126cd18 *=0x00000001103f3408 offset=0]metadata_value=0x00000001103f3408: {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x000000011126805a: 6417
relocInfo@0x000000011126805a [type=6(runtime_call) addr=0x000000011126cd2d offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011126805c: c00a
relocInfo@0x000000011126805c [type=12(metadata) addr=0x000000011126cd37 offset=10] | [metadata_addr=0x000000011126cd39 *=0x0000000267b39e30 offset=0]metadata_value=0x0000000267b39e30: {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x000000011126805e: 6417
relocInfo@0x000000011126805e [type=6(runtime_call) addr=0x000000011126cd4e offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111268060: c00a
relocInfo@0x0000000111268060 [type=12(metadata) addr=0x000000011126cd58 offset=10] | [metadata_addr=0x000000011126cd5a *=0x0000000267b40508 offset=0]metadata_value=0x0000000267b40508: {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x0000000111268062: 6417
relocInfo@0x0000000111268062 [type=6(runtime_call) addr=0x000000011126cd6f offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111268064: c00a
relocInfo@0x0000000111268064 [type=12(metadata) addr=0x000000011126cd79 offset=10] | [metadata_addr=0x000000011126cd7b *=0x0000000267b710c0 offset=0]metadata_value=0x0000000267b710c0: {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x0000000111268066: 6417
relocInfo@0x0000000111268066 [type=6(runtime_call) addr=0x000000011126cd90 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111268068: c00a
relocInfo@0x0000000111268068 [type=12(metadata) addr=0x000000011126cd9a offset=10] | [metadata_addr=0x000000011126cd9c *=0x0000000267b1f228 offset=0]metadata_value=0x0000000267b1f228: {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011126806a: 6417
relocInfo@0x000000011126806a [type=6(runtime_call) addr=0x000000011126cdb1 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011126806c: c00a
relocInfo@0x000000011126806c [type=12(metadata) addr=0x000000011126cdbb offset=10] | [metadata_addr=0x000000011126cdbd *=0x0000000267b6d620 offset=0]metadata_value=0x0000000267b6d620: {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
         @0x000000011126806e: 6417
relocInfo@0x000000011126806e [type=6(runtime_call) addr=0x000000011126cdd2 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111268070: c00a
relocInfo@0x0000000111268070 [type=12(metadata) addr=0x000000011126cddc offset=10] | [metadata_addr=0x000000011126cdde *=0x0000000267b393b0 offset=0]metadata_value=0x0000000267b393b0: {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x0000000111268072: 6417
relocInfo@0x0000000111268072 [type=6(runtime_call) addr=0x000000011126cdf3 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111268074: c00a
relocInfo@0x0000000111268074 [type=12(metadata) addr=0x000000011126cdfd offset=10] | [metadata_addr=0x000000011126cdff *=0x0000000267b1fe80 offset=0]metadata_value=0x0000000267b1fe80: {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111268076: 6417
relocInfo@0x0000000111268076 [type=6(runtime_call) addr=0x000000011126ce14 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111268078: c00a
relocInfo@0x0000000111268078 [type=12(metadata) addr=0x000000011126ce1e offset=10] | [metadata_addr=0x000000011126ce20 *=0x000000011040aa78 offset=0]metadata_value=0x000000011040aa78: {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011126807a: 6417
relocInfo@0x000000011126807a [type=6(runtime_call) addr=0x000000011126ce35 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011126807c: c00a
relocInfo@0x000000011126807c [type=12(metadata) addr=0x000000011126ce3f offset=10] | [metadata_addr=0x000000011126ce41 *=0x0000000110409a78 offset=0]metadata_value=0x0000000110409a78: {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011126807e: 6417
relocInfo@0x000000011126807e [type=6(runtime_call) addr=0x000000011126ce56 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111268080: 640e
relocInfo@0x0000000111268080 [type=6(runtime_call) addr=0x000000011126ce64 offset=14 format=1] | [destination=0x0000000110b41ac0]
         @0x0000000111268082: f80309b26b6900017005
relocInfo@0x000000011126808a [type=7(external_word) addr=0x000000011126ce69 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011126808c: 640e
relocInfo@0x000000011126808c [type=6(runtime_call) addr=0x000000011126ce77 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011126808e: 6406
relocInfo@0x000000011126808e [type=6(runtime_call) addr=0x000000011126ce7d offset=6 format=1] | [destination=0x0000000110b44540]
         @0x0000000111268090: f80309b26b6900017005
relocInfo@0x0000000111268098 [type=7(external_word) addr=0x000000011126ce82 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011126809a: 640e
relocInfo@0x000000011126809a [type=6(runtime_call) addr=0x000000011126ce90 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011126809c: c006
relocInfo@0x000000011126809c [type=12(metadata) addr=0x000000011126ce96 offset=6] | [metadata_addr=0x000000011126ce98 *=0x0000000267b19378 offset=0]metadata_value=0x0000000267b19378: {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011126809e: 6417
relocInfo@0x000000011126809e [type=6(runtime_call) addr=0x000000011126cead offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112680a0: c00a
relocInfo@0x00000001112680a0 [type=12(metadata) addr=0x000000011126ceb7 offset=10] | [metadata_addr=0x000000011126ceb9 *=0x0000000267b181a0 offset=0]metadata_value=0x0000000267b181a0: {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112680a2: 6417
relocInfo@0x00000001112680a2 [type=6(runtime_call) addr=0x000000011126cece offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112680a4: 640a
relocInfo@0x00000001112680a4 [type=6(runtime_call) addr=0x000000011126ced8 offset=10 format=1] | [destination=0x0000000110b44540]
         @0x00000001112680a6: f80309b26b6900017005
relocInfo@0x00000001112680ae [type=7(external_word) addr=0x000000011126cedd offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x00000001112680b0: 640e
relocInfo@0x00000001112680b0 [type=6(runtime_call) addr=0x000000011126ceeb offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001112680b2: c006
relocInfo@0x00000001112680b2 [type=12(metadata) addr=0x000000011126cef1 offset=6] | [metadata_addr=0x000000011126cef3 *=0x0000000267b19640 offset=0]metadata_value=0x0000000267b19640: {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112680b4: 6417
relocInfo@0x00000001112680b4 [type=6(runtime_call) addr=0x000000011126cf08 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112680b6: 640a
relocInfo@0x00000001112680b6 [type=6(runtime_call) addr=0x000000011126cf12 offset=10 format=1] | [destination=0x0000000110b44540]
         @0x00000001112680b8: f80309b26b6900017005
relocInfo@0x00000001112680c0 [type=7(external_word) addr=0x000000011126cf17 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x00000001112680c2: 640e
relocInfo@0x00000001112680c2 [type=6(runtime_call) addr=0x000000011126cf25 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001112680c4: c006
relocInfo@0x00000001112680c4 [type=12(metadata) addr=0x000000011126cf2b offset=6] | [metadata_addr=0x000000011126cf2d *=0x0000000267b18ef0 offset=0]metadata_value=0x0000000267b18ef0: {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112680c6: 6417
relocInfo@0x00000001112680c6 [type=6(runtime_call) addr=0x000000011126cf42 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112680c8: 640a
relocInfo@0x00000001112680c8 [type=6(runtime_call) addr=0x000000011126cf4c offset=10 format=1] | [destination=0x0000000110b44540]
         @0x00000001112680ca: f80309b26b6900017005
relocInfo@0x00000001112680d2 [type=7(external_word) addr=0x000000011126cf51 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x00000001112680d4: 640e
relocInfo@0x00000001112680d4 [type=6(runtime_call) addr=0x000000011126cf5f offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001112680d6: c006
relocInfo@0x00000001112680d6 [type=12(metadata) addr=0x000000011126cf65 offset=6] | [metadata_addr=0x000000011126cf67 *=0x0000000267b19640 offset=0]metadata_value=0x0000000267b19640: {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112680d8: 6417
relocInfo@0x00000001112680d8 [type=6(runtime_call) addr=0x000000011126cf7c offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112680da: 640a
relocInfo@0x00000001112680da [type=6(runtime_call) addr=0x000000011126cf86 offset=10 format=1] | [destination=0x0000000110b44540]
         @0x00000001112680dc: f80309b26b6900017005
relocInfo@0x00000001112680e4 [type=7(external_word) addr=0x000000011126cf8b offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x00000001112680e6: 640e
relocInfo@0x00000001112680e6 [type=6(runtime_call) addr=0x000000011126cf99 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001112680e8: c006
relocInfo@0x00000001112680e8 [type=12(metadata) addr=0x000000011126cf9f offset=6] | [metadata_addr=0x000000011126cfa1 *=0x0000000267b18ef0 offset=0]metadata_value=0x0000000267b18ef0: {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112680ea: 6417
relocInfo@0x00000001112680ea [type=6(runtime_call) addr=0x000000011126cfb6 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112680ec: c00a
relocInfo@0x00000001112680ec [type=12(metadata) addr=0x000000011126cfc0 offset=10] | [metadata_addr=0x000000011126cfc2 *=0x000000026788fe18 offset=0]metadata_value=0x000000026788fe18: {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x00000001112680ee: 6417
relocInfo@0x00000001112680ee [type=6(runtime_call) addr=0x000000011126cfd7 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112680f0: 640a
relocInfo@0x00000001112680f0 [type=6(runtime_call) addr=0x000000011126cfe1 offset=10 format=1] | [destination=0x0000000110b44540]
         @0x00000001112680f2: f80309b26b6900017005
relocInfo@0x00000001112680fa [type=7(external_word) addr=0x000000011126cfe6 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x00000001112680fc: 640e
relocInfo@0x00000001112680fc [type=6(runtime_call) addr=0x000000011126cff4 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001112680fe: 6406
relocInfo@0x00000001112680fe [type=6(runtime_call) addr=0x000000011126cffa offset=6 format=1] | [destination=0x0000000110b44540]
         @0x0000000111268100: f80309b26b6900017005
relocInfo@0x0000000111268108 [type=7(external_word) addr=0x000000011126cfff offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011126810a: 640e
relocInfo@0x000000011126810a [type=6(runtime_call) addr=0x000000011126d00d offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011126810c: 640f
relocInfo@0x000000011126810c [type=6(runtime_call) addr=0x000000011126d01c offset=15 format=1] | [destination=0x0000000110b44e40]
         @0x000000011126810e: f80309b26b6900017005
relocInfo@0x0000000111268116 [type=7(external_word) addr=0x000000011126d021 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111268118: 640e
relocInfo@0x0000000111268118 [type=6(runtime_call) addr=0x000000011126d02f offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011126811a: 6406
relocInfo@0x000000011126811a [type=6(runtime_call) addr=0x000000011126d035 offset=6 format=1] | [destination=0x0000000110b44540]
         @0x000000011126811c: f80309b26b6900017005
relocInfo@0x0000000111268124 [type=7(external_word) addr=0x000000011126d03a offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111268126: 640e
relocInfo@0x0000000111268126 [type=6(runtime_call) addr=0x000000011126d048 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111268128: 6406
relocInfo@0x0000000111268128 [type=6(runtime_call) addr=0x000000011126d04e offset=6 format=1] | [destination=0x0000000110b44540]
         @0x000000011126812a: f80309b26b6900017005
relocInfo@0x0000000111268132 [type=7(external_word) addr=0x000000011126d053 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111268134: 640e
relocInfo@0x0000000111268134 [type=6(runtime_call) addr=0x000000011126d061 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111268136: 640f
relocInfo@0x0000000111268136 [type=6(runtime_call) addr=0x000000011126d070 offset=15 format=1] | [destination=0x0000000110b44e40]
         @0x0000000111268138: f80309b26b6900017005
relocInfo@0x0000000111268140 [type=7(external_word) addr=0x000000011126d075 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111268142: 640e
relocInfo@0x0000000111268142 [type=6(runtime_call) addr=0x000000011126d083 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111268144: c006
relocInfo@0x0000000111268144 [type=12(metadata) addr=0x000000011126d089 offset=6] | [metadata_addr=0x000000011126d08b *=0x000000026788fe18 offset=0]metadata_value=0x000000026788fe18: {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111268146: 6417
relocInfo@0x0000000111268146 [type=6(runtime_call) addr=0x000000011126d0a0 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111268148: 640a
relocInfo@0x0000000111268148 [type=6(runtime_call) addr=0x000000011126d0aa offset=10 format=1] | [destination=0x0000000110b44540]
         @0x000000011126814a: f80309b26b6900017005
relocInfo@0x0000000111268152 [type=7(external_word) addr=0x000000011126d0af offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111268154: 640e
relocInfo@0x0000000111268154 [type=6(runtime_call) addr=0x000000011126d0bd offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111268156: 6406
relocInfo@0x0000000111268156 [type=6(runtime_call) addr=0x000000011126d0c3 offset=6 format=1] | [destination=0x0000000110b44540]
         @0x0000000111268158: f80309b26b6900017005
relocInfo@0x0000000111268160 [type=7(external_word) addr=0x000000011126d0c8 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111268162: 640e
relocInfo@0x0000000111268162 [type=6(runtime_call) addr=0x000000011126d0d6 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111268164: f80111c08006
relocInfo@0x0000000111268168 [type=8(internal_word) addr=0x000000011126d0dc offset=6 data=4544] | [target=0x000000011126bf1c]
         @0x000000011126816a: 6411
relocInfo@0x000000011126816a [type=6(runtime_call) addr=0x000000011126d0ed offset=17 format=1] | [destination=0x0000000110bfb220]
         @0x000000011126816c: 6405
relocInfo@0x000000011126816c [type=6(runtime_call) addr=0x000000011126d0f2 offset=5 format=1] | [destination=0x0000000110b44540]
         @0x000000011126816e: f80309b26b6900017005
relocInfo@0x0000000111268176 [type=7(external_word) addr=0x000000011126d0f7 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111268178: 640e
relocInfo@0x0000000111268178 [type=6(runtime_call) addr=0x000000011126d105 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011126817a: 6406
relocInfo@0x000000011126817a [type=6(runtime_call) addr=0x000000011126d10b offset=6 format=1] | [destination=0x0000000110b44540]
         @0x000000011126817c: f80309b26b6900017005
relocInfo@0x0000000111268184 [type=7(external_word) addr=0x000000011126d110 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111268186: 640e
relocInfo@0x0000000111268186 [type=6(runtime_call) addr=0x000000011126d11e offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111268188: 6406
relocInfo@0x0000000111268188 [type=6(runtime_call) addr=0x000000011126d124 offset=6 format=1] | [destination=0x0000000110b44540]
         @0x000000011126818a: f80309b26b6900017005
relocInfo@0x0000000111268192 [type=7(external_word) addr=0x000000011126d129 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111268194: 640e
relocInfo@0x0000000111268194 [type=6(runtime_call) addr=0x000000011126d137 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111268196: 6406
relocInfo@0x0000000111268196 [type=6(runtime_call) addr=0x000000011126d13d offset=6 format=1] | [destination=0x0000000110b44540]
         @0x0000000111268198: f80309b26b6900017005
relocInfo@0x00000001112681a0 [type=7(external_word) addr=0x000000011126d142 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x00000001112681a2: 640e
relocInfo@0x00000001112681a2 [type=6(runtime_call) addr=0x000000011126d150 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001112681a4: c006
relocInfo@0x00000001112681a4 [type=12(metadata) addr=0x000000011126d156 offset=6] | [metadata_addr=0x000000011126d158 *=0x0000000000000000 offset=0]
         @0x00000001112681a6: 640f
relocInfo@0x00000001112681a6 [type=6(runtime_call) addr=0x000000011126d165 offset=15 format=1] | [destination=0x0000000110b3f880]
         @0x00000001112681a8: 640d
relocInfo@0x00000001112681a8 [type=6(runtime_call) addr=0x000000011126d172 offset=13 format=1] | [destination=0x0000000110b43ac0]
         @0x00000001112681aa: 6431
relocInfo@0x00000001112681aa [type=6(runtime_call) addr=0x000000011126d1a3 offset=49 format=1] | [destination=0x0000000110b45840]
         @0x00000001112681ac: 001d
relocInfo@0x00000001112681ac [type=0(none) addr=0x000000011126d1c0 offset=29]
         @0x00000001112681ae: f801fb495005
relocInfo@0x00000001112681b2 [type=5(static_stub) addr=0x000000011126d1c5 offset=5 data=-1207] | [static_call=0x00000001112687b7]
         @0x00000001112681b4: c000
relocInfo@0x00000001112681b4 [type=12(metadata) addr=0x000000011126d1c5 offset=0] | [metadata_addr=0x000000011126d1c7 *=0x0000000000000000 offset=0]
         @0x00000001112681b6: 640a
relocInfo@0x00000001112681b6 [type=6(runtime_call) addr=0x000000011126d1cf offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x00000001112681b8: f801f7e15006
relocInfo@0x00000001112681bc [type=5(static_stub) addr=0x000000011126d1d5 offset=6 data=-2079] | [static_call=0x0000000111268b1f]
         @0x00000001112681be: c000
relocInfo@0x00000001112681be [type=12(metadata) addr=0x000000011126d1d5 offset=0] | [metadata_addr=0x000000011126d1d7 *=0x0000000000000000 offset=0]
         @0x00000001112681c0: 640a
relocInfo@0x00000001112681c0 [type=6(runtime_call) addr=0x000000011126d1df offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x00000001112681c2: f801f0a15006
relocInfo@0x00000001112681c6 [type=5(static_stub) addr=0x000000011126d1e5 offset=6 data=-3935] | [static_call=0x000000011126925f]
         @0x00000001112681c8: c000
relocInfo@0x00000001112681c8 [type=12(metadata) addr=0x000000011126d1e5 offset=0] | [metadata_addr=0x000000011126d1e7 *=0x0000000000000000 offset=0]
         @0x00000001112681ca: 640a
relocInfo@0x00000001112681ca [type=6(runtime_call) addr=0x000000011126d1ef offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x00000001112681cc: f801eed35006
relocInfo@0x00000001112681d0 [type=5(static_stub) addr=0x000000011126d1f5 offset=6 data=-4397] | [static_call=0x000000011126942d]
         @0x00000001112681d2: c000
relocInfo@0x00000001112681d2 [type=12(metadata) addr=0x000000011126d1f5 offset=0] | [metadata_addr=0x000000011126d1f7 *=0x0000000000000000 offset=0]
         @0x00000001112681d4: 640a
relocInfo@0x00000001112681d4 [type=6(runtime_call) addr=0x000000011126d1ff offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x00000001112681d6: f801e9515006
relocInfo@0x00000001112681da [type=5(static_stub) addr=0x000000011126d205 offset=6 data=-5807] | [static_call=0x00000001112699af]
         @0x00000001112681dc: c000
relocInfo@0x00000001112681dc [type=12(metadata) addr=0x000000011126d205 offset=0] | [metadata_addr=0x000000011126d207 *=0x0000000000000000 offset=0]
         @0x00000001112681de: 640a
relocInfo@0x00000001112681de [type=6(runtime_call) addr=0x000000011126d20f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x00000001112681e0: f801e7835006
relocInfo@0x00000001112681e4 [type=5(static_stub) addr=0x000000011126d215 offset=6 data=-6269] | [static_call=0x0000000111269b7d]
         @0x00000001112681e6: c000
relocInfo@0x00000001112681e6 [type=12(metadata) addr=0x000000011126d215 offset=0] | [metadata_addr=0x000000011126d217 *=0x0000000000000000 offset=0]
         @0x00000001112681e8: 640a
relocInfo@0x00000001112681e8 [type=6(runtime_call) addr=0x000000011126d21f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x00000001112681ea: f801e6435006
relocInfo@0x00000001112681ee [type=5(static_stub) addr=0x000000011126d225 offset=6 data=-6589] | [static_call=0x0000000111269cbd]
         @0x00000001112681f0: c000
relocInfo@0x00000001112681f0 [type=12(metadata) addr=0x000000011126d225 offset=0] | [metadata_addr=0x000000011126d227 *=0x0000000000000000 offset=0]
         @0x00000001112681f2: 640a
relocInfo@0x00000001112681f2 [type=6(runtime_call) addr=0x000000011126d22f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x00000001112681f4: f801e5735006
relocInfo@0x00000001112681f8 [type=5(static_stub) addr=0x000000011126d235 offset=6 data=-6797] | [static_call=0x0000000111269d8d]
         @0x00000001112681fa: c000
relocInfo@0x00000001112681fa [type=12(metadata) addr=0x000000011126d235 offset=0] | [metadata_addr=0x000000011126d237 *=0x0000000000000000 offset=0]
         @0x00000001112681fc: 640a
relocInfo@0x00000001112681fc [type=6(runtime_call) addr=0x000000011126d23f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x00000001112681fe: f801e1895006
relocInfo@0x0000000111268202 [type=5(static_stub) addr=0x000000011126d245 offset=6 data=-7799] | [static_call=0x000000011126a177]
         @0x0000000111268204: c000
relocInfo@0x0000000111268204 [type=12(metadata) addr=0x000000011126d245 offset=0] | [metadata_addr=0x000000011126d247 *=0x0000000000000000 offset=0]
         @0x0000000111268206: 640a
relocInfo@0x0000000111268206 [type=6(runtime_call) addr=0x000000011126d24f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000000111268208: f801de295006
relocInfo@0x000000011126820c [type=5(static_stub) addr=0x000000011126d255 offset=6 data=-8663] | [static_call=0x000000011126a4d7]
         @0x000000011126820e: c000
relocInfo@0x000000011126820e [type=12(metadata) addr=0x000000011126d255 offset=0] | [metadata_addr=0x000000011126d257 *=0x0000000000000000 offset=0]
         @0x0000000111268210: 640a
relocInfo@0x0000000111268210 [type=6(runtime_call) addr=0x000000011126d25f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000000111268212: f801d6695006
relocInfo@0x0000000111268216 [type=5(static_stub) addr=0x000000011126d265 offset=6 data=-10647] | [static_call=0x000000011126ac97]
         @0x0000000111268218: c000
relocInfo@0x0000000111268218 [type=12(metadata) addr=0x000000011126d265 offset=0] | [metadata_addr=0x000000011126d267 *=0x0000000000000000 offset=0]
         @0x000000011126821a: 640a
relocInfo@0x000000011126821a [type=6(runtime_call) addr=0x000000011126d26f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011126821c: f801d4635006
relocInfo@0x0000000111268220 [type=5(static_stub) addr=0x000000011126d275 offset=6 data=-11165] | [static_call=0x000000011126ae9d]
         @0x0000000111268222: c000
relocInfo@0x0000000111268222 [type=12(metadata) addr=0x000000011126d275 offset=0] | [metadata_addr=0x000000011126d277 *=0x0000000000000000 offset=0]
         @0x0000000111268224: 640a
relocInfo@0x0000000111268224 [type=6(runtime_call) addr=0x000000011126d27f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000000111268226: f801d3a35006
relocInfo@0x000000011126822a [type=5(static_stub) addr=0x000000011126d285 offset=6 data=-11357] | [static_call=0x000000011126af5d]
         @0x000000011126822c: c000
relocInfo@0x000000011126822c [type=12(metadata) addr=0x000000011126d285 offset=0] | [metadata_addr=0x000000011126d287 *=0x0000000000000000 offset=0]
         @0x000000011126822e: 640a
relocInfo@0x000000011126822e [type=6(runtime_call) addr=0x000000011126d28f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000000111268230: f801ce195006
relocInfo@0x0000000111268234 [type=5(static_stub) addr=0x000000011126d295 offset=6 data=-12775] | [static_call=0x000000011126b4e7]
         @0x0000000111268236: c000
relocInfo@0x0000000111268236 [type=12(metadata) addr=0x000000011126d295 offset=0] | [metadata_addr=0x000000011126d297 *=0x0000000000000000 offset=0]
         @0x0000000111268238: 640a
relocInfo@0x0000000111268238 [type=6(runtime_call) addr=0x000000011126d29f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011126823a: f801cc135006
relocInfo@0x000000011126823e [type=5(static_stub) addr=0x000000011126d2a5 offset=6 data=-13293] | [static_call=0x000000011126b6ed]
         @0x0000000111268240: c000
relocInfo@0x0000000111268240 [type=12(metadata) addr=0x000000011126d2a5 offset=0] | [metadata_addr=0x000000011126d2a7 *=0x0000000000000000 offset=0]
         @0x0000000111268242: 640a
relocInfo@0x0000000111268242 [type=6(runtime_call) addr=0x000000011126d2af offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000000111268244: f801cb535006
relocInfo@0x0000000111268248 [type=5(static_stub) addr=0x000000011126d2b5 offset=6 data=-13485] | [static_call=0x000000011126b7ad]
         @0x000000011126824a: c000
relocInfo@0x000000011126824a [type=12(metadata) addr=0x000000011126d2b5 offset=0] | [metadata_addr=0x000000011126d2b7 *=0x0000000000000000 offset=0]
         @0x000000011126824c: 640a
relocInfo@0x000000011126824c [type=6(runtime_call) addr=0x000000011126d2bf offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011126824e: f801ca535006
relocInfo@0x0000000111268252 [type=5(static_stub) addr=0x000000011126d2c5 offset=6 data=-13741] | [static_call=0x000000011126b8ad]
         @0x0000000111268254: c000
relocInfo@0x0000000111268254 [type=12(metadata) addr=0x000000011126d2c5 offset=0] | [metadata_addr=0x000000011126d2c7 *=0x0000000000000000 offset=0]
         @0x0000000111268256: 640a
relocInfo@0x0000000111268256 [type=6(runtime_call) addr=0x000000011126d2cf offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000000111268258: f801c94b5006
relocInfo@0x000000011126825c [type=5(static_stub) addr=0x000000011126d2d5 offset=6 data=-14005] | [static_call=0x000000011126b9b5]
         @0x000000011126825e: c000
relocInfo@0x000000011126825e [type=12(metadata) addr=0x000000011126d2d5 offset=0] | [metadata_addr=0x000000011126d2d7 *=0x0000000000000000 offset=0]
         @0x0000000111268260: 640a
relocInfo@0x0000000111268260 [type=6(runtime_call) addr=0x000000011126d2df offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000000111268262: f801c84b5006
relocInfo@0x0000000111268266 [type=5(static_stub) addr=0x000000011126d2e5 offset=6 data=-14261] | [static_call=0x000000011126bab5]
         @0x0000000111268268: c000
relocInfo@0x0000000111268268 [type=12(metadata) addr=0x000000011126d2e5 offset=0] | [metadata_addr=0x000000011126d2e7 *=0x0000000000000000 offset=0]
         @0x000000011126826a: 640a
relocInfo@0x000000011126826a [type=6(runtime_call) addr=0x000000011126d2ef offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011126826c: f801c7535006
relocInfo@0x0000000111268270 [type=5(static_stub) addr=0x000000011126d2f5 offset=6 data=-14509] | [static_call=0x000000011126bbad]
         @0x0000000111268272: c000
relocInfo@0x0000000111268272 [type=12(metadata) addr=0x000000011126d2f5 offset=0] | [metadata_addr=0x000000011126d2f7 *=0x0000000000000000 offset=0]
         @0x0000000111268274: 640a
relocInfo@0x0000000111268274 [type=6(runtime_call) addr=0x000000011126d2ff offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000000111268276: f801c5fb5006
relocInfo@0x000000011126827a [type=5(static_stub) addr=0x000000011126d305 offset=6 data=-14853] | [static_call=0x000000011126bd05]
         @0x000000011126827c: c000
relocInfo@0x000000011126827c [type=12(metadata) addr=0x000000011126d305 offset=0] | [metadata_addr=0x000000011126d307 *=0x0000000000000000 offset=0]
         @0x000000011126827e: 640a
relocInfo@0x000000011126827e [type=6(runtime_call) addr=0x000000011126d30f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000000111268280: f801c5335006
relocInfo@0x0000000111268284 [type=5(static_stub) addr=0x000000011126d315 offset=6 data=-15053] | [static_call=0x000000011126bdcd]
         @0x0000000111268286: c000
relocInfo@0x0000000111268286 [type=12(metadata) addr=0x000000011126d315 offset=0] | [metadata_addr=0x000000011126d317 *=0x0000000000000000 offset=0]
         @0x0000000111268288: 640a
relocInfo@0x0000000111268288 [type=6(runtime_call) addr=0x000000011126d31f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011126828a: f801c3915006
relocInfo@0x000000011126828e [type=5(static_stub) addr=0x000000011126d325 offset=6 data=-15471] | [static_call=0x000000011126bf6f]
         @0x0000000111268290: c000
relocInfo@0x0000000111268290 [type=12(metadata) addr=0x000000011126d325 offset=0] | [metadata_addr=0x000000011126d327 *=0x0000000000000000 offset=0]
         @0x0000000111268292: 640a
relocInfo@0x0000000111268292 [type=6(runtime_call) addr=0x000000011126d32f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000000111268294: f801c3515006
relocInfo@0x0000000111268298 [type=5(static_stub) addr=0x000000011126d335 offset=6 data=-15535] | [static_call=0x000000011126bfaf]
         @0x000000011126829a: c000
relocInfo@0x000000011126829a [type=12(metadata) addr=0x000000011126d335 offset=0] | [metadata_addr=0x000000011126d337 *=0x0000000000000000 offset=0]
         @0x000000011126829c: 640a
relocInfo@0x000000011126829c [type=6(runtime_call) addr=0x000000011126d33f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011126829e: f801c3115006
relocInfo@0x00000001112682a2 [type=5(static_stub) addr=0x000000011126d345 offset=6 data=-15599] | [static_call=0x000000011126bfef]
         @0x00000001112682a4: c000
relocInfo@0x00000001112682a4 [type=12(metadata) addr=0x000000011126d345 offset=0] | [metadata_addr=0x000000011126d347 *=0x0000000000000000 offset=0]
         @0x00000001112682a6: 640a
relocInfo@0x00000001112682a6 [type=6(runtime_call) addr=0x000000011126d34f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x00000001112682a8: f801c2d15006
relocInfo@0x00000001112682ac [type=5(static_stub) addr=0x000000011126d355 offset=6 data=-15663] | [static_call=0x000000011126c02f]
         @0x00000001112682ae: c000
relocInfo@0x00000001112682ae [type=12(metadata) addr=0x000000011126d355 offset=0] | [metadata_addr=0x000000011126d357 *=0x0000000000000000 offset=0]
         @0x00000001112682b0: 640a
relocInfo@0x00000001112682b0 [type=6(runtime_call) addr=0x000000011126d35f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x00000001112682b2: f801c2395006
relocInfo@0x00000001112682b6 [type=5(static_stub) addr=0x000000011126d365 offset=6 data=-15815] | [static_call=0x000000011126c0c7]
         @0x00000001112682b8: c000
relocInfo@0x00000001112682b8 [type=12(metadata) addr=0x000000011126d365 offset=0] | [metadata_addr=0x000000011126d367 *=0x0000000000000000 offset=0]
         @0x00000001112682ba: 640a
relocInfo@0x00000001112682ba [type=6(runtime_call) addr=0x000000011126d36f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x00000001112682bc: 642d
relocInfo@0x00000001112682bc [type=6(runtime_call) addr=0x000000011126d39c offset=45 format=1] | [destination=0x0000000110b420e0]
         @0x00000001112682be: f80309b26b6900017005
relocInfo@0x00000001112682c6 [type=7(external_word) addr=0x000000011126d3a1 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x00000001112682c8: 640e
relocInfo@0x00000001112682c8 [type=6(runtime_call) addr=0x000000011126d3af offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001112682ca: f801f82e9006
relocInfo@0x00000001112682ce [type=9(section_word) addr=0x000000011126d3b5 offset=6 data=-2002] | [target=0x000000011126d3b5]
         @0x00000001112682d0: 640c
relocInfo@0x00000001112682d0 [type=6(runtime_call) addr=0x000000011126d3c1 offset=12 format=1] | [destination=0x0000000110bfa860]
         @0x00000001112682d2: 0000
relocInfo@0x00000001112682d2 [type=0(none) addr=0x000000011126d3c1 offset=0]
         @0x00000001112682d4: 0000
relocInfo@0x00000001112682d4 [type=0(none) addr=0x000000011126d3c1 offset=0]
         @0x00000001112682d6: 0000
relocInfo@0x00000001112682d6 [type=0(none) addr=0x000000011126d3c1 offset=0]
         @0x00000001112682d8: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 24 entries, 196 bytes):
{
   < 0x0000000111268374, 0x000000011126c2a4 > < 0x000000011126837e, 0x000000011126c2bd > < 0x000000011126934c, 0x000000011126c624 > 
   < 0x0000000111269a9c, 0x000000011126c828 > < 0x0000000111269c0a, 0x000000011126c883 > < 0x0000000111269cdc, 0x000000011126c89c > 
   < 0x000000011126a7ab, 0x000000011126ca7d > < 0x000000011126ad7c, 0x000000011126cc3f > < 0x000000011126b04d, 0x000000011126ccbb > 
   < 0x000000011126b5cc, 0x000000011126ce7d > < 0x000000011126b7bc, 0x000000011126ced8 > < 0x000000011126b8c4, 0x000000011126cf12 > 
   < 0x000000011126b9cc, 0x000000011126cf4c > < 0x000000011126bacc, 0x000000011126cf86 > < 0x000000011126bc53, 0x000000011126cfe1 > 
   < 0x000000011126bd25, 0x000000011126cffa > < 0x000000011126be38, 0x000000011126d035 > < 0x000000011126be38, 0x000000011126d04e > 
   < 0x000000011126beaa, 0x000000011126d0aa > < 0x000000011126bef2, 0x000000011126d0c3 > < 0x000000011126bf74, 0x000000011126d0f2 > 
   < 0x000000011126bfb4, 0x000000011126d10b > < 0x000000011126bff4, 0x000000011126d124 > < 0x000000011126c034, 0x000000011126d13d > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
# 0: 0x0000000000000000 NULL-oop
# 1: 0x000000017e000270 a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x000000017e000270}
# 2: 0x000000017e000078 a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
# 3: 0x000000017e000128 a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
# 4: 0x000000011ff8c550 a 'java/lang/Class'{0x000000011ff8c550} = double
# 5: 0x000000017e0000e8 a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e0000e8}
# 6: 0x000000017e000000 a 'jdk/incubator/vector/Double256Vector'{0x000000017e000000}
# 7: 0x000000017e000210 a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x000000017e000210}
# 8: 0x000000011ff58b48 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011ff58b48}
# 9: 0x00000001200a7938 a 'java/lang/Class'{0x00000001200a7938} = 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
#10: 0x000000011ffc7b70 a 'java/lang/Class'{0x000000011ffc7b70} = 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 NULL-oop
# 1: 0x000000026788fe18 {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
# 2: 0x0000000267b3fa08 {method} {0x0000000267b3fa08} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
# 3: 0x0000000267b96588 {method} {0x0000000267b96588} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
# 4: 0x0000000267b17448 {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
# 5: 0x0000000267b1ded0 {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
# 6: 0x0000000267b96280 {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
# 7: 0x000000011015f0e0 {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
# 8: 0x00000001103f3408 {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
# 9: 0x0000000267b39e30 {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
#10: 0x0000000267b40508 {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
#11: 0x0000000267b710c0 {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
#12: 0x0000000267b1f228 {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
#13: 0x0000000267b18ef0 {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
#14: 0x0000000267b19378 {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
#15: 0x0000000267b181a0 {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
#16: 0x0000000267b19640 {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
#17: 0x0000000267b17270 {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
#18: 0x000000011040aa78 {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
#19: 0x0000000110409a78 {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
#20: 0x0000000267b6d620 {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
#21: 0x0000000267b393b0 {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
#22: 0x0000000267b1fe80 {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

============================= C2-compiled nmethod ==============================
----------------------- MetaData before Compile_id = 1154 ------------------------
{method}
 - this oop:          0x000000026788fe18
 - method holder:     'org/jml/regression/linear/DoubleVectorLinearRegression'
 - constants:         0x000000026788f558 constant pool [135]/operands[5] {0x000000026788f558} for 'org/jml/regression/linear/DoubleVectorLinearRegression' cache=0x0000000267a042d0
 - access:            0xc1000001  public 
 - name:              'fit'
 - signature:         '([D[D)V'
 - max stack:         9
 - max locals:        23
 - size of params:    3
 - method size:       13
 - vtable index:      5
 - i2i entry:         0x0000000110af1e20
 - adapters:          AHE@0x00007f846603a870: 0xbbb00000 i2c: 0x0000000110b69ee0 c2i: 0x0000000110b69fbf c2iUV: 0x0000000110b69f92 c2iNCI: 0x0000000110b69ffc
 - compiled entry     0x0000000110b69fbf
 - code size:         378
 - code start:        0x000000026788fba8
 - code end (excl):   0x000000026788fd22
 - method data:       0x0000000267a04640
 - checked ex length: 0
 - linenumber start:  0x000000026788fd22
 - localvar length:   16
 - localvar start:    0x000000026788fd56

------------------------ OptoAssembly for Compile_id = 1154 -----------------------
#
#  void ( rawptr:BotPTR )
#
#r018 rsi:rsi   : parm 0: rawptr:BotPTR
# -- Old rsp -- Framesize: 320 --
#r583 rsp+316: in_preserve
#r582 rsp+312: return address
#r581 rsp+308: in_preserve
#r580 rsp+304: saved fp register
#r579 rsp+300: pad2, stack alignment
#r578 rsp+296: pad2, stack alignment
#r577 rsp+292: Fixed slot 1
#r576 rsp+288: Fixed slot 0
#r655 rsp+284: spill
#r654 rsp+280: spill
#r653 rsp+276: spill
#r652 rsp+272: spill
#r651 rsp+268: spill
#r650 rsp+264: spill
#r649 rsp+260: spill
#r648 rsp+256: spill
#r647 rsp+252: spill
#r646 rsp+248: spill
#r645 rsp+244: spill
#r644 rsp+240: spill
#r643 rsp+236: spill
#r642 rsp+232: spill
#r641 rsp+228: spill
#r640 rsp+224: spill
#r639 rsp+220: spill
#r638 rsp+216: spill
#r637 rsp+212: spill
#r636 rsp+208: spill
#r635 rsp+204: spill
#r634 rsp+200: spill
#r633 rsp+196: spill
#r632 rsp+192: spill
#r631 rsp+188: spill
#r630 rsp+184: spill
#r629 rsp+180: spill
#r628 rsp+176: spill
#r627 rsp+172: spill
#r626 rsp+168: spill
#r625 rsp+164: spill
#r624 rsp+160: spill
#r623 rsp+156: spill
#r622 rsp+152: spill
#r621 rsp+148: spill
#r620 rsp+144: spill
#r619 rsp+140: spill
#r618 rsp+136: spill
#r617 rsp+132: spill
#r616 rsp+128: spill
#r615 rsp+124: spill
#r614 rsp+120: spill
#r613 rsp+116: spill
#r612 rsp+112: spill
#r611 rsp+108: spill
#r610 rsp+104: spill
#r609 rsp+100: spill
#r608 rsp+96: spill
#r607 rsp+92: spill
#r606 rsp+88: spill
#r605 rsp+84: spill
#r604 rsp+80: spill
#r603 rsp+76: spill
#r602 rsp+72: spill
#r601 rsp+68: spill
#r600 rsp+64: spill
#r599 rsp+60: spill
#r598 rsp+56: spill
#r597 rsp+52: spill
#r596 rsp+48: spill
#r595 rsp+44: spill
#r594 rsp+40: spill
#r593 rsp+36: spill
#r592 rsp+32: spill
#r591 rsp+28: spill
#r590 rsp+24: spill
#r589 rsp+20: spill
#r588 rsp+16: spill
#r587 rsp+12: spill
#r586 rsp+ 8: spill
#r585 rsp+ 4: spill
#r584 rsp+ 0: spill
#
000     N1132: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # breakpoint
        nop 	# 11 bytes pad for loops and calls

010     B1: #	out( B56 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
010     # stack bang (816 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #304	# Create frame

01f     movq    RBX, [RSI + #176 (32-bit)]	# ptr
026     movq    RBP, [RSI + #168 (32-bit)]	# ptr
02d     movsd   XMM0, [RSI + #24 (8-bit)]	# double
032     movsd   [rsp + #80], XMM0	# spill
038     movq    R13, [RSI + #160 (32-bit)]	# ptr
03f     movq    R14, [RSI + #96 (8-bit)]	# ptr
043     movq    R10, [RSI + #88 (8-bit)]	# ptr
047     movq    [rsp + #48], R10	# spill
04c     movq    R10, [RSI + #16 (8-bit)]	# ptr
050     movq    [rsp + #56], R10	# spill
055     movq    R10, [RSI + #8 (8-bit)]	# ptr
059     movq    [rsp + #40], R10	# spill
05e     movl    R12, [RSI + #120 (8-bit)]	# int
062     movl    [rsp + #104], R12	# spill
067     movsd   XMM0, [RSI + #104 (8-bit)]	# double
06c     movsd   [rsp + #24], XMM0	# spill
072     movsd   XMM0, [RSI + #72 (8-bit)]	# double
077     movsd   [rsp + #64], XMM0	# spill
07d     movsd   XMM0, [RSI + #56 (8-bit)]	# double
082     movsd   [rsp + #72], XMM0	# spill
088     movsd   XMM0, [RSI + #40 (8-bit)]	# double
08d     movsd   [rsp + #88], XMM0	# spill
093     movq    RDI, RSI	# spill
        nop 	# 10 bytes pad for loops and calls
0a0     call_leaf,runtime  OSR_migration_end
        No JVM State Info
        # 
0b0     testq   RBX, RBX	# ptr
0b3     je     B56  P=0.001000 C=-1.000000

0b9     B2: #	out( B64 B3 ) <- in( B1 )  Freq: 0.999
0b9     movl    R11, [RBX + #8 (8-bit)]	# compressed klass ptr
        nop 	# 3 bytes pad for loops and calls
0c0     cmpl    R11, narrowklass: precise klass org/jml/regression/linear/DoubleVectorLinearRegression: 0x00007f846905aa20:Constant:exact *	# compressed klass ptr
0c7     jne,u   B64  P=0.000001 C=-1.000000

0cd     B3: #	out( B4 ) <- in( B2 )  Freq: 0.998999
0cd     movq    R9, RBX	# spill
0d0     # checkcastPP of R9

0d0     B4: #	out( B57 B5 ) <- in( B3 B56 )  Freq: 0.999999
0d0     movq    R8, RBP	# spill
0d3     testq   RBP, RBP	# ptr
0d6     je     B57  P=0.001000 C=-1.000000

0dc     B5: #	out( B65 B6 ) <- in( B4 )  Freq: 0.998999
0dc     movl    R10, [RBP + #8 (8-bit)]	# compressed klass ptr
0e0     cmpl    R10, narrowklass: precise klass [D: 0x00007f8467f0e730:Constant:exact *	# compressed klass ptr
0e7     jne,u   B65  P=0.000001 C=-1.000000

0ed     B6: #	out( B7 ) <- in( B5 )  Freq: 0.998998
0ed     movq    RCX, RBP	# spill
0f0     # checkcastPP of RCX

0f0     B7: #	out( B58 B8 ) <- in( B6 B57 )  Freq: 0.999998
0f0     testq   R13, R13	# ptr
0f3     je     B58  P=0.001000 C=-1.000000

0f9     B8: #	out( B65 B9 ) <- in( B7 )  Freq: 0.998998
0f9     movl    R11, [R13 + #8 (8-bit)]	# compressed klass ptr
        nop 	# 3 bytes pad for loops and calls
100     cmpl    R11, narrowklass: precise klass [D: 0x00007f8467f0e730:Constant:exact *	# compressed klass ptr
107     jne,u   B65  P=0.000001 C=-1.000000

10d     B9: #	out( B10 ) <- in( B8 )  Freq: 0.998997
10d     movq    R11, R13	# spill
110     # checkcastPP of R11

110     B10: #	out( B59 B11 ) <- in( B9 B58 )  Freq: 0.999997
110     movq    R12, precise klass jdk/incubator/vector/DoubleVector: 0x00007f846905f380:Constant:exact *	# ptr
        nop 	# 6 bytes pad for loops and calls
120     testq   R14, R14	# ptr
123     je     B59  P=0.001000 C=-1.000000

129     B11: #	out( B66 B12 ) <- in( B10 )  Freq: 0.998997
129     movq    RDI, R9	# spill
12c     movl    R10, [R14 + #8 (8-bit)]	# compressed klass ptr
130     decode_and_move_klass_not_null R8,R10
137     movq    R10, [R8 + #96 (8-bit)]	# class
        nop 	# 5 bytes pad for loops and calls
140     cmpq    R10, R12	# ptr
143     jne,u   B66  P=0.000001 C=-1.000000

149     B12: #	out( B13 ) <- in( B11 )  Freq: 0.998996
149     movq    R10, R14	# spill
14c     # checkcastPP of R10
14c     movq    R8, RBP	# spill
14f     movq    R9, RDI	# spill

152     B13: #	out( B60 B14 ) <- in( B12 B59 )  Freq: 0.999996
152     movq    RDI, [rsp + #48]	# spill
157     testq   RDI, RDI	# ptr
        nop 	# 6 bytes pad for loops and calls
160     je     B60  P=0.001000 C=-1.000000

166     B14: #	out( B65 B15 ) <- in( B13 )  Freq: 0.998996
166     movq    [rsp + #96], R10	# spill
16b     movq    RDX, R11	# spill
16e     movq    [rsp + #32], R9	# spill
173     movq    R10, RDI	# spill
176     movl    R11, [R10 + #8 (8-bit)]	# compressed klass ptr
17a     decode_and_move_klass_not_null R10,R11
181     movq    R10, [R10 + #96 (8-bit)]	# class
185     cmpq    R10, R12	# ptr
188     jne,u   B65  P=0.000001 C=-1.000000

18e     B15: #	out( B16 ) <- in( B14 )  Freq: 0.998995
18e     movq    R10, RDI	# spill
191     # checkcastPP of R10
191     movq    [rsp + #112], R10	# spill

196     B16: #	out( B61 B17 ) <- in( B15 B60 )  Freq: 0.999995
196     movq    R10, [rsp + #56]	# spill
        nop 	# 5 bytes pad for loops and calls
1a0     testq   R10, R10	# ptr
1a3     je     B61  P=0.001000 C=-1.000000

1a9     B17: #	out( B65 B18 ) <- in( B16 )  Freq: 0.998995
1a9     movl    R10, [R10 + #8 (8-bit)]	# compressed klass ptr
1ad     decode_and_move_klass_not_null R11,R10
1b4     movq    R10, [R11 + #96 (8-bit)]	# class
1b8     cmpq    R10, R12	# ptr
        nop 	# 5 bytes pad for loops and calls
1c0     jne,u   B65  P=0.000001 C=-1.000000

1c6     B18: #	out( B19 ) <- in( B17 )  Freq: 0.998994
1c6     movq    R10, [rsp + #56]	# spill
1cb     # checkcastPP of R10
1cb     movq    [rsp + #120], R10	# spill

1d0     B19: #	out( B62 B20 ) <- in( B18 B61 )  Freq: 0.999994
1d0     movq    R10, [rsp + #40]	# spill
1d5     testq   R10, R10	# ptr
1d8     je     B62  P=0.001000 C=-1.000000

1de     B20: #	out( B65 B21 ) <- in( B19 )  Freq: 0.998994
1de     movl    R11, [R10 + #8 (8-bit)]	# compressed klass ptr
1e2     decode_and_move_klass_not_null R10,R11
1e9     movq    R10, [R10 + #96 (8-bit)]	# class
1ed     cmpq    R10, R12	# ptr
1f0     jne,u   B65  P=0.000001 C=-1.000000

1f6     B21: #	out( B22 ) <- in( B20 )  Freq: 0.998993
1f6     movq    R12, [rsp + #40]	# spill
1fb     # checkcastPP of R12

1fb     B22: #	out( B63 B23 ) <- in( B21 B62 )  Freq: 0.999993
        nop 	# 5 bytes pad for loops and calls
200     movl    R10, [RCX + #12 (8-bit)]	# range
204     NullCheck RCX

204     B23: #	out( B63 B24 ) <- in( B22 )  Freq: 0.999992
204     addl    R10, #-3	# int
208     testl   R10, R10
20b     jl     B63  P=0.000001 C=-1.000000

211     B24: #	out( B63 B25 ) <- in( B23 )  Freq: 0.999991
211     movl    RBP, [RDX + #12 (8-bit)]	# range
214     NullCheck RDX

214     B25: #	out( B63 B26 ) <- in( B24 )  Freq: 0.99999
214     addl    RBP, #-3	# int
217     testl   RBP, RBP
219     jl     B63  P=0.000001 C=-1.000000

21f     B26: #	out( B29 ) <- in( B25 )  Freq: 0.999989
21f     movl    [rsp + #152], RBP	# spill
226     movl    [rsp + #108], R10	# spill
22b     movq    [rsp + #144], RDX	# spill
233     movq    [rsp + #136], RCX	# spill
23b     movq    [rsp + #128], R12	# spill
243     replicateD XMM2,[RSP + #72 (32-bit)]
24a     replicateD XMM3,[RSP + #64 (32-bit)]
251     jmp,s   B29
        nop 	# 13 bytes pad for loops and calls

260     B27: #	out( B28 ) <- in( B42 ) top-of-loop Freq: 152489
260     # TLS is in R15
260     movq    [R15 + #328 (32-bit)], R10	# ptr
267     PREFETCHW [R10 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
26f     movq    [RAX], #1	# long
276     movl    [RAX + #8 (8-bit)], narrowklass: precise klass jdk/incubator/vector/Double256Vector: 0x00007f846905bad0:Constant:exact *	# compressed klass ptr
27d     movl    [RAX + #12 (8-bit)], #0	# int

284     B28: #	out( B29 ) <- in( B44 B27 ) top-of-loop Freq: 152504
284     movq    R10, [rsp + #40]	# spill
289     movq    [RAX + #16 (8-bit)], R10	# ptr
28d     
28d     movq    R10, RAX	# spill
290     # checkcastPP of R10
290     movq    [rsp + #128], R10	# spill
298     # TLS is in R15
298     movq    R10, [R15 + #304 (32-bit)]	# ptr
29f     movl    RBP, [rsp + #104]	# spill
2a3     addl    RBP, #4	# int
2a6     movl    [rsp + #104], RBP	# spill
2aa     testl   rax, [R10]	# Safepoint: poll for GC        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:272 (line 46) L[0]=rsp + #32 L[1]=rsp + #136 L[2]=rsp + #144 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=RBP L[8]=XMM0 L[9]=_ L[10]=rsp + #96 L[11]=rsp + #112 L[12]=rsp + #64 L[13]=_ L[14]=rsp + #72 L[15]=_ L[16]=rsp + #88 L[17]=_ L[18]=rsp + #80 L[19]=_ L[20]=#ScObj0 L[21]=#ScObj1 L[22]=_
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=XMM4 }
        # ScObj1 jdk/incubator/vector/Double256Vector={ [payload :0]=XMM1 }
        # OopMap {[32]=Oop [96]=Oop [112]=Oop [120]=Oop [128]=Oop [136]=Oop [144]=Oop off=682/0x2aa}
2ad     movsd   [rsp + #24], XMM0	# spill

2b3     B29: #	out( B55 B30 ) <- in( B26 B28 ) Loop( B29-B28 inner ) Freq: 152505
2b3     movl    R12, [rsp + #104]	# spill
2b8     cvtsi2sdl XMM1, R12	# i2d
2bd     movsd   XMM0, [rsp + #24]	# spill
2c3     ucomisd XMM0, XMM1 test
2c7     jbe,u   B55  P=0.000000 C=777304.000000

2cd     B30: #	out( B51 B31 ) <- in( B29 )  Freq: 152505
2cd     cmpl    R12, [RSP + #108 (32-bit)]	# unsigned
2d2     jnb,u   B51  P=0.000001 C=-1.000000

2d8     B31: #	out( B52 B32 ) <- in( B30 )  Freq: 152505
2d8     # castII of R12
2d8     movl    [rsp + #104], R12	# spill
2dd     movq    R10, [rsp + #136]	# spill
2e5     load_vector XMM1,[R10 + #16 + R12 << #3]
2ec     vsubpd  XMM5,XMM1,XMM3	! sub packedD
        nop 	# 16 bytes pad for loops and calls
300     cmpl    R12, [RSP + #152 (32-bit)]	# unsigned
308     jnb,u   B52  P=0.000001 C=-1.000000

30e     B32: #	out( B67 B33 ) <- in( B31 )  Freq: 152504
30e     movq    R10, [rsp + #144]	# spill
316     load_vector XMM1,[R10 + #16 + R12 << #3]
31d     vsubpd  XMM1,XMM1,XMM2	! sub packedD
321     vmulpd  XMM1,XMM1,XMM5	! mul packedD
325     movq    R10, [rsp + #120]	# spill
32a     movl    R10, [R10 + #8 (8-bit)]	# compressed klass ptr
32e     NullCheck R10

32e     B33: #	out( B53 B34 ) <- in( B32 )  Freq: 152504
32e     cmpl    R10, narrowklass: precise klass jdk/incubator/vector/Double256Vector: 0x00007f846905bad0:Constant:exact *	# compressed klass ptr
335     jne,u   B53  P=0.000001 C=-1.000000

33b     B34: #	out( B45 B35 ) <- in( B33 )  Freq: 152504
33b     movq    R10, [rsp + #120]	# spill
340     # checkcastPP of R10
340     movq    RBP, R10	# spill
343     # TLS is in R15
343     movq    RAX, [R15 + #328 (32-bit)]	# ptr
34a     movq    R10, RAX	# spill
34d     addq    R10, #48	# ptr
351     # TLS is in R15
351     cmpq    R10, [R15 + #344 (32-bit)]	# raw ptr
358     jnb,u   B45  P=0.000100 C=-1.000000

35e     B35: #	out( B36 ) <- in( B34 )  Freq: 152489
35e     # TLS is in R15
35e     movq    [R15 + #328 (32-bit)], R10	# ptr
365     PREFETCHW [R10 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
36d     movq    [RAX], #1	# long
374     PREFETCHW [R10 + #256 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
37c     movl    [RAX + #8 (8-bit)], narrowklass: precise klass [D: 0x00007f8467f0e730:Constant:exact *	# compressed klass ptr
383     PREFETCHW [R10 + #320 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
38b     movl    [RAX + #12 (8-bit)], #4	# int
392     PREFETCHW [R10 + #384 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
39a     movq    [RAX + #16 (8-bit)], #0	# long
3a2     movq    [RAX + #24 (8-bit)], #0	# long
3aa     movq    [RAX + #32 (8-bit)], #0	# long
3b2     movq    [RAX + #40 (8-bit)], #0	# long

3ba     B36: #	out( B47 B37 ) <- in( B46 B35 )  Freq: 152504
3ba     
3ba     MEMBAR-storestore (empty encoding)
3ba     # checkcastPP of RAX
3ba     movq    [rsp + #40], RAX	# spill
3bf     movq    R10, [RBP + #16 (8-bit)]	# ptr ! Field: jdk/internal/vm/vector/VectorSupport$VectorPayload.payload (constant)
3c3     vaddpd  XMM4,XMM1,[R10 + #16 (8-bit)]	! add packedD
3c9     store_vector [RAX + #16 (8-bit)],XMM4
	
3ce     # TLS is in R15
3ce     movq    RAX, [R15 + #328 (32-bit)]	# ptr
3d5     movq    R10, RAX	# spill
3d8     addq    R10, #24	# ptr
3dc     # TLS is in R15
        nop 	# 4 bytes pad for loops and calls
3e0     cmpq    R10, [R15 + #344 (32-bit)]	# raw ptr
3e7     jnb,u   B47  P=0.000100 C=-1.000000

3ed     B37: #	out( B38 ) <- in( B36 )  Freq: 152489
3ed     # TLS is in R15
3ed     movq    [R15 + #328 (32-bit)], R10	# ptr
3f4     PREFETCHW [R10 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
3fc     movq    [RAX], #1	# long
403     movl    [RAX + #8 (8-bit)], narrowklass: precise klass jdk/incubator/vector/Double256Vector: 0x00007f846905bad0:Constant:exact *	# compressed klass ptr
40a     movl    [RAX + #12 (8-bit)], #0	# int

411     B38: #	out( B68 B39 ) <- in( B48 B37 )  Freq: 152504
411     movq    R10, [rsp + #40]	# spill
416     movq    [RAX + #16 (8-bit)], R10	# ptr
41a     
41a     # checkcastPP of RAX
41a     movq    [rsp + #120], RAX	# spill
41f     vmulpd  XMM5,XMM5,XMM5	! mul packedD
423     movq    R10, [rsp + #128]	# spill
42b     movl    R11, [R10 + #8 (8-bit)]	# compressed klass ptr
42f     NullCheck R10

42f     B39: #	out( B54 B40 ) <- in( B38 )  Freq: 152504
42f     cmpl    R11, narrowklass: precise klass jdk/incubator/vector/Double256Vector: 0x00007f846905bad0:Constant:exact *	# compressed klass ptr
436     jne,u   B54  P=0.000001 C=-1.000000

43c     B40: #	out( B49 B41 ) <- in( B39 )  Freq: 152504
43c     movq    RBP, [rsp + #128]	# spill
444     # checkcastPP of RBP
444     # TLS is in R15
444     movq    RAX, [R15 + #328 (32-bit)]	# ptr
44b     movq    R10, RAX	# spill
44e     addq    R10, #48	# ptr
452     # TLS is in R15
        nop 	# 14 bytes pad for loops and calls
460     cmpq    R10, [R15 + #344 (32-bit)]	# raw ptr
467     jnb,u   B49  P=0.000100 C=-1.000000

46d     B41: #	out( B42 ) <- in( B40 )  Freq: 152489
46d     # TLS is in R15
46d     movq    [R15 + #328 (32-bit)], R10	# ptr
474     PREFETCHW [R10 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
47c     movq    [RAX], #1	# long
483     PREFETCHW [R10 + #256 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
48b     movl    [RAX + #8 (8-bit)], narrowklass: precise klass [D: 0x00007f8467f0e730:Constant:exact *	# compressed klass ptr
492     PREFETCHW [R10 + #320 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
49a     movl    [RAX + #12 (8-bit)], #4	# int
4a1     PREFETCHW [R10 + #384 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
4a9     movq    [RAX + #16 (8-bit)], #0	# long
4b1     movq    [RAX + #24 (8-bit)], #0	# long
4b9     movq    [RAX + #32 (8-bit)], #0	# long
4c1     movq    [RAX + #40 (8-bit)], #0	# long

4c9     B42: #	out( B27 B43 ) <- in( B50 B41 )  Freq: 152504
4c9     
4c9     MEMBAR-storestore (empty encoding)
4c9     # checkcastPP of RAX
4c9     movq    [rsp + #40], RAX	# spill
4ce     movq    R10, [RBP + #16 (8-bit)]	# ptr ! Field: jdk/internal/vm/vector/VectorSupport$VectorPayload.payload (constant)
4d2     vaddpd  XMM1,XMM5,[R10 + #16 (8-bit)]	! add packedD
4d8     store_vector [RAX + #16 (8-bit)],XMM1
	
4dd     # TLS is in R15
4dd     movq    RAX, [R15 + #328 (32-bit)]	# ptr
4e4     movq    R10, RAX	# spill
4e7     addq    R10, #24	# ptr
4eb     # TLS is in R15
4eb     cmpq    R10, [R15 + #344 (32-bit)]	# raw ptr
4f2     jb,u   B27  P=0.999900 C=-1.000000

4f8     B43: #	out( B72 B44 ) <- in( B42 )  Freq: 15.2529
4f8     vmovdqu [rsp + 256],XMM1	# spill
501     vmovdqu [rsp + 224],XMM4	# spill
50a     vmovdqu [rsp + 192],XMM3	# spill
513     vmovdqu [rsp + 160],XMM2	# spill
51c     movsd   [rsp + #48], XMM0	# spill
522     vmovdqu [rsp + 0],XMM5	# spill
527     movq    RSI, precise klass jdk/incubator/vector/Double256Vector: 0x00007f846905bad0:Constant:exact *	# ptr
        nop 	# 3 bytes pad for loops and calls
534     call,static  wrapper for: _new_instance_Java
        # jdk.incubator.vector.DoubleVector::lanewiseTemplate @ bci:168 (line 651) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x00007f84695a11b0 STK[2]=#Ptr0x00007f84695a2a10 STK[3]=#4 STK[4]=RBP STK[5]=#ScObj0 STK[6]=#Ptr0x00007f846a8b8b70
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #0 }
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 279) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:259 (line 49) L[0]=rsp + #32 L[1]=rsp + #136 L[2]=rsp + #144 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #104 L[8]=rsp + #48 L[9]=_ L[10]=rsp + #96 L[11]=rsp + #112 L[12]=rsp + #64 L[13]=_ L[14]=rsp + #72 L[15]=_ L[16]=rsp + #88 L[17]=_ L[18]=rsp + #80 L[19]=_ L[20]=#ScObj0 L[21]=_ L[22]=_
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #224 }
        # OopMap {rbp=Oop [32]=Oop [40]=Oop [96]=Oop [112]=Oop [120]=Oop [136]=Oop [144]=Oop off=1340/0x53c}

53c     B44: #	out( B28 ) <- in( B43 )  Freq: 15.2526
        # Block is sole successor of call
53c     movsd   XMM0, [rsp + #48]	# spill
542     vmovdqu XMM2,[rsp + 160]	# spill
54b     vmovdqu XMM3,[rsp + 192]	# spill
554     vmovdqu XMM4,[rsp + 224]	# spill
55d     vmovdqu XMM1,[rsp + 256]	# spill
566     jmp     B28

56b     B45: #	out( B70 B46 ) <- in( B34 )  Freq: 15.2529
56b     vmovdqu [rsp + 256],XMM1	# spill
574     vmovdqu [rsp + 224],XMM5	# spill
57d     vmovdqu [rsp + 192],XMM3	# spill
586     vmovdqu [rsp + 160],XMM2	# spill
58f     pushq   [rsp + #24]	# 64-bit mem-mem spill
	popq    [rsp + #0]
598     movq    RSI, precise klass [D: 0x00007f8467f0e730:Constant:exact *	# ptr
5a2     movl    RDX, #4	# int
        nop 	# 1 bytes pad for loops and calls
5a8     call,static  wrapper for: _new_array_Java
        # jdk.incubator.vector.DoubleVector::lanewiseTemplate @ bci:168 (line 651) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x00007f84695a11b0 STK[2]=#Ptr0x00007f84695a2a10 STK[3]=#4 STK[4]=RBP STK[5]=#ScObj0 STK[6]=#Ptr0x00007f846a8b8b70
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #256 }
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 279) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:245 (line 48) L[0]=rsp + #32 L[1]=rsp + #136 L[2]=rsp + #144 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #104 L[8]=rsp + #0 L[9]=_ L[10]=rsp + #96 L[11]=rsp + #112 L[12]=rsp + #64 L[13]=_ L[14]=rsp + #72 L[15]=_ L[16]=rsp + #88 L[17]=_ L[18]=rsp + #80 L[19]=_ L[20]=_ L[21]=rsp + #128 L[22]=#ScObj0
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #224 }
        # OopMap {rbp=Oop [32]=Oop [96]=Oop [112]=Oop [128]=Oop [136]=Oop [144]=Oop off=1456/0x5b0}

5b0     B46: #	out( B36 ) <- in( B45 )  Freq: 15.2526
        # Block is sole successor of call
5b0     movsd   XMM0, [rsp + #0]	# spill
5b5     vmovdqu XMM2,[rsp + 160]	# spill
5be     vmovdqu XMM3,[rsp + 192]	# spill
5c7     vmovdqu XMM5,[rsp + 224]	# spill
5d0     vmovdqu XMM1,[rsp + 256]	# spill
5d9     jmp     B36

5de     B47: #	out( B69 B48 ) <- in( B36 )  Freq: 15.2529
5de     vmovdqu [rsp + 256],XMM4	# spill
5e7     vmovdqu [rsp + 224],XMM5	# spill
5f0     vmovdqu [rsp + 192],XMM3	# spill
5f9     vmovdqu [rsp + 160],XMM2	# spill
602     movsd   [rsp + #48], XMM0	# spill
608     vmovdqu [rsp + 0],XMM1	# spill
60d     movq    RSI, precise klass jdk/incubator/vector/Double256Vector: 0x00007f846905bad0:Constant:exact *	# ptr
        nop 	# 1 bytes pad for loops and calls
618     call,static  wrapper for: _new_instance_Java
        # jdk.incubator.vector.DoubleVector::lanewiseTemplate @ bci:168 (line 651) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x00007f84695a11b0 STK[2]=#Ptr0x00007f84695a2a10 STK[3]=#4 STK[4]=RBP STK[5]=#ScObj0 STK[6]=#Ptr0x00007f846a8b8b70
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #0 }
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 279) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:245 (line 48) L[0]=rsp + #32 L[1]=rsp + #136 L[2]=rsp + #144 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #104 L[8]=rsp + #48 L[9]=_ L[10]=rsp + #96 L[11]=rsp + #112 L[12]=rsp + #64 L[13]=_ L[14]=rsp + #72 L[15]=_ L[16]=rsp + #88 L[17]=_ L[18]=rsp + #80 L[19]=_ L[20]=_ L[21]=rsp + #128 L[22]=#ScObj0
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #224 }
        # OopMap {rbp=Oop [32]=Oop [40]=Oop [96]=Oop [112]=Oop [128]=Oop [136]=Oop [144]=Oop off=1568/0x620}

620     B48: #	out( B38 ) <- in( B47 )  Freq: 15.2526
        # Block is sole successor of call
620     movsd   XMM0, [rsp + #48]	# spill
626     vmovdqu XMM2,[rsp + 160]	# spill
62f     vmovdqu XMM3,[rsp + 192]	# spill
638     vmovdqu XMM5,[rsp + 224]	# spill
641     vmovdqu XMM4,[rsp + 256]	# spill
64a     jmp     B38

64f     B49: #	out( B73 B50 ) <- in( B40 )  Freq: 15.2529
64f     vmovdqu [rsp + 256],XMM5	# spill
658     vmovdqu [rsp + 224],XMM4	# spill
661     vmovdqu [rsp + 192],XMM3	# spill
66a     vmovdqu [rsp + 160],XMM2	# spill
673     movsd   [rsp + #0], XMM0	# spill
678     movq    RSI, precise klass [D: 0x00007f8467f0e730:Constant:exact *	# ptr
682     movl    RDX, #4	# int
        nop 	# 1 bytes pad for loops and calls
688     call,static  wrapper for: _new_array_Java
        # jdk.incubator.vector.DoubleVector::lanewiseTemplate @ bci:168 (line 651) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x00007f84695a11b0 STK[2]=#Ptr0x00007f84695a2a10 STK[3]=#4 STK[4]=RBP STK[5]=#ScObj0 STK[6]=#Ptr0x00007f846a8b8b70
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #256 }
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 279) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:259 (line 49) L[0]=rsp + #32 L[1]=rsp + #136 L[2]=rsp + #144 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #104 L[8]=rsp + #0 L[9]=_ L[10]=rsp + #96 L[11]=rsp + #112 L[12]=rsp + #64 L[13]=_ L[14]=rsp + #72 L[15]=_ L[16]=rsp + #88 L[17]=_ L[18]=rsp + #80 L[19]=_ L[20]=#ScObj0 L[21]=_ L[22]=_
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #224 }
        # OopMap {rbp=Oop [32]=Oop [96]=Oop [112]=Oop [120]=Oop [136]=Oop [144]=Oop off=1680/0x690}

690     B50: #	out( B42 ) <- in( B49 )  Freq: 15.2526
        # Block is sole successor of call
690     movsd   XMM0, [rsp + #0]	# spill
695     vmovdqu XMM2,[rsp + 160]	# spill
69e     vmovdqu XMM3,[rsp + 192]	# spill
6a7     vmovdqu XMM4,[rsp + 224]	# spill
6b0     vmovdqu XMM5,[rsp + 256]	# spill
6b9     jmp     B42

6be     B51: #	out( N1132 ) <- in( B30 )  Freq: 0.15453
6be     movl    RSI, #-28	# int
6c3     movq    RBP, [rsp + #32]	# spill
6c8     pushq   [rsp + #136]	# 64-bit mem-mem spill
	popq    [rsp + #0]
6d4     pushq   [rsp + #96]	# 64-bit mem-mem spill
	popq    [rsp + #32]
6de     pushq   [rsp + #64]	# 64-bit mem-mem spill
	popq    [rsp + #48]
6e8     pushq   [rsp + #72]	# 64-bit mem-mem spill
	popq    [rsp + #56]
6f2     pushq   [rsp + #88]	# 64-bit mem-mem spill
	popq    [rsp + #64]
6fc     pushq   [rsp + #80]	# 64-bit mem-mem spill
	popq    [rsp + #72]
706     movq    [rsp - #8], rax	# 32-bit mem-mem spill
	movl    rax, [rsp + #104]
	movl    [rsp + #20], rax
	movq    rax, [rsp - #8]
718     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 359) L[0]=_ L[1]=_ STK[0]=rsp + #20 STK[1]=rsp + #108 STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 74) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::fromArray @ bci:9 (line 2562) L[0]=#Ptr0x00007f846b633920 L[1]=rsp + #0 L[2]=_ L[3]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:214 (line 47) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #144 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #20 L[8]=rsp + #24 L[9]=_ L[10]=rsp + #32 L[11]=rsp + #112 L[12]=rsp + #48 L[13]=_ L[14]=rsp + #56 L[15]=_ L[16]=rsp + #64 L[17]=_ L[18]=rsp + #72 L[19]=_ L[20]=rsp + #120 L[21]=rsp + #128 L[22]=_
        # OopMap {rbp=Oop [0]=Oop [32]=Oop [112]=Oop [120]=Oop [128]=Oop [144]=Oop off=1824/0x720}
720     stop	# ShouldNotReachHere

734     B52: #	out( N1132 ) <- in( B31 )  Freq: 0.15453
734     movl    RSI, #-28	# int
739     movq    RBP, [rsp + #32]	# spill
73e     movq    [rsp + #0], R10	# spill
742     pushq   [rsp + #144]	# 64-bit mem-mem spill
	popq    [rsp + #8]
74f     pushq   [rsp + #96]	# 64-bit mem-mem spill
	popq    [rsp + #32]
759     pushq   [rsp + #64]	# 64-bit mem-mem spill
	popq    [rsp + #48]
763     pushq   [rsp + #72]	# 64-bit mem-mem spill
	popq    [rsp + #56]
76d     pushq   [rsp + #88]	# 64-bit mem-mem spill
	popq    [rsp + #64]
777     pushq   [rsp + #80]	# 64-bit mem-mem spill
	popq    [rsp + #72]
781     pushq   [rsp + #128]	# 64-bit mem-mem spill
	popq    [rsp + #80]
78e     movl    [rsp + #20], R12	# spill
793     movq    [rsp - #8], rax	# 32-bit mem-mem spill
	movl    rax, [rsp + #152]
	movl    [rsp + #104], rax
	movq    rax, [rsp - #8]
7a8     vmovdqu [rsp + 128],XMM5	# spill
        nop 	# 3 bytes pad for loops and calls
7b4     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 359) L[0]=_ L[1]=_ STK[0]=rsp + #20 STK[1]=rsp + #104 STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 74) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::fromArray @ bci:9 (line 2562) L[0]=#Ptr0x00007f846b633920 L[1]=rsp + #8 L[2]=_ L[3]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:232 (line 48) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #20 L[8]=rsp + #24 L[9]=_ L[10]=rsp + #32 L[11]=rsp + #112 L[12]=rsp + #48 L[13]=_ L[14]=rsp + #56 L[15]=_ L[16]=rsp + #64 L[17]=_ L[18]=rsp + #72 L[19]=_ L[20]=_ L[21]=rsp + #80 L[22]=#ScObj0 STK[0]=rsp + #120
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #128 }
        # OopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [80]=Oop [112]=Oop [120]=Oop off=1980/0x7bc}
7bc     stop	# ShouldNotReachHere

7d0     B53: #	out( N1132 ) <- in( B33 )  Freq: 0.152504
7d0     movl    RSI, #-34	# int
7d5     movq    RBP, [rsp + #32]	# spill
7da     pushq   [rsp + #136]	# 64-bit mem-mem spill
	popq    [rsp + #0]
7e6     pushq   [rsp + #144]	# 64-bit mem-mem spill
	popq    [rsp + #8]
7f3     movl    [rsp + #16], R12	# spill
7f8     pushq   [rsp + #96]	# 64-bit mem-mem spill
	popq    [rsp + #32]
802     pushq   [rsp + #112]	# 64-bit mem-mem spill
	popq    [rsp + #40]
80c     pushq   [rsp + #64]	# 64-bit mem-mem spill
	popq    [rsp + #48]
816     pushq   [rsp + #72]	# 64-bit mem-mem spill
	popq    [rsp + #56]
820     pushq   [rsp + #88]	# 64-bit mem-mem spill
	popq    [rsp + #64]
82a     pushq   [rsp + #80]	# 64-bit mem-mem spill
	popq    [rsp + #72]
834     pushq   [rsp + #128]	# 64-bit mem-mem spill
	popq    [rsp + #80]
841     pushq   [rsp + #120]	# 64-bit mem-mem spill
	popq    [rsp + #88]
84b     vmovdqu [rsp + 96],XMM1	# spill
851     vmovdqu [rsp + 128],XMM5	# spill
        nop 	# 2 bytes pad for loops and calls
85c     call,static  wrapper for: uncommon_trap(reason='class_check' action='maybe_recompile' debug_id='0')
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_ STK[0]=rsp + #88 STK[1]=#Ptr0x00007f846a8b30e0 STK[2]=#ScObj0
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #96 }
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:245 (line 48) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #16 L[8]=rsp + #24 L[9]=_ L[10]=rsp + #32 L[11]=rsp + #40 L[12]=rsp + #48 L[13]=_ L[14]=rsp + #56 L[15]=_ L[16]=rsp + #64 L[17]=_ L[18]=rsp + #72 L[19]=_ L[20]=_ L[21]=rsp + #80 L[22]=#ScObj0
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #128 }
        # OopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [40]=Oop [80]=Oop [88]=Oop off=2148/0x864}
864     stop	# ShouldNotReachHere

878     B54: #	out( N1132 ) <- in( B39 )  Freq: 0.152504
878     movl    RSI, #-34	# int
87d     movq    RBP, [rsp + #32]	# spill
882     pushq   [rsp + #136]	# 64-bit mem-mem spill
	popq    [rsp + #0]
88e     pushq   [rsp + #144]	# 64-bit mem-mem spill
	popq    [rsp + #8]
89b     movq    [rsp - #8], rax	# 32-bit mem-mem spill
	movl    rax, [rsp + #104]
	movl    [rsp + #16], rax
	movq    rax, [rsp - #8]
8ad     movsd   [rsp + #24], XMM0	# spill
8b3     pushq   [rsp + #96]	# 64-bit mem-mem spill
	popq    [rsp + #32]
8bd     pushq   [rsp + #112]	# 64-bit mem-mem spill
	popq    [rsp + #40]
8c7     pushq   [rsp + #64]	# 64-bit mem-mem spill
	popq    [rsp + #48]
8d1     pushq   [rsp + #72]	# 64-bit mem-mem spill
	popq    [rsp + #56]
8db     pushq   [rsp + #80]	# 64-bit mem-mem spill
	popq    [rsp + #72]
8e5     pushq   [rsp + #128]	# 64-bit mem-mem spill
	popq    [rsp + #80]
8f2     vmovdqu [rsp + 96],XMM5	# spill
8f8     vmovdqu [rsp + 128],XMM4	# spill
        nop 	# 3 bytes pad for loops and calls
904     call,static  wrapper for: uncommon_trap(reason='class_check' action='maybe_recompile' debug_id='0')
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_ STK[0]=rsp + #80 STK[1]=#Ptr0x00007f846a8b30e0 STK[2]=#ScObj0
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #96 }
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:259 (line 49) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #16 L[8]=rsp + #24 L[9]=_ L[10]=rsp + #32 L[11]=rsp + #40 L[12]=rsp + #48 L[13]=_ L[14]=rsp + #56 L[15]=_ L[16]=rsp + #88 L[17]=_ L[18]=rsp + #72 L[19]=_ L[20]=#ScObj0 L[21]=_ L[22]=_
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #128 }
        # OopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [40]=Oop [80]=Oop off=2316/0x90c}
90c     stop	# ShouldNotReachHere

920     B55: #	out( N1132 ) <- in( B29 )  Freq: 0.0762524
920     ucomisd XMM0, XMM1
	movl    RBP, #-1
	jp,s    done
	jb,s    done
	setne   RBP
	movzbl  RBP, RBP
done:
93d     negl    RBP	# int
93f     movl    RSI, #-187	# int
944     pushq   [rsp + #32]	# 64-bit mem-mem spill
	popq    [rsp + #0]
94d     movsd   [rsp + #32], XMM0	# spill
953     pushq   [rsp + #96]	# 64-bit mem-mem spill
	popq    [rsp + #40]
95d     pushq   [rsp + #64]	# 64-bit mem-mem spill
	popq    [rsp + #56]
967     pushq   [rsp + #72]	# 64-bit mem-mem spill
	popq    [rsp + #64]
971     pushq   [rsp + #88]	# 64-bit mem-mem spill
	popq    [rsp + #72]
        nop 	# 1 bytes pad for loops and calls
97c     call,static  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:205 (line 46) L[0]=rsp + #0 L[1]=rsp + #136 L[2]=rsp + #144 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #104 L[8]=rsp + #32 L[9]=_ L[10]=rsp + #40 L[11]=rsp + #112 L[12]=rsp + #56 L[13]=_ L[14]=rsp + #64 L[15]=_ L[16]=rsp + #72 L[17]=_ L[18]=rsp + #80 L[19]=_ L[20]=rsp + #120 L[21]=rsp + #128 L[22]=_ STK[0]=RBP
        # OopMap {[0]=Oop [40]=Oop [112]=Oop [120]=Oop [128]=Oop [136]=Oop [144]=Oop off=2436/0x984}
984     stop	# ShouldNotReachHere

998     B56: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
998     xorl    R9, R9	# ptr
        nop 	# 5 bytes pad for loops and calls
9a0     jmp     B4

9a5     B57: #	out( B7 ) <- in( B4 )  Freq: 0.000999986
9a5     xorl    RCX, RCX	# ptr
9a7     jmp     B7

9ac     B58: #	out( B10 ) <- in( B7 )  Freq: 0.000999985
9ac     xorl    R11, R11	# ptr
9af     jmp     B10

9b4     B59: #	out( B13 ) <- in( B10 )  Freq: 0.000999984
9b4     xorl    R10, R10	# ptr
9b7     jmp     B13

9bc     B60: #	out( B16 ) <- in( B13 )  Freq: 0.000999983
9bc     movq    [rsp + #96], R10	# spill
9c1     movq    RDX, R11	# spill
9c4     movq    [rsp + #32], R9	# spill
9c9     xorl    R10, R10	# ptr
9cc     movq    [rsp + #112], R10	# spill
9d1     jmp     B16

9d6     B61: #	out( B19 ) <- in( B16 )  Freq: 0.000999982
9d6     xorl    R10, R10	# ptr
9d9     movq    [rsp + #120], R10	# spill
        nop 	# 2 bytes pad for loops and calls
9e0     jmp     B19

9e5     B62: #	out( B22 ) <- in( B19 )  Freq: 0.000999981
9e5     xorl    R12, R12	# ptr
9e8     jmp     B22

9ed     B63: #	out( N1132 ) <- in( B25 B22 B23 B24 )  Freq: 4.02652e-06
9ed     movl    RSI, #-138	# int
9f2     movq    RBP, [rsp + #32]	# spill
9f7     movq    [rsp + #0], RCX	# spill
9fb     movq    [rsp + #8], RDX	# spill
a00     pushq   [rsp + #64]	# 64-bit mem-mem spill
	popq    [rsp + #48]
a0a     pushq   [rsp + #72]	# 64-bit mem-mem spill
	popq    [rsp + #56]
a14     pushq   [rsp + #88]	# 64-bit mem-mem spill
	popq    [rsp + #64]
a1e     pushq   [rsp + #80]	# 64-bit mem-mem spill
	popq    [rsp + #72]
a28     movq    [rsp + #88], R12	# spill
        nop 	# 3 bytes pad for loops and calls
a30     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:199 (line 46) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #104 L[8]=rsp + #24 L[9]=_ L[10]=rsp + #96 L[11]=rsp + #112 L[12]=rsp + #48 L[13]=_ L[14]=rsp + #56 L[15]=_ L[16]=rsp + #64 L[17]=_ L[18]=rsp + #72 L[19]=_ L[20]=rsp + #120 L[21]=rsp + #88 L[22]=_
        # OopMap {rbp=Oop [0]=Oop [8]=Oop [88]=Oop [96]=Oop [112]=Oop [120]=Oop off=2616/0xa38}
a38     stop	# ShouldNotReachHere

a4c     B64: #	out( B65 ) <- in( B2 )  Freq: 9.99e-07
a4c     movq    R8, RBP	# spill

a4f     B65: #	out( N1132 ) <- in( B64 B5 B8 B66 B14 B17 B20 )  Freq: 6.99298e-06
a4f     movl    RSI, #-115	# int
a54     movl    RBP, [rsp + #104]	# spill
a58     pushq   [rsp + #24]	# 64-bit mem-mem spill
	popq    [rsp + #0]
a61     pushq   [rsp + #64]	# 64-bit mem-mem spill
	popq    [rsp + #8]
a6b     pushq   [rsp + #72]	# 64-bit mem-mem spill
	popq    [rsp + #16]
a75     pushq   [rsp + #88]	# 64-bit mem-mem spill
	popq    [rsp + #24]
a7f     pushq   [rsp + #80]	# 64-bit mem-mem spill
	popq    [rsp + #32]
a89     movq    [rsp + #64], RBX	# spill
a8e     movq    [rsp + #72], R8	# spill
a93     movq    [rsp + #80], R13	# spill
a98     movq    [rsp + #88], R14	# spill
        nop 	# 3 bytes pad for loops and calls
aa0     call,static  wrapper for: uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:199 (line 46) L[0]=rsp + #64 L[1]=rsp + #72 L[2]=rsp + #80 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=RBP L[8]=rsp + #0 L[9]=_ L[10]=rsp + #88 L[11]=rsp + #48 L[12]=rsp + #8 L[13]=_ L[14]=rsp + #16 L[15]=_ L[16]=rsp + #24 L[17]=_ L[18]=rsp + #32 L[19]=_ L[20]=rsp + #56 L[21]=rsp + #40 L[22]=_
        # OopMap {[40]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop off=2728/0xaa8}
aa8     stop	# ShouldNotReachHere

abc     B66: #	out( B65 ) <- in( B11 )  Freq: 9.98997e-07
abc     movq    R8, RBP	# spill
        nop 	# 1 bytes pad for loops and calls
ac0     jmp,s   B65

ac2     B67: #	out( N1132 ) <- in( B32 )  Freq: 0.15453
ac2     movl    RSI, #-10	# int
ac7     vmovdqu [rsp + 0],XMM1	# spill
acc     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:245 (line 48) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=#NULL STK[1]=#ScObj0
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #0 }
        # OopMap {off=2772/0xad4}
ad4     stop	# ShouldNotReachHere

ae8     B68: #	out( N1132 ) <- in( B38 )  Freq: 0.154529
ae8     movl    RSI, #-10	# int
aed     vmovdqu [rsp + 0],XMM5	# spill
        nop 	# 2 bytes pad for loops and calls
af4     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:259 (line 49) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=#NULL STK[1]=#ScObj0
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #0 }
        # OopMap {off=2812/0xafc}
afc     stop	# ShouldNotReachHere

b10     B69: #	out( B71 ) <- in( B47 )  Freq: 0.000152529
b10     # exception oop is in rax; no code emitted
b10     jmp,s   B71

b12     B70: #	out( B71 ) <- in( B45 )  Freq: 0.000152529
b12     # exception oop is in rax; no code emitted

b12     B71: #	out( B75 ) <- in( B70 B69 )  Freq: 0.000305059
b12     movq    RSI, RAX	# spill
b15     jmp,s   B75

b17     B72: #	out( B74 ) <- in( B43 )  Freq: 0.000152529
b17     # exception oop is in rax; no code emitted
b17     jmp,s   B74

b19     B73: #	out( B74 ) <- in( B49 )  Freq: 0.000152529
b19     # exception oop is in rax; no code emitted

b19     B74: #	out( B75 ) <- in( B73 B72 )  Freq: 0.000305058
b19     movq    RSI, RAX	# spill

b1c     B75: #	out( N1132 ) <- in( B74 B71 )  Freq: 0.000610117
b1c     vzeroupper
	addq    rsp, 304	# Destroy frame
	popq    rbp

b27     jmp     rethrow_stub

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    3324 1154 %     4       org.jml.regression.linear.DoubleVectorLinearRegression::fit @ 199 (378 bytes)
 total in heap  [0x0000000118699f90,0x000000011869bbf0] = 7264
 relocation     [0x000000011869a108,0x000000011869a1c8] = 192
 main code      [0x000000011869a1e0,0x000000011869ad20] = 2880
 stub code      [0x000000011869ad20,0x000000011869ad38] = 24
 oops           [0x000000011869ad38,0x000000011869ad68] = 48
 metadata       [0x000000011869ad68,0x000000011869ae38] = 208
 scopes data    [0x000000011869ae38,0x000000011869b480] = 1608
 scopes pcs     [0x000000011869b480,0x000000011869bb50] = 1744
 dependencies   [0x000000011869bb50,0x000000011869bb68] = 24
 handler table  [0x000000011869bb68,0x000000011869bbc8] = 96
 nul chk table  [0x000000011869bbc8,0x000000011869bbf0] = 40

[Constant Pool (empty)]

[MachCode]
[Verified Entry Point]
  # {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
 ;; N1132: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x000000011869a1e0: ;   {runtime_call os::breakpoint()}
  0x000000011869a1e0: e8bb ddfd | f090 9090 | 9090 9090 | 9090 9090 
 ;; B1: #	out( B56 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x000000011869a1f0: 8984 2400 | a0fe ff55 | 4881 ec30 | 0100 0048 | 8b9e b000 

  0x000000011869a204: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a204: 0000 488b | aea8 0000 

  0x000000011869a20c: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869a20c: 00c5 fb10 | 4618 c5fb | 1144 2450 | 4c8b aea0 | 0000 004c 

  0x000000011869a220: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a220: 8b76 604c 

  0x000000011869a224: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869a224: 8b56 584c 

  0x000000011869a228: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a228: 8954 2430 

  0x000000011869a22c: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869a22c: 4c8b 5610 | 4c89 5424 | 384c 8b56 | 084c 8954 | 2428 448b | 6678 4489 

  0x000000011869a244: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a244: 6424 68c5 

  0x000000011869a248: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869a248: fb10 4668 | c5fb 1144 | 2418 c5fb | 1046 48c5 | fb11 4424 

  0x000000011869a25c: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a25c: 40c5 fb10 

  0x000000011869a260: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869a260: 4638 c5fb | 1144 2448 | c5fb 1046 | 28c5 fb11 | 4424 5848 | 8bfe 9090 | 9090 9090 | 9090 9090 
  0x000000011869a280: c5f8 7749 | baa0 1078 | 0901 0000 | 0041 ffd2 | 4885 db0f | 84df 0800 | 0044 8b5b | 0890 9090 
  0x000000011869a2a0: ;   {metadata('org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011869a2a0: 4181 fb20 

  0x000000011869a2a4: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a2a4: 1dba 440f | 857f 0900 

  0x000000011869a2ac: ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@37 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869a2ac: 004c 8bcb 
 ;; B4: #	out( B57 B5 ) <- in( B3 B56 )  Freq: 0.999999
  0x000000011869a2b0: 4c8b c548 | 85ed 0f84 | c908 0000 
 ;; B5: #	out( B65 B6 ) <- in( B4 )  Freq: 0.998999
  0x000000011869a2bc: 448b 5508 

  0x000000011869a2c0: ;   {metadata({type array double})}
  0x000000011869a2c0: 4181 fac3 

  0x000000011869a2c4: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a2c4: 80b8 440f | 8562 0900 

  0x000000011869a2cc: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869a2cc: 0048 8bcd 
 ;; B7: #	out( B58 B8 ) <- in( B6 B57 )  Freq: 0.999998
  0x000000011869a2d0: 4d85 ed0f | 84b3 0800 | 0045 8b5d | 0890 9090 

  0x000000011869a2e0: ;   {metadata({type array double})}
  0x000000011869a2e0: 4181 fbc3 | 80b8 440f | 8542 0900 | 004d 8bdd 
 ;; B10: #	out( B59 B11 ) <- in( B9 B58 )  Freq: 0.999997
  0x000000011869a2f0: ;   {metadata('jdk/incubator/vector/DoubleVector')}
  0x000000011869a2f0: 49bc 30ce | d425 0200 | 0000 9090 | 9090 9090 | 4d85 f60f | 848b 0800 | 0049 8bf9 | 458b 5608 
  0x000000011869a310: 4d33 c04f | 8d04 d04d | 8b50 6090 | 9090 9090 

  0x000000011869a320: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a320: 4d3b d40f | 8573 0900 

  0x000000011869a328: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869a328: 004d 8bd6 | 4c8b c54c | 8bcf 488b | 7c24 3048 | 85ff 9090 | 9090 9090 | 0f84 5608 | 0000 4c89 
  0x000000011869a348: 5424 6049 | 8bd3 4c89 | 4c24 204c | 8bd7 458b | 5a08 4d33 | d24f 8d14 | da4d 8b52 

  0x000000011869a364: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a364: 604d 3bd4 | 0f85 c108 | 0000 4c8b 

  0x000000011869a370: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869a370: d74c 8954 | 2470 4c8b | 5424 3890 | 9090 9090 | 4d85 d20f | 842d 0800 | 0045 8b52 | 084d 33db 
  0x000000011869a390: 4f8d 1cd3 | 4d8b 5360 

  0x000000011869a398: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a398: 4d3b d490 | 9090 9090 | 0f85 8908 | 0000 4c8b | 5424 384c 

  0x000000011869a3ac: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869a3ac: 8954 2478 
 ;; B19: #	out( B62 B20 ) <- in( B18 B61 )  Freq: 0.999994
  0x000000011869a3b0: 4c8b 5424 

  0x000000011869a3b4: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a3b4: 284d 85d2 | 0f84 0708 | 0000 458b | 5a08 4d33 | d24f 8d14 | da4d 8b52 | 604d 3bd4 | 0f85 5908 
  0x000000011869a3d4: 0000 4c8b 

  0x000000011869a3d8: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869a3d8: 6424 2890 | 9090 9090 

  0x000000011869a3e0: ; implicit exception: dispatches to 0x000000011869abcd
  0x000000011869a3e0: 448b 510c 
 ;; B23: #	out( B63 B24 ) <- in( B22 )  Freq: 0.999992
  0x000000011869a3e4: 4183 c2fd | 4585 d20f | 8cdc 0700 | 008b 6a0c 
 ;; B25: #	out( B63 B26 ) <- in( B24 )  Freq: 0.99999
  0x000000011869a3f4: 83c5 fd85 

  0x000000011869a3f8: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a3f8: ed0f 8cce | 0700 0089 | ac24 9800 | 0000 4489 | 5424 6c48 | 8994 2490 | 0000 0048 | 898c 2488 
  0x000000011869a418: 0000 004c | 89a4 2480 | 0000 00c4 | e27d 1954 | 2448 c4e2 | 7d19 5c24 

  0x000000011869a430: ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::broadcast@5 (line 3423)
                      ; - jdk.incubator.vector.DoubleVector::broadcastTemplate@7 (line 491)
                      ; - jdk.incubator.vector.Double256Vector::broadcast@2 (line 125)
                      ; - jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x000000011869a430: 40eb 6090 | 9090 9090 | 9090 9090 

  0x000000011869a43c: ;*invokestatic fromArray {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869a43c: 9090 9090 
 ;; B27: #	out( B28 ) <- in( B42 ) top-of-loop Freq: 152489
  0x000000011869a440: 4d89 9748 | 0100 0041 | 0f0d 8ac0 | 0000 0048 | c700 0100 

  0x000000011869a454: ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x000000011869a454: 0000 c740 | 0814 a4ba | 44c7 400c 

  0x000000011869a460: ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869a460: 0000 0000 
 ;; B28: #	out( B29 ) <- in( B44 B27 ) top-of-loop Freq: 152504
  0x000000011869a464: 4c8b 5424 

  0x000000011869a468: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a468: 284c 8950 

  0x000000011869a46c: ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@205 (line 46)
  0x000000011869a46c: 104c 8bd0 | 4c89 9424 

  0x000000011869a474: ;*invokestatic fromArray {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869a474: 8000 0000 | 4d8b 9730 | 0100 008b 

  0x000000011869a480: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a480: 6c24 6883 | c504 896c 

  0x000000011869a488: ; ImmutableOopMap {[32]=Oop [96]=Oop [112]=Oop [120]=Oop [128]=Oop [136]=Oop [144]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)
                      ;   {poll}
  0x000000011869a488: 2468 4185 | 02c5 fb11 | 4424 1844 

  0x000000011869a494: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a494: 8b64 2468 | c4c1 732a 

  0x000000011869a49c: ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@205 (line 46)
  0x000000011869a49c: ccc5 fb10 | 4424 18c5 | f92e c10f | 8653 0600 | 0044 3b64 | 246c 0f83 | e603 0000 
 ;; B31: #	out( B52 B32 ) <- in( B30 )  Freq: 152505
  0x000000011869a4b8: 4489 6424 | 684c 8b94 | 2488 0000 | 00c4 817e 

  0x000000011869a4c8: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a4c8: 6f4c e210 

  0x000000011869a4cc: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869a4cc: c5f5 5ceb | 9090 9090 | 9090 9090 | 9090 9090 | 9090 9090 | 443b a424 | 9800 0000 | 0f83 2604 
  0x000000011869a4ec: 0000 4c8b | 9424 9000 | 0000 c481 | 7e6f 4ce2 | 10c5 f55c 

  0x000000011869a500: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a500: cac5 f559 

  0x000000011869a504: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869a504: cd4c 8b54 | 2478 458b 

  0x000000011869a50c: ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x000000011869a50c: 5208 4181 | fa14 a4ba 

  0x000000011869a514: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a514: 440f 8595 | 0400 004c 

  0x000000011869a51c: ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@2 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869a51c: 8b54 2478 | 498b ea49 | 8b87 4801 | 0000 4c8b | d049 83c2 

  0x000000011869a530: ;*invokestatic fromArray {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869a530: 304d 3b97 

  0x000000011869a534: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a534: 5801 0000 | 0f83 0d02 

  0x000000011869a53c: ;*invokestatic fromArray {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869a53c: 0000 4d89 | 9748 0100 | 0041 0f0d | 8ac0 0000 | 0048 c700 | 0100 0000 | 410f 0d8a | 0001 0000 
  0x000000011869a55c: ;   {metadata({type array double})}
  0x000000011869a55c: c740 08c3 | 80b8 4441 | 0f0d 8a40 | 0100 00c7 | 400c 0400 | 0000 410f | 0d8a 8001 | 0000 48c7 
  0x000000011869a57c: 4010 0000 | 0000 48c7 | 4018 0000 | 0000 48c7 | 4020 0000 | 0000 48c7 | 4028 0000 | 0000 4889 
  0x000000011869a59c: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a59c: 4424 284c 

  0x000000011869a5a0: ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractSpecies::dummyVector@0 (line 295)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869a5a0: 8b55 10c4 | c175 5862 | 10c5 fe7f | 6010 498b | 8748 0100 | 004c 8bd0 

  0x000000011869a5b8: ;*invokestatic fromArray {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869a5b8: 4983 c218 | 9090 9090 | 4d3b 9758 

  0x000000011869a5c4: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a5c4: 0100 000f | 83f1 0100 

  0x000000011869a5cc: ;*invokestatic fromArray {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869a5cc: 004d 8997 | 4801 0000 | 410f 0d8a | c000 0000 | 48c7 0001 

  0x000000011869a5e0: ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x000000011869a5e0: 0000 00c7 | 4008 14a4 | ba44 c740 | 0c00 0000 

  0x000000011869a5f0: ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869a5f0: 004c 8b54 

  0x000000011869a5f4: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a5f4: 2428 4c89 | 5010 4889 | 4424 78c5 

  0x000000011869a600: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869a600: d559 ed4c | 8b94 2480 | 0000 0045 

  0x000000011869a60c: ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x000000011869a60c: 8b5a 0841 | 81fb 14a4 

  0x000000011869a614: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a614: ba44 0f85 | 3c04 0000 
 ;; B40: #	out( B49 B41 ) <- in( B39 )  Freq: 152504
  0x000000011869a61c: 488b ac24 | 8000 0000 | 498b 8748 | 0100 004c | 8bd0 4983 

  0x000000011869a630: ;*invokestatic fromArray {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869a630: c230 9090 | 9090 9090 | 9090 9090 | 9090 9090 | 4d3b 9758 

  0x000000011869a644: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a644: 0100 000f | 83e2 0100 

  0x000000011869a64c: ;*invokestatic fromArray {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869a64c: 004d 8997 | 4801 0000 | 410f 0d8a | c000 0000 | 48c7 0001 | 0000 0041 | 0f0d 8a00 

  0x000000011869a668: ;   {metadata({type array double})}
  0x000000011869a668: 0100 00c7 | 4008 c380 | b844 410f | 0d8a 4001 | 0000 c740 | 0c04 0000 | 0041 0f0d | 8a80 0100 
  0x000000011869a688: 0048 c740 | 1000 0000 | 0048 c740 | 1800 0000 | 0048 c740 | 2000 0000 | 0048 c740 | 2800 0000 
  0x000000011869a6a8: ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869a6a8: 0048 8944 

  0x000000011869a6ac: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a6ac: 2428 4c8b 

  0x000000011869a6b0: ;*invokevirtual fromArray0 {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869a6b0: 5510 c4c1 

  0x000000011869a6b4: ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@2 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869a6b4: 5558 4a10 | c5fe 7f48 | 1049 8b87 | 4801 0000 | 4c8b d049 

  0x000000011869a6c8: ;*invokestatic fromArray {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869a6c8: 83c2 184d | 3b97 5801 

  0x000000011869a6d0: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a6d0: 0000 0f82 | 68fd ffff 
 ;; B43: #	out( B72 B44 ) <- in( B42 )  Freq: 15.2529
  0x000000011869a6d8: c5fe 7f8c | 2400 0100 | 00c5 fe7f | a424 e000 | 0000 c5fe | 7f9c 24c0 | 0000 00c5 | fe7f 9424 
  0x000000011869a6f8: a000 0000 | c5fb 1144 

  0x000000011869a700: ;*invokestatic fromArray {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869a700: 2430 c5fe 

  0x000000011869a704: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
                      ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x000000011869a704: 7f2c 2448 | bea0 20d5 | 2502 0000 | 0090 9090 

  0x000000011869a714: ;   {runtime_call _new_instance_Java}
  0x000000011869a714: c5f8 77e8 

  0x000000011869a718: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [96]=Oop [112]=Oop [120]=Oop [136]=Oop [144]=Oop }
                      ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                      ; - (reexecute) jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a718: 84ed 49f8 
 ;; B44: #	out( B28 ) <- in( B43 )  Freq: 15.2526
  0x000000011869a71c: c5fb 1044 | 2430 c5fe | 6f94 24a0 | 0000 00c5 | fe6f 9c24 | c000 0000 | c5fe 6fa4 | 24e0 0000 
  0x000000011869a73c: 00c5 fe6f | 8c24 0001 | 0000 e919 | fdff ffc5 | fe7f 8c24 | 0001 0000 | c5fe 7fac | 24e0 0000 
  0x000000011869a75c: 00c5 fe7f | 9c24 c000 | 0000 c5fe | 7f94 24a0 | 0000 0048 | ff74 2418 

  0x000000011869a774: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a774: 488f 0424 

  0x000000011869a778: ;   {metadata({type array double})}
  0x000000011869a778: 48be 1806 | c425 0200 | 0000 ba04 | 0000 0090 

  0x000000011869a788: ;   {runtime_call _new_array_Java}
  0x000000011869a788: c5f8 77e8 

  0x000000011869a78c: ; ImmutableOopMap {rbp=Oop [32]=Oop [96]=Oop [112]=Oop [128]=Oop [136]=Oop [144]=Oop }
                      ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                      ; - (reexecute) jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
  0x000000011869a78c: 10ea 49f8 
 ;; B46: #	out( B36 ) <- in( B45 )  Freq: 15.2526
  0x000000011869a790: c5fb 1004 | 24c5 fe6f | 9424 a000 | 0000 c5fe | 6f9c 24c0 | 0000 00c5 | fe6f ac24 | e000 0000 
  0x000000011869a7b0: c5fe 6f8c | 2400 0100 | 00e9 dcfd | ffff c5fe | 7fa4 2400 | 0100 00c5 | fe7f ac24 | e000 0000 
  0x000000011869a7d0: c5fe 7f9c | 24c0 0000 | 00c5 fe7f | 9424 a000 | 0000 c5fb 

  0x000000011869a7e4: ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@2 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869a7e4: 1144 2430 | c5fe 7f0c 

  0x000000011869a7ec: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
                      ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x000000011869a7ec: 2448 bea0 | 20d5 2502 | 0000 0090 

  0x000000011869a7f8: ;   {runtime_call _new_instance_Java}
  0x000000011869a7f8: c5f8 77e8 

  0x000000011869a7fc: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [96]=Oop [112]=Oop [128]=Oop [136]=Oop [144]=Oop }
                      ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                      ; - (reexecute) jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
  0x000000011869a7fc: a0ec 49f8 
 ;; B48: #	out( B38 ) <- in( B47 )  Freq: 15.2526
  0x000000011869a800: c5fb 1044 | 2430 c5fe | 6f94 24a0 | 0000 00c5 | fe6f 9c24 | c000 0000 | c5fe 6fac | 24e0 0000 
  0x000000011869a820: 00c5 fe6f | a424 0001 | 0000 e9c2 | fdff ffc5 | fe7f ac24 | 0001 0000 | c5fe 7fa4 | 24e0 0000 
  0x000000011869a840: 00c5 fe7f | 9c24 c000 | 0000 c5fe | 7f94 24a0 | 0000 00c5 

  0x000000011869a854: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a854: fb11 0424 

  0x000000011869a858: ;   {metadata({type array double})}
  0x000000011869a858: 48be 1806 | c425 0200 | 0000 ba04 | 0000 0090 

  0x000000011869a868: ;   {runtime_call _new_array_Java}
  0x000000011869a868: c5f8 77e8 

  0x000000011869a86c: ; ImmutableOopMap {rbp=Oop [32]=Oop [96]=Oop [112]=Oop [120]=Oop [136]=Oop [144]=Oop }
                      ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                      ; - (reexecute) jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a86c: 30e9 49f8 
 ;; B50: #	out( B42 ) <- in( B49 )  Freq: 15.2526
  0x000000011869a870: c5fb 1004 | 24c5 fe6f | 9424 a000 | 0000 c5fe | 6f9c 24c0 | 0000 00c5 | fe6f a424 | e000 0000 
  0x000000011869a890: c5fe 6fac | 2400 0100 | 00e9 0bfe 

  0x000000011869a89c: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869a89c: ffff bee4 | ffff ff48 | 8b6c 2420 | 48ff b424 | 8800 0000 | 488f 0424 | 48ff 7424 | 6048 8f44 
  0x000000011869a8bc: 2420 48ff | 7424 4048 | 8f44 2430 | 48ff 7424 | 4848 8f44 | 2438 48ff | 7424 5848 | 8f44 2440 
  0x000000011869a8dc: 48ff 7424 | 5048 8f44 | 2448 4889 | 4424 f88b | 4424 6889 | 4424 1448 | 8b44 24f8 

  0x000000011869a8f8: ;   {runtime_call UncommonTrapBlob}
  0x000000011869a8f8: c5f8 77e8 

  0x000000011869a8fc: ; ImmutableOopMap {rbp=Oop [0]=Oop [32]=Oop [112]=Oop [120]=Oop [128]=Oop [144]=Oop }
                      ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869a8fc: 40fc 55f8 

  0x000000011869a900: ;   {external_word}
  0x000000011869a900: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011869a90c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011869a90c: e4f0 e83d 

  0x000000011869a910: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a910: 66e4 f0f4 
 ;; B52: #	out( N1132 ) <- in( B31 )  Freq: 0.15453
  0x000000011869a914: bee4 ffff 

  0x000000011869a918: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869a918: ff48 8b6c | 2420 4c89 | 1424 48ff | b424 9000 | 0000 488f | 4424 0848 | ff74 2460 | 488f 4424 
  0x000000011869a938: 2048 ff74 | 2440 488f | 4424 3048 | ff74 2448 | 488f 4424 | 3848 ff74 | 2458 488f | 4424 4048 
  0x000000011869a958: ff74 2450 | 488f 4424 | 4848 ffb4 | 2480 0000 | 0048 8f44 | 2450 4489 | 6424 1448 | 8944 24f8 
  0x000000011869a978: 8b84 2498 | 0000 0089 | 4424 6848 | 8b44 24f8 | c5fe 7fac | 2480 0000 

  0x000000011869a990: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a990: 0090 9090 

  0x000000011869a994: ;   {runtime_call UncommonTrapBlob}
  0x000000011869a994: c5f8 77e8 

  0x000000011869a998: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [80]=Oop [112]=Oop [120]=Oop }
                      ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011869a998: a4fb 55f8 

  0x000000011869a99c: ;   {external_word}
  0x000000011869a99c: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011869a9a8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011869a9a8: e4f0 e8a1 

  0x000000011869a9ac: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869a9ac: 65e4 f0f4 
 ;; B53: #	out( N1132 ) <- in( B33 )  Freq: 0.152504
  0x000000011869a9b0: bede ffff 

  0x000000011869a9b4: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869a9b4: ff48 8b6c | 2420 48ff | b424 8800 | 0000 488f | 0424 48ff | b424 9000 | 0000 488f | 4424 0844 
  0x000000011869a9d4: 8964 2410 | 48ff 7424 | 6048 8f44 | 2420 48ff | 7424 7048 | 8f44 2428 | 48ff 7424 | 4048 8f44 
  0x000000011869a9f4: 2430 48ff | 7424 4848 | 8f44 2438 | 48ff 7424 | 5848 8f44 | 2440 48ff | 7424 5048 | 8f44 2448 
  0x000000011869aa14: 48ff b424 | 8000 0000 | 488f 4424 | 5048 ff74 | 2478 488f | 4424 58c5 | fe7f 4c24 | 60c5 fe7f 
  0x000000011869aa34: ac24 8000 

  0x000000011869aa38: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869aa38: 0000 9090 

  0x000000011869aa3c: ;   {runtime_call UncommonTrapBlob}
  0x000000011869aa3c: c5f8 77e8 

  0x000000011869aa40: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [40]=Oop [80]=Oop [88]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
  0x000000011869aa40: fcfa 55f8 

  0x000000011869aa44: ;   {external_word}
  0x000000011869aa44: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011869aa50: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011869aa50: e4f0 e8f9 

  0x000000011869aa54: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869aa54: 64e4 f0f4 
 ;; B54: #	out( N1132 ) <- in( B39 )  Freq: 0.152504
  0x000000011869aa58: bede ffff 

  0x000000011869aa5c: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869aa5c: ff48 8b6c | 2420 48ff | b424 8800 | 0000 488f | 0424 48ff | b424 9000 | 0000 488f | 4424 0848 
  0x000000011869aa7c: 8944 24f8 | 8b44 2468 | 8944 2410 | 488b 4424 | f8c5 fb11 | 4424 1848 | ff74 2460 | 488f 4424 
  0x000000011869aa9c: 2048 ff74 | 2470 488f | 4424 2848 | ff74 2440 | 488f 4424 | 3048 ff74 | 2448 488f | 4424 3848 
  0x000000011869aabc: ff74 2450 | 488f 4424 | 4848 ffb4 | 2480 0000 | 0048 8f44 | 2450 c5fe | 7f6c 2460 | c5fe 7fa4 
  0x000000011869aadc: 2480 0000 

  0x000000011869aae0: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869aae0: 0090 9090 

  0x000000011869aae4: ;   {runtime_call UncommonTrapBlob}
  0x000000011869aae4: c5f8 77e8 

  0x000000011869aae8: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [40]=Oop [80]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869aae8: 54fa 55f8 

  0x000000011869aaec: ;   {external_word}
  0x000000011869aaec: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011869aaf8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011869aaf8: e4f0 e851 

  0x000000011869aafc: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869aafc: 64e4 f0f4 
 ;; B55: #	out( N1132 ) <- in( B29 )  Freq: 0.0762524
  0x000000011869ab00: c5f9 2ec1 | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 | c540 0fb6 | edf7 ddbe 
  0x000000011869ab20: 45ff ffff | 48ff 7424 | 2048 8f04 | 24c5 fb11 | 4424 2048 | ff74 2460 | 488f 4424 | 2848 ff74 
  0x000000011869ab40: 2440 488f | 4424 3848 | ff74 2448 | 488f 4424 | 4048 ff74 | 2458 488f 

  0x000000011869ab58: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869ab58: 4424 4890 

  0x000000011869ab5c: ;   {runtime_call UncommonTrapBlob}
  0x000000011869ab5c: c5f8 77e8 

  0x000000011869ab60: ; ImmutableOopMap {[0]=Oop [40]=Oop [112]=Oop [120]=Oop [128]=Oop [136]=Oop [144]=Oop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@205 (line 46)
  0x000000011869ab60: dcf9 55f8 

  0x000000011869ab64: ;   {external_word}
  0x000000011869ab64: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011869ab70: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011869ab70: e4f0 e8d9 | 63e4 f0f4 
 ;; B56: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
  0x000000011869ab78: 4533 c990 | 9090 9090 | e92b f7ff | ff33 c9e9 | 44f7 ffff 
 ;; B58: #	out( B10 ) <- in( B7 )  Freq: 0.000999985
  0x000000011869ab8c: 4533 dbe9 | 5cf7 ffff 
 ;; B59: #	out( B13 ) <- in( B10 )  Freq: 0.000999984
  0x000000011869ab94: 4533 d2e9 | 96f7 ffff 
 ;; B60: #	out( B16 ) <- in( B13 )  Freq: 0.000999983
  0x000000011869ab9c: 4c89 5424 | 6049 8bd3 | 4c89 4c24 | 2045 33d2 | 4c89 5424 | 70e9 c0f7 | ffff 4533 | d24c 8954 
  0x000000011869abbc: 2478 9090 | e9eb f7ff | ff45 33e4 | e90e f8ff 

  0x000000011869abcc: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869abcc: ffbe 76ff 

  0x000000011869abd0: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869abd0: ffff 488b | 6c24 2048 | 890c 2448 | 8954 2408 | 48ff 7424 | 4048 8f44 | 2430 48ff | 7424 4848 
  0x000000011869abf0: 8f44 2438 | 48ff 7424 | 5848 8f44 | 2440 48ff | 7424 5048 | 8f44 2448 | 4c89 6424 

  0x000000011869ac0c: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869ac0c: 5890 9090 

  0x000000011869ac10: ;   {runtime_call UncommonTrapBlob}
  0x000000011869ac10: c5f8 77e8 

  0x000000011869ac14: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [88]=Oop [96]=Oop [112]=Oop [120]=Oop }
                      ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869ac14: 28f9 55f8 

  0x000000011869ac18: ;   {external_word}
  0x000000011869ac18: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011869ac24: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011869ac24: e4f0 e825 | 63e4 f0f4 
 ;; B64: #	out( B65 ) <- in( B2 )  Freq: 9.99e-07
  0x000000011869ac2c: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869ac2c: 4c8b c5be 

  0x000000011869ac30: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869ac30: 8dff ffff | 8b6c 2468 | 48ff 7424 | 1848 8f04 | 2448 ff74 | 2440 488f | 4424 0848 | ff74 2448 
  0x000000011869ac50: 488f 4424 | 1048 ff74 | 2458 488f | 4424 1848 | ff74 2450 | 488f 4424 | 2048 895c | 2440 4c89 
  0x000000011869ac70: 4424 484c | 896c 2450 | 4c89 7424 

  0x000000011869ac7c: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869ac7c: 5890 9090 

  0x000000011869ac80: ;   {runtime_call UncommonTrapBlob}
  0x000000011869ac80: c5f8 77e8 

  0x000000011869ac84: ; ImmutableOopMap {[40]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop }
                      ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869ac84: b8f8 55f8 

  0x000000011869ac88: ;   {external_word}
  0x000000011869ac88: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011869ac94: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011869ac94: e4f0 e8b5 | 62e4 f0f4 
 ;; B66: #	out( B65 ) <- in( B11 )  Freq: 9.98997e-07
  0x000000011869ac9c: 4c8b c590 

  0x000000011869aca0: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869aca0: eb8d bef6 

  0x000000011869aca4: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869aca4: ffff ffc5 | fe7f 0c24 

  0x000000011869acac: ;   {runtime_call UncommonTrapBlob}
  0x000000011869acac: c5f8 77e8 

  0x000000011869acb0: ; ImmutableOopMap {}
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
  0x000000011869acb0: 8cf8 55f8 

  0x000000011869acb4: ;   {external_word}
  0x000000011869acb4: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011869acc0: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011869acc0: e4f0 e889 

  0x000000011869acc4: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869acc4: 62e4 f0f4 
 ;; B68: #	out( N1132 ) <- in( B38 )  Freq: 0.154529
  0x000000011869acc8: bef6 ffff 

  0x000000011869accc: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869accc: ffc5 fe7f 

  0x000000011869acd0: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869acd0: 2c24 9090 

  0x000000011869acd4: ;   {runtime_call UncommonTrapBlob}
  0x000000011869acd4: c5f8 77e8 

  0x000000011869acd8: ; ImmutableOopMap {}
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869acd8: 64f8 55f8 

  0x000000011869acdc: ;   {external_word}
  0x000000011869acdc: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011869ace8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011869ace8: e4f0 e861 

  0x000000011869acec: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869acec: 62e4 f0f4 
 ;; B69: #	out( B71 ) <- in( B47 )  Freq: 0.000152529
  0x000000011869acf0: ;*synchronization entry
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869acf0: eb00 488b | f0eb 05eb 

  0x000000011869acf8: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869acf8: 0048 8bf0 
 ;; B75: #	out( N1132 ) <- in( B74 B71 )  Freq: 0.000610117
  0x000000011869acfc: c5f8 7748 | 81c4 3001 

  0x000000011869ad04: ;   {runtime_call _rethrow_Java}
  0x000000011869ad04: 0000 5de9 

  0x000000011869ad08: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869ad08: 94e1 49f8 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 
[Exception Handler]
  0x000000011869ad20: ;   {no_reloc}
  0x000000011869ad20: e9fb a34a | f8e8 0000 | 0000 4883 

  0x000000011869ad2c: ;   {runtime_call DeoptimizationBlob}
  0x000000011869ad2c: 2c24 05e9 | 2cfb 55f8 | f4f4 f4f4 
[/MachCode]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x000000011869ad38:   0x000000017e000128 a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
  0x000000011869ad40:   0x000000011ff8c550 a 'java/lang/Class'{0x000000011ff8c550} = double
  0x000000011869ad48:   0x000000017e004370 a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000017e004370}
  0x000000011869ad50:   0x000000017e000078 a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
  0x000000011869ad58:   0x000000017e000250 a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000017e000250}
  0x000000011869ad60:   0x000000011ff58b48 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011ff58b48}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x000000011869ad68:   0x000000026788fe18 {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
  0x000000011869ad70:   0x0000000267b18ef0 {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x000000011869ad78:   0x0000000267b72458 {method} {0x0000000267b72458} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
  0x000000011869ad80:   0x0000000267b6f070 {method} {0x0000000267b6f070} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/Double256Vector;' in 'jdk/incubator/vector/Double256Vector'
  0x000000011869ad88:   0x0000000267b17fb0 {method} {0x0000000267b17fb0} 'lanewiseTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x000000011869ad90:   0x0000000225d0e900 'org/jml/regression/linear/DoubleVectorLinearRegression'
  0x000000011869ad98:   0x0000000267b1ded0 {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x000000011869ada0:   0x0000000267b96280 {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x000000011869ada8:   0x0000000225c40618 {type array double}
  0x000000011869adb0:   0x0000000267b19378 {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x000000011869adb8:   0x0000000267b181a0 {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x000000011869adc0:   0x0000000267b726c8 {method} {0x0000000267b726c8} 'broadcast' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
  0x000000011869adc8:   0x0000000267b6dcc0 {method} {0x0000000267b6dcc0} 'broadcast' '(D)Ljdk/incubator/vector/Double256Vector;' in 'jdk/incubator/vector/Double256Vector'
  0x000000011869add0:   0x0000000267b176d0 {method} {0x0000000267b176d0} 'broadcastTemplate' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x000000011869add8:   0x0000000267b39810 {method} {0x0000000267b39810} 'broadcast' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
  0x000000011869ade0:   0x0000000225d520a0 'jdk/incubator/vector/Double256Vector'
  0x000000011869ade8:   0x000000011015f0e0 {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
  0x000000011869adf0:   0x0000000267b39e30 {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
  0x000000011869adf8:   0x0000000267b40508 {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
  0x000000011869ae00:   0x0000000225d4eb10 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
  0x000000011869ae08:   0x0000000267b3ef30 {method} {0x0000000267b3ef30} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  0x000000011869ae10:   0x0000000225d5a3b0 'jdk/incubator/vector/VectorOperators$BinaryImpl'
  0x000000011869ae18:   0x0000000267a862a0 {method} {0x0000000267a862a0} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x000000011869ae20:   0x0000000267a85e38 {method} {0x0000000267a85e38} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x000000011869ae28:   0x0000000267a85f10 {method} {0x0000000267a85f10} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x000000011869ae30:   0x0000000267b33200 {method} {0x0000000267b33200} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x000000011869a1df offset=ffffffff bits=0):
PcDesc(pc=0x000000011869a206 offset=26 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a20d offset=2d bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869a223 offset=43 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a227 offset=47 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869a22c offset=4c bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a230 offset=50 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869a247 offset=67 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a24c offset=6c bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869a25d offset=7d bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a262 offset=82 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869a2a7 offset=c7 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a2b0 offset=d0 bits=0):   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@37 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869a2c7 offset=e7 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a2d0 offset=f0 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869a323 offset=143 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a32c offset=14c bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869a368 offset=188 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a371 offset=191 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869a39b offset=1bb bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a3b0 offset=1d0 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869a3b8 offset=1d8 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a3db offset=1fb bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869a3f9 offset=219 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a431 offset=251 bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::broadcast@5 (line 3423)
   jdk.incubator.vector.DoubleVector::broadcastTemplate@7 (line 491)
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 125)
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
PcDesc(pc=0x000000011869a440 offset=260 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869a464 offset=284 bits=0):   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869a469 offset=289 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a46d offset=28d bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@205 (line 46)
PcDesc(pc=0x000000011869a470 offset=290 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869a478 offset=298 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869a483 offset=2a3 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a48a offset=2aa bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)  reexecute=true
   Locals
    - l0: stack[32],oop
    - l1: stack[136],oop
    - l2: stack[144],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbp [10],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: stack[96],oop
    - l11: stack[112],oop
    - l12: 0
    - l13: stack[64],double
    - l14: 0
    - l15: stack[72],double
    - l16: 0
    - l17: stack[88],double
    - l18: 0
    - l19: stack[80],double
    - l20: obj[350]
    - l21: obj[351]
    - l22: empty
   Objects
    - 350: jdk.incubator.vector.Double256Vector reg xmm4 [112]Wrong location type 7
    - 351: jdk.incubator.vector.Double256Vector reg xmm1 [64]Wrong location type 7
PcDesc(pc=0x000000011869a498 offset=2b8 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a49d offset=2bd bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@205 (line 46)
PcDesc(pc=0x000000011869a4cc offset=2ec bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a4d0 offset=2f0 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869a501 offset=321 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a505 offset=325 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869a515 offset=335 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a520 offset=340 bits=0):   jdk.incubator.vector.DoubleVector::fromArray@2 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869a531 offset=351 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869a538 offset=358 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a53e offset=35e bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869a59f offset=3bf bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a5a3 offset=3c3 bits=0):   jdk.incubator.vector.AbstractSpecies::dummyVector@0 (line 295)
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869a5bc offset=3dc bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869a5c7 offset=3e7 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a5cd offset=3ed bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869a5f1 offset=411 bits=0):   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869a5f6 offset=416 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a603 offset=423 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869a616 offset=436 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a632 offset=452 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869a647 offset=467 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a64d offset=46d bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869a6a9 offset=4c9 bits=0):   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869a6ae offset=4ce bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a6b2 offset=4d2 bits=0):   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869a6b8 offset=4d8 bits=0):   jdk.incubator.vector.DoubleVector::fromArray@2 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869a6cb offset=4eb bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869a6d2 offset=4f2 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a702 offset=522 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869a707 offset=527 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a71c offset=53c bits=5):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: reg rbp [10],oop
    - @5: obj[338]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000017e004370}
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: stack[32],oop
    - l1: stack[136],oop
    - l2: stack[144],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[104]
    - l8: 0
    - l9: stack[48],double
    - l10: stack[96],oop
    - l11: stack[112],oop
    - l12: 0
    - l13: stack[64],double
    - l14: 0
    - l15: stack[72],double
    - l16: 0
    - l17: stack[88],double
    - l18: 0
    - l19: stack[80],double
    - l20: obj[337]
    - l21: empty
    - l22: empty
   Objects
    - 337: jdk.incubator.vector.Double256Vector stack[224]Wrong location type 7
    - 338: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
PcDesc(pc=0x000000011869a778 offset=598 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a790 offset=5b0 bits=5):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: reg rbp [10],oop
    - @5: obj[360]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000017e004370}
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: stack[32],oop
    - l1: stack[136],oop
    - l2: stack[144],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[104]
    - l8: 0
    - l9: stack[0],double
    - l10: stack[96],oop
    - l11: stack[112],oop
    - l12: 0
    - l13: stack[64],double
    - l14: 0
    - l15: stack[72],double
    - l16: 0
    - l17: stack[88],double
    - l18: 0
    - l19: stack[80],double
    - l20: empty
    - l21: stack[128],oop
    - l22: obj[359]
   Objects
    - 359: jdk.incubator.vector.Double256Vector stack[224]Wrong location type 7
    - 360: jdk.incubator.vector.Double256Vector stack[256]Wrong location type 7
PcDesc(pc=0x000000011869a7e8 offset=608 bits=0):   jdk.incubator.vector.DoubleVector::fromArray@2 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869a7ed offset=60d bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a800 offset=620 bits=5):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: reg rbp [10],oop
    - @5: obj[380]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000017e004370}
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: stack[32],oop
    - l1: stack[136],oop
    - l2: stack[144],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[104]
    - l8: 0
    - l9: stack[48],double
    - l10: stack[96],oop
    - l11: stack[112],oop
    - l12: 0
    - l13: stack[64],double
    - l14: 0
    - l15: stack[72],double
    - l16: 0
    - l17: stack[88],double
    - l18: 0
    - l19: stack[80],double
    - l20: empty
    - l21: stack[128],oop
    - l22: obj[379]
   Objects
    - 379: jdk.incubator.vector.Double256Vector stack[224]Wrong location type 7
    - 380: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
PcDesc(pc=0x000000011869a858 offset=678 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a870 offset=690 bits=5):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: reg rbp [10],oop
    - @5: obj[318]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000017e004370}
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: stack[32],oop
    - l1: stack[136],oop
    - l2: stack[144],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[104]
    - l8: 0
    - l9: stack[0],double
    - l10: stack[96],oop
    - l11: stack[112],oop
    - l12: 0
    - l13: stack[64],double
    - l14: 0
    - l15: stack[72],double
    - l16: 0
    - l17: stack[88],double
    - l18: 0
    - l19: stack[80],double
    - l20: obj[317]
    - l21: empty
    - l22: empty
   Objects
    - 317: jdk.incubator.vector.Double256Vector stack[224]Wrong location type 7
    - 318: jdk.incubator.vector.Double256Vector stack[256]Wrong location type 7
PcDesc(pc=0x000000011869a89e offset=6be bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869a900 offset=720 bits=0):   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[20]
    - @1: stack[108]
    - @2: NULL
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[0],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[144],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[20]
    - l8: 0
    - l9: stack[24],double
    - l10: stack[32],oop
    - l11: stack[112],oop
    - l12: 0
    - l13: stack[48],double
    - l14: 0
    - l15: stack[56],double
    - l16: 0
    - l17: stack[64],double
    - l18: 0
    - l19: stack[72],double
    - l20: stack[120],oop
    - l21: stack[128],oop
    - l22: empty
PcDesc(pc=0x000000011869a914 offset=734 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a919 offset=739 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869a991 offset=7b1 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a99c offset=7bc bits=0):   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[20]
    - @1: stack[104]
    - @2: NULL
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[8],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[20]
    - l8: 0
    - l9: stack[24],double
    - l10: stack[32],oop
    - l11: stack[112],oop
    - l12: 0
    - l13: stack[48],double
    - l14: 0
    - l15: stack[56],double
    - l16: 0
    - l17: stack[64],double
    - l18: 0
    - l19: stack[72],double
    - l20: empty
    - l21: stack[80],oop
    - l22: obj[436]
   Expression stack
    - @0: stack[120],oop
   Objects
    - 436: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
PcDesc(pc=0x000000011869a9b0 offset=7d0 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869a9b5 offset=7d5 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869aa3a offset=85a bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869aa44 offset=864 bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[88],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000017e000250}
    - @2: obj[445]
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[16]
    - l8: 0
    - l9: stack[24],double
    - l10: stack[32],oop
    - l11: stack[40],oop
    - l12: 0
    - l13: stack[48],double
    - l14: 0
    - l15: stack[56],double
    - l16: 0
    - l17: stack[64],double
    - l18: 0
    - l19: stack[72],double
    - l20: empty
    - l21: stack[80],oop
    - l22: obj[444]
   Objects
    - 444: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
    - 445: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
PcDesc(pc=0x000000011869aa58 offset=878 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869aa5d offset=87d bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869aae1 offset=901 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869aaec offset=90c bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[80],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000017e000250}
    - @2: obj[408]
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[16]
    - l8: 0
    - l9: stack[24],double
    - l10: stack[32],oop
    - l11: stack[40],oop
    - l12: 0
    - l13: stack[48],double
    - l14: 0
    - l15: stack[56],double
    - l16: 0
    - l17: stack[88],double
    - l18: 0
    - l19: stack[72],double
    - l20: obj[407]
    - l21: empty
    - l22: empty
   Objects
    - 407: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
    - 408: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
PcDesc(pc=0x000000011869ab00 offset=920 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869ab5b offset=97b bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869ab64 offset=984 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@205 (line 46)  reexecute=true
   Locals
    - l0: stack[0],oop
    - l1: stack[136],oop
    - l2: stack[144],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[104]
    - l8: 0
    - l9: stack[32],double
    - l10: stack[40],oop
    - l11: stack[112],oop
    - l12: 0
    - l13: stack[56],double
    - l14: 0
    - l15: stack[64],double
    - l16: 0
    - l17: stack[72],double
    - l18: 0
    - l19: stack[80],double
    - l20: stack[120],oop
    - l21: stack[128],oop
    - l22: empty
   Expression stack
    - @0: reg rbp [10],int
PcDesc(pc=0x000000011869abcd offset=9ed bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869abd2 offset=9f2 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869ac0d offset=a2d bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869ac18 offset=a38 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[104]
    - l8: 0
    - l9: stack[24],double
    - l10: stack[96],oop
    - l11: stack[112],oop
    - l12: 0
    - l13: stack[48],double
    - l14: 0
    - l15: stack[56],double
    - l16: 0
    - l17: stack[64],double
    - l18: 0
    - l19: stack[72],double
    - l20: stack[120],oop
    - l21: stack[88],oop
    - l22: empty
PcDesc(pc=0x000000011869ac2f offset=a4f bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869ac34 offset=a54 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869ac7d offset=a9d bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869ac88 offset=aa8 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
   Locals
    - l0: stack[64],oop
    - l1: stack[72],oop
    - l2: stack[80],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbp [10],int
    - l8: 0
    - l9: stack[0],double
    - l10: stack[88],oop
    - l11: stack[48],oop
    - l12: 0
    - l13: stack[8],double
    - l14: 0
    - l15: stack[16],double
    - l16: 0
    - l17: stack[24],double
    - l18: 0
    - l19: stack[32],double
    - l20: stack[56],oop
    - l21: stack[40],oop
    - l22: empty
PcDesc(pc=0x000000011869aca2 offset=ac2 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869aca7 offset=ac7 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869acb4 offset=ad4 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: NULL
    - @1: obj[491]
   Objects
    - 491: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
PcDesc(pc=0x000000011869acc8 offset=ae8 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869accd offset=aed bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869acd2 offset=af2 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869acdc offset=afc bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: NULL
    - @1: obj[416]
   Objects
    - 416: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
PcDesc(pc=0x000000011869acf0 offset=b10 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869acf2 offset=b12 bits=0):   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869acfc offset=b1c bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869ad0c offset=b2c bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011869ad39 offset=b59 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 14 OopMaps

ImmutableOopMap {[32]=Oop [96]=Oop [112]=Oop [120]=Oop [128]=Oop [136]=Oop [144]=Oop } pc offsets: 682 
ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [96]=Oop [112]=Oop [120]=Oop [136]=Oop [144]=Oop } pc offsets: 1340 
ImmutableOopMap {rbp=Oop [32]=Oop [96]=Oop [112]=Oop [128]=Oop [136]=Oop [144]=Oop } pc offsets: 1456 
ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [96]=Oop [112]=Oop [128]=Oop [136]=Oop [144]=Oop } pc offsets: 1568 
ImmutableOopMap {rbp=Oop [32]=Oop [96]=Oop [112]=Oop [120]=Oop [136]=Oop [144]=Oop } pc offsets: 1680 
ImmutableOopMap {rbp=Oop [0]=Oop [32]=Oop [112]=Oop [120]=Oop [128]=Oop [144]=Oop } pc offsets: 1824 
ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [80]=Oop [112]=Oop [120]=Oop } pc offsets: 1980 
ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [40]=Oop [80]=Oop [88]=Oop } pc offsets: 2148 
ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [40]=Oop [80]=Oop } pc offsets: 2316 
ImmutableOopMap {[0]=Oop [40]=Oop [112]=Oop [120]=Oop [128]=Oop [136]=Oop [144]=Oop } pc offsets: 2436 
ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [88]=Oop [96]=Oop [112]=Oop [120]=Oop } pc offsets: 2616 
ImmutableOopMap {[40]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop } pc offsets: 2728 
ImmutableOopMap {} pc offsets: 2772 2812 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x000000011869a206 offset=26):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a206 offset=26):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a206 offset=26):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a206 offset=26):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a206 offset=26):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a20d offset=2d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869a223 offset=43):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a223 offset=43):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a223 offset=43):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a223 offset=43):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a223 offset=43):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a227 offset=47):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869a22c offset=4c):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a22c offset=4c):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a22c offset=4c):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a22c offset=4c):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a22c offset=4c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a230 offset=50):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869a247 offset=67):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a247 offset=67):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a247 offset=67):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a247 offset=67):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a247 offset=67):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a24c offset=6c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869a25d offset=7d):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a25d offset=7d):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a25d offset=7d):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a25d offset=7d):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a25d offset=7d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a262 offset=82):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869a2a7 offset=c7):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a2a7 offset=c7):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a2a7 offset=c7):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a2a7 offset=c7):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a2a7 offset=c7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a2b0 offset=d0):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@37 (line 74)
ScopeDesc(pc=0x000000011869a2b0 offset=d0):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011869a2b0 offset=d0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869a2c7 offset=e7):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a2c7 offset=e7):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a2c7 offset=e7):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a2c7 offset=e7):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a2c7 offset=e7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a2d0 offset=f0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869a323 offset=143):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a323 offset=143):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a323 offset=143):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a323 offset=143):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a323 offset=143):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a32c offset=14c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869a368 offset=188):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a368 offset=188):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a368 offset=188):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a368 offset=188):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a368 offset=188):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a371 offset=191):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869a39b offset=1bb):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a39b offset=1bb):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a39b offset=1bb):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a39b offset=1bb):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a39b offset=1bb):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a3b0 offset=1d0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869a3b8 offset=1d8):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a3b8 offset=1d8):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a3b8 offset=1d8):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a3b8 offset=1d8):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a3b8 offset=1d8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a3db offset=1fb):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869a3f9 offset=219):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a3f9 offset=219):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a3f9 offset=219):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a3f9 offset=219):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a3f9 offset=219):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a431 offset=251):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::broadcast@5 (line 3423)
ScopeDesc(pc=0x000000011869a431 offset=251):
   jdk.incubator.vector.DoubleVector::broadcastTemplate@7 (line 491)
ScopeDesc(pc=0x000000011869a431 offset=251):
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 125)
ScopeDesc(pc=0x000000011869a431 offset=251):
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
ScopeDesc(pc=0x000000011869a431 offset=251):
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
ScopeDesc(pc=0x000000011869a431 offset=251):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x000000011869a431 offset=251):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
ScopeDesc(pc=0x000000011869a440 offset=260):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869a464 offset=284):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011869a464 offset=284):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011869a464 offset=284):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011869a464 offset=284):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869a469 offset=289):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a469 offset=289):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a469 offset=289):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a469 offset=289):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a469 offset=289):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a46d offset=28d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@205 (line 46)
ScopeDesc(pc=0x000000011869a470 offset=290):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869a478 offset=298):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869a483 offset=2a3):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a483 offset=2a3):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a483 offset=2a3):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a483 offset=2a3):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a483 offset=2a3):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a48a offset=2aa):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)  reexecute=true
   Locals
    - l0: stack[32],oop
    - l1: stack[136],oop
    - l2: stack[144],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbp [10],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: stack[96],oop
    - l11: stack[112],oop
    - l12: 0
    - l13: stack[64],double
    - l14: 0
    - l15: stack[72],double
    - l16: 0
    - l17: stack[88],double
    - l18: 0
    - l19: stack[80],double
    - l20: obj[350]
    - l21: obj[351]
    - l22: empty
   Objects
    - 350: jdk.incubator.vector.Double256Vector reg xmm4 [112]Wrong location type 7
    - 351: jdk.incubator.vector.Double256Vector reg xmm1 [64]Wrong location type 7
ScopeDesc(pc=0x000000011869a498 offset=2b8):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a498 offset=2b8):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a498 offset=2b8):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a498 offset=2b8):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a498 offset=2b8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a49d offset=2bd):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@205 (line 46)
ScopeDesc(pc=0x000000011869a4cc offset=2ec):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a4cc offset=2ec):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a4cc offset=2ec):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a4cc offset=2ec):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a4cc offset=2ec):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a4d0 offset=2f0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869a501 offset=321):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a501 offset=321):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a501 offset=321):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a501 offset=321):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a501 offset=321):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a505 offset=325):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869a515 offset=335):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a515 offset=335):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a515 offset=335):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a515 offset=335):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a515 offset=335):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a520 offset=340):
   jdk.incubator.vector.DoubleVector::fromArray@2 (line 2562)
ScopeDesc(pc=0x000000011869a520 offset=340):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869a531 offset=351):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869a538 offset=358):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a538 offset=358):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a538 offset=358):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a538 offset=358):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a538 offset=358):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a53e offset=35e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869a59f offset=3bf):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a59f offset=3bf):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a59f offset=3bf):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a59f offset=3bf):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a59f offset=3bf):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a5a3 offset=3c3):
   jdk.incubator.vector.AbstractSpecies::dummyVector@0 (line 295)
ScopeDesc(pc=0x000000011869a5a3 offset=3c3):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
ScopeDesc(pc=0x000000011869a5a3 offset=3c3):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
ScopeDesc(pc=0x000000011869a5a3 offset=3c3):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869a5bc offset=3dc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869a5c7 offset=3e7):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a5c7 offset=3e7):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a5c7 offset=3e7):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a5c7 offset=3e7):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a5c7 offset=3e7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a5cd offset=3ed):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869a5f1 offset=411):
   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
ScopeDesc(pc=0x000000011869a5f1 offset=411):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869a5f6 offset=416):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a5f6 offset=416):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a5f6 offset=416):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a5f6 offset=416):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a5f6 offset=416):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a603 offset=423):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869a616 offset=436):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a616 offset=436):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a616 offset=436):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a616 offset=436):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a616 offset=436):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a632 offset=452):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869a647 offset=467):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a647 offset=467):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a647 offset=467):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a647 offset=467):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a647 offset=467):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a64d offset=46d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869a6a9 offset=4c9):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011869a6a9 offset=4c9):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011869a6a9 offset=4c9):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011869a6a9 offset=4c9):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869a6ae offset=4ce):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a6ae offset=4ce):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a6ae offset=4ce):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a6ae offset=4ce):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a6ae offset=4ce):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a6b2 offset=4d2):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011869a6b2 offset=4d2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869a6b8 offset=4d8):
   jdk.incubator.vector.DoubleVector::fromArray@2 (line 2562)
ScopeDesc(pc=0x000000011869a6b8 offset=4d8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869a6cb offset=4eb):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869a6d2 offset=4f2):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a6d2 offset=4f2):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a6d2 offset=4f2):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a6d2 offset=4f2):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a6d2 offset=4f2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a702 offset=522):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869a707 offset=527):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a707 offset=527):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a707 offset=527):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a707 offset=527):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a707 offset=527):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a71c offset=53c):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: reg rbp [10],oop
    - @5: obj[338]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000017e004370}
ScopeDesc(pc=0x000000011869a71c offset=53c):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011869a71c offset=53c):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011869a71c offset=53c):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011869a71c offset=53c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: stack[32],oop
    - l1: stack[136],oop
    - l2: stack[144],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[104]
    - l8: 0
    - l9: stack[48],double
    - l10: stack[96],oop
    - l11: stack[112],oop
    - l12: 0
    - l13: stack[64],double
    - l14: 0
    - l15: stack[72],double
    - l16: 0
    - l17: stack[88],double
    - l18: 0
    - l19: stack[80],double
    - l20: obj[337]
    - l21: empty
    - l22: empty
   Objects
    - 337: jdk.incubator.vector.Double256Vector stack[224]Wrong location type 7
    - 338: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
ScopeDesc(pc=0x000000011869a778 offset=598):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a778 offset=598):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a778 offset=598):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a778 offset=598):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a778 offset=598):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a790 offset=5b0):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: reg rbp [10],oop
    - @5: obj[360]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000017e004370}
ScopeDesc(pc=0x000000011869a790 offset=5b0):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011869a790 offset=5b0):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011869a790 offset=5b0):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011869a790 offset=5b0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: stack[32],oop
    - l1: stack[136],oop
    - l2: stack[144],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[104]
    - l8: 0
    - l9: stack[0],double
    - l10: stack[96],oop
    - l11: stack[112],oop
    - l12: 0
    - l13: stack[64],double
    - l14: 0
    - l15: stack[72],double
    - l16: 0
    - l17: stack[88],double
    - l18: 0
    - l19: stack[80],double
    - l20: empty
    - l21: stack[128],oop
    - l22: obj[359]
   Objects
    - 359: jdk.incubator.vector.Double256Vector stack[224]Wrong location type 7
    - 360: jdk.incubator.vector.Double256Vector stack[256]Wrong location type 7
ScopeDesc(pc=0x000000011869a7e8 offset=608):
   jdk.incubator.vector.DoubleVector::fromArray@2 (line 2562)
ScopeDesc(pc=0x000000011869a7e8 offset=608):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869a7ed offset=60d):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a7ed offset=60d):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a7ed offset=60d):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a7ed offset=60d):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a7ed offset=60d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a800 offset=620):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: reg rbp [10],oop
    - @5: obj[380]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000017e004370}
ScopeDesc(pc=0x000000011869a800 offset=620):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011869a800 offset=620):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011869a800 offset=620):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011869a800 offset=620):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: stack[32],oop
    - l1: stack[136],oop
    - l2: stack[144],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[104]
    - l8: 0
    - l9: stack[48],double
    - l10: stack[96],oop
    - l11: stack[112],oop
    - l12: 0
    - l13: stack[64],double
    - l14: 0
    - l15: stack[72],double
    - l16: 0
    - l17: stack[88],double
    - l18: 0
    - l19: stack[80],double
    - l20: empty
    - l21: stack[128],oop
    - l22: obj[379]
   Objects
    - 379: jdk.incubator.vector.Double256Vector stack[224]Wrong location type 7
    - 380: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
ScopeDesc(pc=0x000000011869a858 offset=678):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a858 offset=678):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a858 offset=678):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a858 offset=678):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a858 offset=678):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a870 offset=690):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: reg rbp [10],oop
    - @5: obj[318]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000017e004370}
ScopeDesc(pc=0x000000011869a870 offset=690):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011869a870 offset=690):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011869a870 offset=690):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011869a870 offset=690):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: stack[32],oop
    - l1: stack[136],oop
    - l2: stack[144],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[104]
    - l8: 0
    - l9: stack[0],double
    - l10: stack[96],oop
    - l11: stack[112],oop
    - l12: 0
    - l13: stack[64],double
    - l14: 0
    - l15: stack[72],double
    - l16: 0
    - l17: stack[88],double
    - l18: 0
    - l19: stack[80],double
    - l20: obj[317]
    - l21: empty
    - l22: empty
   Objects
    - 317: jdk.incubator.vector.Double256Vector stack[224]Wrong location type 7
    - 318: jdk.incubator.vector.Double256Vector stack[256]Wrong location type 7
ScopeDesc(pc=0x000000011869a89e offset=6be):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869a900 offset=720):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[20]
    - @1: stack[108]
    - @2: NULL
ScopeDesc(pc=0x000000011869a900 offset=720):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011869a900 offset=720):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[0],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011869a900 offset=720):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[144],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[20]
    - l8: 0
    - l9: stack[24],double
    - l10: stack[32],oop
    - l11: stack[112],oop
    - l12: 0
    - l13: stack[48],double
    - l14: 0
    - l15: stack[56],double
    - l16: 0
    - l17: stack[64],double
    - l18: 0
    - l19: stack[72],double
    - l20: stack[120],oop
    - l21: stack[128],oop
    - l22: empty
ScopeDesc(pc=0x000000011869a914 offset=734):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a914 offset=734):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a914 offset=734):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a914 offset=734):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a914 offset=734):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a919 offset=739):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869a991 offset=7b1):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a991 offset=7b1):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a991 offset=7b1):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a991 offset=7b1):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a991 offset=7b1):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a99c offset=7bc):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[20]
    - @1: stack[104]
    - @2: NULL
ScopeDesc(pc=0x000000011869a99c offset=7bc):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011869a99c offset=7bc):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
    - l1: stack[8],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011869a99c offset=7bc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[20]
    - l8: 0
    - l9: stack[24],double
    - l10: stack[32],oop
    - l11: stack[112],oop
    - l12: 0
    - l13: stack[48],double
    - l14: 0
    - l15: stack[56],double
    - l16: 0
    - l17: stack[64],double
    - l18: 0
    - l19: stack[72],double
    - l20: empty
    - l21: stack[80],oop
    - l22: obj[436]
   Expression stack
    - @0: stack[120],oop
   Objects
    - 436: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
ScopeDesc(pc=0x000000011869a9b0 offset=7d0):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869a9b0 offset=7d0):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869a9b0 offset=7d0):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869a9b0 offset=7d0):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869a9b0 offset=7d0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869a9b5 offset=7d5):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869aa3a offset=85a):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869aa3a offset=85a):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869aa3a offset=85a):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869aa3a offset=85a):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869aa3a offset=85a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869aa44 offset=864):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[88],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000017e000250}
    - @2: obj[445]
ScopeDesc(pc=0x000000011869aa44 offset=864):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[16]
    - l8: 0
    - l9: stack[24],double
    - l10: stack[32],oop
    - l11: stack[40],oop
    - l12: 0
    - l13: stack[48],double
    - l14: 0
    - l15: stack[56],double
    - l16: 0
    - l17: stack[64],double
    - l18: 0
    - l19: stack[72],double
    - l20: empty
    - l21: stack[80],oop
    - l22: obj[444]
   Objects
    - 444: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
    - 445: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
ScopeDesc(pc=0x000000011869aa58 offset=878):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869aa58 offset=878):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869aa58 offset=878):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869aa58 offset=878):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869aa58 offset=878):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869aa5d offset=87d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869aae1 offset=901):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869aae1 offset=901):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869aae1 offset=901):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869aae1 offset=901):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869aae1 offset=901):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869aaec offset=90c):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[80],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000017e000250}
    - @2: obj[408]
ScopeDesc(pc=0x000000011869aaec offset=90c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[16]
    - l8: 0
    - l9: stack[24],double
    - l10: stack[32],oop
    - l11: stack[40],oop
    - l12: 0
    - l13: stack[48],double
    - l14: 0
    - l15: stack[56],double
    - l16: 0
    - l17: stack[88],double
    - l18: 0
    - l19: stack[72],double
    - l20: obj[407]
    - l21: empty
    - l22: empty
   Objects
    - 407: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
    - 408: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
ScopeDesc(pc=0x000000011869ab00 offset=920):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869ab5b offset=97b):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869ab5b offset=97b):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869ab5b offset=97b):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869ab5b offset=97b):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869ab5b offset=97b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869ab64 offset=984):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@205 (line 46)  reexecute=true
   Locals
    - l0: stack[0],oop
    - l1: stack[136],oop
    - l2: stack[144],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[104]
    - l8: 0
    - l9: stack[32],double
    - l10: stack[40],oop
    - l11: stack[112],oop
    - l12: 0
    - l13: stack[56],double
    - l14: 0
    - l15: stack[64],double
    - l16: 0
    - l17: stack[72],double
    - l18: 0
    - l19: stack[80],double
    - l20: stack[120],oop
    - l21: stack[128],oop
    - l22: empty
   Expression stack
    - @0: reg rbp [10],int
ScopeDesc(pc=0x000000011869abcd offset=9ed):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869abcd offset=9ed):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869abcd offset=9ed):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869abcd offset=9ed):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869abcd offset=9ed):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869abd2 offset=9f2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869ac0d offset=a2d):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869ac0d offset=a2d):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869ac0d offset=a2d):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869ac0d offset=a2d):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869ac0d offset=a2d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869ac18 offset=a38):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[104]
    - l8: 0
    - l9: stack[24],double
    - l10: stack[96],oop
    - l11: stack[112],oop
    - l12: 0
    - l13: stack[48],double
    - l14: 0
    - l15: stack[56],double
    - l16: 0
    - l17: stack[64],double
    - l18: 0
    - l19: stack[72],double
    - l20: stack[120],oop
    - l21: stack[88],oop
    - l22: empty
ScopeDesc(pc=0x000000011869ac2f offset=a4f):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869ac2f offset=a4f):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869ac2f offset=a4f):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869ac2f offset=a4f):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869ac2f offset=a4f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869ac34 offset=a54):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869ac7d offset=a9d):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869ac7d offset=a9d):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869ac7d offset=a9d):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869ac7d offset=a9d):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869ac7d offset=a9d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869ac88 offset=aa8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
   Locals
    - l0: stack[64],oop
    - l1: stack[72],oop
    - l2: stack[80],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbp [10],int
    - l8: 0
    - l9: stack[0],double
    - l10: stack[88],oop
    - l11: stack[48],oop
    - l12: 0
    - l13: stack[8],double
    - l14: 0
    - l15: stack[16],double
    - l16: 0
    - l17: stack[24],double
    - l18: 0
    - l19: stack[32],double
    - l20: stack[56],oop
    - l21: stack[40],oop
    - l22: empty
ScopeDesc(pc=0x000000011869aca2 offset=ac2):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869aca2 offset=ac2):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869aca2 offset=ac2):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869aca2 offset=ac2):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869aca2 offset=ac2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869aca7 offset=ac7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869acb4 offset=ad4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: NULL
    - @1: obj[491]
   Objects
    - 491: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
ScopeDesc(pc=0x000000011869acc8 offset=ae8):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869acc8 offset=ae8):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869acc8 offset=ae8):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869acc8 offset=ae8):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869acc8 offset=ae8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869accd offset=aed):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869acd2 offset=af2):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869acd2 offset=af2):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869acd2 offset=af2):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869acd2 offset=af2):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869acd2 offset=af2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011869acdc offset=afc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: NULL
    - @1: obj[416]
   Objects
    - 416: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
ScopeDesc(pc=0x000000011869acf0 offset=b10):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869acf2 offset=b12):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
ScopeDesc(pc=0x000000011869acf2 offset=b12):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011869acf2 offset=b12):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869acfc offset=b1c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869ad0c offset=b2c):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869ad0c offset=b2c):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869ad0c offset=b2c):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869ad0c offset=b2c):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869ad0c offset=b2c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x000000011869a108: 6400
relocInfo@0x000000011869a108 [type=6(runtime_call) addr=0x000000011869a1e0 offset=0 format=1] | [destination=0x0000000109677fa0]
         @0x000000011869a10a: f006ccc0
relocInfo@0x000000011869a10c [type=12(metadata) addr=0x000000011869a2a0 offset=192 format=3 data=6] | [metadata_addr=0x000000011869ad90 *=0x0000000225d0e900 offset=0]metadata_value=0x0000000225d0e900: 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011869a10e: f009cc20
relocInfo@0x000000011869a110 [type=12(metadata) addr=0x000000011869a2c0 offset=32 format=3 data=9] | [metadata_addr=0x000000011869ada8 *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011869a112: f009cc20
relocInfo@0x000000011869a114 [type=12(metadata) addr=0x000000011869a2e0 offset=32 format=3 data=9] | [metadata_addr=0x000000011869ada8 *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011869a116: c010
relocInfo@0x000000011869a116 [type=12(metadata) addr=0x000000011869a2f0 offset=16] | [metadata_addr=0x000000011869a2f2 *=0x0000000225d4ce30 offset=0]metadata_value=0x0000000225d4ce30: 'jdk/incubator/vector/DoubleVector'
         @0x000000011869a118: f010cd66
relocInfo@0x000000011869a11a [type=12(metadata) addr=0x000000011869a456 offset=358 format=3 data=16] | [metadata_addr=0x000000011869ade0 *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011869a11c: a034
relocInfo@0x000000011869a11c [type=10(poll) addr=0x000000011869a48a offset=52]
         @0x000000011869a11e: f010cc84
relocInfo@0x000000011869a120 [type=12(metadata) addr=0x000000011869a50e offset=132 format=3 data=16] | [metadata_addr=0x000000011869ade0 *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011869a122: f009cc4e
relocInfo@0x000000011869a124 [type=12(metadata) addr=0x000000011869a55c offset=78 format=3 data=9] | [metadata_addr=0x000000011869ada8 *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011869a126: f010cc87
relocInfo@0x000000011869a128 [type=12(metadata) addr=0x000000011869a5e3 offset=135 format=3 data=16] | [metadata_addr=0x000000011869ade0 *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011869a12a: f010cc2c
relocInfo@0x000000011869a12c [type=12(metadata) addr=0x000000011869a60f offset=44 format=3 data=16] | [metadata_addr=0x000000011869ade0 *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011869a12e: f009cc5c
relocInfo@0x000000011869a130 [type=12(metadata) addr=0x000000011869a66b offset=92 format=3 data=9] | [metadata_addr=0x000000011869ada8 *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011869a132: c09c
relocInfo@0x000000011869a132 [type=12(metadata) addr=0x000000011869a707 offset=156] | [metadata_addr=0x000000011869a709 *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011869a134: 6410
relocInfo@0x000000011869a134 [type=6(runtime_call) addr=0x000000011869a717 offset=16 format=1] | [destination=0x0000000110b394a0]
         @0x000000011869a136: c061
relocInfo@0x000000011869a136 [type=12(metadata) addr=0x000000011869a778 offset=97] | [metadata_addr=0x000000011869a77a *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011869a138: 6413
relocInfo@0x000000011869a138 [type=6(runtime_call) addr=0x000000011869a78b offset=19 format=1] | [destination=0x0000000110b391a0]
         @0x000000011869a13a: c062
relocInfo@0x000000011869a13a [type=12(metadata) addr=0x000000011869a7ed offset=98] | [metadata_addr=0x000000011869a7ef *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011869a13c: 640e
relocInfo@0x000000011869a13c [type=6(runtime_call) addr=0x000000011869a7fb offset=14 format=1] | [destination=0x0000000110b394a0]
         @0x000000011869a13e: c05d
relocInfo@0x000000011869a13e [type=12(metadata) addr=0x000000011869a858 offset=93] | [metadata_addr=0x000000011869a85a *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011869a140: 6413
relocInfo@0x000000011869a140 [type=6(runtime_call) addr=0x000000011869a86b offset=19 format=1] | [destination=0x0000000110b391a0]
         @0x000000011869a142: 6490
relocInfo@0x000000011869a142 [type=6(runtime_call) addr=0x000000011869a8fb offset=144 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869a144: f80309ba777700017005
relocInfo@0x000000011869a14c [type=7(external_word) addr=0x000000011869a900 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869a14e: 640e
relocInfo@0x000000011869a14e [type=6(runtime_call) addr=0x000000011869a90e offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869a150: 6489
relocInfo@0x000000011869a150 [type=6(runtime_call) addr=0x000000011869a997 offset=137 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869a152: f80309ba777700017005
relocInfo@0x000000011869a15a [type=7(external_word) addr=0x000000011869a99c offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869a15c: 640e
relocInfo@0x000000011869a15c [type=6(runtime_call) addr=0x000000011869a9aa offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869a15e: 6495
relocInfo@0x000000011869a15e [type=6(runtime_call) addr=0x000000011869aa3f offset=149 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869a160: f80309ba777700017005
relocInfo@0x000000011869a168 [type=7(external_word) addr=0x000000011869aa44 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869a16a: 640e
relocInfo@0x000000011869a16a [type=6(runtime_call) addr=0x000000011869aa52 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869a16c: 6495
relocInfo@0x000000011869a16c [type=6(runtime_call) addr=0x000000011869aae7 offset=149 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869a16e: f80309ba777700017005
relocInfo@0x000000011869a176 [type=7(external_word) addr=0x000000011869aaec offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869a178: 640e
relocInfo@0x000000011869a178 [type=6(runtime_call) addr=0x000000011869aafa offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869a17a: 6465
relocInfo@0x000000011869a17a [type=6(runtime_call) addr=0x000000011869ab5f offset=101 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869a17c: f80309ba777700017005
relocInfo@0x000000011869a184 [type=7(external_word) addr=0x000000011869ab64 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869a186: 640e
relocInfo@0x000000011869a186 [type=6(runtime_call) addr=0x000000011869ab72 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869a188: 64a1
relocInfo@0x000000011869a188 [type=6(runtime_call) addr=0x000000011869ac13 offset=161 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869a18a: f80309ba777700017005
relocInfo@0x000000011869a192 [type=7(external_word) addr=0x000000011869ac18 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869a194: 640e
relocInfo@0x000000011869a194 [type=6(runtime_call) addr=0x000000011869ac26 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869a196: 645d
relocInfo@0x000000011869a196 [type=6(runtime_call) addr=0x000000011869ac83 offset=93 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869a198: f80309ba777700017005
relocInfo@0x000000011869a1a0 [type=7(external_word) addr=0x000000011869ac88 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869a1a2: 640e
relocInfo@0x000000011869a1a2 [type=6(runtime_call) addr=0x000000011869ac96 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869a1a4: 6419
relocInfo@0x000000011869a1a4 [type=6(runtime_call) addr=0x000000011869acaf offset=25 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869a1a6: f80309ba777700017005
relocInfo@0x000000011869a1ae [type=7(external_word) addr=0x000000011869acb4 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869a1b0: 640e
relocInfo@0x000000011869a1b0 [type=6(runtime_call) addr=0x000000011869acc2 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869a1b2: 6415
relocInfo@0x000000011869a1b2 [type=6(runtime_call) addr=0x000000011869acd7 offset=21 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869a1b4: f80309ba777700017005
relocInfo@0x000000011869a1bc [type=7(external_word) addr=0x000000011869acdc offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869a1be: 640e
relocInfo@0x000000011869a1be [type=6(runtime_call) addr=0x000000011869acea offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869a1c0: 641d
relocInfo@0x000000011869a1c0 [type=6(runtime_call) addr=0x000000011869ad07 offset=29 format=1] | [destination=0x0000000110b38ea0]
         @0x000000011869a1c2: 0019
relocInfo@0x000000011869a1c2 [type=0(none) addr=0x000000011869ad20 offset=25]
         @0x000000011869a1c4: 6400
relocInfo@0x000000011869a1c4 [type=6(runtime_call) addr=0x000000011869ad20 offset=0 format=1] | [destination=0x0000000110b45120]
         @0x000000011869a1c6: 640f
relocInfo@0x000000011869a1c6 [type=6(runtime_call) addr=0x000000011869ad2f offset=15 format=1] | [destination=0x0000000110bfa860]
         @0x000000011869a1c8: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type leaf_type
  context = org.jml.regression.linear.DoubleVectorLinearRegression
   [nmethod<=klass]org.jml.regression.linear.DoubleVectorLinearRegression
Dependency of type unique_concrete_method
  context = jdk.incubator.vector.DoubleVector$DoubleSpecies
  method  = {method} {0x0000000267b3ef30} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
   [nmethod<=klass]jdk.incubator.vector.DoubleVector$DoubleSpecies
Dependency of type unique_concrete_method
  context = jdk.incubator.vector.VectorOperators$BinaryImpl
  method  = {method} {0x0000000267a862a0} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$BinaryImpl
Dependency of type unique_concrete_method
  context = jdk.incubator.vector.VectorOperators$BinaryImpl
  method  = {method} {0x0000000267a85e38} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$BinaryImpl
Dependency of type unique_concrete_method
  context = jdk.incubator.vector.VectorOperators$BinaryImpl
  method  = {method} {0x0000000267a85f10} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$BinaryImpl
Dependency of type unique_concrete_method
  context = jdk.incubator.vector.VectorOperators$ImplCache
  method  = {method} {0x0000000267b33200} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$ImplCache
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 96 bytes)
catch_pco = 1340 (1 entries)
  bci -1 at scope depth 0 -> pco 2839
catch_pco = 1456 (1 entries)
  bci -1 at scope depth 0 -> pco 2834
catch_pco = 1568 (1 entries)
  bci -1 at scope depth 0 -> pco 2832
catch_pco = 1680 (1 entries)
  bci -1 at scope depth 0 -> pco 2841
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 4 entries, 36 bytes):
{
   < 0x000000011869a3e0, 0x000000011869abcd > < 0x000000011869a3f1, 0x000000011869abcd > < 0x000000011869a50a, 0x000000011869aca2 > 
   < 0x000000011869a60b, 0x000000011869acc8 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 NULL-oop
#1: 0x000000017e000128 a 'java/lang/Class'{0x000000017e000128} = 'jdk/incubator/vector/Double256Vector'
#2: 0x000000011ff8c550 a 'java/lang/Class'{0x000000011ff8c550} = double
#3: 0x000000017e004370 a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000017e004370}
#4: 0x000000017e000078 a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000017e000078}
#5: 0x000000017e000250 a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000017e000250}
#6: 0x000000011ff58b48 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011ff58b48}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 NULL-oop
# 1: 0x000000026788fe18 {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
# 2: 0x0000000267b18ef0 {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
# 3: 0x0000000267b72458 {method} {0x0000000267b72458} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
# 4: 0x0000000267b6f070 {method} {0x0000000267b6f070} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/Double256Vector;' in 'jdk/incubator/vector/Double256Vector'
# 5: 0x0000000267b17fb0 {method} {0x0000000267b17fb0} 'lanewiseTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
# 6: 0x0000000225d0e900 'org/jml/regression/linear/DoubleVectorLinearRegression'
# 7: 0x0000000267b1ded0 {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
# 8: 0x0000000267b96280 {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
# 9: 0x0000000225c40618 {type array double}
#10: 0x0000000267b19378 {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
#11: 0x0000000267b181a0 {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
#12: 0x0000000267b726c8 {method} {0x0000000267b726c8} 'broadcast' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
#13: 0x0000000267b6dcc0 {method} {0x0000000267b6dcc0} 'broadcast' '(D)Ljdk/incubator/vector/Double256Vector;' in 'jdk/incubator/vector/Double256Vector'
#14: 0x0000000267b176d0 {method} {0x0000000267b176d0} 'broadcastTemplate' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
#15: 0x0000000267b39810 {method} {0x0000000267b39810} 'broadcast' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
#16: 0x0000000225d520a0 'jdk/incubator/vector/Double256Vector'
#17: 0x000000011015f0e0 {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
#18: 0x0000000267b39e30 {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
#19: 0x0000000267b40508 {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
#20: 0x0000000225d4eb10 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
#21: 0x0000000267b3ef30 {method} {0x0000000267b3ef30} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
#22: 0x0000000225d5a3b0 'jdk/incubator/vector/VectorOperators$BinaryImpl'
#23: 0x0000000267a862a0 {method} {0x0000000267a862a0} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#24: 0x0000000267a85e38 {method} {0x0000000267a85e38} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#25: 0x0000000267a85f10 {method} {0x0000000267a85f10} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#26: 0x0000000267b33200 {method} {0x0000000267b33200} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
1089.400 ms/op
# Warmup Iteration   2: 
============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)    3501 1177 %     3       org.jml.regression.linear.DoubleVectorLinearRegression::fit @ 54 (378 bytes)
 total in heap  [0x0000000111276e90,0x000000011127f018] = 33160
 relocation     [0x0000000111277008,0x00000001112777e0] = 2008
 constants      [0x00000001112777e0,0x0000000111277800] = 32
 main code      [0x0000000111277800,0x000000011127c660] = 20064
 stub code      [0x000000011127c660,0x000000011127c868] = 520
 oops           [0x000000011127c868,0x000000011127c8b8] = 80
 metadata       [0x000000011127c8b8,0x000000011127c968] = 176
 scopes data    [0x000000011127c968,0x000000011127df90] = 5672
 scopes pcs     [0x000000011127df90,0x000000011127ef40] = 4016
 dependencies   [0x000000011127ef40,0x000000011127ef48] = 8
 nul chk table  [0x000000011127ef48,0x000000011127f018] = 208


[Constant Pool]
             Address          hex4                    hex8      
  0x00000001112777e0:   0x00000000      0x0000000000000000      
  0x00000001112777e4:   0x00000000                              
  0x00000001112777e8:   0x00000000      0x0000000000000000      
  0x00000001112777ec:   0x00000000                              
  0x00000001112777f0:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00000001112777f4:   0xf4f4f4f4                              
  0x00000001112777f8:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00000001112777fc:   0xf4f4f4f4                              

[MachCode]
[Entry Point]
  # {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
 ;;  block B254 [0, 0]
  0x0000000111277800: ;   {no_reloc}
  0x0000000111277800: 448b 5608 | 49c1 e203 

  0x0000000111277808: ;   {runtime_call ic_miss_stub}
  0x0000000111277808: 4c3b d00f | 850f 2198 | ff90 9090 | 9090 9090 | 9090 9090 | 9090 9090 
[Verified Entry Point]
  0x0000000111277820: 8984 2400 | a0fe ff55 | 4881 ecd0 

  0x000000011127782c: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011127782c: 0200 0049 | b840 46a0 | 6702 0000 | 0045 8b88 | 1c01 0000 | 4183 c102 | 4589 881c | 0100 0041 
  0x000000011127784c: 81e1 fe07 | 0000 4183 | f900 0f84 

  0x0000000111277858: ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@0 (line 15)
  0x0000000111277858: b23e 0000 
 ;;  block B255 [0, 0]
 ;;  block B0 [0, 4]
  0x000000011127785c: ; implicit exception: dispatches to 0x000000011127b72f
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@1 (line 15)
  0x000000011127785c: 448b 420c 

  0x0000000111277860: ; implicit exception: dispatches to 0x000000011127b748
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@3 (line 15)
  0x0000000111277860: 448b 490c 

  0x0000000111277864: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111277864: 453b c149 | b940 46a0 | 6702 0000 | 0048 bf70 | 0100 0000 | 0000 000f | 850a 0000 | 0048 bf60 
  0x0000000111277884: 0100 0000 | 0000 0049 | 8b1c 3948 | 8d5b 0149 | 891c 390f | 85a7 3c00 

  0x000000011127789c: ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@4 (line 15)
                      ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178})}
  0x000000011127789c: 0049 b978 | 0140 6101 

  0x00000001112778a4: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x00000001112778a4: 0000 0048 | bf40 46a0 | 6702 0000 | 0045 8b49 | 0849 c1e1 | 034c 3b8f | a001 0000 | 750d 4883 
  0x00000001112778c4: 87a8 0100 | 0001 e966 | 0000 004c | 3b8f b001 | 0000 750d | 4883 87b8 | 0100 0001 | e950 0000 
  0x00000001112778e4: 0048 81bf | a001 0000 | 0000 0000 | 7517 4c89 | 8fa0 0100 | 0048 c787 | a801 0000 | 0100 0000 
  0x0000000111277904: e92c 0000 | 0048 81bf | b001 0000 | 0000 0000 | 7517 4c89 | 8fb0 0100 | 0048 c787 | b801 0000 
  0x0000000111277924: 0100 0000 | e908 0000 | 0048 8387 | 9001 0000 

  0x0000000111277934: ;   {metadata(method data for {method} {0x0000000267b3fa08} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies')}
  0x0000000111277934: 0149 b918 | dca9 6702 | 0000 0041 | 8bb9 1c01 | 0000 83c7 | 0241 89b9 | 1c01 0000 | 81e7 feff 
  0x0000000111277954: 1f00 83ff | 000f 8402 

  0x000000011127795c: ;   {metadata(method data for {method} {0x0000000267b3fa08} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011127795c: 3e00 0049 | b918 dca9 | 6702 0000 | 0049 8381 | 6001 0000 

  0x0000000111277970: ;   {metadata(method data for {method} {0x0000000267b96588} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x0000000111277970: 0149 b9d0 | dda9 6702 | 0000 0041 | 8bb9 1c01 | 0000 83c7 | 0241 89b9 | 1c01 0000 | 81e7 feff 
  0x0000000111277990: 1f00 83ff | 000f 84e7 

  0x0000000111277998: ;   {metadata(method data for {method} {0x0000000267b96588} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x0000000111277998: 3d00 0049 | b9d0 dda9 | 6702 0000 | 0041 ff81 

  0x00000001112779a8: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorIntrinsics::roundDown@5 (line 106)
                      ; - jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
  0x00000001112779a8: 7001 0000 
 ;;  block B19 [8, 8]
  0x00000001112779ac: 4183 e0fc 
 ;;  block B17 [8, 35]
  0x00000001112779b0: 4889 8c24 | 1001 0000 | 4889 9424 | 1801 0000 | 4889 b424 | 2001 0000 
 ;;  block B15 [35, 54]
  0x00000001112779c8: c4c1 7b2a 

  0x00000001112779cc: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x00000001112779cc: c049 b840 | 46a0 6702 | 0000 0049 | 8380 c801 

  0x00000001112779dc: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112779dc: 0000 0149 | b8a8 dfa9 | 6702 0000 | 0045 8b88 | 1c01 0000 | 4183 c102 | 4589 881c | 0100 0041 
  0x00000001112779fc: 81e1 feff | 1f00 4183 | f900 0f84 | 973d 0000 

  0x0000000111277a0c: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178})}
  0x0000000111277a0c: 48bb 7801 | 4061 0100 | 0000 4c8b 

  0x0000000111277a18: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111277a18: c349 b9a8 | dfa9 6702 | 0000 0049 | 8381 9801 | 0000 014c 

  0x0000000111277a2c: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111277a2c: 8bc3 49b9 | a8df a967 | 0200 0000 | 458b 4008 | 49c1 e003 | 4d3b 81e0 | 0100 0075 | 0d49 8381 
  0x0000000111277a4c: e801 0000 | 01e9 6600 | 0000 4d3b | 81f0 0100 | 0075 0d49 | 8381 f801 | 0000 01e9 | 5000 0000 
  0x0000000111277a6c: 4981 b9e0 | 0100 0000 | 0000 0075 | 174d 8981 | e001 0000 | 49c7 81e8 | 0100 0001 | 0000 00e9 
  0x0000000111277a8c: 2c00 0000 | 4981 b9f0 | 0100 0000 | 0000 0075 | 174d 8981 | f001 0000 | 49c7 81f8 | 0100 0001 
  0x0000000111277aac: 0000 00e9 | 0800 0000 | 4983 81d0 | 0100 0001 

  0x0000000111277abc: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111277abc: 49b8 a8df | a967 0200 | 0000 4983 | 8008 0200 

  0x0000000111277acc: ;   {metadata(method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111277acc: 0001 49b8 | 68e2 a967 | 0200 0000 | 458b 881c | 0100 0041 | 83c1 0245 | 8988 1c01 | 0000 4181 
  0x0000000111277aec: e1fe ff1f | 0041 83f9 | 000f 84c9 

  0x0000000111277af8: ;   {metadata(method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111277af8: 3c00 0049 | b868 e2a9 | 6702 0000 | 0049 8380 | 6001 0000 

  0x0000000111277b0c: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111277b0c: 0149 b808 | ad40 1001 | 0000 004d | 8d80 3802 

  0x0000000111277b1c: ;   {oop(a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000000161405ab0})}
  0x0000000111277b1c: 0000 48b8 | b05a 4061 | 0100 0000 | 4c8b c84d | 85c9 7507 | 4981 0801 

  0x0000000111277b34: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111277b34: 0000 0049 | b8a8 dfa9 | 6702 0000 | 0049 8380 | 1802 0000 

  0x0000000111277b48: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111277b48: 0149 b808 | ad40 1001 | 0000 0045 | 8b88 1c01 | 0000 4183 | c102 4589 | 881c 0100 | 0041 81e1 
  0x0000000111277b68: feff 1f00 | 4183 f900 
 ;;  188 branch [EQ] [CounterOverflowStub: 0x00007f84695a8b30]
  0x0000000111277b70: 0f84 6f3c 

  0x0000000111277b74: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x0000000111277b74: 0000 49b8 | 089d 4010 | 0100 0000 | 4d8d 80f0 | 0100 004c | 8bc8 4d85 | c975 0749 | 8108 0100 
  0x0000000111277b94: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111277b94: 0000 49b8 | 08ad 4010 | 0100 0000 | 4983 8098 | 0100 0001 

  0x0000000111277ba8: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x0000000111277ba8: 49b8 089d | 4010 0100 | 0000 458b | 881c 0100 | 0041 83c1 | 0245 8988 | 1c01 0000 | 4181 e1fe 
  0x0000000111277bc8: ff1f 0041 | 83f9 000f | 8431 3c00 

  0x0000000111277bd4: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111277bd4: 0049 b808 | ad40 1001 | 0000 004d | 8d80 d001 

  0x0000000111277be4: ;   {oop(a 'jdk/incubator/vector/DoubleVector$$Lambda$87+0x0000000225d54960'{0x0000000161405ae0})}
  0x0000000111277be4: 0000 49bb | e05a 4061 | 0100 0000 | 4d8b cb4d | 85c9 7507 | 4981 0801 

  0x0000000111277bfc: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111277bfc: 0000 0049 | b8a8 dfa9 | 6702 0000 | 004d 8d80 | 2802 0000 | 4d8b cb4d | 85c9 7507 | 4981 0801 
  0x0000000111277c1c: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111277c1c: 0000 0049 | b8a8 dfa9 | 6702 0000 | 0049 8380 | 3802 0000 

  0x0000000111277c30: ;   {oop(a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector')}
  0x0000000111277c30: 0149 bd80 | 0040 6101 

  0x0000000111277c38: ;   {oop(a 'java/lang/Class'{0x000000011ff8c550} = double)}
  0x0000000111277c38: 0000 0049 | be50 c5f8 | 1f01 0000 | 0049 bc00 | 0000 0000 | 0000 0049 | 8bf5 498b | d6b9 0400 
  0x0000000111277c58: 0000 4d8b | c44c 8bcb 

  0x0000000111277c60: ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@28 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x0000000111277c60: 498b fb4c | 89a4 2450 | 0100 004c | 89b4 2448 | 0100 004c | 89ac 2440 | 0100 004c | 899c 2438 
  0x0000000111277c80: 0100 0048 | 8984 2430 | 0100 0048 | 899c 2428 | 0100 00c5 | fb11 8424 | 6802 0000 

  0x0000000111277c9c: ;   {static_call}
  0x0000000111277c9c: 9090 90e8 

  0x0000000111277ca0: ; ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [320]=Oop [304]=Oop [312]=Oop [328]=Oop [296]=Oop }
                      ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@28 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x0000000111277ca0: 7c25 98ff | 4883 f800 

  0x0000000111277ca8: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111277ca8: 7516 48b9 | a8df a967 | 0200 0000 | 8089 4102 | 0000 01e9 | c100 0000 

  0x0000000111277cc0: ;   {metadata('jdk/incubator/vector/DoubleVector')}
  0x0000000111277cc0: 48ba 30ce | d425 0200 | 0000 8b48 | 0848 c1e1 | 0348 3b51 | 600f 858a 

  0x0000000111277cd8: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111277cd8: 0000 0048 | b9a8 dfa9 | 6702 0000 | 008b 5008 | 48c1 e203 | 483b 9158 | 0200 0075 | 0d48 8381 
  0x0000000111277cf8: 6002 0000 | 01e9 7f00 | 0000 483b | 9168 0200 | 0075 0d48 | 8381 7002 | 0000 01e9 | 6900 0000 
  0x0000000111277d18: 4881 b958 | 0200 0000 | 0000 0075 | 1748 8991 | 5802 0000 | 48c7 8160 | 0200 0001 | 0000 00e9 
  0x0000000111277d38: 4500 0000 | 4881 b968 | 0200 0000 | 0000 0075 | 1748 8991 | 6802 0000 | 48c7 8170 | 0200 0001 
  0x0000000111277d58: 0000 00e9 | 2100 0000 | e91c 0000 

  0x0000000111277d64: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111277d64: 0048 b9a8 | dfa9 6702 | 0000 0048 | 83a9 4802 | 0000 01e9 | ab3a 0000 | e900 0000 

  0x0000000111277d80: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@31 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x0000000111277d80: 0048 8bd8 

  0x0000000111277d84: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111277d84: 48be 4046 | a067 0200 | 0000 4883 | 86d8 0100 

  0x0000000111277d94: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111277d94: 0001 48be | a8df a967 | 0200 0000 | 8b96 1c01 | 0000 83c2 | 0289 961c | 0100 0081 | e2fe ff1f 
  0x0000000111277db4: 0083 fa00 
 ;;  270 branch [EQ] [CounterOverflowStub: 0x00007f846b368e50]
  0x0000000111277db8: 0f84 863a | 0000 488b | b424 2801 

  0x0000000111277dc4: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111277dc4: 0000 48ba | a8df a967 | 0200 0000 | 4883 8298 | 0100 0001 | 488b b424 | 2801 0000 

  0x0000000111277de0: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111277de0: 48ba a8df | a967 0200 | 0000 8b76 | 0848 c1e6 | 0348 3bb2 | e001 0000 | 750d 4883 | 82e8 0100 
  0x0000000111277e00: 0001 e966 | 0000 0048 | 3bb2 f001 | 0000 750d | 4883 82f8 | 0100 0001 | e950 0000 | 0048 81ba 
  0x0000000111277e20: e001 0000 | 0000 0000 | 7517 4889 | b2e0 0100 | 0048 c782 | e801 0000 | 0100 0000 | e92c 0000 
  0x0000000111277e40: 0048 81ba | f001 0000 | 0000 0000 | 7517 4889 | b2f0 0100 | 0048 c782 | f801 0000 | 0100 0000 
  0x0000000111277e60: e908 0000 | 0048 8382 | d001 0000 

  0x0000000111277e6c: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111277e6c: 0148 bea8 | dfa9 6702 | 0000 0048 | 8386 0802 

  0x0000000111277e7c: ;   {metadata(method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111277e7c: 0000 0148 | be68 e2a9 | 6702 0000 | 008b 961c | 0100 0083 | c202 8996 | 1c01 0000 | 81e2 feff 
  0x0000000111277e9c: 1f00 83fa | 000f 84be 

  0x0000000111277ea4: ;   {metadata(method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111277ea4: 3900 0048 | be68 e2a9 | 6702 0000 | 0048 8386 | 6001 0000 

  0x0000000111277eb8: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111277eb8: 0148 be08 | ad40 1001 | 0000 0048 | 8db6 3802 | 0000 488b | 8424 3001 | 0000 488b | d048 85d2 
  0x0000000111277ed8: 7507 4881 | 0e01 0000 

  0x0000000111277ee0: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111277ee0: 0048 bea8 | dfa9 6702 | 0000 0048 | 8386 1802 

  0x0000000111277ef0: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111277ef0: 0000 0148 | be08 ad40 | 1001 0000 | 008b 961c | 0100 0083 | c202 8996 | 1c01 0000 | 81e2 feff 
  0x0000000111277f10: 1f00 83fa | 000f 846b 

  0x0000000111277f18: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x0000000111277f18: 3900 0048 | be08 9d40 | 1001 0000 | 0048 8db6 | f001 0000 | 488b d048 | 85d2 7507 | 4881 0e01 
  0x0000000111277f38: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111277f38: 0000 0048 | be08 ad40 | 1001 0000 | 0048 8386 | 9801 0000 

  0x0000000111277f4c: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x0000000111277f4c: 0148 be08 | 9d40 1001 | 0000 008b | 961c 0100 | 0083 c202 | 8996 1c01 | 0000 81e2 | feff 1f00 
  0x0000000111277f6c: 83fa 000f | 8432 3900 

  0x0000000111277f74: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111277f74: 0048 be08 | ad40 1001 | 0000 0048 | 8db6 d001 | 0000 4c8b | 9c24 3801 | 0000 498b | d348 85d2 
  0x0000000111277f94: 7507 4881 | 0e01 0000 

  0x0000000111277f9c: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111277f9c: 0048 bea8 | dfa9 6702 | 0000 0048 | 8db6 2802 | 0000 498b | d348 85d2 | 7507 4881 | 0e01 0000 
  0x0000000111277fbc: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111277fbc: 0048 bea8 | dfa9 6702 | 0000 0048 | 8386 3802 | 0000 0148 | 8bb4 2440 | 0100 0048 | 8b94 2448 
  0x0000000111277fdc: 0100 00b9 | 0400 0000 | 4c8b 8424 | 5001 0000 | 4c8b 8c24 | 2801 0000 

  0x0000000111277ff4: ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@28 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
  0x0000000111277ff4: 498b fb48 | 899c 2458 

  0x0000000111277ffc: ;   {static_call}
  0x0000000111277ffc: 0100 00e8 

  0x0000000111278000: ; ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [344]=Oop }
                      ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@28 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
  0x0000000111278000: 1c22 98ff | 4883 f800 

  0x0000000111278008: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111278008: 7516 48be | a8df a967 | 0200 0000 | 808e 4102 | 0000 01e9 | c100 0000 

  0x0000000111278020: ;   {metadata('jdk/incubator/vector/DoubleVector')}
  0x0000000111278020: 48bb 30ce | d425 0200 | 0000 8b70 | 0848 c1e6 | 0348 3b5e | 600f 858a 

  0x0000000111278038: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111278038: 0000 0048 | bea8 dfa9 | 6702 0000 | 008b 5808 | 48c1 e303 | 483b 9e58 | 0200 0075 | 0d48 8386 
  0x0000000111278058: 6002 0000 | 01e9 7f00 | 0000 483b | 9e68 0200 | 0075 0d48 | 8386 7002 | 0000 01e9 | 6900 0000 
  0x0000000111278078: 4881 be58 | 0200 0000 | 0000 0075 | 1748 899e | 5802 0000 | 48c7 8660 | 0200 0001 | 0000 00e9 
  0x0000000111278098: 4500 0000 | 4881 be68 | 0200 0000 | 0000 0075 | 1748 899e | 6802 0000 | 48c7 8670 | 0200 0001 
  0x00000001112780b8: 0000 00e9 | 2100 0000 | e91c 0000 

  0x00000001112780c4: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112780c4: 0048 bea8 | dfa9 6702 | 0000 0048 | 83ae 4802 | 0000 01e9 | ec37 0000 | e900 0000 

  0x00000001112780e0: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@31 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
  0x00000001112780e0: 0048 8bf0 | 488b 9c24 | 5801 0000 | c5fb 1084 | 2468 0200 | 0048 8b8c | 2410 0100 | 0048 8b94 
  0x0000000111278100: 2418 0100 | 0048 8b84 | 2420 0100 | 0041 bb00 | 0000 00c5 | f157 c9c5 

  0x0000000111278118: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x0000000111278118: e957 d248 | 89b4 24a8 | 0100 0048 | 899c 2498 | 0100 00c5 | fb11 8c24 | 9802 0000 | c5fb 1194 
  0x0000000111278138: 2490 0200 | 0048 898c | 24a0 0100 | 0048 8984 | 24b8 0100 | 0090 9090 
 ;;  block B1 [54, 60]
  0x0000000111278150: c4c1 632a | dbc5 f92e | d841 b801 | 0000 000f | 8a15 0000 | 000f 870f | 0000 0041 | b800 0000 
  0x0000000111278170: 000f 8403 | 0000 0041 

  0x0000000111278178: ;*dcmpg {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@59 (line 24)
  0x0000000111278178: ffc8 4183 

  0x000000011127817c: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011127817c: f800 49b8 | 4046 a067 | 0200 0000 | 49b9 e801 | 0000 0000 | 0000 0f8d | 0a00 0000 | 49b9 f801 
  0x000000011127819c: 0000 0000 | 0000 4b8b | 3c08 488d | 7f01 4b89 | 3c08 0f8d 

  0x00000001112781b0: ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@60 (line 24)
  0x00000001112781b0: 8f0f 0000 
 ;;  block B4 [63, 3]
  0x00000001112781b4: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x00000001112781b4: 49b8 4046 | a067 0200 | 0000 4983 | 8008 0200 

  0x00000001112781c4: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112781c4: 0001 49b8 | 905a a967 | 0200 0000 | 458b 881c | 0100 0041 | 83c1 0245 | 8988 1c01 | 0000 4181 
  0x00000001112781e4: e1fe ff1f | 0041 83f9 | 000f 84f2 

  0x00000001112781f0: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178})}
  0x00000001112781f0: 3600 0049 | b878 0140 | 6101 0000 

  0x00000001112781fc: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112781fc: 0049 b990 | 5aa9 6702 | 0000 0045 | 8b40 0849 | c1e0 034d | 3b81 7001 | 0000 750d | 4983 8178 
  0x000000011127821c: 0100 0001 | e966 0000 | 004d 3b81 | 8001 0000 | 750d 4983 | 8188 0100 | 0001 e950 | 0000 0049 
  0x000000011127823c: 81b9 7001 | 0000 0000 | 0000 7517 | 4d89 8170 | 0100 0049 | c781 7801 | 0000 0100 | 0000 e92c 
  0x000000011127825c: 0000 0049 | 81b9 8001 | 0000 0000 | 0000 7517 | 4d89 8180 | 0100 0049 | c781 8801 | 0000 0100 
  0x000000011127827c: 0000 e908 | 0000 0049 | 8381 6001 | 0000 0144 

  0x000000011127828c: ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
                      ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127828c: 8b42 0c49 | b990 5aa9 | 6702 0000 | 0049 8381 | 9801 0000 

  0x00000001112782a0: ;   {metadata(method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x00000001112782a0: 0149 b930 | 5da9 6702 | 0000 0041 | 8bb9 1c01 | 0000 83c7 | 0241 89b9 | 1c01 0000 | 81e7 feff 
  0x00000001112782c0: 1f00 83ff | 000f 8454 | 3600 0041 

  0x00000001112782cc: ;   {metadata(method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x00000001112782cc: 83e8 0349 | b930 5da9 | 6702 0000 | 0049 8381 | c001 0000 

  0x00000001112782e0: ;   {metadata(method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x00000001112782e0: 0149 b918 | 4c9f 6702 | 0000 0041 | 8bb9 1c01 | 0000 83c7 | 0241 89b9 | 1c01 0000 | 81e7 feff 
  0x0000000111278300: 1f00 83ff | 000f 8435 

  0x0000000111278308: ;   {metadata(method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x0000000111278308: 3600 0049 | b918 4c9f | 6702 0000 | 0049 8381 | 6001 0000 

  0x000000011127831c: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011127831c: 0149 b9d0 | 4d9f 6702 | 0000 0041 | 8bb9 1c01 | 0000 83c7 | 0241 89b9 | 1c01 0000 | 81e7 feff 
  0x000000011127833c: 1f00 83ff | 000f 841a | 3600 0041 

  0x0000000111278348: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x0000000111278348: 83fb 0049 | b9d0 4d9f | 6702 0000 | 0048 bf60 | 0100 0000 | 0000 000f | 8c0a 0000 | 0048 bf70 
  0x0000000111278368: 0100 0000 | 0000 004d | 8b2c 394d | 8d6d 014d | 892c 390f | 8c33 3100 

  0x0000000111278380: ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@1 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x0000000111278380: 0045 3bd8 

  0x0000000111278384: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x0000000111278384: 49b9 d04d | 9f67 0200 | 0000 48bf | 9001 0000 | 0000 0000 | 0f8d 0a00 | 0000 48bf | 8001 0000 
  0x00000001112783a4: 0000 0000 | 4d8b 2c39 | 4d8d 6d01 | 4d89 2c39 
 ;;  592 branch [GE] [B61] 
  0x00000001112783b4: 0f8d fa30 

  0x00000001112783b8: ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@6 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
                      ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178})}
  0x00000001112783b8: 0000 49b8 | 7801 4061 | 0100 0000 

  0x00000001112783c4: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112783c4: 4d8b c848 | bf90 5aa9 | 6702 0000 | 0048 8387 | e001 0000 

  0x00000001112783d8: ;   {metadata(method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x00000001112783d8: 0149 b9b0 | 48a9 6702 | 0000 0041 | 8bb9 1c01 | 0000 83c7 | 0241 89b9 | 1c01 0000 | 81e7 feff 
  0x00000001112783f8: 1f00 83ff | 000f 847f 

  0x0000000111278400: ;   {metadata(method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x0000000111278400: 3500 0049 | b9b0 48a9 | 6702 0000 | 0049 8381 | 6001 0000 

  0x0000000111278414: ;   {metadata(method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x0000000111278414: 0149 b898 | 4aa9 6702 | 0000 0045 | 8b88 1c01 | 0000 4183 | c102 4589 | 881c 0100 | 0041 81e1 
  0x0000000111278434: feff 1f00 | 4183 f900 
 ;;  648 branch [EQ] [CounterOverflowStub: 0x00007f8469511530]
  0x000000011127843c: 0f84 6135 

  0x0000000111278440: ;   {metadata(method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x0000000111278440: 0000 49b8 | 984a a967 | 0200 0000 | 41ff 8070 

  0x0000000111278450: ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x0000000111278450: 0100 00c5 | fb11 8424 | 8802 0000 
 ;;  block B63 [22, 74]
  0x000000011127845c: ;   {oop(a 'jdk/incubator/vector/Double256Vector'{0x00000001614d5db8})}
  0x000000011127845c: 49b8 b85d | 4d61 0100 | 0000 4d8b 

  0x0000000111278468: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111278468: c848 bf90 | 5aa9 6702 | 0000 0048 | 8387 1802 

  0x0000000111278478: ;   {metadata(method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x0000000111278478: 0000 0149 | b960 5fa9 | 6702 0000 | 0041 8bb9 | 1c01 0000 | 83c7 0241 | 89b9 1c01 | 0000 81e7 
  0x0000000111278498: feff 1f00 | 83ff 000f | 841f 3500 | 004d 8bc8 

  0x00000001112784a8: ;   {metadata(method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x00000001112784a8: 48bf 605f | a967 0200 | 0000 4883 | 8760 0100 

  0x00000001112784b8: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112784b8: 0001 49b9 | 0061 a967 | 0200 0000 | 418b b91c | 0100 0083 | c702 4189 | b91c 0100 | 0081 e7fe 
  0x00000001112784d8: ff1f 0083 | ff00 0f84 | 0135 0000 

  0x00000001112784e4: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112784e4: 49b9 0061 | a967 0200 | 0000 4983 | 8160 0100 

  0x00000001112784f4: ;   {metadata(method data for {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector')}
  0x00000001112784f4: 0001 49b8 | 0864 a967 | 0200 0000 | 458b 881c | 0100 0041 | 83c1 0245 | 8988 1c01 | 0000 4181 
  0x0000000111278514: e1fe ff1f | 0041 83f9 | 000f 84e3 

  0x0000000111278520: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178})}
  0x0000000111278520: 3400 0049 | b878 0140 | 6101 0000 | 004d 8bc8 

  0x0000000111278530: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111278530: 48bf 0061 | a967 0200 | 0000 4883 | 8798 0100 | 0001 4d8b 

  0x0000000111278544: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111278544: c848 bf00 | 61a9 6702 | 0000 0048 | 8387 d001 

  0x0000000111278554: ;   {metadata(method data for {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x0000000111278554: 0000 0149 | b910 59a9 | 6702 0000 | 0041 8bb9 | 1c01 0000 | 83c7 0241 | 89b9 1c01 | 0000 81e7 
  0x0000000111278574: feff 1f00 | 83ff 000f | 84a6 3400 

  0x0000000111278580: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111278580: 0049 b900 | 61a9 6702 | 0000 0049 | 8381 0802 

  0x0000000111278590: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111278590: 0000 0149 | b800 61a9 | 6702 0000 | 0049 8380 | 4002 0000 

  0x00000001112785a4: ;   {metadata(method data for {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112785a4: 0149 b888 | 65a9 6702 | 0000 0045 | 8b88 1c01 | 0000 4183 | c102 4589 | 881c 0100 | 0041 81e1 
  0x00000001112785c4: feff 1f00 | 4183 f900 
 ;;  774 branch [EQ] [CounterOverflowStub: 0x00007f846905a430]
  0x00000001112785cc: 0f84 7634 | 0000 4d63 | c3b9 0300 | 0000 49d3 | e049 ba10 | 0000 0000 | 0000 004d 

  0x00000001112785e8: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x00000001112785e8: 03c2 48b9 | 08ad 4010 | 0100 0000 | 488d 8938 

  0x00000001112785f8: ;   {oop(a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x00000001614058e0})}
  0x00000001112785f8: 0200 0049 | b9e0 5840 | 6101 0000 | 0049 8bf9 | 4885 ff75 | 0748 8109 | 0100 0000 

  0x0000000111278614: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111278614: 48b9 0061 | a967 0200 | 0000 4883 | 8150 0200 

  0x0000000111278624: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111278624: 0001 48b9 | 08ad 4010 | 0100 0000 | 8bb9 1c01 | 0000 83c7 | 0289 b91c | 0100 0081 | e7fe ff1f 
  0x0000000111278644: 0083 ff00 
 ;;  812 branch [EQ] [CounterOverflowStub: 0x00007f846905b410]
  0x0000000111278648: 0f84 1b34 

  0x000000011127864c: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011127864c: 0000 48b9 | 089d 4010 | 0100 0000 | 488d 89f0 | 0100 004d | 85c9 7507 | 4881 0901 

  0x0000000111278668: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111278668: 0000 0048 | b908 ad40 | 1001 0000 | 0048 8381 | 9801 0000 

  0x000000011127867c: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011127867c: 0148 b908 | 9d40 1001 | 0000 0044 | 8b89 1c01 | 0000 4183 | c102 4489 | 891c 0100 | 0041 81e1 
  0x000000011127869c: feff 1f00 | 4183 f900 
 ;;  836 branch [EQ] [CounterOverflowStub: 0x00007f846905bd10]
  0x00000001112786a4: 0f84 e033 

  0x00000001112786a8: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x00000001112786a8: 0000 48b9 | 08ad 4010 | 0100 0000 | 488d 89d0 

  0x00000001112786b8: ;   {oop(a 'jdk/incubator/vector/DoubleVector$$Lambda$94+0x0000000225d597d0'{0x0000000161405910})}
  0x00000001112786b8: 0100 0049 | b910 5940 | 6101 0000 | 0049 8bf9 | 4885 ff75 | 0748 8109 | 0100 0000 

  0x00000001112786d4: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112786d4: 48b9 0061 | a967 0200 | 0000 488d | 8960 0200 | 004d 85c9 | 7507 4881 | 0901 0000 

  0x00000001112786f0: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112786f0: 0048 b900 | 61a9 6702 | 0000 0048 | 8381 7002 

  0x0000000111278700: ;   {oop(a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector')}
  0x0000000111278700: 0000 0148 | b980 0040 | 6101 0000 

  0x000000011127870c: ;   {oop(a 'java/lang/Class'{0x000000011ff8c550} = double)}
  0x000000011127870c: 0049 b950 | c5f8 1f01 | 0000 0048 | 8bf1 4c8b | e249 8bd1 | b904 0000 | 0049 8bf8 | 4d8b c44c 
  0x000000011127872c: 8bcf 4889 | bc24 9001 | 0000 498b | fc44 891c 

  0x000000011127873c: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178})}
  0x000000011127873c: 2449 ba78 | 0140 6101 | 0000 004c | 8954 2408 

  0x000000011127874c: ;   {oop(a 'jdk/incubator/vector/DoubleVector$$Lambda$94+0x0000000225d597d0'{0x0000000161405910})}
  0x000000011127874c: 49ba 1059 | 4061 0100 | 0000 4c89 

  0x0000000111278758: ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x0000000111278758: 5424 104c | 89a4 24b0 | 0100 0044 | 899c 2474 | 0100 0090 

  0x000000011127876c: ;   {static_call}
  0x000000011127876c: 9090 90e8 

  0x0000000111278770: ; ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop [424]=Oop [408]=Oop }
                      ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x0000000111278770: 4cbd 4007 | 4883 f800 

  0x0000000111278778: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111278778: 7516 48bf | 0061 a967 | 0200 0000 | 808f 7902 | 0000 01e9 | c100 0000 

  0x0000000111278790: ;   {metadata('jdk/incubator/vector/DoubleVector')}
  0x0000000111278790: 48be 30ce | d425 0200 | 0000 8b78 | 0848 c1e7 | 0348 3b77 | 600f 858a 

  0x00000001112787a8: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112787a8: 0000 0048 | bf00 61a9 | 6702 0000 | 008b 7008 | 48c1 e603 | 483b b790 | 0200 0075 | 0d48 8387 
  0x00000001112787c8: 9802 0000 | 01e9 7f00 | 0000 483b | b7a0 0200 | 0075 0d48 | 8387 a802 | 0000 01e9 | 6900 0000 
  0x00000001112787e8: 4881 bf90 | 0200 0000 | 0000 0075 | 1748 89b7 | 9002 0000 | 48c7 8798 | 0200 0001 | 0000 00e9 
  0x0000000111278808: 4500 0000 | 4881 bfa0 | 0200 0000 | 0000 0075 | 1748 89b7 | a002 0000 | 48c7 87a8 | 0200 0001 
  0x0000000111278828: 0000 00e9 | 2100 0000 | e91c 0000 

  0x0000000111278834: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111278834: 0048 bf00 | 61a9 6702 | 0000 0048 | 83af 8002 | 0000 01e9 | 5f32 0000 | e900 0000 

  0x0000000111278850: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x0000000111278850: 0048 8bc8 | 488b 9c24 | 9801 0000 
 ;;  block B46 [74, 3]
  0x000000011127885c: ; implicit exception: dispatches to 0x000000011127bac8
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x000000011127885c: 483b 0348 

  0x0000000111278860: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111278860: 8bd3 48be | 4046 a067 | 0200 0000 | 4883 8618 | 0200 0001 

  0x0000000111278874: ;   {metadata(method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111278874: 48ba 9872 | a967 0200 | 0000 8bb2 | 1c01 0000 | 83c6 0289 | b21c 0100 | 0081 e6fe | ff1f 0083 
  0x0000000111278894: fe00 0f84 | 4532 0000 

  0x000000011127889c: ;   {metadata(method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127889c: 488b d348 | be98 72a9 | 6702 0000 | 008b 5208 | 48c1 e203 | 483b 9670 | 0100 0075 | 0d48 8386 
  0x00000001112788bc: 7801 0000 | 01e9 6600 | 0000 483b | 9680 0100 | 0075 0d48 | 8386 8801 | 0000 01e9 | 5000 0000 
  0x00000001112788dc: 4881 be70 | 0100 0000 | 0000 0075 | 1748 8996 | 7001 0000 | 48c7 8678 | 0100 0001 | 0000 00e9 
  0x00000001112788fc: 2c00 0000 | 4881 be80 | 0100 0000 | 0000 0075 | 1748 8996 | 8001 0000 | 48c7 8688 | 0100 0001 
  0x000000011127891c: 0000 00e9 | 0800 0000 | 4883 8660 | 0100 0001 

  0x000000011127892c: ;   {oop(a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x00000001614001e8})}
  0x000000011127892c: 48ba e801 | 4061 0100 | 0000 488b 

  0x0000000111278938: ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x0000000111278938: f390 9090 | 9048 b8a0 | 20d5 2502 

  0x0000000111278944: ;   {virtual_call}
  0x0000000111278944: 0000 00e8 

  0x0000000111278948: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop [416]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x0000000111278948: d4b6 4107 | 4889 8424 | c001 0000 

  0x0000000111278954: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111278954: 48be 4046 | a067 0200 | 0000 4883 | 8650 0200 

  0x0000000111278964: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111278964: 0001 48be | 905a a967 | 0200 0000 | 8b96 1c01 | 0000 83c2 | 0289 961c | 0100 0081 | e2fe ff1f 
  0x0000000111278984: 0083 fa00 
 ;;  940 branch [EQ] [CounterOverflowStub: 0x00007f846905e4e0]
  0x0000000111278988: 0f84 7431 

  0x000000011127898c: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178})}
  0x000000011127898c: 0000 48be | 7801 4061 | 0100 0000 

  0x0000000111278998: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111278998: 48ba 905a | a967 0200 | 0000 8b76 | 0848 c1e6 | 0348 3bb2 | 7001 0000 | 750d 4883 | 8278 0100 
  0x00000001112789b8: 0001 e966 | 0000 0048 | 3bb2 8001 | 0000 750d | 4883 8288 | 0100 0001 | e950 0000 | 0048 81ba 
  0x00000001112789d8: 7001 0000 | 0000 0000 | 7517 4889 | b270 0100 | 0048 c782 | 7801 0000 | 0100 0000 | e92c 0000 
  0x00000001112789f8: 0048 81ba | 8001 0000 | 0000 0000 | 7517 4889 | b280 0100 | 0048 c782 | 8801 0000 | 0100 0000 
  0x0000000111278a18: e908 0000 | 0048 8382 | 6001 0000 | 0148 8b8c | 24a0 0100 

  0x0000000111278a2c: ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x0000000111278a2c: 008b 710c 

  0x0000000111278a30: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111278a30: 48ba 905a | a967 0200 | 0000 4883 | 8298 0100 

  0x0000000111278a40: ;   {metadata(method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x0000000111278a40: 0001 48ba | 305d a967 | 0200 0000 | 448b 821c | 0100 0041 | 83c0 0244 | 8982 1c01 | 0000 4181 
  0x0000000111278a60: e0fe ff1f | 0041 83f8 | 000f 84cd | 3000 0044 | 8b9c 2474 | 0100 0048 | 8bfe 83ef 

  0x0000000111278a7c: ;   {metadata(method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x0000000111278a7c: 0348 be30 | 5da9 6702 | 0000 0048 | 8386 c001 

  0x0000000111278a8c: ;   {metadata(method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x0000000111278a8c: 0000 0148 | be18 4c9f | 6702 0000 | 008b 961c | 0100 0083 | c202 8996 | 1c01 0000 | 81e2 feff 
  0x0000000111278aac: 1f00 83fa | 000f 84a6 

  0x0000000111278ab4: ;   {metadata(method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x0000000111278ab4: 3000 0048 | be18 4c9f | 6702 0000 | 0048 8386 | 6001 0000 

  0x0000000111278ac8: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x0000000111278ac8: 0148 bed0 | 4d9f 6702 | 0000 008b | 961c 0100 | 0083 c202 | 8996 1c01 | 0000 81e2 | feff 1f00 
  0x0000000111278ae8: 83fa 000f | 848d 3000 | 0041 83fb 

  0x0000000111278af4: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x0000000111278af4: 0048 bed0 | 4d9f 6702 | 0000 0048 | ba60 0100 | 0000 0000 | 000f 8c0a | 0000 0048 | ba70 0100 
  0x0000000111278b14: 0000 0000 | 004c 8b04 | 164d 8d40 | 014c 8904 | 160f 8cd9 

  0x0000000111278b28: ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@1 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x0000000111278b28: 2900 0044 

  0x0000000111278b2c: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x0000000111278b2c: 3bdf 48be | d04d 9f67 | 0200 0000 | 48ba 9001 | 0000 0000 | 0000 0f8d | 0a00 0000 | 48ba 8001 
  0x0000000111278b4c: 0000 0000 | 0000 4c8b | 0416 4d8d | 4001 4c89 | 0416 0f8d 

  0x0000000111278b60: ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@6 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x0000000111278b60: a029 0000 
 ;;  block B93 [12, 6]
  0x0000000111278b64: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178})}
  0x0000000111278b64: 48be 7801 | 4061 0100 | 0000 488b 

  0x0000000111278b70: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111278b70: d649 b890 | 5aa9 6702 | 0000 0049 | 8380 e001 

  0x0000000111278b80: ;   {metadata(method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x0000000111278b80: 0000 0148 | bab0 48a9 | 6702 0000 | 0044 8b82 | 1c01 0000 | 4183 c002 | 4489 821c | 0100 0041 
  0x0000000111278ba0: 81e0 feff | 1f00 4183 | f800 0f84 | ef2f 0000 

  0x0000000111278bb0: ;   {metadata(method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x0000000111278bb0: 48ba b048 | a967 0200 | 0000 4883 | 8260 0100 

  0x0000000111278bc0: ;   {metadata(method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x0000000111278bc0: 0001 48be | 984a a967 | 0200 0000 | 8b96 1c01 | 0000 83c2 | 0289 961c | 0100 0081 | e2fe ff1f 
  0x0000000111278be0: 0083 fa00 
 ;; 1100 branch [EQ] [CounterOverflowStub: 0x00007f846b423040]
  0x0000000111278be4: 0f84 d62f 

  0x0000000111278be8: ;   {metadata(method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x0000000111278be8: 0000 48be | 984a a967 | 0200 0000 | ff86 7001 

  0x0000000111278bf8: ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x0000000111278bf8: 0000 4c8b | 8c24 9001 

  0x0000000111278c00: ;   {oop(a 'jdk/incubator/vector/Double256Vector'{0x00000001614d5db8})}
  0x0000000111278c00: 0000 48be | b85d 4d61 | 0100 0000 

  0x0000000111278c0c: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111278c0c: 488b d649 | b890 5aa9 | 6702 0000 | 0049 8380 | 1802 0000 

  0x0000000111278c20: ;   {metadata(method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x0000000111278c20: 0148 ba60 | 5fa9 6702 | 0000 0044 | 8b82 1c01 | 0000 4183 | c002 4489 | 821c 0100 | 0041 81e0 
  0x0000000111278c40: feff 1f00 | 4183 f800 
 ;; 1138 branch [EQ] [CounterOverflowStub: 0x00007f846b423d30]
  0x0000000111278c48: 0f84 932f | 0000 488b 

  0x0000000111278c50: ;   {metadata(method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x0000000111278c50: d649 b860 | 5fa9 6702 | 0000 0049 | 8380 6001 

  0x0000000111278c60: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111278c60: 0000 0148 | ba00 61a9 | 6702 0000 | 0044 8b82 | 1c01 0000 | 4183 c002 | 4489 821c | 0100 0041 
  0x0000000111278c80: 81e0 feff | 1f00 4183 | f800 0f84 | 722f 0000 

  0x0000000111278c90: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111278c90: 48ba 0061 | a967 0200 | 0000 4883 | 8260 0100 

  0x0000000111278ca0: ;   {metadata(method data for {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector')}
  0x0000000111278ca0: 0001 48be | 0864 a967 | 0200 0000 | 8b96 1c01 | 0000 83c2 | 0289 961c | 0100 0081 | e2fe ff1f 
  0x0000000111278cc0: 0083 fa00 
 ;; 1178 branch [EQ] [CounterOverflowStub: 0x00007f846b424cf0]
  0x0000000111278cc4: 0f84 592f 

  0x0000000111278cc8: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178})}
  0x0000000111278cc8: 0000 48be | 7801 4061 | 0100 0000 

  0x0000000111278cd4: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111278cd4: 488b d649 | b800 61a9 | 6702 0000 | 0049 8380 | 9801 0000 | 0148 8bd6 

  0x0000000111278cec: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111278cec: 49b8 0061 | a967 0200 | 0000 4983 | 80d0 0100 

  0x0000000111278cfc: ;   {metadata(method data for {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x0000000111278cfc: 0001 48ba | 1059 a967 | 0200 0000 | 448b 821c | 0100 0041 | 83c0 0244 | 8982 1c01 | 0000 4181 
  0x0000000111278d1c: e0fe ff1f | 0041 83f8 | 000f 8419 

  0x0000000111278d28: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111278d28: 2f00 0048 | ba00 61a9 | 6702 0000 | 0048 8382 | 0802 0000 

  0x0000000111278d3c: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111278d3c: 0148 be00 | 61a9 6702 | 0000 0048 | 8386 4002 

  0x0000000111278d4c: ;   {metadata(method data for {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111278d4c: 0000 0148 | be88 65a9 | 6702 0000 | 008b 961c | 0100 0083 | c202 8996 | 1c01 0000 | 81e2 feff 
  0x0000000111278d6c: 1f00 83fa | 000f 84ee 

  0x0000000111278d74: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111278d74: 2e00 0048 | be08 ad40 | 1001 0000 | 0048 8db6 | 3802 0000 

  0x0000000111278d88: ;   {oop(a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x00000001614058e0})}
  0x0000000111278d88: 48ba e058 | 4061 0100 | 0000 4c8b | c24d 85c0 | 7507 4881 | 0e01 0000 

  0x0000000111278da0: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111278da0: 0048 be00 | 61a9 6702 | 0000 0048 | 8386 5002 

  0x0000000111278db0: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111278db0: 0000 0148 | be08 ad40 | 1001 0000 | 0044 8b86 | 1c01 0000 | 4183 c002 | 4489 861c | 0100 0041 
  0x0000000111278dd0: 81e0 feff | 1f00 4183 | f800 0f84 | a62e 0000 

  0x0000000111278de0: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x0000000111278de0: 48be 089d | 4010 0100 | 0000 488d | b6f0 0100 | 0048 85d2 | 7507 4881 | 0e01 0000 

  0x0000000111278dfc: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111278dfc: 0048 be08 | ad40 1001 | 0000 0048 | 8386 9801 

  0x0000000111278e0c: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x0000000111278e0c: 0000 0148 | be08 9d40 | 1001 0000 | 008b 961c | 0100 0083 | c202 8996 | 1c01 0000 | 81e2 feff 
  0x0000000111278e2c: 1f00 83fa | 000f 8470 

  0x0000000111278e34: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111278e34: 2e00 0048 | be08 ad40 | 1001 0000 | 0048 8db6 | d001 0000 

  0x0000000111278e48: ;   {oop(a 'jdk/incubator/vector/DoubleVector$$Lambda$94+0x0000000225d597d0'{0x0000000161405910})}
  0x0000000111278e48: 48ba 1059 | 4061 0100 | 0000 4c8b | c24d 85c0 | 7507 4881 | 0e01 0000 

  0x0000000111278e60: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111278e60: 0048 be00 | 61a9 6702 | 0000 0048 | 8db6 6002 | 0000 4885 | d275 0748 | 810e 0100 

  0x0000000111278e7c: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111278e7c: 0000 48be | 0061 a967 | 0200 0000 | 4883 8670 | 0200 0001 

  0x0000000111278e90: ;   {oop(a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector')}
  0x0000000111278e90: 48be 8000 | 4061 0100 

  0x0000000111278e98: ;   {oop(a 'java/lang/Class'{0x000000011ff8c550} = double)}
  0x0000000111278e98: 0000 48ba | 50c5 f81f | 0100 0000 | 488b d9b9 | 0400 0000 | 4c8b c348 | 8bfb 4489 

  0x0000000111278eb4: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178})}
  0x0000000111278eb4: 1c24 49ba | 7801 4061 | 0100 0000 | 4c89 5424 

  0x0000000111278ec4: ;   {oop(a 'jdk/incubator/vector/DoubleVector$$Lambda$94+0x0000000225d597d0'{0x0000000161405910})}
  0x0000000111278ec4: 0849 ba10 | 5940 6101 | 0000 004c 

  0x0000000111278ed0: ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x0000000111278ed0: 8954 2410 | 4889 9c24 | a001 0000 | 4489 9c24 | 7401 0000 

  0x0000000111278ee4: ;   {static_call}
  0x0000000111278ee4: 9090 90e8 

  0x0000000111278ee8: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop [416]=Oop [448]=Oop }
                      ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x0000000111278ee8: d4b5 4007 | 4883 f800 

  0x0000000111278ef0: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111278ef0: 7516 48bf | 0061 a967 | 0200 0000 | 808f 7902 | 0000 01e9 | c100 0000 

  0x0000000111278f08: ;   {metadata('jdk/incubator/vector/DoubleVector')}
  0x0000000111278f08: 48be 30ce | d425 0200 | 0000 8b78 | 0848 c1e7 | 0348 3b77 | 600f 858a 

  0x0000000111278f20: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111278f20: 0000 0048 | bf00 61a9 | 6702 0000 | 008b 7008 | 48c1 e603 | 483b b790 | 0200 0075 | 0d48 8387 
  0x0000000111278f40: 9802 0000 | 01e9 7f00 | 0000 483b | b7a0 0200 | 0075 0d48 | 8387 a802 | 0000 01e9 | 6900 0000 
  0x0000000111278f60: 4881 bf90 | 0200 0000 | 0000 0075 | 1748 89b7 | 9002 0000 | 48c7 8798 | 0200 0001 | 0000 00e9 
  0x0000000111278f80: 4500 0000 | 4881 bfa0 | 0200 0000 | 0000 0075 | 1748 89b7 | a002 0000 | 48c7 87a8 | 0200 0001 
  0x0000000111278fa0: 0000 00e9 | 2100 0000 | e91c 0000 

  0x0000000111278fac: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111278fac: 0048 bf00 | 61a9 6702 | 0000 0048 | 83af 8002 | 0000 01e9 | 042d 0000 | e900 0000 

  0x0000000111278fc8: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x0000000111278fc8: 0048 8bc8 | 488b b424 | a801 0000 
 ;;  block B89 [90, 103]
  0x0000000111278fd4: ; implicit exception: dispatches to 0x000000011127bce5
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x0000000111278fd4: 483b 0648 

  0x0000000111278fd8: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111278fd8: 8bd6 48bf | 4046 a067 | 0200 0000 | 4883 8760 | 0200 0001 

  0x0000000111278fec: ;   {metadata(method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111278fec: 48ba 9872 | a967 0200 | 0000 8bba | 1c01 0000 | 83c7 0289 | ba1c 0100 | 0081 e7fe | ff1f 0083 
  0x000000011127900c: ff00 0f84 | ea2c 0000 

  0x0000000111279014: ;   {metadata(method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111279014: 488b d648 | bf98 72a9 | 6702 0000 | 008b 5208 | 48c1 e203 | 483b 9770 | 0100 0075 | 0d48 8387 
  0x0000000111279034: 7801 0000 | 01e9 6600 | 0000 483b | 9780 0100 | 0075 0d48 | 8387 8801 | 0000 01e9 | 5000 0000 
  0x0000000111279054: 4881 bf70 | 0100 0000 | 0000 0075 | 1748 8997 | 7001 0000 | 48c7 8778 | 0100 0001 | 0000 00e9 
  0x0000000111279074: 2c00 0000 | 4881 bf80 | 0100 0000 | 0000 0075 | 1748 8997 | 8001 0000 | 48c7 8788 | 0100 0001 
  0x0000000111279094: 0000 00e9 | 0800 0000 | 4883 8760 | 0100 0001 

  0x00000001112790a4: ;   {oop(a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x00000001614001e8})}
  0x00000001112790a4: 48ba e801 | 4061 0100 | 0000 9090 | 9090 9090 | 9048 b8a0 | 20d5 2502 

  0x00000001112790bc: ;   {virtual_call}
  0x00000001112790bc: 0000 00e8 

  0x00000001112790c0: ; ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop [448]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x00000001112790c0: 5caf 4107 | 448b 9c24 | 7401 0000 | 4183 c304 

  0x00000001112790d0: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x00000001112790d0: 48ba 4046 | a067 0200 | 0000 8bb2 | 2001 0000 | 83c6 0289 | b220 0100 | 0081 e6fe | 3f00 0083 
  0x00000001112790f0: fe00 0f84 

  0x00000001112790f4: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
  0x00000001112790f4: 272c 0000 | 4d8b 9730 

  0x00000001112790fc: ; ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop [448]=Oop rax=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
                      ;   {poll}
  0x00000001112790fc: 0100 0041 

  0x0000000111279100: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111279100: 8502 48ba | 4046 a067 | 0200 0000 | ff82 9802 | 0000 488b | f048 8b9c | 24c0 0100 | 0048 89b4 
  0x0000000111279120: 24a8 0100 | 0048 899c | 2498 0100 | 00c5 fb10 | 8424 8802 | 0000 488b | 9424 b001 | 0000 e90d 
  0x0000000111279140: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
  0x0000000111279140: f0ff ff48 | 8b9c 2498 | 0100 00c5 | fb11 8424 | 8802 0000 | 4489 9c24 | 7401 0000 | 4889 9424 
  0x0000000111279160: b001 0000 

  0x0000000111279164: ; implicit exception: dispatches to 0x000000011127bd40
  0x0000000111279164: 483b 0348 

  0x0000000111279168: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111279168: 8bd3 48bf | 4046 a067 | 0200 0000 | 8b52 0848 | c1e2 0348 | 3b97 c002 | 0000 750d | 4883 87c8 
  0x0000000111279188: 0200 0001 | e966 0000 | 0048 3b97 | d002 0000 | 750d 4883 | 87d8 0200 | 0001 e950 | 0000 0048 
  0x00000001112791a8: 81bf c002 | 0000 0000 | 0000 7517 | 4889 97c0 | 0200 0048 | c787 c802 | 0000 0100 | 0000 e92c 
  0x00000001112791c8: 0000 0048 | 81bf d002 | 0000 0000 | 0000 7517 | 4889 97d0 | 0200 0048 | c787 d802 | 0000 0100 
  0x00000001112791e8: 0000 e908 | 0000 0048 | 8387 b002 

  0x00000001112791f4: ;   {oop(a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x00000001614001e8})}
  0x00000001112791f4: 0000 0148 | bfe8 0140 | 6101 0000 | 0048 8bd7 

  0x0000000111279204: ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
  0x0000000111279204: 488b f348 | 899c 2498 | 0100 0048 | 89bc 24c8 | 0100 0090 | 9090 9090 | 9048 b8ff | ffff ffff 
  0x0000000111279224: ;   {virtual_call}
  0x0000000111279224: ffff ffe8 

  0x0000000111279228: ; ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop [408]=Oop [456]=Oop [424]=Oop }
                      ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
  0x0000000111279228: f40c 98ff | c5fb 5884 | 2490 0200 | 0048 8bb4 | 24a8 0100 | 0048 3b06 

  0x0000000111279240: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111279240: 488b d648 | bf40 46a0 | 6702 0000 | 008b 5208 | 48c1 e203 | 483b 97f8 | 0200 0075 | 0d48 8387 
  0x0000000111279260: 0003 0000 | 01e9 6600 | 0000 483b | 9708 0300 | 0075 0d48 | 8387 1003 | 0000 01e9 | 5000 0000 
  0x0000000111279280: 4881 bff8 | 0200 0000 | 0000 0075 | 1748 8997 | f802 0000 | 48c7 8700 | 0300 0001 | 0000 00e9 
  0x00000001112792a0: 2c00 0000 | 4881 bf08 | 0300 0000 | 0000 0075 | 1748 8997 | 0803 0000 | 48c7 8710 | 0300 0001 
  0x00000001112792c0: 0000 00e9 | 0800 0000 | 4883 87e8 | 0200 0001 | 488b 9424 | c801 0000 | 488b fe48 

  0x00000001112792dc: ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
  0x00000001112792dc: 8bf7 4889 | bc24 a801 | 0000 c5fb | 1184 24a0 | 0200 0090 | 9090 9090 | 9048 b8ff | ffff ffff 
  0x00000001112792fc: ;   {virtual_call}
  0x00000001112792fc: ffff ffe8 

  0x0000000111279300: ; ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop [408]=Oop [424]=Oop }
                      ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
  0x0000000111279300: 1c0c 98ff | c5fb 5884 | 2498 0200 | 0044 8b9c | 2474 0100 | 00c5 fb10 | 8c24 a002 | 0000 488b 
  0x0000000111279320: 8c24 a001 | 0000 488b | 9424 b001 | 0000 e985 

  0x0000000111279330: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@130 (line 32)
  0x0000000111279330: 0000 0090 | 9090 9090 
 ;;  block B7 [137, 156]
  0x0000000111279338: 443b 5a0c 
 ;; 1488 branch [AE] [RangeCheckStub: 0x00007f8469477760] [bci:141]
  0x000000011127933c: 0f83 302a | 0000 4963 | f3c5 fb10 

  0x0000000111279348: ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@141 (line 33)
  0x0000000111279348: 54f2 10c5 | eb58 d144 | 3b59 0c0f | 836d 2a00 | 0049 63f3 | c5fb 104c 

  0x0000000111279360: ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@149 (line 34)
  0x0000000111279360: f110 c5f3 | 58c8 41ff 

  0x0000000111279368: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111279368: c348 be40 | 46a0 6702 | 0000 0044 | 8b86 2001 | 0000 4183 | c002 4489 | 8620 0100 | 0041 81e0 
  0x0000000111279388: fe3f 0000 | 4183 f800 
 ;; 1526 branch [EQ] [CounterOverflowStub: 0x00007f8469478640]
  0x0000000111279390: 0f84 522a 

  0x0000000111279394: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)
  0x0000000111279394: 0000 4d8b | 9730 0100 

  0x000000011127939c: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop rcx=Oop rdx=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)
                      ;   {poll}
  0x000000011127939c: 0041 8502 

  0x00000001112793a0: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x00000001112793a0: 48be 4046 | a067 0200 | 0000 ff86 | 4003 0000 | c5f9 28c1 

  0x00000001112793b4: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)
  0x00000001112793b4: c5f9 28ca 
 ;;  block B6 [130, 134]
  0x00000001112793b8: ; implicit exception: dispatches to 0x000000011127be09
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@133 (line 32)
  0x00000001112793b8: 8b5a 0c89 | 9c24 0002 | 0000 443b 

  0x00000001112793c4: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x00000001112793c4: db48 be40 | 46a0 6702 | 0000 0049 | b830 0300 | 0000 0000 | 000f 8c0a | 0000 0049 | b820 0300 
  0x00000001112793e4: 0000 0000 | 004e 8b0c | 064d 8d49 | 014e 890c | 060f 8c3d 

  0x00000001112793f8: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@134 (line 32)
  0x00000001112793f8: ffff ff48 | 898c 24a0 | 0100 0048 | 8994 24b0 | 0100 00c5 | eb2a d3c5 | f35e cac5 | fb11 8c24 
  0x0000000111279418: a802 0000 | c5fb 5ec2 | c5fb 1184 | 24b0 0200 

  0x0000000111279428: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111279428: 0048 be40 | 46a0 6702 | 0000 0048 | 8386 5803 

  0x0000000111279438: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111279438: 0000 0148 | bea8 dfa9 | 6702 0000 | 0044 8b86 | 1c01 0000 | 4183 c002 | 4489 861c | 0100 0041 
  0x0000000111279458: 81e0 feff | 1f00 4183 | f800 0f84 | ba29 0000 

  0x0000000111279468: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178})}
  0x0000000111279468: 48b8 7801 | 4061 0100 | 0000 488b 

  0x0000000111279474: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111279474: f049 b8a8 | dfa9 6702 | 0000 0049 | 8380 9801 | 0000 0148 

  0x0000000111279488: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111279488: 8bf0 49b8 | a8df a967 | 0200 0000 | 8b76 0848 | c1e6 0349 | 3bb0 e001 | 0000 750d | 4983 80e8 
  0x00000001112794a8: 0100 0001 | e966 0000 | 0049 3bb0 | f001 0000 | 750d 4983 | 80f8 0100 | 0001 e950 | 0000 0049 
  0x00000001112794c8: 81b8 e001 | 0000 0000 | 0000 7517 | 4989 b0e0 | 0100 0049 | c780 e801 | 0000 0100 | 0000 e92c 
  0x00000001112794e8: 0000 0049 | 81b8 f001 | 0000 0000 | 0000 7517 | 4989 b0f0 | 0100 0049 | c780 f801 | 0000 0100 
  0x0000000111279508: 0000 e908 | 0000 0049 | 8380 d001 

  0x0000000111279514: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111279514: 0000 0148 | bea8 dfa9 | 6702 0000 | 0048 8386 | 0802 0000 

  0x0000000111279528: ;   {metadata(method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111279528: 0148 be68 | e2a9 6702 | 0000 0044 | 8b86 1c01 | 0000 4183 | c002 4489 | 861c 0100 | 0041 81e0 
  0x0000000111279548: feff 1f00 | 4183 f800 
 ;; 1598 branch [EQ] [CounterOverflowStub: 0x00007f8469479fc0]
  0x0000000111279550: 0f84 ed28 

  0x0000000111279554: ;   {metadata(method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111279554: 0000 48be | 68e2 a967 | 0200 0000 | 4883 8660 | 0100 0001 

  0x0000000111279568: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111279568: 48be 08ad | 4010 0100 | 0000 488d | b638 0200 

  0x0000000111279578: ;   {oop(a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000000161405ab0})}
  0x0000000111279578: 0049 bbb0 | 5a40 6101 | 0000 004d | 8bc3 4d85 | c075 0748 | 810e 0100 

  0x0000000111279590: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111279590: 0000 48be | a8df a967 | 0200 0000 | 4883 8618 | 0200 0001 

  0x00000001112795a4: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x00000001112795a4: 48be 08ad | 4010 0100 | 0000 448b | 861c 0100 | 0041 83c0 | 0244 8986 | 1c01 0000 | 4181 e0fe 
  0x00000001112795c4: ff1f 0041 | 83f8 000f | 8493 2800 

  0x00000001112795d0: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x00000001112795d0: 0048 be08 | 9d40 1001 | 0000 0048 | 8db6 f001 | 0000 4d8b | c34d 85c0 | 7507 4881 | 0e01 0000 
  0x00000001112795f0: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x00000001112795f0: 0048 be08 | ad40 1001 | 0000 0048 | 8386 9801 

  0x0000000111279600: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x0000000111279600: 0000 0148 | be08 9d40 | 1001 0000 | 0044 8b86 | 1c01 0000 | 4183 c002 | 4489 861c | 0100 0041 
  0x0000000111279620: 81e0 feff | 1f00 4183 | f800 0f84 | 5528 0000 

  0x0000000111279630: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111279630: 48be 08ad | 4010 0100 | 0000 488d | b6d0 0100 

  0x0000000111279640: ;   {oop(a 'jdk/incubator/vector/DoubleVector$$Lambda$87+0x0000000225d54960'{0x0000000161405ae0})}
  0x0000000111279640: 0049 bde0 | 5a40 6101 | 0000 004d | 8bc5 4d85 | c075 0748 | 810e 0100 

  0x0000000111279658: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111279658: 0000 48be | a8df a967 | 0200 0000 | 488d b628 | 0200 004d | 8bc5 4d85 | c075 0748 | 810e 0100 
  0x0000000111279678: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111279678: 0000 48be | a8df a967 | 0200 0000 | 4883 8638 | 0200 0001 

  0x000000011127968c: ;   {oop(a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector')}
  0x000000011127968c: 49be 8000 | 4061 0100 

  0x0000000111279694: ;   {oop(a 'java/lang/Class'{0x000000011ff8c550} = double)}
  0x0000000111279694: 0000 49bc | 50c5 f81f | 0100 0000 | 48bf 0000 | 0000 0000 | 0000 498b | f649 8bd4 | b904 0000 
  0x00000001112796b4: 004c 8bc7 | 4c8b c848 | 89bc 24d0 | 0100 0049 

  0x00000001112796c4: ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@28 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
  0x00000001112796c4: 8bfd 4c89 | a424 f801 | 0000 4c89 | b424 f001 | 0000 4c89 | ac24 e801 | 0000 4c89 | 9c24 e001 
  0x00000001112796e4: 0000 4889 | 8424 d801 

  0x00000001112796ec: ;   {static_call}
  0x00000001112796ec: 0000 90e8 

  0x00000001112796f0: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [416]=Oop [432]=Oop [504]=Oop [472]=Oop [480]=Oop [488]=Oop [496]=Oop }
                      ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@28 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
  0x00000001112796f0: 2c0b 98ff | 4883 f800 

  0x00000001112796f8: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112796f8: 7516 48b9 | a8df a967 | 0200 0000 | 8089 4102 | 0000 01e9 | c100 0000 

  0x0000000111279710: ;   {metadata('jdk/incubator/vector/DoubleVector')}
  0x0000000111279710: 48ba 30ce | d425 0200 | 0000 8b48 | 0848 c1e1 | 0348 3b51 | 600f 858a 

  0x0000000111279728: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111279728: 0000 0048 | b9a8 dfa9 | 6702 0000 | 008b 5008 | 48c1 e203 | 483b 9158 | 0200 0075 | 0d48 8381 
  0x0000000111279748: 6002 0000 | 01e9 7f00 | 0000 483b | 9168 0200 | 0075 0d48 | 8381 7002 | 0000 01e9 | 6900 0000 
  0x0000000111279768: 4881 b958 | 0200 0000 | 0000 0075 | 1748 8991 | 5802 0000 | 48c7 8160 | 0200 0001 | 0000 00e9 
  0x0000000111279788: 4500 0000 | 4881 b968 | 0200 0000 | 0000 0075 | 1748 8991 | 6802 0000 | 48c7 8170 | 0200 0001 
  0x00000001112797a8: 0000 00e9 | 2100 0000 | e91c 0000 

  0x00000001112797b4: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112797b4: 0048 b9a8 | dfa9 6702 | 0000 0048 | 83a9 4802 | 0000 01e9 | da26 0000 | e900 0000 

  0x00000001112797d0: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@31 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
  0x00000001112797d0: 0048 8bd8 

  0x00000001112797d4: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x00000001112797d4: 48be 4046 | a067 0200 | 0000 4883 | 8668 0300 

  0x00000001112797e4: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112797e4: 0001 48be | a8df a967 | 0200 0000 | 8b96 1c01 | 0000 83c2 | 0289 961c | 0100 0081 | e2fe ff1f 
  0x0000000111279804: 0083 fa00 
 ;; 1708 branch [EQ] [CounterOverflowStub: 0x00007f846947cd10]
  0x0000000111279808: 0f84 b526 | 0000 488b | 8424 d801 

  0x0000000111279814: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111279814: 0000 48be | a8df a967 | 0200 0000 | 4883 8698 | 0100 0001 | 488b 8424 | d801 0000 

  0x0000000111279830: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111279830: 48be a8df | a967 0200 | 0000 8b40 | 0848 c1e0 | 0348 3b86 | e001 0000 | 750d 4883 | 86e8 0100 
  0x0000000111279850: 0001 e966 | 0000 0048 | 3b86 f001 | 0000 750d | 4883 86f8 | 0100 0001 | e950 0000 | 0048 81be 
  0x0000000111279870: e001 0000 | 0000 0000 | 7517 4889 | 86e0 0100 | 0048 c786 | e801 0000 | 0100 0000 | e92c 0000 
  0x0000000111279890: 0048 81be | f001 0000 | 0000 0000 | 7517 4889 | 86f0 0100 | 0048 c786 | f801 0000 | 0100 0000 
  0x00000001112798b0: e908 0000 | 0048 8386 | d001 0000 

  0x00000001112798bc: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112798bc: 0148 bea8 | dfa9 6702 | 0000 0048 | 8386 0802 

  0x00000001112798cc: ;   {metadata(method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112798cc: 0000 0148 | be68 e2a9 | 6702 0000 | 008b 961c | 0100 0083 | c202 8996 | 1c01 0000 | 81e2 feff 
  0x00000001112798ec: 1f00 83fa | 000f 84ed 

  0x00000001112798f4: ;   {metadata(method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112798f4: 2500 0048 | be68 e2a9 | 6702 0000 | 0048 8386 | 6001 0000 

  0x0000000111279908: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111279908: 0148 be08 | ad40 1001 | 0000 0048 | 8db6 3802 | 0000 4c8b | 9c24 e001 | 0000 498b | d348 85d2 
  0x0000000111279928: 7507 4881 | 0e01 0000 

  0x0000000111279930: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111279930: 0048 bea8 | dfa9 6702 | 0000 0048 | 8386 1802 

  0x0000000111279940: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111279940: 0000 0148 | be08 ad40 | 1001 0000 | 008b 961c | 0100 0083 | c202 8996 | 1c01 0000 | 81e2 feff 
  0x0000000111279960: 1f00 83fa | 000f 849a 

  0x0000000111279968: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x0000000111279968: 2500 0048 | be08 9d40 | 1001 0000 | 0048 8db6 | f001 0000 | 498b d348 | 85d2 7507 | 4881 0e01 
  0x0000000111279988: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x0000000111279988: 0000 0048 | be08 ad40 | 1001 0000 | 0048 8386 | 9801 0000 

  0x000000011127999c: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011127999c: 0148 be08 | 9d40 1001 | 0000 008b | 961c 0100 | 0083 c202 | 8996 1c01 | 0000 81e2 | feff 1f00 
  0x00000001112799bc: 83fa 000f | 8461 2500 

  0x00000001112799c4: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x00000001112799c4: 0048 be08 | ad40 1001 | 0000 0048 | 8db6 d001 | 0000 4c8b | ac24 e801 | 0000 498b | d548 85d2 
  0x00000001112799e4: 7507 4881 | 0e01 0000 

  0x00000001112799ec: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x00000001112799ec: 0048 bea8 | dfa9 6702 | 0000 0048 | 8db6 2802 | 0000 498b | d548 85d2 | 7507 4881 | 0e01 0000 
  0x0000000111279a0c: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111279a0c: 0048 bea8 | dfa9 6702 | 0000 0048 | 8386 3802 | 0000 0148 | 8bb4 24f0 | 0100 0048 | 8b94 24f8 
  0x0000000111279a2c: 0100 00b9 | 0400 0000 | 4c8b 8424 | d001 0000 | 4c8b 8c24 | d801 0000 

  0x0000000111279a44: ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@28 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
  0x0000000111279a44: 498b fd48 | 899c 2408 

  0x0000000111279a4c: ;   {static_call}
  0x0000000111279a4c: 0200 00e8 

  0x0000000111279a50: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [416]=Oop [432]=Oop [520]=Oop }
                      ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@28 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
  0x0000000111279a50: cc07 98ff | 4883 f800 

  0x0000000111279a58: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111279a58: 7517 49b8 | a8df a967 | 0200 0000 | 4180 8841 | 0200 0001 | e9c2 0000 

  0x0000000111279a70: ;   {metadata('jdk/incubator/vector/DoubleVector')}
  0x0000000111279a70: 0048 ba30 | ced4 2502 | 0000 0044 | 8b40 0849 | c1e0 0349 | 3b50 600f | 858a 0000 

  0x0000000111279a8c: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111279a8c: 0049 b8a8 | dfa9 6702 | 0000 008b | 5008 48c1 | e203 493b | 9058 0200 | 0075 0d49 | 8380 6002 
  0x0000000111279aac: 0000 01e9 | 7f00 0000 | 493b 9068 | 0200 0075 | 0d49 8380 | 7002 0000 | 01e9 6900 | 0000 4981 
  0x0000000111279acc: b858 0200 | 0000 0000 | 0075 1749 | 8990 5802 | 0000 49c7 | 8060 0200 | 0001 0000 | 00e9 4500 
  0x0000000111279aec: 0000 4981 | b868 0200 | 0000 0000 | 0075 1749 | 8990 6802 | 0000 49c7 | 8070 0200 | 0001 0000 
  0x0000000111279b0c: 00e9 2100 | 0000 e91c 

  0x0000000111279b14: ;   {metadata(method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111279b14: 0000 0049 | b8a8 dfa9 | 6702 0000 | 0049 83a8 | 4802 0000 | 01e9 1924 | 0000 e900 | 0000 0048 
  0x0000000111279b34: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@31 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
  0x0000000111279b34: 8bc8 488b | 9c24 0802 | 0000 b800 

  0x0000000111279b40: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x0000000111279b40: 0000 0048 | 898c 2420 | 0200 0090 | 9090 9090 
 ;;  block B9 [199, 205]
  0x0000000111279b50: 4889 9c24 | 1802 0000 | 8b9c 2400 | 0200 00c5 | fb10 8424 | 8802 0000 | 488b 9424 | b001 0000 
  0x0000000111279b70: c5e3 2ad8 | c5f9 2ed8 | be01 0000 | 000f 8a13 | 0000 000f | 870d 0000 | 00be 0000 | 0000 0f84 
  0x0000000111279b90: 0200 0000 

  0x0000000111279b94: ;*dcmpg {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@204 (line 46)
  0x0000000111279b94: ffce 83fe 

  0x0000000111279b98: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111279b98: 0048 be40 | 46a0 6702 | 0000 0049 | b878 0300 | 0000 0000 | 000f 8d0a | 0000 0049 | b888 0300 
  0x0000000111279bb8: 0000 0000 | 004e 8b0c | 064d 8d49 | 014e 890c | 060f 8d74 

  0x0000000111279bcc: ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@205 (line 46)
                      ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x0000000111279bcc: 1500 0048 | be40 46a0 | 6702 0000 | 0048 8386 | 9803 0000 

  0x0000000111279be0: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111279be0: 0148 be90 | 5aa9 6702 | 0000 0044 | 8b86 1c01 | 0000 4183 | c002 4489 | 861c 0100 | 0041 81e0 
  0x0000000111279c00: feff 1f00 | 4183 f800 
 ;; 1866 branch [EQ] [CounterOverflowStub: 0x00007f846931fe00]
  0x0000000111279c08: 0f84 5623 

  0x0000000111279c0c: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178})}
  0x0000000111279c0c: 0000 48be | 7801 4061 | 0100 0000 

  0x0000000111279c18: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111279c18: 49b8 905a | a967 0200 | 0000 8b76 | 0848 c1e6 | 0349 3bb0 | 7001 0000 | 750d 4983 | 8078 0100 
  0x0000000111279c38: 0001 e966 | 0000 0049 | 3bb0 8001 | 0000 750d | 4983 8088 | 0100 0001 | e950 0000 | 0049 81b8 
  0x0000000111279c58: 7001 0000 | 0000 0000 | 7517 4989 | b070 0100 | 0049 c780 | 7801 0000 | 0100 0000 | e92c 0000 
  0x0000000111279c78: 0049 81b8 | 8001 0000 | 0000 0000 | 7517 4989 | b080 0100 | 0049 c780 | 8801 0000 | 0100 0000 
  0x0000000111279c98: e908 0000 | 0049 8380 | 6001 0000 

  0x0000000111279ca4: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111279ca4: 0148 be90 | 5aa9 6702 | 0000 0048 | 8386 9801 

  0x0000000111279cb4: ;   {metadata(method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x0000000111279cb4: 0000 0148 | be30 5da9 | 6702 0000 | 0044 8b86 | 1c01 0000 | 4183 c002 | 4489 861c | 0100 0041 
  0x0000000111279cd4: 81e0 feff | 1f00 4183 | f800 0f84 | a122 0000 
 ;;  block B164 [37, 1]
  0x0000000111279ce4: 488b fb83 

  0x0000000111279ce8: ;   {metadata(method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x0000000111279ce8: ef03 48be | 305d a967 | 0200 0000 | 4883 86c0 | 0100 0001 

  0x0000000111279cfc: ;   {metadata(method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x0000000111279cfc: 48be 184c | 9f67 0200 | 0000 448b | 861c 0100 | 0041 83c0 | 0244 8986 | 1c01 0000 | 4181 e0fe 
  0x0000000111279d1c: ff1f 0041 | 83f8 000f | 847d 2200 

  0x0000000111279d28: ;   {metadata(method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x0000000111279d28: 0048 be18 | 4c9f 6702 | 0000 0048 | 8386 6001 

  0x0000000111279d38: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x0000000111279d38: 0000 0148 | bed0 4d9f | 6702 0000 | 0044 8b86 | 1c01 0000 | 4183 c002 | 4489 861c | 0100 0041 
  0x0000000111279d58: 81e0 feff | 1f00 4183 | f800 0f84 | 5f22 0000 

  0x0000000111279d68: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x0000000111279d68: 83f8 0048 | bed0 4d9f | 6702 0000 | 0049 b860 | 0100 0000 | 0000 000f | 8c0a 0000 | 0049 b870 
  0x0000000111279d88: 0100 0000 | 0000 004e | 8b0c 064d | 8d49 014e | 890c 060f | 8c7f 1600 

  0x0000000111279da0: ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@1 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
                      ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x0000000111279da0: 003b c748 | bed0 4d9f | 6702 0000 | 0049 b890 | 0100 0000 | 0000 000f | 8d0a 0000 | 0049 b880 
  0x0000000111279dc0: 0100 0000 | 0000 004e | 8b0c 064d | 8d49 014e | 890c 060f | 8d47 1600 

  0x0000000111279dd8: ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@6 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
                      ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178})}
  0x0000000111279dd8: 0048 be78 | 0140 6101 | 0000 004c 

  0x0000000111279de4: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111279de4: 8bc6 49b9 | 905a a967 | 0200 0000 | 4983 81e0 | 0100 0001 

  0x0000000111279df8: ;   {metadata(method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x0000000111279df8: 49b8 b048 | a967 0200 | 0000 458b | 881c 0100 | 0041 83c1 | 0245 8988 | 1c01 0000 | 4181 e1fe 
  0x0000000111279e18: ff1f 0041 | 83f9 000f | 84c3 2100 

  0x0000000111279e24: ;   {metadata(method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x0000000111279e24: 0049 b8b0 | 48a9 6702 | 0000 0049 | 8380 6001 

  0x0000000111279e34: ;   {metadata(method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x0000000111279e34: 0000 0148 | be98 4aa9 | 6702 0000 | 0044 8b86 | 1c01 0000 | 4183 c002 | 4489 861c | 0100 0041 
  0x0000000111279e54: 81e0 feff | 1f00 4183 | f800 0f84 | a521 0000 

  0x0000000111279e64: ;   {metadata(method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x0000000111279e64: 48be 984a | a967 0200 | 0000 ff86 

  0x0000000111279e70: ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x0000000111279e70: 7001 0000 
 ;;  block B175 [4, 22]
  0x0000000111279e74: c5fb 1184 | 2488 0200 

  0x0000000111279e7c: ;   {oop(a 'jdk/incubator/vector/Double256Vector'{0x00000001614d5db8})}
  0x0000000111279e7c: 0048 beb8 | 5d4d 6101 | 0000 004c 

  0x0000000111279e88: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111279e88: 8bc6 49b9 | 905a a967 | 0200 0000 | 4983 8118 | 0200 0001 

  0x0000000111279e9c: ;   {metadata(method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x0000000111279e9c: 49b8 605f | a967 0200 | 0000 458b | 881c 0100 | 0041 83c1 | 0245 8988 | 1c01 0000 | 4181 e1fe 
  0x0000000111279ebc: ff1f 0041 | 83f9 000f | 8461 2100 | 004c 8bc6 

  0x0000000111279ecc: ;   {metadata(method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x0000000111279ecc: 49b9 605f | a967 0200 | 0000 4983 | 8160 0100 

  0x0000000111279edc: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111279edc: 0001 49b8 | 0061 a967 | 0200 0000 | 458b 881c | 0100 0041 | 83c1 0245 | 8988 1c01 | 0000 4181 
  0x0000000111279efc: e1fe ff1f | 0041 83f9 | 000f 8440 

  0x0000000111279f08: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111279f08: 2100 0049 | b800 61a9 | 6702 0000 | 0049 8380 | 6001 0000 

  0x0000000111279f1c: ;   {metadata(method data for {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector')}
  0x0000000111279f1c: 0148 be08 | 64a9 6702 | 0000 0044 | 8b86 1c01 | 0000 4183 | c002 4489 | 861c 0100 | 0041 81e0 
  0x0000000111279f3c: feff 1f00 | 4183 f800 
 ;; 2102 branch [EQ] [CounterOverflowStub: 0x00007f8469370580]
  0x0000000111279f44: 0f84 2221 

  0x0000000111279f48: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178})}
  0x0000000111279f48: 0000 48be | 7801 4061 | 0100 0000 

  0x0000000111279f54: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111279f54: 4c8b c649 | b900 61a9 | 6702 0000 | 0049 8381 | 9801 0000 | 014c 8bc6 

  0x0000000111279f6c: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111279f6c: 49b9 0061 | a967 0200 | 0000 4983 | 81d0 0100 

  0x0000000111279f7c: ;   {metadata(method data for {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x0000000111279f7c: 0001 49b8 | 1059 a967 | 0200 0000 | 458b 881c | 0100 0041 | 83c1 0245 | 8988 1c01 | 0000 4181 
  0x0000000111279f9c: e1fe ff1f | 0041 83f9 | 000f 84e2 

  0x0000000111279fa8: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111279fa8: 2000 0049 | b800 61a9 | 6702 0000 | 0049 8380 | 0802 0000 

  0x0000000111279fbc: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111279fbc: 0148 be00 | 61a9 6702 | 0000 0048 | 8386 4002 

  0x0000000111279fcc: ;   {metadata(method data for {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector')}
  0x0000000111279fcc: 0000 0148 | be88 65a9 | 6702 0000 | 0044 8b86 | 1c01 0000 | 4183 c002 | 4489 861c | 0100 0041 
  0x0000000111279fec: 81e0 feff | 1f00 4183 | f800 0f84 | b220 0000 | 4863 f0b9 | 0300 0000 | 48d3 e649 | ba10 0000 
  0x000000011127a00c: 0000 0000 | 0049 03f2 

  0x000000011127a014: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011127a014: 48b9 08ad | 4010 0100 | 0000 488d | 8938 0200 

  0x000000011127a024: ;   {oop(a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x00000001614058e0})}
  0x000000011127a024: 0049 b8e0 | 5840 6101 | 0000 004d | 8bc8 4d85 | c975 0748 | 8109 0100 

  0x000000011127a03c: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127a03c: 0000 48b9 | 0061 a967 | 0200 0000 | 4883 8150 | 0200 0001 

  0x000000011127a050: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011127a050: 48b9 08ad | 4010 0100 | 0000 448b | 891c 0100 | 0041 83c1 | 0244 8989 | 1c01 0000 | 4181 e1fe 
  0x000000011127a070: ff1f 0041 | 83f9 000f | 8452 2000 

  0x000000011127a07c: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011127a07c: 0048 b908 | 9d40 1001 | 0000 0048 | 8d89 f001 | 0000 4d85 | c075 0748 | 8109 0100 

  0x000000011127a098: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011127a098: 0000 48b9 | 08ad 4010 | 0100 0000 | 4883 8198 | 0100 0001 

  0x000000011127a0ac: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011127a0ac: 48b9 089d | 4010 0100 | 0000 448b | 811c 0100 | 0041 83c0 | 0244 8981 | 1c01 0000 | 4181 e0fe 
  0x000000011127a0cc: ff1f 0041 | 83f8 000f | 8417 2000 

  0x000000011127a0d8: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011127a0d8: 0048 b908 | ad40 1001 | 0000 0048 | 8d89 d001 

  0x000000011127a0e8: ;   {oop(a 'jdk/incubator/vector/DoubleVector$$Lambda$94+0x0000000225d597d0'{0x0000000161405910})}
  0x000000011127a0e8: 0000 49b8 | 1059 4061 | 0100 0000 | 4d8b c84d | 85c9 7507 | 4881 0901 

  0x000000011127a100: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127a100: 0000 0048 | b900 61a9 | 6702 0000 | 0048 8d89 | 6002 0000 | 4d85 c075 | 0748 8109 | 0100 0000 
  0x000000011127a120: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127a120: 48b9 0061 | a967 0200 | 0000 4883 | 8170 0200 

  0x000000011127a130: ;   {oop(a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector')}
  0x000000011127a130: 0001 48b9 | 8000 4061 | 0100 0000 

  0x000000011127a13c: ;   {oop(a 'java/lang/Class'{0x000000011ff8c550} = double)}
  0x000000011127a13c: 49b8 50c5 | f81f 0100 | 0000 4c8b | e648 8bf1 | 488b fa49 | 8bd0 b904 | 0000 004c | 8bc7 4d8b 
  0x000000011127a15c: cc48 89bc | 24b0 0100 | 0048 8bbc | 24b0 0100 | 0089 0424 

  0x000000011127a170: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178})}
  0x000000011127a170: 49ba 7801 | 4061 0100 | 0000 4c89 

  0x000000011127a17c: ;   {oop(a 'jdk/incubator/vector/DoubleVector$$Lambda$94+0x0000000225d597d0'{0x0000000161405910})}
  0x000000011127a17c: 5424 0849 | ba10 5940 | 6101 0000 | 004c 8954 

  0x000000011127a18c: ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011127a18c: 2410 4c89 | a424 1002 | 0000 8984 | 2404 0200 

  0x000000011127a19c: ;   {static_call}
  0x000000011127a19c: 0090 90e8 

  0x000000011127a1a0: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [536]=Oop [544]=Oop }
                      ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011127a1a0: 7c00 98ff | 4883 f800 

  0x000000011127a1a8: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127a1a8: 7516 48bf | 0061 a967 | 0200 0000 | 808f 7902 | 0000 01e9 | c100 0000 

  0x000000011127a1c0: ;   {metadata('jdk/incubator/vector/DoubleVector')}
  0x000000011127a1c0: 48bb 30ce | d425 0200 | 0000 8b78 | 0848 c1e7 | 0348 3b5f | 600f 858a 

  0x000000011127a1d8: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127a1d8: 0000 0048 | bf00 61a9 | 6702 0000 | 008b 5808 | 48c1 e303 | 483b 9f90 | 0200 0075 | 0d48 8387 
  0x000000011127a1f8: 9802 0000 | 01e9 7f00 | 0000 483b | 9fa0 0200 | 0075 0d48 | 8387 a802 | 0000 01e9 | 6900 0000 
  0x000000011127a218: 4881 bf90 | 0200 0000 | 0000 0075 | 1748 899f | 9002 0000 | 48c7 8798 | 0200 0001 | 0000 00e9 
  0x000000011127a238: 4500 0000 | 4881 bfa0 | 0200 0000 | 0000 0075 | 1748 899f | a002 0000 | 48c7 87a8 | 0200 0001 
  0x000000011127a258: 0000 00e9 | 2100 0000 | e91c 0000 

  0x000000011127a264: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127a264: 0048 bf00 | 61a9 6702 | 0000 0048 | 83af 8002 | 0000 01e9 | 951e 0000 | e900 0000 

  0x000000011127a280: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011127a280: 0048 8bf8 
 ;;  block B156 [217, 3]
  0x000000011127a284: ; implicit exception: dispatches to 0x000000011127c12e
                      ;*invokevirtual sub {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x000000011127a284: 483b 0748 

  0x000000011127a288: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011127a288: 8bf7 48bb | 4046 a067 | 0200 0000 | 4883 83a8 | 0300 0001 

  0x000000011127a29c: ;   {metadata(method data for {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127a29c: 48be 88e6 | a967 0200 | 0000 8b9e | 1c01 0000 | 83c3 0289 | 9e1c 0100 | 0081 e3fe | ff1f 0083 
  0x000000011127a2bc: fb00 0f84 | 831e 0000 

  0x000000011127a2c4: ;   {metadata(method data for {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127a2c4: 488b f748 | bb88 e6a9 | 6702 0000 | 0048 8383 | 6001 0000 

  0x000000011127a2d8: ;   {metadata(method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127a2d8: 0148 be70 | e8a9 6702 | 0000 008b | 9e1c 0100 | 0083 c302 | 899e 1c01 | 0000 81e3 | feff 1f00 
  0x000000011127a2f8: 83fb 000f | 8467 1e00 | 0048 8bf7 

  0x000000011127a304: ;   {metadata(method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127a304: 48bb 70e8 | a967 0200 | 0000 8b76 | 0848 c1e6 | 0348 3bb3 | 7001 0000 | 750d 4883 | 8378 0100 
  0x000000011127a324: 0001 e966 | 0000 0048 | 3bb3 8001 | 0000 750d | 4883 8388 | 0100 0001 | e950 0000 | 0048 81bb 
  0x000000011127a344: 7001 0000 | 0000 0000 | 7517 4889 | b370 0100 | 0048 c783 | 7801 0000 | 0100 0000 | e92c 0000 
  0x000000011127a364: 0048 81bb | 8001 0000 | 0000 0000 | 7517 4889 | b380 0100 | 0048 c783 | 8801 0000 | 0100 0000 
  0x000000011127a384: e908 0000 | 0048 8383 | 6001 0000 | 01c5 fb10 | 8424 a802 | 0000 488b 

  0x000000011127a39c: ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x000000011127a39c: f748 89bc | 2428 0200 | 0048 b8ff | ffff ffff 

  0x000000011127a3ac: ;   {virtual_call}
  0x000000011127a3ac: ffff ffe8 

  0x000000011127a3b0: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop [552]=Oop [416]=Oop }
                      ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x000000011127a3b0: 6cfb 97ff | 488b bc24 | 2802 0000 

  0x000000011127a3bc: ;   {metadata(method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127a3bc: 48ba 70e8 | a967 0200 | 0000 8b7f | 0848 c1e7 | 0348 3bba | a801 0000 | 750d 4883 | 82b0 0100 
  0x000000011127a3dc: 0001 e966 | 0000 0048 | 3bba b801 | 0000 750d | 4883 82c0 | 0100 0001 | e950 0000 | 0048 81ba 
  0x000000011127a3fc: a801 0000 | 0000 0000 | 7517 4889 | baa8 0100 | 0048 c782 | b001 0000 | 0100 0000 | e92c 0000 
  0x000000011127a41c: 0048 81ba | b801 0000 | 0000 0000 | 7517 4889 | bab8 0100 | 0048 c782 | c001 0000 | 0100 0000 
  0x000000011127a43c: e908 0000 | 0048 8382 | 9801 0000 

  0x000000011127a448: ;   {oop(a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x00000001614058c0})}
  0x000000011127a448: 0148 bac0 | 5840 6101 | 0000 0048 | 8bc8 488b | b424 2802 

  0x000000011127a45c: ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x000000011127a45c: 0000 9090 | 9090 9090 | 9048 b8ff | ffff ffff 

  0x000000011127a46c: ;   {virtual_call}
  0x000000011127a46c: ffff ffe8 

  0x000000011127a470: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop [416]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x000000011127a470: acfa 97ff | 4889 8424 | 3002 0000 

  0x000000011127a47c: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011127a47c: 48be 4046 | a067 0200 | 0000 4883 | 86e0 0300 

  0x000000011127a48c: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127a48c: 0001 48be | 905a a967 | 0200 0000 | 8b96 1c01 | 0000 83c2 | 0289 961c | 0100 0081 | e2fe ff1f 
  0x000000011127a4ac: 0083 fa00 
 ;; 2348 branch [EQ] [CounterOverflowStub: 0x00007f846b394660]
  0x000000011127a4b0: 0f84 d31c 

  0x000000011127a4b4: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178})}
  0x000000011127a4b4: 0000 48be | 7801 4061 | 0100 0000 

  0x000000011127a4c0: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127a4c0: 48ba 905a | a967 0200 | 0000 8b76 | 0848 c1e6 | 0348 3bb2 | 7001 0000 | 750d 4883 | 8278 0100 
  0x000000011127a4e0: 0001 e966 | 0000 0048 | 3bb2 8001 | 0000 750d | 4883 8288 | 0100 0001 | e950 0000 | 0048 81ba 
  0x000000011127a500: 7001 0000 | 0000 0000 | 7517 4889 | b270 0100 | 0048 c782 | 7801 0000 | 0100 0000 | e92c 0000 
  0x000000011127a520: 0048 81ba | 8001 0000 | 0000 0000 | 7517 4889 | b280 0100 | 0048 c782 | 8801 0000 | 0100 0000 
  0x000000011127a540: e908 0000 | 0048 8382 | 6001 0000 | 0148 8b8c | 24a0 0100 

  0x000000011127a554: ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011127a554: 008b 710c 

  0x000000011127a558: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127a558: 48ba 905a | a967 0200 | 0000 4883 | 8298 0100 

  0x000000011127a568: ;   {metadata(method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x000000011127a568: 0001 48ba | 305d a967 | 0200 0000 | 448b 821c | 0100 0041 | 83c0 0244 | 8982 1c01 | 0000 4181 
  0x000000011127a588: e0fe ff1f | 0041 83f8 | 000f 842c | 1c00 008b | 9c24 0402 | 0000 488b | fe83 ef03 

  0x000000011127a5a4: ;   {metadata(method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x000000011127a5a4: 48be 305d | a967 0200 | 0000 4883 | 86c0 0100 

  0x000000011127a5b4: ;   {metadata(method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x000000011127a5b4: 0001 48be | 184c 9f67 | 0200 0000 | 8b96 1c01 | 0000 83c2 | 0289 961c | 0100 0081 | e2fe ff1f 
  0x000000011127a5d4: 0083 fa00 
 ;; 2400 branch [EQ] [CounterOverflowStub: 0x00007f846b395830]
  0x000000011127a5d8: 0f84 061c 

  0x000000011127a5dc: ;   {metadata(method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x000000011127a5dc: 0000 48be | 184c 9f67 | 0200 0000 | 4883 8660 | 0100 0001 

  0x000000011127a5f0: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011127a5f0: 48be d04d | 9f67 0200 | 0000 8b96 | 1c01 0000 | 83c2 0289 | 961c 0100 | 0081 e2fe | ff1f 0083 
  0x000000011127a610: fa00 0f84 | ed1b 0000 

  0x000000011127a618: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011127a618: 83fb 0048 | bed0 4d9f | 6702 0000 | 0048 ba60 | 0100 0000 | 0000 000f | 8c0a 0000 | 0048 ba70 
  0x000000011127a638: 0100 0000 | 0000 004c | 8b04 164d | 8d40 014c | 8904 160f | 8c1b 0e00 

  0x000000011127a650: ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@1 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
                      ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011127a650: 003b df48 | bed0 4d9f | 6702 0000 | 0048 ba90 | 0100 0000 | 0000 000f | 8d0a 0000 | 0048 ba80 
  0x000000011127a670: 0100 0000 | 0000 004c | 8b04 164d | 8d40 014c | 8904 160f | 8de3 0d00 

  0x000000011127a688: ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@6 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
                      ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178})}
  0x000000011127a688: 0048 be78 | 0140 6101 | 0000 0048 

  0x000000011127a694: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127a694: 8bd6 49b8 | 905a a967 | 0200 0000 | 4983 80e0 | 0100 0001 

  0x000000011127a6a8: ;   {metadata(method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011127a6a8: 48ba b048 | a967 0200 | 0000 448b | 821c 0100 | 0041 83c0 | 0244 8982 | 1c01 0000 | 4181 e0fe 
  0x000000011127a6c8: ff1f 0041 | 83f8 000f | 8451 1b00 

  0x000000011127a6d4: ;   {metadata(method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011127a6d4: 0048 bab0 | 48a9 6702 | 0000 0048 | 8382 6001 

  0x000000011127a6e4: ;   {metadata(method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011127a6e4: 0000 0148 | be98 4aa9 | 6702 0000 | 008b 961c | 0100 0083 | c202 8996 | 1c01 0000 | 81e2 feff 
  0x000000011127a704: 1f00 83fa | 000f 8438 

  0x000000011127a70c: ;   {metadata(method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011127a70c: 1b00 0048 | be98 4aa9 | 6702 0000 | 00ff 8670 

  0x000000011127a71c: ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011127a71c: 0100 004c | 8b8c 2410 

  0x000000011127a724: ;   {oop(a 'jdk/incubator/vector/Double256Vector'{0x00000001614d5db8})}
  0x000000011127a724: 0200 0048 | beb8 5d4d | 6101 0000 | 0048 8bd6 

  0x000000011127a734: ;   {metadata(method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127a734: 49b8 905a | a967 0200 | 0000 4983 | 8018 0200 

  0x000000011127a744: ;   {metadata(method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011127a744: 0001 48ba | 605f a967 | 0200 0000 | 448b 821c | 0100 0041 | 83c0 0244 | 8982 1c01 | 0000 4181 
  0x000000011127a764: e0fe ff1f | 0041 83f8 | 000f 84f5 | 1a00 0048 

  0x000000011127a774: ;   {metadata(method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011127a774: 8bd6 49b8 | 605f a967 | 0200 0000 | 4983 8060 | 0100 0001 

  0x000000011127a788: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127a788: 48ba 0061 | a967 0200 | 0000 448b | 821c 0100 | 0041 83c0 | 0244 8982 | 1c01 0000 | 4181 e0fe 
  0x000000011127a7a8: ff1f 0041 | 83f8 000f | 84d4 1a00 

  0x000000011127a7b4: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127a7b4: 0048 ba00 | 61a9 6702 | 0000 0048 | 8382 6001 

  0x000000011127a7c4: ;   {metadata(method data for {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011127a7c4: 0000 0148 | be08 64a9 | 6702 0000 | 008b 961c | 0100 0083 | c202 8996 | 1c01 0000 | 81e2 feff 
  0x000000011127a7e4: 1f00 83fa | 000f 84bb 

  0x000000011127a7ec: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178})}
  0x000000011127a7ec: 1a00 0048 | be78 0140 | 6101 0000 | 0048 8bd6 

  0x000000011127a7fc: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127a7fc: 49b8 0061 | a967 0200 | 0000 4983 | 8098 0100 | 0001 488b 

  0x000000011127a810: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127a810: d649 b800 | 61a9 6702 | 0000 0049 | 8380 d001 

  0x000000011127a820: ;   {metadata(method data for {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011127a820: 0000 0148 | ba10 59a9 | 6702 0000 | 0044 8b82 | 1c01 0000 | 4183 c002 | 4489 821c | 0100 0041 
  0x000000011127a840: 81e0 feff | 1f00 4183 | f800 0f84 | 7b1a 0000 

  0x000000011127a850: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127a850: 48ba 0061 | a967 0200 | 0000 4883 | 8208 0200 

  0x000000011127a860: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127a860: 0001 48be | 0061 a967 | 0200 0000 | 4883 8640 | 0200 0001 

  0x000000011127a874: ;   {metadata(method data for {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127a874: 48be 8865 | a967 0200 | 0000 8b96 | 1c01 0000 | 83c2 0289 | 961c 0100 | 0081 e2fe | ff1f 0083 
  0x000000011127a894: fa00 0f84 | 501a 0000 

  0x000000011127a89c: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011127a89c: 48be 08ad | 4010 0100 | 0000 488d | b638 0200 

  0x000000011127a8ac: ;   {oop(a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x00000001614058e0})}
  0x000000011127a8ac: 0048 bae0 | 5840 6101 | 0000 004c | 8bc2 4d85 | c075 0748 | 810e 0100 

  0x000000011127a8c4: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127a8c4: 0000 48be | 0061 a967 | 0200 0000 | 4883 8650 | 0200 0001 

  0x000000011127a8d8: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011127a8d8: 48be 08ad | 4010 0100 | 0000 448b | 861c 0100 | 0041 83c0 | 0244 8986 | 1c01 0000 | 4181 e0fe 
  0x000000011127a8f8: ff1f 0041 | 83f8 000f | 8408 1a00 

  0x000000011127a904: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011127a904: 0048 be08 | 9d40 1001 | 0000 0048 | 8db6 f001 | 0000 4885 | d275 0748 | 810e 0100 

  0x000000011127a920: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011127a920: 0000 48be | 08ad 4010 | 0100 0000 | 4883 8698 | 0100 0001 

  0x000000011127a934: ;   {metadata(method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011127a934: 48be 089d | 4010 0100 | 0000 8b96 | 1c01 0000 | 83c2 0289 | 961c 0100 | 0081 e2fe | ff1f 0083 
  0x000000011127a954: fa00 0f84 | d219 0000 

  0x000000011127a95c: ;   {metadata(method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011127a95c: 48be 08ad | 4010 0100 | 0000 488d | b6d0 0100 

  0x000000011127a96c: ;   {oop(a 'jdk/incubator/vector/DoubleVector$$Lambda$94+0x0000000225d597d0'{0x0000000161405910})}
  0x000000011127a96c: 0048 ba10 | 5940 6101 | 0000 004c | 8bc2 4d85 | c075 0748 | 810e 0100 

  0x000000011127a984: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127a984: 0000 48be | 0061 a967 | 0200 0000 | 488d b660 | 0200 0048 | 85d2 7507 | 4881 0e01 

  0x000000011127a9a0: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127a9a0: 0000 0048 | be00 61a9 | 6702 0000 | 0048 8386 | 7002 0000 

  0x000000011127a9b4: ;   {oop(a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector')}
  0x000000011127a9b4: 0148 be80 | 0040 6101 

  0x000000011127a9bc: ;   {oop(a 'java/lang/Class'{0x000000011ff8c550} = double)}
  0x000000011127a9bc: 0000 0048 | ba50 c5f8 | 1f01 0000 | 004c 8bd9 | b904 0000 | 004d 8bc3 | 498b fb89 

  0x000000011127a9d8: ;   {oop(a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178})}
  0x000000011127a9d8: 1c24 49ba | 7801 4061 | 0100 0000 | 4c89 5424 

  0x000000011127a9e8: ;   {oop(a 'jdk/incubator/vector/DoubleVector$$Lambda$94+0x0000000225d597d0'{0x0000000161405910})}
  0x000000011127a9e8: 0849 ba10 | 5940 6101 | 0000 004c 

  0x000000011127a9f4: ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011127a9f4: 8954 2410 | 4c89 9c24 | a001 0000 | 899c 2404 

  0x000000011127aa04: ;   {static_call}
  0x000000011127aa04: 0200 00e8 

  0x000000011127aa08: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop [416]=Oop [560]=Oop }
                      ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011127aa08: 14f8 97ff | 4883 f800 

  0x000000011127aa10: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127aa10: 7516 48bf | 0061 a967 | 0200 0000 | 808f 7902 | 0000 01e9 | c100 0000 

  0x000000011127aa28: ;   {metadata('jdk/incubator/vector/DoubleVector')}
  0x000000011127aa28: 48bb 30ce | d425 0200 | 0000 8b78 | 0848 c1e7 | 0348 3b5f | 600f 858a 

  0x000000011127aa40: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127aa40: 0000 0048 | bf00 61a9 | 6702 0000 | 008b 5808 | 48c1 e303 | 483b 9f90 | 0200 0075 | 0d48 8387 
  0x000000011127aa60: 9802 0000 | 01e9 7f00 | 0000 483b | 9fa0 0200 | 0075 0d48 | 8387 a802 | 0000 01e9 | 6900 0000 
  0x000000011127aa80: 4881 bf90 | 0200 0000 | 0000 0075 | 1748 899f | 9002 0000 | 48c7 8798 | 0200 0001 | 0000 00e9 
  0x000000011127aaa0: 4500 0000 | 4881 bfa0 | 0200 0000 | 0000 0075 | 1748 899f | a002 0000 | 48c7 87a8 | 0200 0001 
  0x000000011127aac0: 0000 00e9 | 2100 0000 | e91c 0000 

  0x000000011127aacc: ;   {metadata(method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127aacc: 0048 bf00 | 61a9 6702 | 0000 0048 | 83af 8002 | 0000 01e9 | 6b18 0000 | e900 0000 

  0x000000011127aae8: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011127aae8: 0048 8bf8 
 ;;  block B201 [235, 272]
  0x000000011127aaec: ; implicit exception: dispatches to 0x000000011127c36c
                      ;*invokevirtual sub {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x000000011127aaec: 483b 0748 

  0x000000011127aaf0: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011127aaf0: 8bf7 48ba | 4046 a067 | 0200 0000 | 4883 82f0 | 0300 0001 

  0x000000011127ab04: ;   {metadata(method data for {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127ab04: 48be 88e6 | a967 0200 | 0000 8b96 | 1c01 0000 | 83c2 0289 | 961c 0100 | 0081 e2fe | ff1f 0083 
  0x000000011127ab24: fa00 0f84 | 5918 0000 

  0x000000011127ab2c: ;   {metadata(method data for {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127ab2c: 488b f748 | ba88 e6a9 | 6702 0000 | 0048 8382 | 6001 0000 

  0x000000011127ab40: ;   {metadata(method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127ab40: 0148 be70 | e8a9 6702 | 0000 008b | 961c 0100 | 0083 c202 | 8996 1c01 | 0000 81e2 | feff 1f00 
  0x000000011127ab60: 83fa 000f | 843d 1800 | 0048 8bf7 

  0x000000011127ab6c: ;   {metadata(method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127ab6c: 48ba 70e8 | a967 0200 | 0000 8b76 | 0848 c1e6 | 0348 3bb2 | 7001 0000 | 750d 4883 | 8278 0100 
  0x000000011127ab8c: 0001 e966 | 0000 0048 | 3bb2 8001 | 0000 750d | 4883 8288 | 0100 0001 | e950 0000 | 0048 81ba 
  0x000000011127abac: 7001 0000 | 0000 0000 | 7517 4889 | b270 0100 | 0048 c782 | 7801 0000 | 0100 0000 | e92c 0000 
  0x000000011127abcc: 0048 81ba | 8001 0000 | 0000 0000 | 7517 4889 | b280 0100 | 0048 c782 | 8801 0000 | 0100 0000 
  0x000000011127abec: e908 0000 | 0048 8382 | 6001 0000 | 01c5 fb10 | 8424 b002 | 0000 488b 

  0x000000011127ac04: ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x000000011127ac04: f748 89bc | 2438 0200 | 0048 b8ff | ffff ffff 

  0x000000011127ac14: ;   {virtual_call}
  0x000000011127ac14: ffff ffe8 

  0x000000011127ac18: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [544]=Oop [536]=Oop [568]=Oop [560]=Oop }
                      ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x000000011127ac18: 04f3 97ff | 488b bc24 | 3802 0000 

  0x000000011127ac24: ;   {metadata(method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127ac24: 48ba 70e8 | a967 0200 | 0000 8b7f | 0848 c1e7 | 0348 3bba | a801 0000 | 750d 4883 | 82b0 0100 
  0x000000011127ac44: 0001 e966 | 0000 0048 | 3bba b801 | 0000 750d | 4883 82c0 | 0100 0001 | e950 0000 | 0048 81ba 
  0x000000011127ac64: a801 0000 | 0000 0000 | 7517 4889 | baa8 0100 | 0048 c782 | b001 0000 | 0100 0000 | e92c 0000 
  0x000000011127ac84: 0048 81ba | b801 0000 | 0000 0000 | 7517 4889 | bab8 0100 | 0048 c782 | c001 0000 | 0100 0000 
  0x000000011127aca4: e908 0000 | 0048 8382 | 9801 0000 

  0x000000011127acb0: ;   {oop(a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x00000001614058c0})}
  0x000000011127acb0: 0148 bac0 | 5840 6101 | 0000 0048 | 8bc8 488b | b424 3802 

  0x000000011127acc4: ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x000000011127acc4: 0000 9090 | 9090 9090 | 9048 b8ff | ffff ffff 

  0x000000011127acd4: ;   {virtual_call}
  0x000000011127acd4: ffff ffe8 

  0x000000011127acd8: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [544]=Oop [536]=Oop [560]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x000000011127acd8: 44f2 97ff 

  0x000000011127acdc: ; implicit exception: dispatches to 0x000000011127c3c7
                      ;*invokevirtual mul {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
  0x000000011127acdc: 483b 0048 

  0x000000011127ace0: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011127ace0: 8bd0 48b9 | 4046 a067 | 0200 0000 | 4883 8128 | 0400 0001 

  0x000000011127acf4: ;   {metadata(method data for {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127acf4: 48ba 98ea | a967 0200 | 0000 8b8a | 1c01 0000 | 83c1 0289 | 8a1c 0100 | 0081 e1fe | ff1f 0083 
  0x000000011127ad14: f900 0f84 | c416 0000 

  0x000000011127ad1c: ;   {metadata(method data for {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127ad1c: 488b d048 | b998 eaa9 | 6702 0000 | 008b 5208 | 48c1 e203 | 483b 9170 | 0100 0075 | 0d48 8381 
  0x000000011127ad3c: 7801 0000 | 01e9 6600 | 0000 483b | 9180 0100 | 0075 0d48 | 8381 8801 | 0000 01e9 | 5000 0000 
  0x000000011127ad5c: 4881 b970 | 0100 0000 | 0000 0075 | 1748 8991 | 7001 0000 | 48c7 8178 | 0100 0001 | 0000 00e9 
  0x000000011127ad7c: 2c00 0000 | 4881 b980 | 0100 0000 | 0000 0075 | 1748 8991 | 8001 0000 | 48c7 8188 | 0100 0001 
  0x000000011127ad9c: 0000 00e9 | 0800 0000 | 4883 8160 | 0100 0001 

  0x000000011127adac: ;   {oop(a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000000161400370})}
  0x000000011127adac: 48bf 7003 | 4061 0100 | 0000 488b | d748 8b8c | 2430 0200 

  0x000000011127adc0: ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
  0x000000011127adc0: 0048 8bf0 | 4889 bc24 | 4002 0000 | 9048 b8ff | ffff ffff 

  0x000000011127add4: ;   {virtual_call}
  0x000000011127add4: ffff ffe8 

  0x000000011127add8: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [544]=Oop [536]=Oop [560]=Oop [576]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
  0x000000011127add8: 44f1 97ff | 488b 9c24 | 1802 0000 

  0x000000011127ade4: ; implicit exception: dispatches to 0x000000011127c401
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
  0x000000011127ade4: 483b 0348 

  0x000000011127ade8: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011127ade8: 8bd3 48b9 | 4046 a067 | 0200 0000 | 4883 8160 | 0400 0001 

  0x000000011127adfc: ;   {metadata(method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127adfc: 48ba 9872 | a967 0200 | 0000 8b8a | 1c01 0000 | 83c1 0289 | 8a1c 0100 | 0081 e1fe | ff1f 0083 
  0x000000011127ae1c: f900 0f84 | f615 0000 

  0x000000011127ae24: ;   {metadata(method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127ae24: 488b d348 | b998 72a9 | 6702 0000 | 008b 5208 | 48c1 e203 | 483b 9170 | 0100 0075 | 0d48 8381 
  0x000000011127ae44: 7801 0000 | 01e9 6600 | 0000 483b | 9180 0100 | 0075 0d48 | 8381 8801 | 0000 01e9 | 5000 0000 
  0x000000011127ae64: 4881 b970 | 0100 0000 | 0000 0075 | 1748 8991 | 7001 0000 | 48c7 8178 | 0100 0001 | 0000 00e9 
  0x000000011127ae84: 2c00 0000 | 4881 b980 | 0100 0000 | 0000 0075 | 1748 8991 | 8001 0000 | 48c7 8188 | 0100 0001 
  0x000000011127aea4: 0000 00e9 | 0800 0000 | 4883 8160 | 0100 0001 

  0x000000011127aeb4: ;   {oop(a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x00000001614001e8})}
  0x000000011127aeb4: 48bf e801 | 4061 0100 | 0000 488b | d748 8bc8 

  0x000000011127aec4: ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
  0x000000011127aec4: 488b f348 | 89bc 2448 | 0200 0090 | 9090 9090 | 9048 b8ff | ffff ffff 

  0x000000011127aedc: ;   {virtual_call}
  0x000000011127aedc: ffff ffe8 

  0x000000011127aee0: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [544]=Oop [560]=Oop [576]=Oop [584]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
  0x000000011127aee0: 3cf0 97ff | 4c8b 8424 | 3002 0000 

  0x000000011127aeec: ; implicit exception: dispatches to 0x000000011127c43b
                      ;*invokevirtual mul {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
  0x000000011127aeec: 493b 0049 

  0x000000011127aef0: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011127aef0: 8bd0 48b9 | 4046 a067 | 0200 0000 | 4883 8198 | 0400 0001 

  0x000000011127af04: ;   {metadata(method data for {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127af04: 48ba 98ea | a967 0200 | 0000 8b8a | 1c01 0000 | 83c1 0289 | 8a1c 0100 | 0081 e1fe | ff1f 0083 
  0x000000011127af24: f900 0f84 | 2815 0000 

  0x000000011127af2c: ;   {metadata(method data for {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127af2c: 498b d048 | b998 eaa9 | 6702 0000 | 008b 5208 | 48c1 e203 | 483b 9170 | 0100 0075 | 0d48 8381 
  0x000000011127af4c: 7801 0000 | 01e9 6600 | 0000 483b | 9180 0100 | 0075 0d48 | 8381 8801 | 0000 01e9 | 5000 0000 
  0x000000011127af6c: 4881 b970 | 0100 0000 | 0000 0075 | 1748 8991 | 7001 0000 | 48c7 8178 | 0100 0001 | 0000 00e9 
  0x000000011127af8c: 2c00 0000 | 4881 b980 | 0100 0000 | 0000 0075 | 1748 8991 | 8001 0000 | 48c7 8188 | 0100 0001 
  0x000000011127afac: 0000 00e9 | 0800 0000 | 4883 8160 | 0100 0001 | 488b 9424 | 4002 0000 | 498b c849 

  0x000000011127afc8: ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
  0x000000011127afc8: 8bf0 4889 | 8424 5002 | 0000 9090 | 9048 b8ff | ffff ffff 

  0x000000011127afdc: ;   {virtual_call}
  0x000000011127afdc: ffff ffe8 

  0x000000011127afe0: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [544]=Oop [584]=Oop [592]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
  0x000000011127afe0: 3cef 97ff | 488b 8c24 | 2002 0000 

  0x000000011127afec: ; implicit exception: dispatches to 0x000000011127c475
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011127afec: 483b 0148 

  0x000000011127aff0: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011127aff0: 8bd1 48be | 4046 a067 | 0200 0000 | 4883 86d0 | 0400 0001 

  0x000000011127b004: ;   {metadata(method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127b004: 48ba 9872 | a967 0200 | 0000 8bb2 | 1c01 0000 | 83c6 0289 | b21c 0100 | 0081 e6fe | ff1f 0083 
  0x000000011127b024: fe00 0f84 | 6214 0000 

  0x000000011127b02c: ;   {metadata(method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127b02c: 488b d148 | be98 72a9 | 6702 0000 | 008b 5208 | 48c1 e203 | 483b 9670 | 0100 0075 | 0d48 8386 
  0x000000011127b04c: 7801 0000 | 01e9 6600 | 0000 483b | 9680 0100 | 0075 0d48 | 8386 8801 | 0000 01e9 | 5000 0000 
  0x000000011127b06c: 4881 be70 | 0100 0000 | 0000 0075 | 1748 8996 | 7001 0000 | 48c7 8678 | 0100 0001 | 0000 00e9 
  0x000000011127b08c: 2c00 0000 | 4881 be80 | 0100 0000 | 0000 0075 | 1748 8996 | 8001 0000 | 48c7 8688 | 0100 0001 
  0x000000011127b0ac: 0000 00e9 | 0800 0000 | 4883 8660 | 0100 0001 | 488b 9424 | 4802 0000 | 4c8b c948 | 8bc8 498b 
  0x000000011127b0cc: ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011127b0cc: f148 b8ff | ffff ffff 

  0x000000011127b0d4: ;   {virtual_call}
  0x000000011127b0d4: ffff ffe8 

  0x000000011127b0d8: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [592]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011127b0d8: 44ee 97ff | 8b94 2404 | 0200 0083 

  0x000000011127b0e4: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011127b0e4: c204 48be | 4046 a067 | 0200 0000 | 8bbe 2001 | 0000 83c7 | 0289 be20 | 0100 0081 | e7fe 3f00 
  0x000000011127b104: 0083 ff00 
 ;; 2970 branch [EQ] [CounterOverflowStub: 0x00007f846a956fe0]
  0x000000011127b108: 0f84 a113 

  0x000000011127b10c: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)
  0x000000011127b10c: 0000 4d8b | 9730 0100 

  0x000000011127b114: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [592]=Oop rax=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)
                      ;   {poll}
  0x000000011127b114: 0041 8502 

  0x000000011127b118: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011127b118: 48be 4046 | a067 0200 | 0000 ff86 | 0805 0000 | 4c8b c848 | 8b9c 2450 | 0200 0048 | 8bc2 4c89 
  0x000000011127b138: 8c24 2002 | 0000 e90d 

  0x000000011127b140: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)
  0x000000011127b140: eaff ff89 | 8424 0402 | 0000 4889 | 9424 b001 | 0000 488b | 9c24 9801 

  0x000000011127b158: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011127b158: 0000 48ba | 4046 a067 | 0200 0000 | 8b5b 0848 | c1e3 0348 | 3b9a 3005 | 0000 750d | 4883 8238 
  0x000000011127b178: 0500 0001 | e966 0000 | 0048 3b9a | 4005 0000 | 750d 4883 | 8248 0500 | 0001 e950 | 0000 0048 
  0x000000011127b198: 81ba 3005 | 0000 0000 | 0000 7517 | 4889 9a30 | 0500 0048 | c782 3805 | 0000 0100 | 0000 e92c 
  0x000000011127b1b8: 0000 0048 | 81ba 4005 | 0000 0000 | 0000 7517 | 4889 9a40 | 0500 0048 | c782 4805 | 0000 0100 
  0x000000011127b1d8: 0000 e908 | 0000 0048 | 8382 2005 

  0x000000011127b1e4: ;   {oop(a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x00000001614001e8})}
  0x000000011127b1e4: 0000 0148 | bfe8 0140 | 6101 0000 | 0048 8bd7 | 488b b424 

  0x000000011127b1f8: ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@282 (line 52)
  0x000000011127b1f8: 9801 0000 | 4889 bc24 | 5802 0000 | 9048 b8ff | ffff ffff 

  0x000000011127b20c: ;   {virtual_call}
  0x000000011127b20c: ffff ffe8 

  0x000000011127b210: ; ImmutableOopMap {[440]=Oop [424]=Oop [432]=Oop [416]=Oop [600]=Oop }
                      ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@282 (line 52)
  0x000000011127b210: 0ced 97ff 

  0x000000011127b214: ;   {section_word}
  0x000000011127b214: c5fb 5805 | c4c5 ffff | 488b b424 | a801 0000 

  0x000000011127b224: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011127b224: 48ba 4046 | a067 0200 | 0000 8b76 | 0848 c1e6 | 0348 3bb2 | 6805 0000 | 750d 4883 | 8270 0500 
  0x000000011127b244: 0001 e966 | 0000 0048 | 3bb2 7805 | 0000 750d | 4883 8280 | 0500 0001 | e950 0000 | 0048 81ba 
  0x000000011127b264: 6805 0000 | 0000 0000 | 7517 4889 | b268 0500 | 0048 c782 | 7005 0000 | 0100 0000 | e92c 0000 
  0x000000011127b284: 0048 81ba | 7805 0000 | 0000 0000 | 7517 4889 | b278 0500 | 0048 c782 | 8005 0000 | 0100 0000 
  0x000000011127b2a4: e908 0000 | 0048 8382 | 5805 0000 | 0148 8b94 | 2458 0200 | 0048 8bb4 | 24a8 0100 

  0x000000011127b2c0: ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011127b2c0: 00c5 fb11 | 8424 b802 | 0000 9090 | 9048 b8ff | ffff ffff 

  0x000000011127b2d4: ;   {virtual_call}
  0x000000011127b2d4: ffff ffe8 

  0x000000011127b2d8: ; ImmutableOopMap {[440]=Oop [432]=Oop [416]=Oop }
                      ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011127b2d8: 44ec 97ff 

  0x000000011127b2dc: ;   {section_word}
  0x000000011127b2dc: c5fb 5805 | 04c5 ffff | c5fb 108c | 24b8 0200 | 008b 8424 | 0402 0000 | 8b9c 2400 | 0200 0048 
  0x000000011127b2fc: 8b8c 24a0 | 0100 0048 | 8b94 24b0 | 0100 00e9 

  0x000000011127b30c: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@301 (line 55)
  0x000000011127b30c: 9600 0000 
 ;;  block B13 [308, 351]
  0x000000011127b310: 3b42 0c0f | 83b7 1100 | 0048 63f0 | c5fb 1054 

  0x000000011127b320: ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@313 (line 56)
  0x000000011127b320: f210 c5eb | 5c94 24a8 | 0200 00c5 | f928 dac5 | e359 dac5 | e358 d93b | 410c 0f83 | e411 0000 
  0x000000011127b340: 4863 f0c5 | fb10 4cf1 

  0x000000011127b348: ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
  0x000000011127b348: 10c5 f35c | 8c24 b002 | 0000 c5f3 | 59ca c5f3 | 58c8 ffc0 

  0x000000011127b35c: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011127b35c: 48be 4046 | a067 0200 | 0000 8bbe | 2001 0000 | 83c7 0289 | be20 0100 | 0081 e7fe | 3f00 0083 
  0x000000011127b37c: ff00 0f84 

  0x000000011127b380: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)
  0x000000011127b380: c211 0000 | 4d8b 9730 

  0x000000011127b388: ; ImmutableOopMap {[440]=Oop rcx=Oop rdx=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)
                      ;   {poll}
  0x000000011127b388: 0100 0041 

  0x000000011127b38c: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011127b38c: 8502 48be | 4046 a067 | 0200 0000 | ff86 b005 | 0000 c5f9 | 28c1 c5f9 

  0x000000011127b3a4: ;*goto {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)
  0x000000011127b3a4: 28cb 3bc3 

  0x000000011127b3a8: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011127b3a8: 48be 4046 | a067 0200 | 0000 48bf | a005 0000 | 0000 0000 | 0f8c 0a00 | 0000 48bf | 9005 0000 
  0x000000011127b3c8: 0000 0000 | 4c8b 043e | 4d8d 4001 | 4c89 043e 
 ;; 3062 branch [LT] [B13] 
  0x000000011127b3d8: 0f8c 32ff 

  0x000000011127b3dc: ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@305 (line 55)
  0x000000011127b3dc: ffff 488b | 8424 b801 | 0000 c5fb | 5ec1 c5fb 

  0x000000011127b3ec: ;*putfield slope {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@360 (line 60)
  0x000000011127b3ec: 1140 18c5 | fb59 8424 | a802 0000 | c5fb 108c | 24b0 0200 | 00c5 f35c | c8c5 fb11 

  0x000000011127b408: ;*putfield intercept {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@374 (line 61)
  0x000000011127b408: 4810 4881 | c4d0 0200 

  0x000000011127b410: ;   {poll_return}
  0x000000011127b410: 005d 493b | a728 0100 | 000f 8761 

  0x000000011127b41c: ;*return {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@377 (line 62)
  0x000000011127b41c: 1100 00c3 
 ;;  block B171 [9, 15]
  0x000000011127b420: 8984 2404 | 0200 00c5 | fb11 8424 | 8802 0000 | 4889 9424 | b001 0000 

  0x000000011127b438: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011127b438: 48be d04d | 9f67 0200 | 0000 4883 | 86a0 0100 

  0x000000011127b448: ;   {oop(NULL)}
  0x000000011127b448: 0001 48be | 0000 0000 | 0000 0000 | 8b94 2404 | 0200 0048 

  0x000000011127b45c: ;*invokestatic outOfBoundsCheckIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@12 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
                      ;   {static_call}
  0x000000011127b45c: 8bcf 90e8 

  0x000000011127b460: ; ImmutableOopMap {[408]=Oop [424]=Oop [416]=Oop [536]=Oop [544]=Oop [432]=Oop [440]=Oop }
                      ;*invokestatic outOfBoundsCheckIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@12 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011127b460: bced 97ff 

  0x000000011127b464: ; implicit exception: dispatches to 0x000000011127c596
  0x000000011127b464: 483b 00e9 

  0x000000011127b468: ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@15 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011127b468: d311 0000 
 ;;  block B216 [9, 15]
  0x000000011127b46c: 488b c348 | 898c 24a0 

  0x000000011127b474: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011127b474: 0100 0048 | bed0 4d9f | 6702 0000 | 0048 8386 | a001 0000 

  0x000000011127b488: ;   {oop(NULL)}
  0x000000011127b488: 0148 be00 | 0000 0000 | 0000 0048 | 8bd0 488b 

  0x000000011127b498: ;*invokestatic outOfBoundsCheckIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@12 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011127b498: cf89 8424 | 0402 0000 | 9090 9090 

  0x000000011127b4a4: ;   {static_call}
  0x000000011127b4a4: 9090 90e8 

  0x000000011127b4a8: ; ImmutableOopMap {[440]=Oop [432]=Oop [416]=Oop [424]=Oop [408]=Oop [544]=Oop [560]=Oop [536]=Oop }
                      ;*invokestatic outOfBoundsCheckIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@12 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011127b4a8: 74ed 97ff 

  0x000000011127b4ac: ; implicit exception: dispatches to 0x000000011127c5af
  0x000000011127b4ac: 483b 00e9 

  0x000000011127b4b0: ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@15 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011127b4b0: 8b11 0000 
 ;;  block B61 [9, 15]
  0x000000011127b4b4: c5fb 1184 | 2488 0200 | 0044 899c | 2474 0100 | 0048 8994 | 24b0 0100 

  0x000000011127b4cc: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011127b4cc: 0048 bed0 | 4d9f 6702 | 0000 0048 | 8386 a001 

  0x000000011127b4dc: ;   {oop(NULL)}
  0x000000011127b4dc: 0000 0148 | be00 0000 | 0000 0000 | 008b 9424 | 7401 0000 

  0x000000011127b4f0: ;*invokestatic outOfBoundsCheckIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@12 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011127b4f0: 498b c890 

  0x000000011127b4f4: ;   {static_call}
  0x000000011127b4f4: 9090 90e8 

  0x000000011127b4f8: ; ImmutableOopMap {[424]=Oop [416]=Oop [432]=Oop [440]=Oop [408]=Oop }
                      ;*invokestatic outOfBoundsCheckIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@12 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011127b4f8: 24ed 97ff 

  0x000000011127b4fc: ; implicit exception: dispatches to 0x000000011127c5c8
  0x000000011127b4fc: 483b 00e9 

  0x000000011127b500: ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@15 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011127b500: 3b11 0000 
 ;;  block B104 [9, 15]
  0x000000011127b504: 4889 8c24 | a001 0000 

  0x000000011127b50c: ;   {metadata(method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011127b50c: 49b8 d04d | 9f67 0200 | 0000 4983 | 80a0 0100 

  0x000000011127b51c: ;   {oop(NULL)}
  0x000000011127b51c: 0001 48be | 0000 0000 | 0000 0000 | 498b d348 

  0x000000011127b52c: ;*invokestatic outOfBoundsCheckIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@12 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011127b52c: 8bcf 4489 | 9c24 7401 

  0x000000011127b534: ;   {static_call}
  0x000000011127b534: 0000 90e8 

  0x000000011127b538: ; ImmutableOopMap {[432]=Oop [440]=Oop [448]=Oop [424]=Oop [416]=Oop }
                      ;*invokestatic outOfBoundsCheckIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@12 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011127b538: e4ec 97ff 

  0x000000011127b53c: ; implicit exception: dispatches to 0x000000011127c5e1
  0x000000011127b53c: 483b 00e9 

  0x000000011127b540: ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.Preconditions::checkIndex@15 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011127b540: fb10 0000 
 ;;  block B2 [7, 16]
 ;; 3244 move [metadata:0x0000000000000000|M] [rdx|M] [patch_normal] [bci:7]
  0x000000011127b544: 9090 9090 

  0x000000011127b548: ;   {no_reloc}
  0x000000011127b548: e9bc 1000 | 0000 0000 | 0000 498b | 8748 0100 | 0048 8d78 | 3849 3bbf | 5801 0000 | 0f87 a910 
  0x000000011127b568: 0000 4989 | bf48 0100 | 0048 c700 | 0100 0000 | 488b ca48 | c1e9 0389 | 4808 4833 | c989 480c 
  0x000000011127b588: 4833 c948 | bf05 0000 | 0000 0000 | 0048 894c | f808 48ff 

  0x000000011127b59c: ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@7 (line 15)
  0x000000011127b59c: cf75 f648 

  0x000000011127b5a0: ;   {metadata(method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011127b5a0: 8bd0 48be | 4046 a067 | 0200 0000 | 4883 8680 | 0100 0001 

  0x000000011127b5b4: ;   {oop("Arrays length are not equals"{0x000000016140d810})}
  0x000000011127b5b4: 48ba 10d8 | 4061 0100 | 0000 488b 

  0x000000011127b5c0: ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@13 (line 15)
  0x000000011127b5c0: f048 8984 | 2460 0200 | 0090 9090 

  0x000000011127b5cc: ;   {optimized virtual_call}
  0x000000011127b5cc: 9090 90e8 

  0x000000011127b5d0: ; ImmutableOopMap {[608]=Oop }
                      ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@13 (line 15)
  0x000000011127b5d0: 4ce6 97ff | 488b 8424 | 6002 0000 | e95e 1000 

  0x000000011127b5e0: ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@16 (line 15)
  0x000000011127b5e0: 0089 8424 | 00a0 feff | 5548 81ec | d002 0000 | 488b 9eb0 | 0000 0048 | 8b86 a800 | 0000 488b 
  0x000000011127b600: 96a0 0000 | 00c5 fb10 | 8690 0000 | 00c5 fb10 | 8e80 0000 | 008b 4e78 | c5fb 1056 | 684c 8b46 
  0x000000011127b620: 604c 8b4e | 5848 8bfe | 4889 9c24 | 8801 0000 | 4889 8424 | 8001 0000 | 4889 9424 | 7801 0000 
  0x000000011127b640: 898c 2470 | 0100 004c | 8984 2468 | 0100 004c | 898c 2460 | 0100 00c5 | fb11 8424 | 8002 0000 
  0x000000011127b660: c5fb 118c | 2478 0200 | 00c5 fb11 | 9424 7002 

  0x000000011127b670: ;   {runtime_call SharedRuntime::OSR_migration_end(long*)}
  0x000000011127b670: 0000 e829 | 5a50 f84c | 8b8c 2460 | 0100 0049 | 8bf1 4c8b | 8424 6801 | 0000 498b | d8c5 fb10 
  0x000000011127b690: 9424 7002 | 0000 c5f9 | 28c2 8b8c | 2470 0100 | 004c 8bd9 | c5fb 108c | 2478 0200 | 00c5 fb10 
  0x000000011127b6b0: 9424 8002 | 0000 488b | 9424 7801 | 0000 488b | ca48 8b84 | 2480 0100 | 0048 8bd0 | 4c8b 8424 
  0x000000011127b6d0: 8801 0000 | 498b c048 | 89b4 24a8 | 0100 0048 | 899c 2498 | 0100 00c5 | fb11 8c24 | 9802 0000 
  0x000000011127b6f0: c5fb 1194 | 2490 0200 | 0048 898c | 24a0 0100 | 0048 8984 | 24b8 0100 | 00e9 42ca 

  0x000000011127b70c: ;   {metadata({method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011127b70c: ffff 49ba | 18fe 8867 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011127b724: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127b724: ffe8 962e 

  0x000000011127b728: ; ImmutableOopMap {rsi=Oop rdx=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@-1 (line 15)
  0x000000011127b728: 8cff e92d 

  0x000000011127b72c: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011127b72c: c1ff ffe8 

  0x000000011127b730: ; ImmutableOopMap {rsi=Oop rdx=Oop rcx=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@1 (line 15)
  0x000000011127b730: 0c8e 8cff 

  0x000000011127b734: ;   {external_word}
  0x000000011127b734: 48bf 696b | b209 0100 | 0000 4883 

  0x000000011127b740: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127b740: e4f0 e809 | 5826 f8f4 
 ;; ImplicitNullCheckStub slow case
  0x000000011127b748: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011127b748: e8f3 8d8c 

  0x000000011127b74c: ; ImmutableOopMap {rsi=Oop rdx=Oop rcx=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@3 (line 15)
                      ;   {external_word}
  0x000000011127b74c: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x000000011127b758: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127b758: 83e4 f0e8 | f057 26f8 

  0x000000011127b760: ;   {metadata({method} {0x0000000267b3fa08} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011127b760: f449 ba08 | fab3 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011127b778: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127b778: e843 2e8c 

  0x000000011127b77c: ; ImmutableOopMap {rsi=Oop rdx=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.AbstractSpecies::loopBound@-1 (line 203)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
  0x000000011127b77c: ffe9 ddc1 

  0x000000011127b780: ;   {metadata({method} {0x0000000267b96588} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x000000011127b780: ffff 49ba | 8865 b967 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011127b798: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127b798: ffe8 222e 

  0x000000011127b79c: ; ImmutableOopMap {rsi=Oop rdx=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.VectorIntrinsics::roundDown@-1 (line 106)
                      ; - jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
  0x000000011127b79c: 8cff e9f8 

  0x000000011127b7a0: ;   {metadata({method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127b7a0: c1ff ff49 | ba48 74b1 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011127b7b8: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127b7b8: ffff e801 

  0x000000011127b7bc: ; ImmutableOopMap {[288]=Oop [280]=Oop [272]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x000000011127b7bc: 2e8c ffe9 | 48c2 ffff 
 ;; CounterOverflowStub slow case
  0x000000011127b7c4: ;   {metadata({method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127b7c4: 49ba 7072 | b167 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011127b7d8: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127b7d8: ffff ffe8 

  0x000000011127b7dc: ; ImmutableOopMap {[288]=Oop [280]=Oop [272]=Oop rbx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
                      ; - jdk.incubator.vector.DoubleVector::zero@19 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x000000011127b7dc: e02d 8cff | e916 c3ff 

  0x000000011127b7e4: ;   {metadata({method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011127b7e4: ff49 ba78 | aa40 1001 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011127b7fc: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127b7fc: e8bf 2d8c 

  0x000000011127b800: ; ImmutableOopMap {[288]=Oop [280]=Oop [272]=Oop rbx=Oop rax=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
                      ; - jdk.incubator.vector.DoubleVector::zero@23 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x000000011127b800: ffe9 70c3 

  0x000000011127b804: ;   {metadata({method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011127b804: ffff 49ba | 789a 4010 | 0100 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011127b81c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127b81c: ffe8 9e2d 

  0x000000011127b820: ; ImmutableOopMap {[288]=Oop [280]=Oop [272]=Oop rbx=Oop rax=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
                      ; - jdk.incubator.vector.DoubleVector::zero@23 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x000000011127b820: 8cff e9ae | c3ff ff48 

  0x000000011127b828: ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011127b828: 8904 24e8 

  0x000000011127b82c: ; ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [320]=Oop [304]=Oop [312]=Oop [328]=Oop [296]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@31 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x000000011127b82c: 9062 8cff 

  0x000000011127b830: ;   {external_word}
  0x000000011127b830: 48bf 696b | b209 0100 | 0000 4883 

  0x000000011127b83c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127b83c: e4f0 e80d | 5726 f8f4 
 ;; CounterOverflowStub slow case
  0x000000011127b844: ;   {metadata({method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127b844: 49ba 4874 | b167 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011127b858: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127b858: ffff ffe8 

  0x000000011127b85c: ; ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [320]=Oop [304]=Oop [312]=Oop [328]=Oop [296]=Oop rbx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
  0x000000011127b85c: 602d 8cff | e959 c5ff 

  0x000000011127b864: ;   {metadata({method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127b864: ff49 ba70 | 72b1 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011127b87c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127b87c: e83f 2d8c 

  0x000000011127b880: ; ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [320]=Oop [304]=Oop [312]=Oop [328]=Oop [296]=Oop rbx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
                      ; - jdk.incubator.vector.DoubleVector::zero@19 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
  0x000000011127b880: ffe9 21c6 

  0x000000011127b884: ;   {metadata({method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011127b884: ffff 49ba | 78aa 4010 | 0100 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011127b89c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127b89c: ffe8 1e2d 

  0x000000011127b8a0: ; ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [320]=Oop [312]=Oop [328]=Oop [296]=Oop rbx=Oop rax=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
                      ; - jdk.incubator.vector.DoubleVector::zero@23 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
  0x000000011127b8a0: 8cff e974 

  0x000000011127b8a4: ;   {metadata({method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011127b8a4: c6ff ff49 | ba78 9a40 | 1001 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011127b8bc: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127b8bc: ffff e8fd 

  0x000000011127b8c0: ; ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [320]=Oop [312]=Oop [328]=Oop [296]=Oop rbx=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
                      ; - jdk.incubator.vector.DoubleVector::zero@23 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
  0x000000011127b8c0: 2c8c ffe9 | adc6 ffff 
 ;; SimpleExceptionStub slow case
  0x000000011127b8c8: 4889 0424 

  0x000000011127b8cc: ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011127b8cc: e8ef 618c 

  0x000000011127b8d0: ; ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [344]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@31 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
                      ;   {external_word}
  0x000000011127b8d0: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x000000011127b8dc: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127b8dc: 83e4 f0e8 | 6c56 26f8 

  0x000000011127b8e4: ;   {metadata({method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127b8e4: f449 bad0 | deb1 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011127b8fc: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127b8fc: e8bf 2c8c 

  0x000000011127b900: ; ImmutableOopMap {rdx=Oop [416]=Oop [408]=Oop [424]=Oop [440]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011127b900: ffe9 edc8 

  0x000000011127b904: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011127b904: ffff e835 

  0x000000011127b908: ; ImmutableOopMap {rdx=Oop [416]=Oop [408]=Oop [424]=Oop [440]=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
                      ;   {external_word}
  0x000000011127b908: 8c8c ff48 | bf69 6bb2 | 0901 0000 | 0048 83e4 

  0x000000011127b918: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127b918: f0e8 3256 

  0x000000011127b91c: ;   {metadata({method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x000000011127b91c: 26f8 f449 | ba80 62b9 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011127b934: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127b934: ffff e885 

  0x000000011127b938: ; ImmutableOopMap {rdx=Oop [416]=Oop [408]=Oop [424]=Oop [440]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011127b938: 2c8c ffe9 | 8bc9 ffff 
 ;; CounterOverflowStub slow case
  0x000000011127b940: ;   {metadata({method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x000000011127b940: 49ba e0f0 | 1510 0100 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011127b954: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127b954: ffff ffe8 

  0x000000011127b958: ; ImmutableOopMap {rdx=Oop [416]=Oop [408]=Oop [424]=Oop [440]=Oop }
                      ;*synchronization entry
                      ; - java.util.Objects::checkIndex@-1 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011127b958: 642c 8cff | e9aa c9ff 

  0x000000011127b960: ;   {metadata({method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011127b960: ff49 ba08 | 343f 1001 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011127b978: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127b978: e843 2c8c 

  0x000000011127b97c: ; ImmutableOopMap {rdx=Oop [416]=Oop [408]=Oop [424]=Oop [440]=Oop }
                      ;*synchronization entry
                      ; - jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011127b97c: ffe9 c5c9 

  0x000000011127b980: ;   {metadata({method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011127b980: ffff 49ba | 309e b367 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011127b998: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127b998: ffe8 222c 

  0x000000011127b99c: ; ImmutableOopMap {rdx=Oop [416]=Oop [408]=Oop [424]=Oop [440]=Oop r8=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011127b99c: 8cff e960 

  0x000000011127b9a0: ;   {metadata({method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011127b9a0: caff ff49 | ba08 05b4 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011127b9b8: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127b9b8: ffff e801 

  0x000000011127b9bc: ; ImmutableOopMap {rdx=Oop [416]=Oop [408]=Oop [424]=Oop [440]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011127b9bc: 2c8c ffe9 | 7eca ffff 
 ;; CounterOverflowStub slow case
  0x000000011127b9c4: ;   {metadata({method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011127b9c4: 49ba c010 | b767 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011127b9d8: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127b9d8: ffff ffe8 

  0x000000011127b9dc: ; ImmutableOopMap {rdx=Oop [440]=Oop [424]=Oop [416]=Oop [408]=Oop r8=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011127b9dc: e02b 8cff | e9c0 caff 

  0x000000011127b9e4: ;   {metadata({method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127b9e4: ff49 ba28 | f2b1 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011127b9fc: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127b9fc: e8bf 2b8c 

  0x000000011127ba00: ; ImmutableOopMap {rdx=Oop [440]=Oop [424]=Oop [416]=Oop [408]=Oop r8=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011127ba00: ffe9 deca 

  0x000000011127ba04: ;   {metadata({method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011127ba04: ffff 49ba | 20d6 b667 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011127ba1c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127ba1c: ffe8 9e2b 

  0x000000011127ba20: ; ImmutableOopMap {rdx=Oop [440]=Oop [424]=Oop [416]=Oop [408]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011127ba20: 8cff e9fc 

  0x000000011127ba24: ;   {metadata({method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011127ba24: caff ff49 | bab0 93b3 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011127ba3c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127ba3c: ffff e87d 

  0x000000011127ba40: ; ImmutableOopMap {rdx=Oop [440]=Oop [424]=Oop [416]=Oop [408]=Oop r8=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011127ba40: 2b8c ffe9 | 39cb ffff 
 ;; CounterOverflowStub slow case
  0x000000011127ba48: ;   {metadata({method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127ba48: 49ba 80fe | b167 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011127ba5c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127ba5c: ffff ffe8 

  0x000000011127ba60: ; ImmutableOopMap {rdx=Oop [440]=Oop [424]=Oop [416]=Oop [408]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011127ba60: 5c2b 8cff | e969 cbff 

  0x000000011127ba68: ;   {metadata({method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011127ba68: ff49 ba78 | aa40 1001 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011127ba80: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127ba80: e83b 2b8c 

  0x000000011127ba84: ; ImmutableOopMap {rdx=Oop [440]=Oop [424]=Oop [408]=Oop [416]=Oop r9=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011127ba84: ffe9 c4cb 

  0x000000011127ba88: ;   {metadata({method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011127ba88: ffff 49ba | 789a 4010 | 0100 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011127baa0: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127baa0: ffe8 1a2b 

  0x000000011127baa4: ; ImmutableOopMap {rdx=Oop [440]=Oop [424]=Oop [408]=Oop [416]=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011127baa4: 8cff e9ff | cbff ff48 

  0x000000011127baac: ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011127baac: 8904 24e8 

  0x000000011127bab0: ; ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop [424]=Oop [408]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x000000011127bab0: 0c60 8cff 

  0x000000011127bab4: ;   {external_word}
  0x000000011127bab4: 48bf 696b | b209 0100 | 0000 4883 

  0x000000011127bac0: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127bac0: e4f0 e889 | 5426 f8f4 
 ;; ImplicitNullCheckStub slow case
  0x000000011127bac8: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011127bac8: e873 8a8c 

  0x000000011127bacc: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop rbx=Oop [416]=Oop }
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
                      ;   {external_word}
  0x000000011127bacc: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x000000011127bad8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127bad8: 83e4 f0e8 | 7054 26f8 

  0x000000011127bae0: ;   {metadata({method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127bae0: f449 baf0 | 8eb1 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011127baf8: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127baf8: e8c3 2a8c 

  0x000000011127bafc: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop rbx=Oop [416]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x000000011127bafc: ffe9 9acd 

  0x000000011127bb00: ;   {metadata({method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127bb00: ffff 49ba | d0de b167 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011127bb18: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127bb18: ffe8 a22a 

  0x000000011127bb1c: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop [416]=Oop rax=Oop [448]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011127bb1c: 8cff e96b 

  0x000000011127bb20: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011127bb20: ceff ffe8 

  0x000000011127bb24: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rax=Oop [448]=Oop rcx=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011127bb24: 188a 8cff 

  0x000000011127bb28: ;   {external_word}
  0x000000011127bb28: 48bf 696b | b209 0100 | 0000 4883 

  0x000000011127bb34: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127bb34: e4f0 e815 | 5426 f8f4 
 ;; CounterOverflowStub slow case
  0x000000011127bb3c: ;   {metadata({method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x000000011127bb3c: 49ba 8062 | b967 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011127bb50: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127bb50: ffff ffe8 

  0x000000011127bb54: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rax=Oop [448]=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011127bb54: 682a 8cff | e912 cfff 

  0x000000011127bb5c: ;   {metadata({method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x000000011127bb5c: ff49 bae0 | f015 1001 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011127bb74: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127bb74: e847 2a8c 

  0x000000011127bb78: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rax=Oop [448]=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - java.util.Objects::checkIndex@-1 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011127bb78: ffe9 39cf 

  0x000000011127bb7c: ;   {metadata({method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011127bb7c: ffff 49ba | 0834 3f10 | 0100 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011127bb94: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127bb94: ffe8 262a 

  0x000000011127bb98: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rax=Oop [448]=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011127bb98: 8cff e952 

  0x000000011127bb9c: ;   {metadata({method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011127bb9c: cfff ff49 | ba30 9eb3 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011127bbb4: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127bbb4: ffff e805 

  0x000000011127bbb8: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rax=Oop [448]=Oop rcx=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011127bbb8: 2a8c ffe9 | f0cf ffff 
 ;; CounterOverflowStub slow case
  0x000000011127bbc0: ;   {metadata({method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011127bbc0: 49ba 0805 | b467 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011127bbd4: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127bbd4: ffff ffe8 

  0x000000011127bbd8: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rax=Oop [448]=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011127bbd8: e429 8cff | e909 d0ff 

  0x000000011127bbe0: ;   {metadata({method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011127bbe0: ff49 bac0 | 10b7 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011127bbf8: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127bbf8: e8c3 298c 

  0x000000011127bbfc: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop [448]=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011127bbfc: ffe9 4cd0 

  0x000000011127bc00: ;   {metadata({method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127bc00: ffff 49ba | 28f2 b167 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011127bc18: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127bc18: ffe8 a229 

  0x000000011127bc1c: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop [448]=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011127bc1c: 8cff e96d 

  0x000000011127bc20: ;   {metadata({method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011127bc20: d0ff ff49 | ba20 d6b6 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011127bc38: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127bc38: ffff e881 

  0x000000011127bc3c: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop [448]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011127bc3c: 298c ffe9 | 86d0 ffff 
 ;; CounterOverflowStub slow case
  0x000000011127bc44: ;   {metadata({method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011127bc44: 49ba b093 | b367 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011127bc58: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127bc58: ffff ffe8 

  0x000000011127bc5c: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop [448]=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011127bc5c: 6029 8cff | e9c6 d0ff 

  0x000000011127bc64: ;   {metadata({method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127bc64: ff49 ba80 | feb1 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011127bc7c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127bc7c: e83f 298c 

  0x000000011127bc80: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop [448]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011127bc80: ffe9 f1d0 

  0x000000011127bc84: ;   {metadata({method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011127bc84: ffff 49ba | 78aa 4010 | 0100 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011127bc9c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127bc9c: ffe8 1e29 

  0x000000011127bca0: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop [448]=Oop rdx=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011127bca0: 8cff e939 

  0x000000011127bca4: ;   {metadata({method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011127bca4: d1ff ff49 | ba78 9a40 | 1001 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011127bcbc: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127bcbc: ffff e8fd 

  0x000000011127bcc0: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop [448]=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011127bcc0: 288c ffe9 | 6fd1 ffff 
 ;; SimpleExceptionStub slow case
  0x000000011127bcc8: 4889 0424 

  0x000000011127bccc: ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011127bccc: e8ef 5d8c 

  0x000000011127bcd0: ; ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop [416]=Oop [448]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
                      ;   {external_word}
  0x000000011127bcd0: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x000000011127bcdc: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127bcdc: 83e4 f0e8 | 6c52 26f8 

  0x000000011127bce4: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011127bce4: f4e8 5688 

  0x000000011127bce8: ; ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop [448]=Oop rcx=Oop rsi=Oop }
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
                      ;   {external_word}
  0x000000011127bce8: 8cff 48bf | 696b b209 | 0100 0000 | 4883 e4f0 

  0x000000011127bcf8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127bcf8: e853 5226 

  0x000000011127bcfc: ;   {metadata({method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127bcfc: f8f4 49ba | f08e b167 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011127bd14: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127bd14: ffe8 a628 

  0x000000011127bd18: ; ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop [448]=Oop rcx=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x000000011127bd18: 8cff e9f5 

  0x000000011127bd1c: ;   {metadata({method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011127bd1c: d2ff ff49 | ba18 fe88 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 6700 

  0x000000011127bd34: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127bd34: 0000 e885 

  0x000000011127bd38: ; ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop [448]=Oop rax=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
  0x000000011127bd38: 288c ffe9 | b8d3 ffff 
 ;; ImplicitNullCheckStub slow case
  0x000000011127bd40: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011127bd40: e8fb 878c 

  0x000000011127bd44: ; ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop rbx=Oop [424]=Oop }
                      ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
                      ;   {external_word}
  0x000000011127bd44: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x000000011127bd50: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127bd50: 83e4 f0e8 | f851 26f8 

  0x000000011127bd58: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011127bd58: f4e8 e287 

  0x000000011127bd5c: ; ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop [408]=Oop [456]=Oop rsi=Oop }
                      ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
                      ;   {external_word}
  0x000000011127bd5c: 8cff 48bf | 696b b209 | 0100 0000 | 4883 e4f0 

  0x000000011127bd6c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127bd6c: e8df 5126 | f8f4 4c89 | 1c24 4889 

  0x000000011127bd78: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011127bd78: 5424 08e8 

  0x000000011127bd7c: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop rcx=Oop rdx=Oop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@141 (line 33)
  0x000000011127bd7c: c090 8cff 

  0x000000011127bd80: ;   {external_word}
  0x000000011127bd80: 48bf 696b | b209 0100 | 0000 4883 

  0x000000011127bd8c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127bd8c: e4f0 e8bd | 5126 f8f4 
 ;; ImplicitNullCheckStub slow case
  0x000000011127bd94: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011127bd94: e8a7 878c 

  0x000000011127bd98: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop rcx=Oop rdx=Oop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@149 (line 34)
                      ;   {external_word}
  0x000000011127bd98: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x000000011127bda4: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127bda4: 83e4 f0e8 | a451 26f8 

  0x000000011127bdac: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011127bdac: f4e8 8e87 

  0x000000011127bdb0: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop rcx=Oop rdx=Oop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@149 (line 34)
                      ;   {external_word}
  0x000000011127bdb0: 8cff 48bf | 696b b209 | 0100 0000 | 4883 e4f0 

  0x000000011127bdc0: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127bdc0: e88b 5126 | f8f4 4c89 | 1c24 4889 

  0x000000011127bdcc: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011127bdcc: 4c24 08e8 

  0x000000011127bdd0: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop rcx=Oop rdx=Oop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@149 (line 34)
  0x000000011127bdd0: 6c90 8cff 

  0x000000011127bdd4: ;   {external_word}
  0x000000011127bdd4: 48bf 696b | b209 0100 | 0000 4883 

  0x000000011127bde0: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127bde0: e4f0 e869 | 5126 f8f4 
 ;; CounterOverflowStub slow case
  0x000000011127bde8: ;   {metadata({method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011127bde8: 49ba 18fe | 8867 0200 | 0000 4c89 | 5424 0848 | c704 249c 

  0x000000011127bdfc: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127bdfc: 0000 00e8 

  0x000000011127be00: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop rcx=Oop rdx=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)
  0x000000011127be00: bc27 8cff | e98d d5ff 

  0x000000011127be08: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011127be08: ffe8 3287 

  0x000000011127be0c: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop rcx=Oop rdx=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@133 (line 32)
                      ;   {external_word}
  0x000000011127be0c: 8cff 48bf | 696b b209 | 0100 0000 | 4883 e4f0 

  0x000000011127be1c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127be1c: e82f 5126 

  0x000000011127be20: ;   {metadata({method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127be20: f8f4 49ba | 4874 b167 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011127be38: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127be38: ffe8 8227 

  0x000000011127be3c: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
  0x000000011127be3c: 8cff e925 

  0x000000011127be40: ;   {metadata({method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127be40: d6ff ff49 | ba70 72b1 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011127be58: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127be58: ffff e861 

  0x000000011127be5c: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop rax=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
                      ; - jdk.incubator.vector.DoubleVector::zero@19 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
  0x000000011127be5c: 278c ffe9 | f2d6 ffff 
 ;; CounterOverflowStub slow case
  0x000000011127be64: ;   {metadata({method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011127be64: 49ba 78aa | 4010 0100 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011127be78: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127be78: ffff ffe8 

  0x000000011127be7c: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop rax=Oop r11=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
                      ; - jdk.incubator.vector.DoubleVector::zero@23 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
  0x000000011127be7c: 4027 8cff | e94c d7ff 

  0x000000011127be84: ;   {metadata({method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011127be84: ff49 ba78 | 9a40 1001 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011127be9c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127be9c: e81f 278c 

  0x000000011127bea0: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop rax=Oop r11=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
                      ; - jdk.incubator.vector.DoubleVector::zero@23 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
  0x000000011127bea0: ffe9 8ad7 | ffff 4889 

  0x000000011127bea8: ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011127bea8: 0424 e811 

  0x000000011127beac: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [416]=Oop [432]=Oop [504]=Oop [472]=Oop [480]=Oop [488]=Oop [496]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@31 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
                      ;   {external_word}
  0x000000011127beac: 5c8c ff48 | bf69 6bb2 | 0901 0000 | 0048 83e4 

  0x000000011127bebc: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127bebc: f0e8 8e50 

  0x000000011127bec0: ;   {metadata({method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127bec0: 26f8 f449 | ba48 74b1 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011127bed8: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127bed8: ffff e8e1 

  0x000000011127bedc: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [416]=Oop [432]=Oop [504]=Oop [472]=Oop [480]=Oop [488]=Oop [496]=Oop rbx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
  0x000000011127bedc: 268c ffe9 | 2ad9 ffff 
 ;; CounterOverflowStub slow case
  0x000000011127bee4: ;   {metadata({method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127bee4: 49ba 7072 | b167 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011127bef8: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127bef8: ffff ffe8 

  0x000000011127befc: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [416]=Oop [432]=Oop [504]=Oop [472]=Oop [480]=Oop [488]=Oop [496]=Oop rbx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
                      ; - jdk.incubator.vector.DoubleVector::zero@19 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
  0x000000011127befc: c026 8cff | e9f2 d9ff 

  0x000000011127bf04: ;   {metadata({method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011127bf04: ff49 ba78 | aa40 1001 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011127bf1c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127bf1c: e89f 268c 

  0x000000011127bf20: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [416]=Oop [432]=Oop [504]=Oop [472]=Oop [488]=Oop [496]=Oop rbx=Oop r11=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
                      ; - jdk.incubator.vector.DoubleVector::zero@23 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
  0x000000011127bf20: ffe9 45da 

  0x000000011127bf24: ;   {metadata({method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011127bf24: ffff 49ba | 789a 4010 | 0100 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011127bf3c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127bf3c: ffe8 7e26 

  0x000000011127bf40: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [416]=Oop [432]=Oop [504]=Oop [472]=Oop [488]=Oop [496]=Oop rbx=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
                      ; - jdk.incubator.vector.DoubleVector::zero@23 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
  0x000000011127bf40: 8cff e97e | daff ff48 

  0x000000011127bf48: ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011127bf48: 8904 24e8 

  0x000000011127bf4c: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [416]=Oop [432]=Oop [520]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@31 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
  0x000000011127bf4c: 705b 8cff 

  0x000000011127bf50: ;   {external_word}
  0x000000011127bf50: 48bf 696b | b209 0100 | 0000 4883 

  0x000000011127bf5c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127bf5c: e4f0 e8ed | 4f26 f8f4 
 ;; CounterOverflowStub slow case
  0x000000011127bf64: ;   {metadata({method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127bf64: 49ba d0de | b167 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011127bf78: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127bf78: ffff ffe8 

  0x000000011127bf7c: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [544]=Oop [536]=Oop [416]=Oop rdx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011127bf7c: 4026 8cff | e989 dcff 

  0x000000011127bf84: ;   {metadata({method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x000000011127bf84: ff49 ba80 | 62b9 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011127bf9c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127bf9c: e81f 268c 

  0x000000011127bfa0: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [544]=Oop [536]=Oop [416]=Oop rdx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011127bfa0: ffe9 3edd 

  0x000000011127bfa4: ;   {metadata({method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x000000011127bfa4: ffff 49ba | e0f0 1510 | 0100 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011127bfbc: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127bfbc: ffe8 fe25 

  0x000000011127bfc0: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [544]=Oop [536]=Oop [416]=Oop rdx=Oop }
                      ;*synchronization entry
                      ; - java.util.Objects::checkIndex@-1 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011127bfc0: 8cff e962 

  0x000000011127bfc4: ;   {metadata({method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011127bfc4: ddff ff49 | ba08 343f | 1001 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011127bfdc: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127bfdc: ffff e8dd 

  0x000000011127bfe0: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [544]=Oop [536]=Oop [416]=Oop rdx=Oop }
                      ;*synchronization entry
                      ; - jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011127bfe0: 258c ffe9 | 80dd ffff 
 ;; CounterOverflowStub slow case
  0x000000011127bfe8: ;   {metadata({method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011127bfe8: 49ba 309e | b367 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011127bffc: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127bffc: ffff ffe8 

  0x000000011127c000: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [544]=Oop [536]=Oop [416]=Oop rdx=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011127c000: bc25 8cff | e91c deff 

  0x000000011127c008: ;   {metadata({method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011127c008: ff49 ba08 | 05b4 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011127c020: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127c020: e89b 258c 

  0x000000011127c024: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [544]=Oop [536]=Oop [416]=Oop rdx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011127c024: ffe9 3ade 

  0x000000011127c028: ;   {metadata({method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011127c028: ffff 49ba | c010 b767 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011127c040: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127c040: ffe8 7a25 

  0x000000011127c044: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [544]=Oop [536]=Oop [416]=Oop rdx=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011127c044: 8cff e97e 

  0x000000011127c048: ;   {metadata({method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127c048: deff ff49 | ba28 f2b1 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011127c060: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127c060: ffff e859 

  0x000000011127c064: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [544]=Oop [536]=Oop [416]=Oop rdx=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011127c064: 258c ffe9 | 9fde ffff 
 ;; CounterOverflowStub slow case
  0x000000011127c06c: ;   {metadata({method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011127c06c: 49ba 20d6 | b667 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011127c080: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127c080: ffff ffe8 

  0x000000011127c084: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [544]=Oop [536]=Oop [416]=Oop rdx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011127c084: 3825 8cff | e9bd deff 

  0x000000011127c08c: ;   {metadata({method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011127c08c: ff49 bab0 | 93b3 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011127c0a4: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127c0a4: e817 258c 

  0x000000011127c0a8: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [544]=Oop [536]=Oop [416]=Oop rdx=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011127c0a8: ffe9 fdde 

  0x000000011127c0ac: ;   {metadata({method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127c0ac: ffff 49ba | 80fe b167 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011127c0c4: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127c0c4: ffe8 f624 

  0x000000011127c0c8: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [544]=Oop [536]=Oop [416]=Oop rdx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011127c0c8: 8cff e92d 

  0x000000011127c0cc: ;   {metadata({method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011127c0cc: dfff ff49 | ba78 aa40 | 1001 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011127c0e4: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127c0e4: ffff e8d5 

  0x000000011127c0e8: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [544]=Oop [536]=Oop rdx=Oop [416]=Oop r8=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011127c0e8: 248c ffe9 | 8ddf ffff 
 ;; CounterOverflowStub slow case
  0x000000011127c0f0: ;   {metadata({method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011127c0f0: 49ba 789a | 4010 0100 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011127c104: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127c104: ffff ffe8 

  0x000000011127c108: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [544]=Oop [536]=Oop rdx=Oop [416]=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011127c108: b424 8cff | e9c8 dfff | ff48 8904 

  0x000000011127c114: ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011127c114: 24e8 a659 

  0x000000011127c118: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [536]=Oop [544]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
                      ;   {external_word}
  0x000000011127c118: 8cff 48bf | 696b b209 | 0100 0000 | 4883 e4f0 

  0x000000011127c128: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127c128: e823 4e26 

  0x000000011127c12c: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011127c12c: f8f4 e80d 

  0x000000011127c130: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop rdi=Oop [416]=Oop }
                      ;*invokevirtual sub {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
                      ;   {external_word}
  0x000000011127c130: 848c ff48 | bf69 6bb2 | 0901 0000 | 0048 83e4 

  0x000000011127c140: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127c140: f0e8 0a4e 

  0x000000011127c144: ;   {metadata({method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127c144: 26f8 f449 | ba78 93b1 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011127c15c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127c15c: ffff e85d 

  0x000000011127c160: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop rdi=Oop [416]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::sub@-1 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x000000011127c160: 248c ffe9 | 5ce1 ffff 
 ;; CounterOverflowStub slow case
  0x000000011127c168: ;   {metadata({method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127c168: 49ba a081 | b167 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011127c17c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127c17c: ffff ffe8 

  0x000000011127c180: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop rdi=Oop [416]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::lanewise@-1 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x000000011127c180: 3c24 8cff | e978 e1ff 

  0x000000011127c188: ;   {metadata({method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127c188: ff49 bad0 | deb1 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011127c1a0: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127c1a0: e81b 248c 

  0x000000011127c1a4: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop [416]=Oop rax=Oop [560]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011127c1a4: ffe9 0ce3 

  0x000000011127c1a8: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011127c1a8: ffff e891 

  0x000000011127c1ac: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop rax=Oop [560]=Oop rcx=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
                      ;   {external_word}
  0x000000011127c1ac: 838c ff48 | bf69 6bb2 | 0901 0000 | 0048 83e4 

  0x000000011127c1bc: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127c1bc: f0e8 8e4d 

  0x000000011127c1c0: ;   {metadata({method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x000000011127c1c0: 26f8 f449 | ba80 62b9 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011127c1d8: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127c1d8: ffff e8e1 

  0x000000011127c1dc: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop rax=Oop [560]=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011127c1dc: 238c ffe9 | b3e3 ffff 
 ;; CounterOverflowStub slow case
  0x000000011127c1e4: ;   {metadata({method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x000000011127c1e4: 49ba e0f0 | 1510 0100 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011127c1f8: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127c1f8: ffff ffe8 

  0x000000011127c1fc: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop rax=Oop [560]=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - java.util.Objects::checkIndex@-1 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011127c1fc: c023 8cff | e9d9 e3ff 

  0x000000011127c204: ;   {metadata({method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions')}
  0x000000011127c204: ff49 ba08 | 343f 1001 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011127c21c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127c21c: e89f 238c 

  0x000000011127c220: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop rax=Oop [560]=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011127c220: ffe9 f2e3 

  0x000000011127c224: ;   {metadata({method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011127c224: ffff 49ba | 309e b367 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011127c23c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127c23c: ffe8 7e23 

  0x000000011127c240: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop rax=Oop [560]=Oop rcx=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011127c240: 8cff e98e 

  0x000000011127c244: ;   {metadata({method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x000000011127c244: e4ff ff49 | ba08 05b4 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011127c25c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127c25c: ffff e85d 

  0x000000011127c260: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop rax=Oop [560]=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011127c260: 238c ffe9 | a7e4 ffff 
 ;; CounterOverflowStub slow case
  0x000000011127c268: ;   {metadata({method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011127c268: 49ba c010 | b767 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011127c27c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127c27c: ffff ffe8 

  0x000000011127c280: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop [560]=Oop rcx=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011127c280: 3c23 8cff | e9ea e4ff 

  0x000000011127c288: ;   {metadata({method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127c288: ff49 ba28 | f2b1 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011127c2a0: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127c2a0: e81b 238c 

  0x000000011127c2a4: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop [560]=Oop rcx=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011127c2a4: ffe9 0be5 

  0x000000011127c2a8: ;   {metadata({method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector')}
  0x000000011127c2a8: ffff 49ba | 20d6 b667 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011127c2c0: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127c2c0: ffe8 fa22 

  0x000000011127c2c4: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop [560]=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011127c2c4: 8cff e924 

  0x000000011127c2c8: ;   {metadata({method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies')}
  0x000000011127c2c8: e5ff ff49 | bab0 93b3 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000000011127c2e0: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127c2e0: ffff e8d9 

  0x000000011127c2e4: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop [560]=Oop rcx=Oop rsi=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011127c2e4: 228c ffe9 | 64e5 ffff 
 ;; CounterOverflowStub slow case
  0x000000011127c2ec: ;   {metadata({method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127c2ec: 49ba 80fe | b167 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011127c300: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127c300: ffff ffe8 

  0x000000011127c304: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop [560]=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011127c304: b822 8cff | e98f e5ff 

  0x000000011127c30c: ;   {metadata({method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800')}
  0x000000011127c30c: ff49 ba78 | aa40 1001 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011127c324: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127c324: e897 228c 

  0x000000011127c328: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop [560]=Oop rcx=Oop rdx=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011127c328: ffe9 d7e5 

  0x000000011127c32c: ;   {metadata({method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000')}
  0x000000011127c32c: ffff 49ba | 789a 4010 | 0100 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011127c344: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127c344: ffe8 7622 

  0x000000011127c348: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop [560]=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011127c348: 8cff e90d | e6ff ff48 

  0x000000011127c350: ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011127c350: 8904 24e8 

  0x000000011127c354: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop [416]=Oop [560]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011127c354: 6857 8cff 

  0x000000011127c358: ;   {external_word}
  0x000000011127c358: 48bf 696b | b209 0100 | 0000 4883 

  0x000000011127c364: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127c364: e4f0 e8e5 | 4b26 f8f4 
 ;; ImplicitNullCheckStub slow case
  0x000000011127c36c: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011127c36c: e8cf 818c 

  0x000000011127c370: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop rdi=Oop [536]=Oop [544]=Oop [560]=Oop }
                      ;*invokevirtual sub {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
                      ;   {external_word}
  0x000000011127c370: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x000000011127c37c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127c37c: 83e4 f0e8 | cc4b 26f8 

  0x000000011127c384: ;   {metadata({method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127c384: f449 ba78 | 93b1 6702 | 0000 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000000011127c39c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127c39c: e81f 228c 

  0x000000011127c3a0: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop rdi=Oop [536]=Oop [544]=Oop [560]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::sub@-1 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x000000011127c3a0: ffe9 86e7 

  0x000000011127c3a4: ;   {metadata({method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127c3a4: ffff 49ba | a081 b167 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011127c3bc: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127c3bc: ffe8 fe21 

  0x000000011127c3c0: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop rdi=Oop [536]=Oop [544]=Oop [560]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::lanewise@-1 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x000000011127c3c0: 8cff e9a2 

  0x000000011127c3c4: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011127c3c4: e7ff ffe8 

  0x000000011127c3c8: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [544]=Oop [536]=Oop [560]=Oop rax=Oop }
                      ;*invokevirtual mul {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
  0x000000011127c3c8: 7481 8cff 

  0x000000011127c3cc: ;   {external_word}
  0x000000011127c3cc: 48bf 696b | b209 0100 | 0000 4883 

  0x000000011127c3d8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127c3d8: e4f0 e871 | 4b26 f8f4 
 ;; CounterOverflowStub slow case
  0x000000011127c3e0: ;   {metadata({method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127c3e0: 49ba 4096 | b167 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011127c3f4: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127c3f4: ffff ffe8 

  0x000000011127c3f8: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [544]=Oop [536]=Oop [560]=Oop rax=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::mul@-1 (line 1187)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
  0x000000011127c3f8: c421 8cff | e91b e9ff 

  0x000000011127c400: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011127c400: ffe8 3a81 

  0x000000011127c404: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [544]=Oop [560]=Oop [576]=Oop rax=Oop rbx=Oop }
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
                      ;   {external_word}
  0x000000011127c404: 8cff 48bf | 696b b209 | 0100 0000 | 4883 e4f0 

  0x000000011127c414: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127c414: e837 4b26 

  0x000000011127c418: ;   {metadata({method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127c418: f8f4 49ba | f08e b167 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011127c430: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127c430: ffe8 8a21 

  0x000000011127c434: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [544]=Oop [560]=Oop [576]=Oop rax=Oop rbx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
  0x000000011127c434: 8cff e9e9 

  0x000000011127c438: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011127c438: e9ff ffe8 

  0x000000011127c43c: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [544]=Oop [576]=Oop [584]=Oop rax=Oop r8=Oop [560]=Oop }
                      ;*invokevirtual mul {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
  0x000000011127c43c: 0081 8cff 

  0x000000011127c440: ;   {external_word}
  0x000000011127c440: 48bf 696b | b209 0100 | 0000 4883 

  0x000000011127c44c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127c44c: e4f0 e8fd | 4a26 f8f4 
 ;; CounterOverflowStub slow case
  0x000000011127c454: ;   {metadata({method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127c454: 49ba 4096 | b167 0200 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000000011127c468: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127c468: ffff ffe8 

  0x000000011127c46c: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [544]=Oop [576]=Oop [584]=Oop rax=Oop r8=Oop [560]=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::mul@-1 (line 1187)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
  0x000000011127c46c: 5021 8cff | e9b7 eaff 

  0x000000011127c474: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011127c474: ffe8 c680 

  0x000000011127c478: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [584]=Oop [592]=Oop rax=Oop rcx=Oop }
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
                      ;   {external_word}
  0x000000011127c478: 8cff 48bf | 696b b209 | 0100 0000 | 4883 e4f0 

  0x000000011127c488: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127c488: e8c3 4a26 

  0x000000011127c48c: ;   {metadata({method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector')}
  0x000000011127c48c: f8f4 49ba | f08e b167 | 0200 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000000011127c4a4: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127c4a4: ffe8 1621 

  0x000000011127c4a8: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [584]=Oop [592]=Oop rax=Oop rcx=Oop }
                      ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011127c4a8: 8cff e97d 

  0x000000011127c4ac: ;   {metadata({method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011127c4ac: ebff ff49 | ba18 fe88 | 6702 0000 | 004c 8954 | 2408 48c7 | 0424 1001 

  0x000000011127c4c4: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127c4c4: 0000 e8f5 

  0x000000011127c4c8: ; ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [592]=Oop rax=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)
  0x000000011127c4c8: 208c ffe9 | 3eec ffff 
 ;; RangeCheckStub slow case
  0x000000011127c4d0: 4889 0424 | 4889 5424 

  0x000000011127c4d8: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011127c4d8: 08e8 6289 

  0x000000011127c4dc: ; ImmutableOopMap {[440]=Oop rcx=Oop rdx=Oop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@313 (line 56)
                      ;   {external_word}
  0x000000011127c4dc: 8cff 48bf | 696b b209 | 0100 0000 | 4883 e4f0 

  0x000000011127c4ec: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127c4ec: e85f 4a26 

  0x000000011127c4f0: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011127c4f0: f8f4 e849 

  0x000000011127c4f4: ; ImmutableOopMap {[440]=Oop rcx=Oop rdx=Oop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
                      ;   {external_word}
  0x000000011127c4f4: 808c ff48 | bf69 6bb2 | 0901 0000 | 0048 83e4 

  0x000000011127c504: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127c504: f0e8 464a 

  0x000000011127c508: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011127c508: 26f8 f4e8 

  0x000000011127c50c: ; ImmutableOopMap {[440]=Oop rcx=Oop rdx=Oop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
  0x000000011127c50c: 3080 8cff 

  0x000000011127c510: ;   {external_word}
  0x000000011127c510: 48bf 696b | b209 0100 | 0000 4883 

  0x000000011127c51c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127c51c: e4f0 e82d | 4a26 f8f4 
 ;; RangeCheckStub slow case
  0x000000011127c524: 4889 0424 | 4889 4c24 

  0x000000011127c52c: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011127c52c: 08e8 0e89 

  0x000000011127c530: ; ImmutableOopMap {[440]=Oop rcx=Oop rdx=Oop }
                      ;*daload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
                      ;   {external_word}
  0x000000011127c530: 8cff 48bf | 696b b209 | 0100 0000 | 4883 e4f0 

  0x000000011127c540: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127c540: e80b 4a26 

  0x000000011127c544: ;   {metadata({method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011127c544: f8f4 49ba | 18fe 8867 | 0200 0000 | 4c89 5424 | 0848 c704 | 245f 0100 

  0x000000011127c55c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011127c55c: 00e8 5e20 

  0x000000011127c560: ; ImmutableOopMap {[440]=Oop rcx=Oop rdx=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)
  0x000000011127c560: 8cff e91d 

  0x000000011127c564: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011127c564: eeff ffe8 

  0x000000011127c568: ; ImmutableOopMap {rax=Oop }
                      ;*putfield slope {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@360 (line 60)
  0x000000011127c568: d47f 8cff 

  0x000000011127c56c: ;   {external_word}
  0x000000011127c56c: 48bf 696b | b209 0100 | 0000 4883 

  0x000000011127c578: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127c578: e4f0 e8d1 | 4926 f8f4 
 ;; C1SafepointPollStub slow case
  0x000000011127c580: ;   {internal_word}
  0x000000011127c580: 49ba 12b4 | 2711 0100 | 0000 4d89 | 97e8 0300 

  0x000000011127c590: ;   {runtime_call SafepointBlob}
  0x000000011127c590: 00e9 8aec 

  0x000000011127c594: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011127c594: 97ff e8a5 

  0x000000011127c598: ; ImmutableOopMap {[408]=Oop [424]=Oop [416]=Oop [536]=Oop [544]=Oop [432]=Oop [440]=Oop rax=Oop }
                      ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.util.Preconditions::checkIndex@15 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
                      ;   {external_word}
  0x000000011127c598: 7f8c ff48 | bf69 6bb2 | 0901 0000 | 0048 83e4 

  0x000000011127c5a8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127c5a8: f0e8 a249 

  0x000000011127c5ac: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011127c5ac: 26f8 f4e8 

  0x000000011127c5b0: ; ImmutableOopMap {[440]=Oop [432]=Oop [416]=Oop [424]=Oop [408]=Oop [544]=Oop [560]=Oop [536]=Oop rax=Oop }
                      ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.util.Preconditions::checkIndex@15 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011127c5b0: 8c7f 8cff 

  0x000000011127c5b4: ;   {external_word}
  0x000000011127c5b4: 48bf 696b | b209 0100 | 0000 4883 

  0x000000011127c5c0: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127c5c0: e4f0 e889 | 4926 f8f4 
 ;; ImplicitNullCheckStub slow case
  0x000000011127c5c8: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011127c5c8: e873 7f8c 

  0x000000011127c5cc: ; ImmutableOopMap {[424]=Oop [416]=Oop [432]=Oop [440]=Oop [408]=Oop rax=Oop }
                      ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.util.Preconditions::checkIndex@15 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
                      ;   {external_word}
  0x000000011127c5cc: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x000000011127c5d8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127c5d8: 83e4 f0e8 | 7049 26f8 

  0x000000011127c5e0: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011127c5e0: f4e8 5a7f 

  0x000000011127c5e4: ; ImmutableOopMap {[432]=Oop [440]=Oop [448]=Oop [424]=Oop [416]=Oop rax=Oop }
                      ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.util.Preconditions::checkIndex@15 (line 266)
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
                      ;   {external_word}
  0x000000011127c5e4: 8cff 48bf | 696b b209 | 0100 0000 | 4883 e4f0 

  0x000000011127c5f4: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127c5f4: e857 4926 

  0x000000011127c5f8: ;   {metadata(NULL)}
  0x000000011127c5f8: f8f4 48ba | 0000 0000 | 0000 0000 
 ;; patch data encoded as movl
  0x000000011127c604: b800 0f05 

  0x000000011127c608: ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011127c608: 0ae8 7232 

  0x000000011127c60c: ; ImmutableOopMap {}
                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@7 (line 15)
  0x000000011127c60c: 8cff e935 | efff ff48 

  0x000000011127c614: ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011127c614: 8bd2 e8a5 

  0x000000011127c618: ; ImmutableOopMap {}
                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@7 (line 15)
  0x000000011127c618: 748c ffe9 | 7fef ffff | 9090 498b | 8750 0400 | 0049 c787 | 5004 0000 | 0000 0000 | 49c7 8758 
  0x000000011127c638: 0400 0000 | 0000 0048 | 81c4 d002 

  0x000000011127c644: ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011127c644: 0000 5de9 | f491 8cff | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 
[Stub Code]
  0x000000011127c660: ;   {no_reloc}
  0x000000011127c660: 9090 9090 

  0x000000011127c664: ;   {static_stub}
  0x000000011127c664: 9048 bb00 | 0000 0000 

  0x000000011127c66c: ;   {runtime_call}
  0x000000011127c66c: 0000 00e9 | fbff ffff 

  0x000000011127c674: ;   {static_stub}
  0x000000011127c674: 9048 bb00 | 0000 0000 

  0x000000011127c67c: ;   {runtime_call}
  0x000000011127c67c: 0000 00e9 | fbff ffff 

  0x000000011127c684: ;   {static_stub}
  0x000000011127c684: 9048 bb00 | 0000 0000 

  0x000000011127c68c: ;   {runtime_call}
  0x000000011127c68c: 0000 00e9 | fbff ffff 

  0x000000011127c694: ;   {static_stub}
  0x000000011127c694: 9048 bb00 | 0000 0000 

  0x000000011127c69c: ;   {runtime_call}
  0x000000011127c69c: 0000 00e9 | fbff ffff 

  0x000000011127c6a4: ;   {static_stub}
  0x000000011127c6a4: 9048 bb00 | 0000 0000 

  0x000000011127c6ac: ;   {runtime_call}
  0x000000011127c6ac: 0000 00e9 | fbff ffff 

  0x000000011127c6b4: ;   {static_stub}
  0x000000011127c6b4: 9048 bb00 | 0000 0000 

  0x000000011127c6bc: ;   {runtime_call}
  0x000000011127c6bc: 0000 00e9 | fbff ffff 

  0x000000011127c6c4: ;   {static_stub}
  0x000000011127c6c4: 9048 bb00 | 0000 0000 

  0x000000011127c6cc: ;   {runtime_call}
  0x000000011127c6cc: 0000 00e9 | fbff ffff 

  0x000000011127c6d4: ;   {static_stub}
  0x000000011127c6d4: 9048 bb00 | 0000 0000 

  0x000000011127c6dc: ;   {runtime_call}
  0x000000011127c6dc: 0000 00e9 | fbff ffff 

  0x000000011127c6e4: ;   {static_stub}
  0x000000011127c6e4: 9048 bb00 | 0000 0000 

  0x000000011127c6ec: ;   {runtime_call}
  0x000000011127c6ec: 0000 00e9 | fbff ffff 

  0x000000011127c6f4: ;   {static_stub}
  0x000000011127c6f4: 9048 bb00 | 0000 0000 

  0x000000011127c6fc: ;   {runtime_call}
  0x000000011127c6fc: 0000 00e9 | fbff ffff 

  0x000000011127c704: ;   {static_stub}
  0x000000011127c704: 9048 bb00 | 0000 0000 

  0x000000011127c70c: ;   {runtime_call}
  0x000000011127c70c: 0000 00e9 | fbff ffff 

  0x000000011127c714: ;   {static_stub}
  0x000000011127c714: 9048 bb00 | 0000 0000 

  0x000000011127c71c: ;   {runtime_call}
  0x000000011127c71c: 0000 00e9 | fbff ffff 

  0x000000011127c724: ;   {static_stub}
  0x000000011127c724: 9048 bb00 | 0000 0000 

  0x000000011127c72c: ;   {runtime_call}
  0x000000011127c72c: 0000 00e9 | fbff ffff 

  0x000000011127c734: ;   {static_stub}
  0x000000011127c734: 9048 bb00 | 0000 0000 

  0x000000011127c73c: ;   {runtime_call}
  0x000000011127c73c: 0000 00e9 | fbff ffff 

  0x000000011127c744: ;   {static_stub}
  0x000000011127c744: 9048 bb00 | 0000 0000 

  0x000000011127c74c: ;   {runtime_call}
  0x000000011127c74c: 0000 00e9 | fbff ffff 

  0x000000011127c754: ;   {static_stub}
  0x000000011127c754: 9048 bb00 | 0000 0000 

  0x000000011127c75c: ;   {runtime_call}
  0x000000011127c75c: 0000 00e9 | fbff ffff 

  0x000000011127c764: ;   {static_stub}
  0x000000011127c764: 9048 bb00 | 0000 0000 

  0x000000011127c76c: ;   {runtime_call}
  0x000000011127c76c: 0000 00e9 | fbff ffff 

  0x000000011127c774: ;   {static_stub}
  0x000000011127c774: 9048 bb00 | 0000 0000 

  0x000000011127c77c: ;   {runtime_call}
  0x000000011127c77c: 0000 00e9 | fbff ffff 

  0x000000011127c784: ;   {static_stub}
  0x000000011127c784: 9048 bb00 | 0000 0000 

  0x000000011127c78c: ;   {runtime_call}
  0x000000011127c78c: 0000 00e9 | fbff ffff 

  0x000000011127c794: ;   {static_stub}
  0x000000011127c794: 9048 bb00 | 0000 0000 

  0x000000011127c79c: ;   {runtime_call}
  0x000000011127c79c: 0000 00e9 | fbff ffff 

  0x000000011127c7a4: ;   {static_stub}
  0x000000011127c7a4: 9048 bb00 | 0000 0000 

  0x000000011127c7ac: ;   {runtime_call}
  0x000000011127c7ac: 0000 00e9 | fbff ffff 

  0x000000011127c7b4: ;   {static_stub}
  0x000000011127c7b4: 9048 bb00 | 0000 0000 

  0x000000011127c7bc: ;   {runtime_call}
  0x000000011127c7bc: 0000 00e9 | fbff ffff 

  0x000000011127c7c4: ;   {static_stub}
  0x000000011127c7c4: 9048 bb00 | 0000 0000 

  0x000000011127c7cc: ;   {runtime_call}
  0x000000011127c7cc: 0000 00e9 | fbff ffff 

  0x000000011127c7d4: ;   {static_stub}
  0x000000011127c7d4: 9048 bb00 | 0000 0000 

  0x000000011127c7dc: ;   {runtime_call}
  0x000000011127c7dc: 0000 00e9 | fbff ffff 

  0x000000011127c7e4: ;   {static_stub}
  0x000000011127c7e4: 9048 bb00 | 0000 0000 

  0x000000011127c7ec: ;   {runtime_call}
  0x000000011127c7ec: 0000 00e9 | fbff ffff 

  0x000000011127c7f4: ;   {static_stub}
  0x000000011127c7f4: 9048 bb00 | 0000 0000 

  0x000000011127c7fc: ;   {runtime_call}
  0x000000011127c7fc: 0000 00e9 | fbff ffff 

  0x000000011127c804: ;   {static_stub}
  0x000000011127c804: 9048 bb00 | 0000 0000 

  0x000000011127c80c: ;   {runtime_call}
  0x000000011127c80c: 0000 00e9 | fbff ffff 
[Exception Handler]
  0x000000011127c814: 48bb adde | 0000 0000 | 0000 48b9 | adde 0000 | 0000 0000 | 48be adde | 0000 0000 | 0000 48bf 
  0x000000011127c834: adde 0000 | 0000 0000 

  0x000000011127c83c: ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011127c83c: e89f 588c 

  0x000000011127c840: ;   {external_word}
  0x000000011127c840: ff48 bf69 | 6bb2 0901 | 0000 0048 

  0x000000011127c84c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011127c84c: 83e4 f0e8 | fc46 26f8 

  0x000000011127c854: ;   {section_word}
  0x000000011127c854: f449 ba55 | c827 1101 | 0000 0041 

  0x000000011127c860: ;   {runtime_call DeoptimizationBlob}
  0x000000011127c860: 52e9 fadf | 97ff f4f4 
[/MachCode]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x000000011127c868:   0x00000001614058c0 a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x00000001614058c0}
  0x000000011127c870:   0x0000000161400178 a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
  0x000000011127c878:   0x0000000161400080 a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
  0x000000011127c880:   0x000000011ff8c550 a 'java/lang/Class'{0x000000011ff8c550} = double
  0x000000011127c888:   0x0000000161405ab0 a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000000161405ab0}
  0x000000011127c890:   0x00000001614d5db8 a 'jdk/incubator/vector/Double256Vector'{0x00000001614d5db8}
  0x000000011127c898:   0x00000001614058e0 a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x00000001614058e0}
  0x000000011127c8a0:   0x000000011ff58b48 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011ff58b48}
  0x000000011127c8a8:   0x00000001200a7938 a 'java/lang/Class'{0x00000001200a7938} = 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
  0x000000011127c8b0:   0x000000011ffc7b70 a 'java/lang/Class'{0x000000011ffc7b70} = 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x000000011127c8b8:   0x000000026788fe18 {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
  0x000000011127c8c0:   0x0000000267b3fa08 {method} {0x0000000267b3fa08} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
  0x000000011127c8c8:   0x0000000267b96588 {method} {0x0000000267b96588} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x000000011127c8d0:   0x0000000267b17448 {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x000000011127c8d8:   0x0000000267b1ded0 {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x000000011127c8e0:   0x0000000267b96280 {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x000000011127c8e8:   0x000000011015f0e0 {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
  0x000000011127c8f0:   0x00000001103f3408 {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
  0x000000011127c8f8:   0x0000000267b39e30 {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
  0x000000011127c900:   0x0000000267b40508 {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
  0x000000011127c908:   0x0000000267b710c0 {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
  0x000000011127c910:   0x0000000267b1f228 {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x000000011127c918:   0x0000000267b18ef0 {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x000000011127c920:   0x0000000267b19378 {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x000000011127c928:   0x0000000267b181a0 {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x000000011127c930:   0x0000000267b19640 {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x000000011127c938:   0x0000000267b17270 {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
  0x000000011127c940:   0x000000011040aa78 {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
  0x000000011127c948:   0x0000000110409a78 {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
  0x000000011127c950:   0x0000000267b6d620 {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
  0x000000011127c958:   0x0000000267b393b0 {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
  0x000000011127c960:   0x0000000267b1fe80 {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00000001112777ff offset=ffffffff bits=0):
PcDesc(pc=0x000000011127785c offset=5c bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@0 (line 15)
PcDesc(pc=0x0000000111277860 offset=60 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@1 (line 15)
PcDesc(pc=0x0000000111277864 offset=64 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@3 (line 15)
PcDesc(pc=0x000000011127789d offset=9d bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@4 (line 15)
PcDesc(pc=0x00000001112779ac offset=1ac bits=0):   jdk.incubator.vector.VectorIntrinsics::roundDown@5 (line 106)
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
PcDesc(pc=0x0000000111277c63 offset=463 bits=0):   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
PcDesc(pc=0x0000000111277ca4 offset=4a4 bits=0):   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[616],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111277d84 offset=584 bits=0):   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
PcDesc(pc=0x0000000111277ff7 offset=7f7 bits=0):   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
PcDesc(pc=0x0000000111278004 offset=804 bits=0):   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[616],double
    - l10: stack[344],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x00000001112780e4 offset=8e4 bits=0):   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
PcDesc(pc=0x000000011127811b offset=91b bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x000000011127817a offset=97a bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@59 (line 24)
PcDesc(pc=0x00000001112781b4 offset=9b4 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@60 (line 24)
PcDesc(pc=0x000000011127828f offset=a8f bits=0):   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x0000000111278381 offset=b81 bits=0):   jdk.internal.util.Preconditions::checkIndex@1 (line 265)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x00000001112783ba offset=bba bits=0):   jdk.internal.util.Preconditions::checkIndex@6 (line 265)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x0000000111278453 offset=c53 bits=0):   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x000000011127875b offset=f5b bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x0000000111278774 offset=f74 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x0000000111278854 offset=1054 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x000000011127885f offset=105f bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x0000000111278939 offset=1139 bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x000000011127894c offset=114c bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111278a30 offset=1230 bits=0):   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x0000000111278b2b offset=132b bits=0):   jdk.internal.util.Preconditions::checkIndex@1 (line 265)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x0000000111278b64 offset=1364 bits=0):   jdk.internal.util.Preconditions::checkIndex@6 (line 265)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x0000000111278bfa offset=13fa bits=0):   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x0000000111278ed4 offset=16d4 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x0000000111278eec offset=16ec bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x0000000111278fcc offset=17cc bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x0000000111278fd7 offset=17d7 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x00000001112790c4 offset=18c4 bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x00000001112790f8 offset=18f8 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
PcDesc(pc=0x00000001112790ff offset=18ff bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[448],oop
    - l11: reg rax [0],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111279143 offset=1943 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
PcDesc(pc=0x0000000111279207 offset=1a07 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
PcDesc(pc=0x000000011127922c offset=1a2c bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[656],double
PcDesc(pc=0x00000001112792de offset=1ade bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
PcDesc(pc=0x0000000111279304 offset=1b04 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[672],double
    - l5: empty
    - l6: empty
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[664],double
PcDesc(pc=0x0000000111279333 offset=1b33 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@130 (line 32)
PcDesc(pc=0x000000011127934b offset=1b4b bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@141 (line 33)
PcDesc(pc=0x0000000111279362 offset=1b62 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@149 (line 34)
PcDesc(pc=0x0000000111279396 offset=1b96 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)
PcDesc(pc=0x000000011127939d offset=1b9d bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: reg xmm2 [80],double
    - l5: 0
    - l6: reg xmm1 [64],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x00000001112793b8 offset=1bb8 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)
PcDesc(pc=0x00000001112793bb offset=1bbb bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@133 (line 32)
PcDesc(pc=0x00000001112793fb offset=1bfb bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@134 (line 32)
PcDesc(pc=0x00000001112796c6 offset=1ec6 bits=0):   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
PcDesc(pc=0x00000001112796f4 offset=1ef4 bits=0):   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x00000001112797d4 offset=1fd4 bits=0):   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
PcDesc(pc=0x0000000111279a47 offset=2247 bits=0):   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
PcDesc(pc=0x0000000111279a54 offset=2254 bits=0):   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[520],oop
    - l21: empty
    - l22: empty
PcDesc(pc=0x0000000111279b36 offset=2336 bits=0):   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
PcDesc(pc=0x0000000111279b43 offset=2343 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x0000000111279b96 offset=2396 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@204 (line 46)
PcDesc(pc=0x0000000111279bcf offset=23cf bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@205 (line 46)
PcDesc(pc=0x0000000111279da1 offset=25a1 bits=0):   jdk.internal.util.Preconditions::checkIndex@1 (line 265)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x0000000111279dd9 offset=25d9 bits=0):   jdk.internal.util.Preconditions::checkIndex@6 (line 265)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x0000000111279e74 offset=2674 bits=0):   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011127a18e offset=298e bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011127a1a4 offset=29a4 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
PcDesc(pc=0x000000011127a284 offset=2a84 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011127a287 offset=2a87 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
PcDesc(pc=0x000000011127a39d offset=2b9d bits=0):   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
PcDesc(pc=0x000000011127a3b4 offset=2bb4 bits=0):   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: stack[552],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x00000001614058c0}
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
PcDesc(pc=0x000000011127a45e offset=2c5e bits=0):   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
PcDesc(pc=0x000000011127a474 offset=2c74 bits=0):   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
PcDesc(pc=0x000000011127a558 offset=2d58 bits=0):   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x000000011127a651 offset=2e51 bits=0):   jdk.internal.util.Preconditions::checkIndex@1 (line 265)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x000000011127a689 offset=2e89 bits=0):   jdk.internal.util.Preconditions::checkIndex@6 (line 265)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x000000011127a71f offset=2f1f bits=0):   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x000000011127a9f8 offset=31f8 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x000000011127aa0c offset=320c bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
PcDesc(pc=0x000000011127aaec offset=32ec bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x000000011127aaef offset=32ef bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
PcDesc(pc=0x000000011127ac05 offset=3405 bits=0):   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
PcDesc(pc=0x000000011127ac1c offset=341c bits=0):   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: stack[568],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x00000001614058c0}
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
PcDesc(pc=0x000000011127acc6 offset=34c6 bits=0):   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
PcDesc(pc=0x000000011127acdc offset=34dc bits=0):   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
PcDesc(pc=0x000000011127acdf offset=34df bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
PcDesc(pc=0x000000011127adc4 offset=35c4 bits=0):   jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
PcDesc(pc=0x000000011127addc offset=35dc bits=0):   jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
PcDesc(pc=0x000000011127ade7 offset=35e7 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
PcDesc(pc=0x000000011127aec7 offset=36c7 bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
PcDesc(pc=0x000000011127aee4 offset=36e4 bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
PcDesc(pc=0x000000011127aeef offset=36ef bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
PcDesc(pc=0x000000011127afca offset=37ca bits=0):   jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
PcDesc(pc=0x000000011127afe4 offset=37e4 bits=0):   jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[592],oop
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[544],oop
PcDesc(pc=0x000000011127afef offset=37ef bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011127b0cd offset=38cd bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
PcDesc(pc=0x000000011127b0dc offset=38dc bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[592],oop
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127b10e offset=390e bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)
PcDesc(pc=0x000000011127b115 offset=3915 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rdx [4],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[592],oop
    - l21: reg rax [0],oop
    - l22: empty
PcDesc(pc=0x000000011127b143 offset=3943 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)
PcDesc(pc=0x000000011127b1fc offset=39fc bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@282 (line 52)
PcDesc(pc=0x000000011127b214 offset=3a14 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@282 (line 52)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: empty
    - l17: empty
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: 0
PcDesc(pc=0x000000011127b2c1 offset=3ac1 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011127b2dc offset=3adc bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: stack[696],double
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: 0
PcDesc(pc=0x000000011127b310 offset=3b10 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@301 (line 55)
PcDesc(pc=0x000000011127b322 offset=3b22 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@313 (line 56)
PcDesc(pc=0x000000011127b349 offset=3b49 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
PcDesc(pc=0x000000011127b384 offset=3b84 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)
PcDesc(pc=0x000000011127b38b offset=3b8b bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: reg xmm3 [96],double
    - l18: 0
    - l19: reg xmm1 [64],double
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127b3a6 offset=3ba6 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)
PcDesc(pc=0x000000011127b3de offset=3bde bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@305 (line 55)
PcDesc(pc=0x000000011127b3ef offset=3bef bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@360 (line 60)
PcDesc(pc=0x000000011127b40a offset=3c0a bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@374 (line 61)
PcDesc(pc=0x000000011127b420 offset=3c20 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@377 (line 62)
PcDesc(pc=0x000000011127b45e offset=3c5e bits=0):   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011127b464 offset=3c64 bits=0):   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: stack[432],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
PcDesc(pc=0x000000011127b46c offset=3c6c bits=0):   jdk.internal.util.Preconditions::checkIndex@15 (line 266)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011127b499 offset=3c99 bits=0):   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x000000011127b4ac offset=3cac bits=0):   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: stack[416],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
PcDesc(pc=0x000000011127b4b4 offset=3cb4 bits=0):   jdk.internal.util.Preconditions::checkIndex@15 (line 266)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x000000011127b4f3 offset=3cf3 bits=0):   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x000000011127b4fc offset=3cfc bits=0):   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: stack[432],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x000000011127b504 offset=3d04 bits=0):   jdk.internal.util.Preconditions::checkIndex@15 (line 266)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x000000011127b52e offset=3d2e bits=0):   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x000000011127b53c offset=3d3c bits=0):   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: stack[416],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x000000011127b544 offset=3d44 bits=0):   jdk.internal.util.Preconditions::checkIndex@15 (line 266)
   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x000000011127b59f offset=3d9f bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@7 (line 15)
PcDesc(pc=0x000000011127b5c1 offset=3dc1 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@13 (line 15)
PcDesc(pc=0x000000011127b5d4 offset=3dd4 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@13 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[608],oop
PcDesc(pc=0x000000011127b5e1 offset=3de1 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@16 (line 15)
PcDesc(pc=0x000000011127b72a offset=3f2a bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@-1 (line 15)
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127b734 offset=3f34 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@1 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127b74d offset=3f4d bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@3 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127b77d offset=3f7d bits=0):   jdk.incubator.vector.AbstractSpecies::loopBound@-1 (line 203)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: reg r8 [16],int
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127b79e offset=3f9e bits=0):   jdk.incubator.vector.VectorIntrinsics::roundDown@-1 (line 106)
   Locals
    - l0: reg r8 [16],int
    - l1: 4
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127b7bf offset=3fbf bits=0):   jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127b7e0 offset=3fe0 bits=0):   jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
   Locals
    - l0: 0
    - l1: 0
   jdk.incubator.vector.DoubleVector::zero@19 (line 437)
   Locals
    - l0: empty
    - l1: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127b801 offset=4001 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000000161405ab0}
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127b822 offset=4022 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000000161405ab0}
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127b830 offset=4030 bits=0):   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[616],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127b860 offset=4060 bits=0):   jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[616],double
    - l10: reg rbx [6],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127b881 offset=4081 bits=0):   jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
   Locals
    - l0: 0
    - l1: 0
   jdk.incubator.vector.DoubleVector::zero@19 (line 437)
   Locals
    - l0: empty
    - l1: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[616],double
    - l10: reg rbx [6],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127b8a2 offset=40a2 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000000161405ab0}
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[616],double
    - l10: reg rbx [6],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127b8c3 offset=40c3 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000000161405ab0}
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[616],double
    - l10: reg rbx [6],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127b8d1 offset=40d1 bits=0):   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[616],double
    - l10: stack[344],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127b901 offset=4101 bits=0):   jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x000000011127b90b offset=410b bits=0):   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x000000011127b93b offset=413b bits=0):   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
   Locals
    - l0: reg r11 [22],int
    - l1: 4
    - l2: reg r8 [16],int
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x000000011127b95c offset=415c bits=0):   java.util.Objects::checkIndex@-1 (line 359)
   Locals
    - l0: reg r11 [22],int
    - l1: reg r8 [16],int
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x000000011127b97d offset=417d bits=0):   jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
   Locals
    - l0: reg r11 [22],int
    - l1: reg r8 [16],int
    - l2: NULL
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x000000011127b99e offset=419e bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x000000011127b9bf offset=41bf bits=0):   jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: empty
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x000000011127b9e0 offset=41e0 bits=0):   jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x00000001614d5db8}
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x000000011127ba01 offset=4201 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x00000001614d5db8}
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x000000011127ba22 offset=4222 bits=0):   jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x000000011127ba43 offset=4243 bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x000000011127ba64 offset=4264 bits=0):   jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
   Locals
    - l0: empty
    - l1: reg r11 [22],int
   jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x000000011127ba85 offset=4285 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x00000001614058e0}
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
    - @4: 0
    - @5: reg r8 [16],long
    - @6: reg rdx [4],oop
    - @7: reg r11 [22],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x000000011127baa6 offset=42a6 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x00000001614058e0}
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
    - @4: 0
    - @5: reg r8 [16],long
    - @6: reg rdx [4],oop
    - @7: reg r11 [22],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x000000011127bab4 offset=42b4 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x000000011127bacd offset=42cd bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127bafd offset=42fd bits=0):   jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
   Locals
    - l0: reg rbx [6],oop
    - l1: reg rcx [2],oop
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127bb1e offset=431e bits=0):   jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: stack[416],oop
    - l2: stack[372]
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x000000011127bb28 offset=4328 bits=0):   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x000000011127bb58 offset=4358 bits=0):   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
   Locals
    - l0: stack[372]
    - l1: 4
    - l2: reg rsi [12],int
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: reg rcx [2],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x000000011127bb79 offset=4379 bits=0):   java.util.Objects::checkIndex@-1 (line 359)
   Locals
    - l0: reg r11 [22],int
    - l1: reg rdi [14],int
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: reg rcx [2],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x000000011127bb9a offset=439a bits=0):   jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
   Locals
    - l0: reg r11 [22],int
    - l1: reg rdi [14],int
    - l2: NULL
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: reg rcx [2],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x000000011127bbbb offset=43bb bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg r11 [22],int
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x000000011127bbdc offset=43dc bits=0):   jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: empty
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg r11 [22],int
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x000000011127bbfd offset=43fd bits=0):   jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x00000001614d5db8}
    - l1: reg rcx [2],oop
    - l2: reg r11 [22],int
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x000000011127bc1e offset=441e bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x00000001614d5db8}
    - l1: reg rcx [2],oop
    - l2: reg r11 [22],int
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x000000011127bc3f offset=443f bits=0):   jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg r11 [22],int
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x000000011127bc60 offset=4460 bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg r11 [22],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x000000011127bc81 offset=4481 bits=0):   jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
   Locals
    - l0: empty
    - l1: reg r11 [22],int
   jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg r11 [22],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rcx [2],oop
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x000000011127bca2 offset=44a2 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x00000001614058e0}
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rcx [2],oop
    - @4: 0
    - @5: reg r9 [18],long
    - @6: reg rcx [2],oop
    - @7: reg r11 [22],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x000000011127bcc3 offset=44c3 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x00000001614058e0}
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rcx [2],oop
    - @4: 0
    - @5: reg r9 [18],long
    - @6: reg rcx [2],oop
    - @7: reg r11 [22],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x000000011127bcd1 offset=44d1 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x000000011127bcea offset=44ea bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127bd1a offset=451a bits=0):   jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rcx [2],oop
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127bd3b offset=453b bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[448],oop
    - l11: reg rax [0],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127bd45 offset=4545 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127bd5e offset=455e bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127bd80 offset=4580 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@141 (line 33)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127bd99 offset=4599 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@149 (line 34)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127bdb2 offset=45b2 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@149 (line 34)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127bdd4 offset=45d4 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@149 (line 34)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127be04 offset=4604 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: reg xmm2 [80],double
    - l5: 0
    - l6: reg xmm1 [64],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127be0e offset=460e bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@133 (line 32)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127be3e offset=463e bits=0):   jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: reg xmm1 [64],double
    - l14: 0
    - l15: reg xmm0 [48],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127be5f offset=465f bits=0):   jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
   Locals
    - l0: 0
    - l1: 0
   jdk.incubator.vector.DoubleVector::zero@19 (line 437)
   Locals
    - l0: empty
    - l1: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: reg xmm1 [64],double
    - l14: 0
    - l15: reg xmm0 [48],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127be80 offset=4680 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000000161405ab0}
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: reg xmm1 [64],double
    - l14: 0
    - l15: reg xmm0 [48],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127bea1 offset=46a1 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000000161405ab0}
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: reg xmm1 [64],double
    - l14: 0
    - l15: reg xmm0 [48],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127beaf offset=46af bits=0):   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127bedf offset=46df bits=0):   jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: reg rbx [6],oop
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127bf00 offset=4700 bits=0):   jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
   Locals
    - l0: 0
    - l1: 0
   jdk.incubator.vector.DoubleVector::zero@19 (line 437)
   Locals
    - l0: empty
    - l1: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: reg rbx [6],oop
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127bf21 offset=4721 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000000161405ab0}
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: reg rbx [6],oop
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127bf42 offset=4742 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000000161405ab0}
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: reg rbx [6],oop
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127bf50 offset=4750 bits=0):   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[520],oop
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127bf80 offset=4780 bits=0):   jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
PcDesc(pc=0x000000011127bfa1 offset=47a1 bits=0):   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
   Locals
    - l0: reg rax [0],int
    - l1: 4
    - l2: reg rbx [6],int
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
PcDesc(pc=0x000000011127bfc2 offset=47c2 bits=0):   java.util.Objects::checkIndex@-1 (line 359)
   Locals
    - l0: reg rax [0],int
    - l1: reg rdi [14],int
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
PcDesc(pc=0x000000011127bfe3 offset=47e3 bits=0):   jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
   Locals
    - l0: reg rax [0],int
    - l1: reg rdi [14],int
    - l2: NULL
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
PcDesc(pc=0x000000011127c004 offset=4804 bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
PcDesc(pc=0x000000011127c025 offset=4825 bits=0):   jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: empty
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
PcDesc(pc=0x000000011127c046 offset=4846 bits=0):   jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x00000001614d5db8}
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
PcDesc(pc=0x000000011127c067 offset=4867 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x00000001614d5db8}
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
PcDesc(pc=0x000000011127c088 offset=4888 bits=0):   jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
PcDesc(pc=0x000000011127c0a9 offset=48a9 bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
PcDesc(pc=0x000000011127c0ca offset=48ca bits=0):   jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
   Locals
    - l0: empty
    - l1: reg rax [0],int
   jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
PcDesc(pc=0x000000011127c0eb offset=48eb bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x00000001614058e0}
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
    - @4: 0
    - @5: reg rsi [12],long
    - @6: reg rdx [4],oop
    - @7: reg rax [0],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
PcDesc(pc=0x000000011127c10c offset=490c bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x00000001614058e0}
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
    - @4: 0
    - @5: reg rsi [12],long
    - @6: reg rdx [4],oop
    - @7: reg rax [0],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
PcDesc(pc=0x000000011127c11a offset=491a bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
PcDesc(pc=0x000000011127c133 offset=4933 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127c163 offset=4963 bits=0):   jdk.incubator.vector.DoubleVector::sub@-1 (line 1138)
   Locals
    - l0: reg rdi [14],oop
    - l1: 0
    - l2: stack[680],double
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
PcDesc(pc=0x000000011127c184 offset=4984 bits=0):   jdk.incubator.vector.DoubleVector::lanewise@-1 (line 714)
   Locals
    - l0: reg rdi [14],oop
    - l1: a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x00000001614058c0}
    - l2: 0
    - l3: stack[680],double
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
PcDesc(pc=0x000000011127c1a5 offset=49a5 bits=0):   jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: stack[416],oop
    - l2: stack[516]
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[536],oop
PcDesc(pc=0x000000011127c1af offset=49af bits=0):   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[536],oop
PcDesc(pc=0x000000011127c1df offset=49df bits=0):   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
   Locals
    - l0: stack[516]
    - l1: 4
    - l2: reg rsi [12],int
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: reg rcx [2],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[536],oop
PcDesc(pc=0x000000011127c200 offset=4a00 bits=0):   java.util.Objects::checkIndex@-1 (line 359)
   Locals
    - l0: reg rbx [6],int
    - l1: reg rdi [14],int
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: reg rcx [2],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[536],oop
PcDesc(pc=0x000000011127c221 offset=4a21 bits=0):   jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
   Locals
    - l0: reg rbx [6],int
    - l1: reg rdi [14],int
    - l2: NULL
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: reg rcx [2],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[536],oop
PcDesc(pc=0x000000011127c242 offset=4a42 bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg rbx [6],int
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[536],oop
PcDesc(pc=0x000000011127c263 offset=4a63 bits=0):   jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: empty
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg rbx [6],int
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[536],oop
PcDesc(pc=0x000000011127c284 offset=4a84 bits=0):   jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x00000001614d5db8}
    - l1: reg rcx [2],oop
    - l2: reg rbx [6],int
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
PcDesc(pc=0x000000011127c2a5 offset=4aa5 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x00000001614d5db8}
    - l1: reg rcx [2],oop
    - l2: reg rbx [6],int
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
PcDesc(pc=0x000000011127c2c6 offset=4ac6 bits=0):   jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg rbx [6],int
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
PcDesc(pc=0x000000011127c2e7 offset=4ae7 bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg rbx [6],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
PcDesc(pc=0x000000011127c308 offset=4b08 bits=0):   jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
   Locals
    - l0: empty
    - l1: reg rbx [6],int
   jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg rbx [6],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rcx [2],oop
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
PcDesc(pc=0x000000011127c329 offset=4b29 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x00000001614058e0}
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rcx [2],oop
    - @4: 0
    - @5: reg r9 [18],long
    - @6: reg rcx [2],oop
    - @7: reg rbx [6],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
PcDesc(pc=0x000000011127c34a offset=4b4a bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x00000001614058e0}
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rcx [2],oop
    - @4: 0
    - @5: reg r9 [18],long
    - @6: reg rcx [2],oop
    - @7: reg rbx [6],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
PcDesc(pc=0x000000011127c358 offset=4b58 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
PcDesc(pc=0x000000011127c371 offset=4b71 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127c3a1 offset=4ba1 bits=0):   jdk.incubator.vector.DoubleVector::sub@-1 (line 1138)
   Locals
    - l0: reg rdi [14],oop
    - l1: 0
    - l2: stack[688],double
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
PcDesc(pc=0x000000011127c3c2 offset=4bc2 bits=0):   jdk.incubator.vector.DoubleVector::lanewise@-1 (line 714)
   Locals
    - l0: reg rdi [14],oop
    - l1: a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x00000001614058c0}
    - l2: 0
    - l3: stack[688],double
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
PcDesc(pc=0x000000011127c3cc offset=4bcc bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127c3fc offset=4bfc bits=0):   jdk.incubator.vector.DoubleVector::mul@-1 (line 1187)
   Locals
    - l0: reg rax [0],oop
    - l1: stack[560],oop
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
PcDesc(pc=0x000000011127c406 offset=4c06 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127c436 offset=4c36 bits=0):   jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
   Locals
    - l0: reg rbx [6],oop
    - l1: reg rax [0],oop
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
PcDesc(pc=0x000000011127c440 offset=4c40 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127c470 offset=4c70 bits=0):   jdk.incubator.vector.DoubleVector::mul@-1 (line 1187)
   Locals
    - l0: reg r8 [16],oop
    - l1: reg r8 [16],oop
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: reg rax [0],oop
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[544],oop
PcDesc(pc=0x000000011127c47a offset=4c7a bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127c4aa offset=4caa bits=0):   jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
   Locals
    - l0: reg rcx [2],oop
    - l1: reg rax [0],oop
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[592],oop
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127c4cb offset=4ccb bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rdx [4],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[592],oop
    - l21: reg rax [0],oop
    - l22: empty
PcDesc(pc=0x000000011127c4de offset=4cde bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@313 (line 56)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127c4f7 offset=4cf7 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127c510 offset=4d10 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127c532 offset=4d32 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127c562 offset=4d62 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: reg xmm3 [96],double
    - l18: 0
    - l19: reg xmm1 [64],double
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127c56c offset=4d6c bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@360 (line 60)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127c59b offset=4d9b bits=1):   jdk.internal.util.Preconditions::checkIndex@15 (line 266)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: stack[432],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
PcDesc(pc=0x000000011127c5b4 offset=4db4 bits=1):   jdk.internal.util.Preconditions::checkIndex@15 (line 266)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: stack[416],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
PcDesc(pc=0x000000011127c5cd offset=4dcd bits=1):   jdk.internal.util.Preconditions::checkIndex@15 (line 266)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: stack[432],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
PcDesc(pc=0x000000011127c5e6 offset=4de6 bits=1):   jdk.internal.util.Preconditions::checkIndex@15 (line 266)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: stack[416],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
PcDesc(pc=0x000000011127c60e offset=4e0e bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@7 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127c61b offset=4e1b bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@7 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011127c889 offset=5089 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 155 OopMaps

ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [320]=Oop [304]=Oop [312]=Oop [328]=Oop [296]=Oop } pc offsets: 1188 
ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [344]=Oop } pc offsets: 2052 
ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop [424]=Oop [408]=Oop } pc offsets: 3956 
ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop [416]=Oop } pc offsets: 4428 
ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop [416]=Oop [448]=Oop } pc offsets: 5868 
ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop [448]=Oop } pc offsets: 6340 
ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop [448]=Oop rax=Oop } pc offsets: 6399 
ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop [408]=Oop [456]=Oop [424]=Oop } pc offsets: 6700 
ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop [408]=Oop [424]=Oop } pc offsets: 6916 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop rcx=Oop rdx=Oop } pc offsets: 7069 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [416]=Oop [432]=Oop [504]=Oop [472]=Oop [480]=Oop [488]=Oop [496]=Oop } pc offsets: 7924 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [416]=Oop [432]=Oop [520]=Oop } pc offsets: 8788 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [536]=Oop [544]=Oop } pc offsets: 10660 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop [552]=Oop [416]=Oop } pc offsets: 11188 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop [416]=Oop } pc offsets: 11380 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop [416]=Oop [560]=Oop } pc offsets: 12812 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [544]=Oop [536]=Oop [568]=Oop [560]=Oop } pc offsets: 13340 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [544]=Oop [536]=Oop [560]=Oop } pc offsets: 13532 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [544]=Oop [536]=Oop [560]=Oop [576]=Oop } pc offsets: 13788 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [544]=Oop [560]=Oop [576]=Oop [584]=Oop } pc offsets: 14052 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [544]=Oop [584]=Oop [592]=Oop } pc offsets: 14308 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [592]=Oop } pc offsets: 14556 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [592]=Oop rax=Oop } pc offsets: 14613 
ImmutableOopMap {[440]=Oop [424]=Oop [432]=Oop [416]=Oop [600]=Oop } pc offsets: 14868 
ImmutableOopMap {[440]=Oop [432]=Oop [416]=Oop } pc offsets: 15068 
ImmutableOopMap {[440]=Oop rcx=Oop rdx=Oop } pc offsets: 15243 
ImmutableOopMap {[408]=Oop [424]=Oop [416]=Oop [536]=Oop [544]=Oop [432]=Oop [440]=Oop } pc offsets: 15460 
ImmutableOopMap {[440]=Oop [432]=Oop [416]=Oop [424]=Oop [408]=Oop [544]=Oop [560]=Oop [536]=Oop } pc offsets: 15532 
ImmutableOopMap {[424]=Oop [416]=Oop [432]=Oop [440]=Oop [408]=Oop } pc offsets: 15612 
ImmutableOopMap {[432]=Oop [440]=Oop [448]=Oop [424]=Oop [416]=Oop } pc offsets: 15676 
ImmutableOopMap {[608]=Oop } pc offsets: 15828 
ImmutableOopMap {rsi=Oop rdx=Oop rcx=Oop } pc offsets: 16170 16180 16205 16253 16286 
ImmutableOopMap {[288]=Oop [280]=Oop [272]=Oop } pc offsets: 16319 
ImmutableOopMap {[288]=Oop [280]=Oop [272]=Oop rbx=Oop } pc offsets: 16352 
ImmutableOopMap {[288]=Oop [280]=Oop [272]=Oop rbx=Oop rax=Oop } pc offsets: 16385 16418 
ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [320]=Oop [304]=Oop [312]=Oop [328]=Oop [296]=Oop } pc offsets: 16432 
ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [320]=Oop [304]=Oop [312]=Oop [328]=Oop [296]=Oop rbx=Oop } pc offsets: 16480 16513 
ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [320]=Oop [312]=Oop [328]=Oop [296]=Oop rbx=Oop rax=Oop } pc offsets: 16546 
ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [320]=Oop [312]=Oop [328]=Oop [296]=Oop rbx=Oop } pc offsets: 16579 
ImmutableOopMap {[272]=Oop [280]=Oop [288]=Oop [344]=Oop } pc offsets: 16593 
ImmutableOopMap {rdx=Oop [416]=Oop [408]=Oop [424]=Oop [440]=Oop } pc offsets: 16641 16651 16699 16732 16765 
ImmutableOopMap {rdx=Oop [416]=Oop [408]=Oop [424]=Oop [440]=Oop r8=Oop } pc offsets: 16798 
ImmutableOopMap {rdx=Oop [416]=Oop [408]=Oop [424]=Oop [440]=Oop } pc offsets: 16831 
ImmutableOopMap {rdx=Oop [440]=Oop [424]=Oop [416]=Oop [408]=Oop r8=Oop } pc offsets: 16864 16897 
ImmutableOopMap {rdx=Oop [440]=Oop [424]=Oop [416]=Oop [408]=Oop } pc offsets: 16930 
ImmutableOopMap {rdx=Oop [440]=Oop [424]=Oop [416]=Oop [408]=Oop r8=Oop } pc offsets: 16963 
ImmutableOopMap {rdx=Oop [440]=Oop [424]=Oop [416]=Oop [408]=Oop } pc offsets: 16996 
ImmutableOopMap {rdx=Oop [440]=Oop [424]=Oop [408]=Oop [416]=Oop r9=Oop } pc offsets: 17029 
ImmutableOopMap {rdx=Oop [440]=Oop [424]=Oop [408]=Oop [416]=Oop } pc offsets: 17062 
ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop [424]=Oop [408]=Oop } pc offsets: 17076 
ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop rbx=Oop [416]=Oop } pc offsets: 17101 17149 
ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop [416]=Oop rax=Oop [448]=Oop } pc offsets: 17182 
ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rax=Oop [448]=Oop rcx=Oop } pc offsets: 17192 17240 17273 17306 
ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rax=Oop [448]=Oop rcx=Oop rsi=Oop } pc offsets: 17339 
ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rax=Oop [448]=Oop rcx=Oop } pc offsets: 17372 
ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop [448]=Oop rsi=Oop } pc offsets: 17405 17438 
ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop [448]=Oop } pc offsets: 17471 
ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop [448]=Oop rsi=Oop } pc offsets: 17504 
ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop [448]=Oop } pc offsets: 17537 
ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop [448]=Oop rdx=Oop } pc offsets: 17570 
ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop rcx=Oop [448]=Oop } pc offsets: 17603 
ImmutableOopMap {[432]=Oop [440]=Oop [424]=Oop [416]=Oop [448]=Oop } pc offsets: 17617 
ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop [448]=Oop rcx=Oop rsi=Oop } pc offsets: 17642 17690 
ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop [448]=Oop rax=Oop } pc offsets: 17723 
ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop rbx=Oop [424]=Oop } pc offsets: 17733 
ImmutableOopMap {[432]=Oop [440]=Oop [416]=Oop [408]=Oop [456]=Oop rsi=Oop } pc offsets: 17758 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop rcx=Oop rdx=Oop } pc offsets: 17792 17817 17842 17876 17924 17934 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop } pc offsets: 17982 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop rax=Oop } pc offsets: 18015 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop rax=Oop r11=Oop } pc offsets: 18048 18081 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [416]=Oop [432]=Oop [504]=Oop [472]=Oop [480]=Oop [488]=Oop [496]=Oop } pc offsets: 18095 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [416]=Oop [432]=Oop [504]=Oop [472]=Oop [480]=Oop [488]=Oop [496]=Oop rbx=Oop } pc offsets: 18143 18176 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [416]=Oop [432]=Oop [504]=Oop [472]=Oop [488]=Oop [496]=Oop rbx=Oop r11=Oop } pc offsets: 18209 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [416]=Oop [432]=Oop [504]=Oop [472]=Oop [488]=Oop [496]=Oop rbx=Oop } pc offsets: 18242 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [416]=Oop [432]=Oop [520]=Oop } pc offsets: 18256 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [544]=Oop [536]=Oop [416]=Oop rdx=Oop } pc offsets: 18304 18337 18370 18403 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [544]=Oop [536]=Oop [416]=Oop rdx=Oop rsi=Oop } pc offsets: 18436 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [544]=Oop [536]=Oop [416]=Oop rdx=Oop } pc offsets: 18469 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [544]=Oop [536]=Oop [416]=Oop rdx=Oop rsi=Oop } pc offsets: 18502 18535 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [544]=Oop [536]=Oop [416]=Oop rdx=Oop } pc offsets: 18568 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [544]=Oop [536]=Oop [416]=Oop rdx=Oop rsi=Oop } pc offsets: 18601 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [544]=Oop [536]=Oop [416]=Oop rdx=Oop } pc offsets: 18634 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [544]=Oop [536]=Oop rdx=Oop [416]=Oop r8=Oop } pc offsets: 18667 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [544]=Oop [536]=Oop rdx=Oop [416]=Oop } pc offsets: 18700 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [536]=Oop [544]=Oop } pc offsets: 18714 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop rdi=Oop [416]=Oop } pc offsets: 18739 18787 18820 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop [416]=Oop rax=Oop [560]=Oop } pc offsets: 18853 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop rax=Oop [560]=Oop rcx=Oop } pc offsets: 18863 18911 18944 18977 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop rax=Oop [560]=Oop rcx=Oop rsi=Oop } pc offsets: 19010 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop rax=Oop [560]=Oop rcx=Oop } pc offsets: 19043 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop [560]=Oop rcx=Oop rsi=Oop } pc offsets: 19076 19109 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop [560]=Oop rcx=Oop } pc offsets: 19142 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop [560]=Oop rcx=Oop rsi=Oop } pc offsets: 19175 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop [560]=Oop rcx=Oop } pc offsets: 19208 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop [560]=Oop rcx=Oop rdx=Oop } pc offsets: 19241 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop [560]=Oop rcx=Oop } pc offsets: 19274 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [536]=Oop [544]=Oop [416]=Oop [560]=Oop } pc offsets: 19288 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop rdi=Oop [536]=Oop [544]=Oop [560]=Oop } pc offsets: 19313 19361 19394 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [544]=Oop [536]=Oop [560]=Oop rax=Oop } pc offsets: 19404 19452 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [544]=Oop [560]=Oop [576]=Oop rax=Oop rbx=Oop } pc offsets: 19462 19510 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [544]=Oop [576]=Oop [584]=Oop rax=Oop r8=Oop [560]=Oop } pc offsets: 19520 19568 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [584]=Oop [592]=Oop rax=Oop rcx=Oop } pc offsets: 19578 19626 
ImmutableOopMap {[440]=Oop [408]=Oop [424]=Oop [432]=Oop [416]=Oop [592]=Oop rax=Oop } pc offsets: 19659 
ImmutableOopMap {[440]=Oop rcx=Oop rdx=Oop } pc offsets: 19678 19703 19728 19762 19810 
ImmutableOopMap {rax=Oop } pc offsets: 19820 
ImmutableOopMap {[408]=Oop [424]=Oop [416]=Oop [536]=Oop [544]=Oop [432]=Oop [440]=Oop rax=Oop } pc offsets: 19867 
ImmutableOopMap {[440]=Oop [432]=Oop [416]=Oop [424]=Oop [408]=Oop [544]=Oop [560]=Oop [536]=Oop rax=Oop } pc offsets: 19892 
ImmutableOopMap {[424]=Oop [416]=Oop [432]=Oop [440]=Oop [408]=Oop rax=Oop } pc offsets: 19917 
ImmutableOopMap {[432]=Oop [440]=Oop [448]=Oop [424]=Oop [416]=Oop rax=Oop } pc offsets: 19942 
ImmutableOopMap {} pc offsets: 19982 19995 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x000000011127785c offset=5c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@0 (line 15)
ScopeDesc(pc=0x0000000111277860 offset=60):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@1 (line 15)
ScopeDesc(pc=0x0000000111277864 offset=64):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@3 (line 15)
ScopeDesc(pc=0x000000011127789d offset=9d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@4 (line 15)
ScopeDesc(pc=0x00000001112779ac offset=1ac):
   jdk.incubator.vector.VectorIntrinsics::roundDown@5 (line 106)
ScopeDesc(pc=0x00000001112779ac offset=1ac):
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
ScopeDesc(pc=0x00000001112779ac offset=1ac):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
ScopeDesc(pc=0x0000000111277c63 offset=463):
   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
ScopeDesc(pc=0x0000000111277c63 offset=463):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
ScopeDesc(pc=0x0000000111277ca4 offset=4a4):
   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000000111277ca4 offset=4a4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[616],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111277d84 offset=584):
   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
ScopeDesc(pc=0x0000000111277d84 offset=584):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
ScopeDesc(pc=0x0000000111277ff7 offset=7f7):
   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
ScopeDesc(pc=0x0000000111277ff7 offset=7f7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
ScopeDesc(pc=0x0000000111278004 offset=804):
   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000000111278004 offset=804):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[616],double
    - l10: stack[344],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x00000001112780e4 offset=8e4):
   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
ScopeDesc(pc=0x00000001112780e4 offset=8e4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
ScopeDesc(pc=0x000000011127811b offset=91b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x000000011127817a offset=97a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@59 (line 24)
ScopeDesc(pc=0x00000001112781b4 offset=9b4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@60 (line 24)
ScopeDesc(pc=0x000000011127828f offset=a8f):
   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
ScopeDesc(pc=0x000000011127828f offset=a8f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x0000000111278381 offset=b81):
   jdk.internal.util.Preconditions::checkIndex@1 (line 265)
ScopeDesc(pc=0x0000000111278381 offset=b81):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x0000000111278381 offset=b81):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x0000000111278381 offset=b81):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x0000000111278381 offset=b81):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x00000001112783ba offset=bba):
   jdk.internal.util.Preconditions::checkIndex@6 (line 265)
ScopeDesc(pc=0x00000001112783ba offset=bba):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x00000001112783ba offset=bba):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x00000001112783ba offset=bba):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x00000001112783ba offset=bba):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x0000000111278453 offset=c53):
   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
ScopeDesc(pc=0x0000000111278453 offset=c53):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
ScopeDesc(pc=0x0000000111278453 offset=c53):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
ScopeDesc(pc=0x0000000111278453 offset=c53):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x000000011127875b offset=f5b):
   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
ScopeDesc(pc=0x000000011127875b offset=f5b):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011127875b offset=f5b):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011127875b offset=f5b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x0000000111278774 offset=f74):
   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111278774 offset=f74):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000000111278774 offset=f74):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111278774 offset=f74):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x0000000111278854 offset=1054):
   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
ScopeDesc(pc=0x0000000111278854 offset=1054):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x0000000111278854 offset=1054):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x0000000111278854 offset=1054):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x000000011127885f offset=105f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x0000000111278939 offset=1139):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x0000000111278939 offset=1139):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x000000011127894c offset=114c):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011127894c offset=114c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111278a30 offset=1230):
   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
ScopeDesc(pc=0x0000000111278a30 offset=1230):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x0000000111278b2b offset=132b):
   jdk.internal.util.Preconditions::checkIndex@1 (line 265)
ScopeDesc(pc=0x0000000111278b2b offset=132b):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x0000000111278b2b offset=132b):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x0000000111278b2b offset=132b):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x0000000111278b2b offset=132b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x0000000111278b64 offset=1364):
   jdk.internal.util.Preconditions::checkIndex@6 (line 265)
ScopeDesc(pc=0x0000000111278b64 offset=1364):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x0000000111278b64 offset=1364):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x0000000111278b64 offset=1364):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x0000000111278b64 offset=1364):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x0000000111278bfa offset=13fa):
   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
ScopeDesc(pc=0x0000000111278bfa offset=13fa):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
ScopeDesc(pc=0x0000000111278bfa offset=13fa):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
ScopeDesc(pc=0x0000000111278bfa offset=13fa):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x0000000111278ed4 offset=16d4):
   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
ScopeDesc(pc=0x0000000111278ed4 offset=16d4):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x0000000111278ed4 offset=16d4):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x0000000111278ed4 offset=16d4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x0000000111278eec offset=16ec):
   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111278eec offset=16ec):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000000111278eec offset=16ec):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000000111278eec offset=16ec):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x0000000111278fcc offset=17cc):
   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
ScopeDesc(pc=0x0000000111278fcc offset=17cc):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x0000000111278fcc offset=17cc):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x0000000111278fcc offset=17cc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x0000000111278fd7 offset=17d7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x00000001112790c4 offset=18c4):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00000001112790c4 offset=18c4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x00000001112790f8 offset=18f8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
ScopeDesc(pc=0x00000001112790ff offset=18ff):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[448],oop
    - l11: reg rax [0],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111279143 offset=1943):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
ScopeDesc(pc=0x0000000111279207 offset=1a07):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
ScopeDesc(pc=0x000000011127922c offset=1a2c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[656],double
ScopeDesc(pc=0x00000001112792de offset=1ade):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
ScopeDesc(pc=0x0000000111279304 offset=1b04):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[672],double
    - l5: empty
    - l6: empty
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[664],double
ScopeDesc(pc=0x0000000111279333 offset=1b33):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@130 (line 32)
ScopeDesc(pc=0x000000011127934b offset=1b4b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@141 (line 33)
ScopeDesc(pc=0x0000000111279362 offset=1b62):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@149 (line 34)
ScopeDesc(pc=0x0000000111279396 offset=1b96):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)
ScopeDesc(pc=0x000000011127939d offset=1b9d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: reg xmm2 [80],double
    - l5: 0
    - l6: reg xmm1 [64],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x00000001112793b8 offset=1bb8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)
ScopeDesc(pc=0x00000001112793bb offset=1bbb):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@133 (line 32)
ScopeDesc(pc=0x00000001112793fb offset=1bfb):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@134 (line 32)
ScopeDesc(pc=0x00000001112796c6 offset=1ec6):
   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
ScopeDesc(pc=0x00000001112796c6 offset=1ec6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
ScopeDesc(pc=0x00000001112796f4 offset=1ef4):
   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00000001112796f4 offset=1ef4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x00000001112797d4 offset=1fd4):
   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
ScopeDesc(pc=0x00000001112797d4 offset=1fd4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
ScopeDesc(pc=0x0000000111279a47 offset=2247):
   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
ScopeDesc(pc=0x0000000111279a47 offset=2247):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
ScopeDesc(pc=0x0000000111279a54 offset=2254):
   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000000111279a54 offset=2254):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[520],oop
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x0000000111279b36 offset=2336):
   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
ScopeDesc(pc=0x0000000111279b36 offset=2336):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
ScopeDesc(pc=0x0000000111279b43 offset=2343):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x0000000111279b96 offset=2396):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@204 (line 46)
ScopeDesc(pc=0x0000000111279bcf offset=23cf):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@205 (line 46)
ScopeDesc(pc=0x0000000111279da1 offset=25a1):
   jdk.internal.util.Preconditions::checkIndex@1 (line 265)
ScopeDesc(pc=0x0000000111279da1 offset=25a1):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x0000000111279da1 offset=25a1):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x0000000111279da1 offset=25a1):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x0000000111279da1 offset=25a1):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x0000000111279dd9 offset=25d9):
   jdk.internal.util.Preconditions::checkIndex@6 (line 265)
ScopeDesc(pc=0x0000000111279dd9 offset=25d9):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x0000000111279dd9 offset=25d9):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x0000000111279dd9 offset=25d9):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x0000000111279dd9 offset=25d9):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x0000000111279e74 offset=2674):
   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
ScopeDesc(pc=0x0000000111279e74 offset=2674):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
ScopeDesc(pc=0x0000000111279e74 offset=2674):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
ScopeDesc(pc=0x0000000111279e74 offset=2674):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011127a18e offset=298e):
   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
ScopeDesc(pc=0x000000011127a18e offset=298e):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011127a18e offset=298e):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011127a18e offset=298e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011127a1a4 offset=29a4):
   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127a1a4 offset=29a4):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127a1a4 offset=29a4):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127a1a4 offset=29a4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
ScopeDesc(pc=0x000000011127a284 offset=2a84):
   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
ScopeDesc(pc=0x000000011127a284 offset=2a84):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011127a284 offset=2a84):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011127a284 offset=2a84):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011127a287 offset=2a87):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
ScopeDesc(pc=0x000000011127a39d offset=2b9d):
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
ScopeDesc(pc=0x000000011127a39d offset=2b9d):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x000000011127a39d offset=2b9d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
ScopeDesc(pc=0x000000011127a3b4 offset=2bb4):
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: stack[552],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x00000001614058c0}
ScopeDesc(pc=0x000000011127a3b4 offset=2bb4):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127a3b4 offset=2bb4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
ScopeDesc(pc=0x000000011127a45e offset=2c5e):
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
ScopeDesc(pc=0x000000011127a45e offset=2c5e):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x000000011127a45e offset=2c5e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
ScopeDesc(pc=0x000000011127a474 offset=2c74):
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127a474 offset=2c74):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127a474 offset=2c74):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
ScopeDesc(pc=0x000000011127a558 offset=2d58):
   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
ScopeDesc(pc=0x000000011127a558 offset=2d58):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x000000011127a651 offset=2e51):
   jdk.internal.util.Preconditions::checkIndex@1 (line 265)
ScopeDesc(pc=0x000000011127a651 offset=2e51):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011127a651 offset=2e51):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011127a651 offset=2e51):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011127a651 offset=2e51):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x000000011127a689 offset=2e89):
   jdk.internal.util.Preconditions::checkIndex@6 (line 265)
ScopeDesc(pc=0x000000011127a689 offset=2e89):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011127a689 offset=2e89):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011127a689 offset=2e89):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011127a689 offset=2e89):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x000000011127a71f offset=2f1f):
   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
ScopeDesc(pc=0x000000011127a71f offset=2f1f):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
ScopeDesc(pc=0x000000011127a71f offset=2f1f):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
ScopeDesc(pc=0x000000011127a71f offset=2f1f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x000000011127a9f8 offset=31f8):
   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
ScopeDesc(pc=0x000000011127a9f8 offset=31f8):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011127a9f8 offset=31f8):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011127a9f8 offset=31f8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x000000011127aa0c offset=320c):
   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127aa0c offset=320c):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127aa0c offset=320c):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127aa0c offset=320c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
ScopeDesc(pc=0x000000011127aaec offset=32ec):
   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
ScopeDesc(pc=0x000000011127aaec offset=32ec):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011127aaec offset=32ec):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011127aaec offset=32ec):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x000000011127aaef offset=32ef):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
ScopeDesc(pc=0x000000011127ac05 offset=3405):
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
ScopeDesc(pc=0x000000011127ac05 offset=3405):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x000000011127ac05 offset=3405):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
ScopeDesc(pc=0x000000011127ac1c offset=341c):
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: stack[568],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x00000001614058c0}
ScopeDesc(pc=0x000000011127ac1c offset=341c):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127ac1c offset=341c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
ScopeDesc(pc=0x000000011127acc6 offset=34c6):
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
ScopeDesc(pc=0x000000011127acc6 offset=34c6):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x000000011127acc6 offset=34c6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
ScopeDesc(pc=0x000000011127acdc offset=34dc):
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127acdc offset=34dc):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127acdc offset=34dc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
ScopeDesc(pc=0x000000011127acdf offset=34df):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
ScopeDesc(pc=0x000000011127adc4 offset=35c4):
   jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
ScopeDesc(pc=0x000000011127adc4 offset=35c4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
ScopeDesc(pc=0x000000011127addc offset=35dc):
   jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011127addc offset=35dc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
ScopeDesc(pc=0x000000011127ade7 offset=35e7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
ScopeDesc(pc=0x000000011127aec7 offset=36c7):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011127aec7 offset=36c7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
ScopeDesc(pc=0x000000011127aee4 offset=36e4):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011127aee4 offset=36e4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
ScopeDesc(pc=0x000000011127aeef offset=36ef):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
ScopeDesc(pc=0x000000011127afca offset=37ca):
   jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
ScopeDesc(pc=0x000000011127afca offset=37ca):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
ScopeDesc(pc=0x000000011127afe4 offset=37e4):
   jdk.incubator.vector.DoubleVector::mul@5 (line 1187)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011127afe4 offset=37e4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[592],oop
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[544],oop
ScopeDesc(pc=0x000000011127afef offset=37ef):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011127b0cd offset=38cd):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011127b0cd offset=38cd):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
ScopeDesc(pc=0x000000011127b0dc offset=38dc):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011127b0dc offset=38dc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[592],oop
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127b10e offset=390e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)
ScopeDesc(pc=0x000000011127b115 offset=3915):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rdx [4],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[592],oop
    - l21: reg rax [0],oop
    - l22: empty
ScopeDesc(pc=0x000000011127b143 offset=3943):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)
ScopeDesc(pc=0x000000011127b1fc offset=39fc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@282 (line 52)
ScopeDesc(pc=0x000000011127b214 offset=3a14):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@282 (line 52)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: empty
    - l17: empty
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: 0
ScopeDesc(pc=0x000000011127b2c1 offset=3ac1):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011127b2dc offset=3adc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: stack[696],double
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: 0
ScopeDesc(pc=0x000000011127b310 offset=3b10):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@301 (line 55)
ScopeDesc(pc=0x000000011127b322 offset=3b22):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@313 (line 56)
ScopeDesc(pc=0x000000011127b349 offset=3b49):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
ScopeDesc(pc=0x000000011127b384 offset=3b84):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)
ScopeDesc(pc=0x000000011127b38b offset=3b8b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: reg xmm3 [96],double
    - l18: 0
    - l19: reg xmm1 [64],double
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127b3a6 offset=3ba6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)
ScopeDesc(pc=0x000000011127b3de offset=3bde):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@305 (line 55)
ScopeDesc(pc=0x000000011127b3ef offset=3bef):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@360 (line 60)
ScopeDesc(pc=0x000000011127b40a offset=3c0a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@374 (line 61)
ScopeDesc(pc=0x000000011127b420 offset=3c20):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@377 (line 62)
ScopeDesc(pc=0x000000011127b45e offset=3c5e):
   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
ScopeDesc(pc=0x000000011127b45e offset=3c5e):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011127b45e offset=3c5e):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011127b45e offset=3c5e):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011127b45e offset=3c5e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011127b464 offset=3c64):
   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127b464 offset=3c64):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011127b464 offset=3c64):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127b464 offset=3c64):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: stack[432],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127b464 offset=3c64):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
ScopeDesc(pc=0x000000011127b46c offset=3c6c):
   jdk.internal.util.Preconditions::checkIndex@15 (line 266)
ScopeDesc(pc=0x000000011127b46c offset=3c6c):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011127b46c offset=3c6c):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011127b46c offset=3c6c):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011127b46c offset=3c6c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011127b499 offset=3c99):
   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
ScopeDesc(pc=0x000000011127b499 offset=3c99):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011127b499 offset=3c99):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011127b499 offset=3c99):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011127b499 offset=3c99):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x000000011127b4ac offset=3cac):
   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127b4ac offset=3cac):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011127b4ac offset=3cac):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127b4ac offset=3cac):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: stack[416],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127b4ac offset=3cac):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
ScopeDesc(pc=0x000000011127b4b4 offset=3cb4):
   jdk.internal.util.Preconditions::checkIndex@15 (line 266)
ScopeDesc(pc=0x000000011127b4b4 offset=3cb4):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011127b4b4 offset=3cb4):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011127b4b4 offset=3cb4):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011127b4b4 offset=3cb4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x000000011127b4f3 offset=3cf3):
   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
ScopeDesc(pc=0x000000011127b4f3 offset=3cf3):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011127b4f3 offset=3cf3):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011127b4f3 offset=3cf3):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011127b4f3 offset=3cf3):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x000000011127b4fc offset=3cfc):
   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127b4fc offset=3cfc):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011127b4fc offset=3cfc):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127b4fc offset=3cfc):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: stack[432],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127b4fc offset=3cfc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x000000011127b504 offset=3d04):
   jdk.internal.util.Preconditions::checkIndex@15 (line 266)
ScopeDesc(pc=0x000000011127b504 offset=3d04):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011127b504 offset=3d04):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011127b504 offset=3d04):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011127b504 offset=3d04):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x000000011127b52e offset=3d2e):
   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
ScopeDesc(pc=0x000000011127b52e offset=3d2e):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011127b52e offset=3d2e):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011127b52e offset=3d2e):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011127b52e offset=3d2e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x000000011127b53c offset=3d3c):
   jdk.internal.util.Preconditions::checkIndex@12 (line 266)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127b53c offset=3d3c):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011127b53c offset=3d3c):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127b53c offset=3d3c):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: stack[416],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127b53c offset=3d3c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x000000011127b544 offset=3d44):
   jdk.internal.util.Preconditions::checkIndex@15 (line 266)
ScopeDesc(pc=0x000000011127b544 offset=3d44):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x000000011127b544 offset=3d44):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011127b544 offset=3d44):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011127b544 offset=3d44):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x000000011127b59f offset=3d9f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@7 (line 15)
ScopeDesc(pc=0x000000011127b5c1 offset=3dc1):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@13 (line 15)
ScopeDesc(pc=0x000000011127b5d4 offset=3dd4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@13 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[608],oop
ScopeDesc(pc=0x000000011127b5e1 offset=3de1):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@16 (line 15)
ScopeDesc(pc=0x000000011127b72a offset=3f2a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@-1 (line 15)
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127b734 offset=3f34):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@1 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127b74d offset=3f4d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@3 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127b77d offset=3f7d):
   jdk.incubator.vector.AbstractSpecies::loopBound@-1 (line 203)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: reg r8 [16],int
ScopeDesc(pc=0x000000011127b77d offset=3f7d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127b79e offset=3f9e):
   jdk.incubator.vector.VectorIntrinsics::roundDown@-1 (line 106)
   Locals
    - l0: reg r8 [16],int
    - l1: 4
ScopeDesc(pc=0x000000011127b79e offset=3f9e):
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011127b79e offset=3f9e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127b7bf offset=3fbf):
   jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: empty
ScopeDesc(pc=0x000000011127b7bf offset=3fbf):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127b7e0 offset=3fe0):
   jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
   Locals
    - l0: 0
    - l1: 0
ScopeDesc(pc=0x000000011127b7e0 offset=3fe0):
   jdk.incubator.vector.DoubleVector::zero@19 (line 437)
   Locals
    - l0: empty
    - l1: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
ScopeDesc(pc=0x000000011127b7e0 offset=3fe0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127b801 offset=4001):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000000161405ab0}
ScopeDesc(pc=0x000000011127b801 offset=4001):
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
ScopeDesc(pc=0x000000011127b801 offset=4001):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127b822 offset=4022):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000000161405ab0}
ScopeDesc(pc=0x000000011127b822 offset=4022):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011127b822 offset=4022):
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
ScopeDesc(pc=0x000000011127b822 offset=4022):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127b830 offset=4030):
   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011127b830 offset=4030):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[616],double
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127b860 offset=4060):
   jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: empty
ScopeDesc(pc=0x000000011127b860 offset=4060):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[616],double
    - l10: reg rbx [6],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127b881 offset=4081):
   jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
   Locals
    - l0: 0
    - l1: 0
ScopeDesc(pc=0x000000011127b881 offset=4081):
   jdk.incubator.vector.DoubleVector::zero@19 (line 437)
   Locals
    - l0: empty
    - l1: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
ScopeDesc(pc=0x000000011127b881 offset=4081):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[616],double
    - l10: reg rbx [6],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127b8a2 offset=40a2):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000000161405ab0}
ScopeDesc(pc=0x000000011127b8a2 offset=40a2):
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
ScopeDesc(pc=0x000000011127b8a2 offset=40a2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[616],double
    - l10: reg rbx [6],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127b8c3 offset=40c3):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000000161405ab0}
ScopeDesc(pc=0x000000011127b8c3 offset=40c3):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011127b8c3 offset=40c3):
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
ScopeDesc(pc=0x000000011127b8c3 offset=40c3):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[616],double
    - l10: reg rbx [6],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127b8d1 offset=40d1):
   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011127b8d1 offset=40d1):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
   Locals
    - l0: stack[288],oop
    - l1: stack[280],oop
    - l2: stack[272],oop
    - l3: 0
    - l4: 0
    - l5: 0
    - l6: 0
    - l7: 0
    - l8: 0
    - l9: stack[616],double
    - l10: stack[344],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127b901 offset=4101):
   jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
    - l3: empty
ScopeDesc(pc=0x000000011127b901 offset=4101):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x000000011127b90b offset=410b):
   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127b90b offset=410b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x000000011127b93b offset=413b):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
   Locals
    - l0: reg r11 [22],int
    - l1: 4
    - l2: reg r8 [16],int
ScopeDesc(pc=0x000000011127b93b offset=413b):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127b93b offset=413b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x000000011127b95c offset=415c):
   java.util.Objects::checkIndex@-1 (line 359)
   Locals
    - l0: reg r11 [22],int
    - l1: reg r8 [16],int
ScopeDesc(pc=0x000000011127b95c offset=415c):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127b95c offset=415c):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127b95c offset=415c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x000000011127b97d offset=417d):
   jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
   Locals
    - l0: reg r11 [22],int
    - l1: reg r8 [16],int
    - l2: NULL
ScopeDesc(pc=0x000000011127b97d offset=417d):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011127b97d offset=417d):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127b97d offset=417d):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127b97d offset=417d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x000000011127b99e offset=419e):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
ScopeDesc(pc=0x000000011127b99e offset=419e):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
    - l3: empty
ScopeDesc(pc=0x000000011127b99e offset=419e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x000000011127b9bf offset=41bf):
   jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: empty
ScopeDesc(pc=0x000000011127b9bf offset=41bf):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011127b9bf offset=41bf):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
    - l3: empty
ScopeDesc(pc=0x000000011127b9bf offset=41bf):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x000000011127b9e0 offset=41e0):
   jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x00000001614d5db8}
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
ScopeDesc(pc=0x000000011127b9e0 offset=41e0):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127b9e0 offset=41e0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x000000011127ba01 offset=4201):
   jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x00000001614d5db8}
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
    - l3: empty
ScopeDesc(pc=0x000000011127ba01 offset=4201):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127ba01 offset=4201):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127ba01 offset=4201):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x000000011127ba22 offset=4222):
   jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011127ba22 offset=4222):
   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
    - l3: empty
ScopeDesc(pc=0x000000011127ba22 offset=4222):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127ba22 offset=4222):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127ba22 offset=4222):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x000000011127ba43 offset=4243):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011127ba43 offset=4243):
   jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
ScopeDesc(pc=0x000000011127ba43 offset=4243):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127ba43 offset=4243):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127ba43 offset=4243):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x000000011127ba64 offset=4264):
   jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
   Locals
    - l0: empty
    - l1: reg r11 [22],int
ScopeDesc(pc=0x000000011127ba64 offset=4264):
   jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg r11 [22],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
ScopeDesc(pc=0x000000011127ba64 offset=4264):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127ba64 offset=4264):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127ba64 offset=4264):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x000000011127ba85 offset=4285):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x00000001614058e0}
ScopeDesc(pc=0x000000011127ba85 offset=4285):
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
    - @4: 0
    - @5: reg r8 [16],long
    - @6: reg rdx [4],oop
    - @7: reg r11 [22],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
ScopeDesc(pc=0x000000011127ba85 offset=4285):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127ba85 offset=4285):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127ba85 offset=4285):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x000000011127baa6 offset=42a6):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x00000001614058e0}
ScopeDesc(pc=0x000000011127baa6 offset=42a6):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011127baa6 offset=42a6):
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
    - @4: 0
    - @5: reg r8 [16],long
    - @6: reg rdx [4],oop
    - @7: reg r11 [22],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
ScopeDesc(pc=0x000000011127baa6 offset=42a6):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127baa6 offset=42a6):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127baa6 offset=42a6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x000000011127bab4 offset=42b4):
   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127bab4 offset=42b4):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127bab4 offset=42b4):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127bab4 offset=42b4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x000000011127bacd offset=42cd):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127bafd offset=42fd):
   jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
   Locals
    - l0: reg rbx [6],oop
    - l1: reg rcx [2],oop
ScopeDesc(pc=0x000000011127bafd offset=42fd):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127bb1e offset=431e):
   jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: stack[416],oop
    - l2: stack[372]
    - l3: empty
ScopeDesc(pc=0x000000011127bb1e offset=431e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x000000011127bb28 offset=4328):
   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127bb28 offset=4328):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x000000011127bb58 offset=4358):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
   Locals
    - l0: stack[372]
    - l1: 4
    - l2: reg rsi [12],int
ScopeDesc(pc=0x000000011127bb58 offset=4358):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: reg rcx [2],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127bb58 offset=4358):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x000000011127bb79 offset=4379):
   java.util.Objects::checkIndex@-1 (line 359)
   Locals
    - l0: reg r11 [22],int
    - l1: reg rdi [14],int
ScopeDesc(pc=0x000000011127bb79 offset=4379):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127bb79 offset=4379):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: reg rcx [2],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127bb79 offset=4379):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x000000011127bb9a offset=439a):
   jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
   Locals
    - l0: reg r11 [22],int
    - l1: reg rdi [14],int
    - l2: NULL
ScopeDesc(pc=0x000000011127bb9a offset=439a):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011127bb9a offset=439a):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127bb9a offset=439a):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: reg rcx [2],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127bb9a offset=439a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x000000011127bbbb offset=43bb):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
ScopeDesc(pc=0x000000011127bbbb offset=43bb):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg r11 [22],int
    - l3: empty
ScopeDesc(pc=0x000000011127bbbb offset=43bb):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x000000011127bbdc offset=43dc):
   jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: empty
ScopeDesc(pc=0x000000011127bbdc offset=43dc):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011127bbdc offset=43dc):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg r11 [22],int
    - l3: empty
ScopeDesc(pc=0x000000011127bbdc offset=43dc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: reg rax [0],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x000000011127bbfd offset=43fd):
   jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x00000001614d5db8}
    - l1: reg rcx [2],oop
    - l2: reg r11 [22],int
ScopeDesc(pc=0x000000011127bbfd offset=43fd):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127bbfd offset=43fd):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x000000011127bc1e offset=441e):
   jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x00000001614d5db8}
    - l1: reg rcx [2],oop
    - l2: reg r11 [22],int
    - l3: empty
ScopeDesc(pc=0x000000011127bc1e offset=441e):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127bc1e offset=441e):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127bc1e offset=441e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x000000011127bc3f offset=443f):
   jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011127bc3f offset=443f):
   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg r11 [22],int
    - l3: empty
ScopeDesc(pc=0x000000011127bc3f offset=443f):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127bc3f offset=443f):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127bc3f offset=443f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x000000011127bc60 offset=4460):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011127bc60 offset=4460):
   jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg r11 [22],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
ScopeDesc(pc=0x000000011127bc60 offset=4460):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127bc60 offset=4460):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127bc60 offset=4460):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x000000011127bc81 offset=4481):
   jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
   Locals
    - l0: empty
    - l1: reg r11 [22],int
ScopeDesc(pc=0x000000011127bc81 offset=4481):
   jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg r11 [22],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rcx [2],oop
ScopeDesc(pc=0x000000011127bc81 offset=4481):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127bc81 offset=4481):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127bc81 offset=4481):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x000000011127bca2 offset=44a2):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x00000001614058e0}
ScopeDesc(pc=0x000000011127bca2 offset=44a2):
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rcx [2],oop
    - @4: 0
    - @5: reg r9 [18],long
    - @6: reg rcx [2],oop
    - @7: reg r11 [22],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
ScopeDesc(pc=0x000000011127bca2 offset=44a2):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127bca2 offset=44a2):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127bca2 offset=44a2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x000000011127bcc3 offset=44c3):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x00000001614058e0}
ScopeDesc(pc=0x000000011127bcc3 offset=44c3):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011127bcc3 offset=44c3):
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rcx [2],oop
    - @4: 0
    - @5: reg r9 [18],long
    - @6: reg rcx [2],oop
    - @7: reg r11 [22],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
ScopeDesc(pc=0x000000011127bcc3 offset=44c3):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127bcc3 offset=44c3):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127bcc3 offset=44c3):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x000000011127bcd1 offset=44d1):
   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127bcd1 offset=44d1):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127bcd1 offset=44d1):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127bcd1 offset=44d1):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x000000011127bcea offset=44ea):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127bd1a offset=451a):
   jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
   Locals
    - l0: reg rsi [12],oop
    - l1: reg rcx [2],oop
ScopeDesc(pc=0x000000011127bd1a offset=451a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127bd3b offset=453b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[448],oop
    - l11: reg rax [0],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127bd45 offset=4545):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127bd5e offset=455e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127bd80 offset=4580):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@141 (line 33)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127bd99 offset=4599):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@149 (line 34)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127bdb2 offset=45b2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@149 (line 34)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127bdd4 offset=45d4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@149 (line 34)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127be04 offset=4604):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: reg xmm2 [80],double
    - l5: 0
    - l6: reg xmm1 [64],double
    - l7: reg r11 [22],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127be0e offset=460e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@133 (line 32)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127be3e offset=463e):
   jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: empty
ScopeDesc(pc=0x000000011127be3e offset=463e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: reg xmm1 [64],double
    - l14: 0
    - l15: reg xmm0 [48],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127be5f offset=465f):
   jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
   Locals
    - l0: 0
    - l1: 0
ScopeDesc(pc=0x000000011127be5f offset=465f):
   jdk.incubator.vector.DoubleVector::zero@19 (line 437)
   Locals
    - l0: empty
    - l1: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
ScopeDesc(pc=0x000000011127be5f offset=465f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: reg xmm1 [64],double
    - l14: 0
    - l15: reg xmm0 [48],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127be80 offset=4680):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000000161405ab0}
ScopeDesc(pc=0x000000011127be80 offset=4680):
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
ScopeDesc(pc=0x000000011127be80 offset=4680):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: reg xmm1 [64],double
    - l14: 0
    - l15: reg xmm0 [48],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127bea1 offset=46a1):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000000161405ab0}
ScopeDesc(pc=0x000000011127bea1 offset=46a1):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011127bea1 offset=46a1):
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
ScopeDesc(pc=0x000000011127bea1 offset=46a1):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: reg xmm1 [64],double
    - l14: 0
    - l15: reg xmm0 [48],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127beaf offset=46af):
   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011127beaf offset=46af):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@186 (line 44)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127bedf offset=46df):
   jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: empty
ScopeDesc(pc=0x000000011127bedf offset=46df):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: reg rbx [6],oop
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127bf00 offset=4700):
   jdk.incubator.vector.DoubleVector::toBits@-1 (line 403)
   Locals
    - l0: 0
    - l1: 0
ScopeDesc(pc=0x000000011127bf00 offset=4700):
   jdk.incubator.vector.DoubleVector::zero@19 (line 437)
   Locals
    - l0: empty
    - l1: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
ScopeDesc(pc=0x000000011127bf00 offset=4700):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: reg rbx [6],oop
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127bf21 offset=4721):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000000161405ab0}
ScopeDesc(pc=0x000000011127bf21 offset=4721):
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
ScopeDesc(pc=0x000000011127bf21 offset=4721):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: reg rbx [6],oop
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127bf42 offset=4742):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000000161405ab0}
ScopeDesc(pc=0x000000011127bf42 offset=4742):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011127bf42 offset=4742):
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
ScopeDesc(pc=0x000000011127bf42 offset=4742):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: reg rbx [6],oop
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127bf50 offset=4750):
   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011127bf50 offset=4750):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@194 (line 45)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[520],oop
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127bf80 offset=4780):
   jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: empty
ScopeDesc(pc=0x000000011127bf80 offset=4780):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
ScopeDesc(pc=0x000000011127bfa1 offset=47a1):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
   Locals
    - l0: reg rax [0],int
    - l1: 4
    - l2: reg rbx [6],int
ScopeDesc(pc=0x000000011127bfa1 offset=47a1):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127bfa1 offset=47a1):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
ScopeDesc(pc=0x000000011127bfc2 offset=47c2):
   java.util.Objects::checkIndex@-1 (line 359)
   Locals
    - l0: reg rax [0],int
    - l1: reg rdi [14],int
ScopeDesc(pc=0x000000011127bfc2 offset=47c2):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127bfc2 offset=47c2):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127bfc2 offset=47c2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
ScopeDesc(pc=0x000000011127bfe3 offset=47e3):
   jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
   Locals
    - l0: reg rax [0],int
    - l1: reg rdi [14],int
    - l2: NULL
ScopeDesc(pc=0x000000011127bfe3 offset=47e3):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011127bfe3 offset=47e3):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127bfe3 offset=47e3):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: reg rdx [4],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127bfe3 offset=47e3):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
ScopeDesc(pc=0x000000011127c004 offset=4804):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
ScopeDesc(pc=0x000000011127c004 offset=4804):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: empty
ScopeDesc(pc=0x000000011127c004 offset=4804):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
ScopeDesc(pc=0x000000011127c025 offset=4825):
   jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: empty
ScopeDesc(pc=0x000000011127c025 offset=4825):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011127c025 offset=4825):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: empty
ScopeDesc(pc=0x000000011127c025 offset=4825):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
ScopeDesc(pc=0x000000011127c046 offset=4846):
   jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x00000001614d5db8}
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
ScopeDesc(pc=0x000000011127c046 offset=4846):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127c046 offset=4846):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
ScopeDesc(pc=0x000000011127c067 offset=4867):
   jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x00000001614d5db8}
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: empty
ScopeDesc(pc=0x000000011127c067 offset=4867):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127c067 offset=4867):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127c067 offset=4867):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
ScopeDesc(pc=0x000000011127c088 offset=4888):
   jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011127c088 offset=4888):
   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: empty
ScopeDesc(pc=0x000000011127c088 offset=4888):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127c088 offset=4888):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127c088 offset=4888):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
ScopeDesc(pc=0x000000011127c0a9 offset=48a9):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011127c0a9 offset=48a9):
   jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
ScopeDesc(pc=0x000000011127c0a9 offset=48a9):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127c0a9 offset=48a9):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127c0a9 offset=48a9):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
ScopeDesc(pc=0x000000011127c0ca offset=48ca):
   jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
   Locals
    - l0: empty
    - l1: reg rax [0],int
ScopeDesc(pc=0x000000011127c0ca offset=48ca):
   jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
   Locals
    - l0: empty
    - l1: reg rdx [4],oop
    - l2: reg rax [0],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
ScopeDesc(pc=0x000000011127c0ca offset=48ca):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127c0ca offset=48ca):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127c0ca offset=48ca):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
ScopeDesc(pc=0x000000011127c0eb offset=48eb):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x00000001614058e0}
ScopeDesc(pc=0x000000011127c0eb offset=48eb):
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
    - @4: 0
    - @5: reg rsi [12],long
    - @6: reg rdx [4],oop
    - @7: reg rax [0],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
ScopeDesc(pc=0x000000011127c0eb offset=48eb):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127c0eb offset=48eb):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127c0eb offset=48eb):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
ScopeDesc(pc=0x000000011127c10c offset=490c):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x00000001614058e0}
ScopeDesc(pc=0x000000011127c10c offset=490c):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011127c10c offset=490c):
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rdx [4],oop
    - @4: 0
    - @5: reg rsi [12],long
    - @6: reg rdx [4],oop
    - @7: reg rax [0],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
ScopeDesc(pc=0x000000011127c10c offset=490c):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127c10c offset=490c):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127c10c offset=490c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
ScopeDesc(pc=0x000000011127c11a offset=491a):
   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127c11a offset=491a):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127c11a offset=491a):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127c11a offset=491a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
ScopeDesc(pc=0x000000011127c133 offset=4933):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127c163 offset=4963):
   jdk.incubator.vector.DoubleVector::sub@-1 (line 1138)
   Locals
    - l0: reg rdi [14],oop
    - l1: 0
    - l2: stack[680],double
ScopeDesc(pc=0x000000011127c163 offset=4963):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
ScopeDesc(pc=0x000000011127c184 offset=4984):
   jdk.incubator.vector.DoubleVector::lanewise@-1 (line 714)
   Locals
    - l0: reg rdi [14],oop
    - l1: a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x00000001614058c0}
    - l2: 0
    - l3: stack[680],double
ScopeDesc(pc=0x000000011127c184 offset=4984):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127c184 offset=4984):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
ScopeDesc(pc=0x000000011127c1a5 offset=49a5):
   jdk.incubator.vector.DoubleVector::fromArray@-1 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: stack[416],oop
    - l2: stack[516]
    - l3: empty
ScopeDesc(pc=0x000000011127c1a5 offset=49a5):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[536],oop
ScopeDesc(pc=0x000000011127c1af offset=49af):
   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127c1af offset=49af):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[536],oop
ScopeDesc(pc=0x000000011127c1df offset=49df):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 71)
   Locals
    - l0: stack[516]
    - l1: 4
    - l2: reg rsi [12],int
ScopeDesc(pc=0x000000011127c1df offset=49df):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: reg rcx [2],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127c1df offset=49df):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[536],oop
ScopeDesc(pc=0x000000011127c200 offset=4a00):
   java.util.Objects::checkIndex@-1 (line 359)
   Locals
    - l0: reg rbx [6],int
    - l1: reg rdi [14],int
ScopeDesc(pc=0x000000011127c200 offset=4a00):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127c200 offset=4a00):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: reg rcx [2],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127c200 offset=4a00):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[536],oop
ScopeDesc(pc=0x000000011127c221 offset=4a21):
   jdk.internal.util.Preconditions::checkIndex@-1 (line 265)
   Locals
    - l0: reg rbx [6],int
    - l1: reg rdi [14],int
    - l2: NULL
ScopeDesc(pc=0x000000011127c221 offset=4a21):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011127c221 offset=4a21):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127c221 offset=4a21):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: reg rcx [2],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127c221 offset=4a21):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[536],oop
ScopeDesc(pc=0x000000011127c242 offset=4a42):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@-1 (line 3484)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
ScopeDesc(pc=0x000000011127c242 offset=4a42):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg rbx [6],int
    - l3: empty
ScopeDesc(pc=0x000000011127c242 offset=4a42):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[536],oop
ScopeDesc(pc=0x000000011127c263 offset=4a63):
   jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 295)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: empty
ScopeDesc(pc=0x000000011127c263 offset=4a63):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011127c263 offset=4a63):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg rbx [6],int
    - l3: empty
ScopeDesc(pc=0x000000011127c263 offset=4a63):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: reg rax [0],oop
   Expression stack
    - @0: stack[536],oop
ScopeDesc(pc=0x000000011127c284 offset=4a84):
   jdk.incubator.vector.Double256Vector::fromArray0@-1 (line 777)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x00000001614d5db8}
    - l1: reg rcx [2],oop
    - l2: reg rbx [6],int
ScopeDesc(pc=0x000000011127c284 offset=4a84):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127c284 offset=4a84):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
ScopeDesc(pc=0x000000011127c2a5 offset=4aa5):
   jdk.incubator.vector.DoubleVector::fromArray0Template@-1 (line 3118)
   Locals
    - l0: a 'jdk/incubator/vector/Double256Vector'{0x00000001614d5db8}
    - l1: reg rcx [2],oop
    - l2: reg rbx [6],int
    - l3: empty
ScopeDesc(pc=0x000000011127c2a5 offset=4aa5):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127c2a5 offset=4aa5):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127c2a5 offset=4aa5):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
ScopeDesc(pc=0x000000011127c2c6 offset=4ac6):
   jdk.incubator.vector.Double256Vector::vspecies@-1 (line 86)
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011127c2c6 offset=4ac6):
   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg rbx [6],int
    - l3: empty
ScopeDesc(pc=0x000000011127c2c6 offset=4ac6):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127c2c6 offset=4ac6):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127c2c6 offset=4ac6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
ScopeDesc(pc=0x000000011127c2e7 offset=4ae7):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::elementType@-1 (line 3386)
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011127c2e7 offset=4ae7):
   jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg rbx [6],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
ScopeDesc(pc=0x000000011127c2e7 offset=4ae7):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127c2e7 offset=4ae7):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127c2e7 offset=4ae7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
ScopeDesc(pc=0x000000011127c308 offset=4b08):
   jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3259)
   Locals
    - l0: empty
    - l1: reg rbx [6],int
ScopeDesc(pc=0x000000011127c308 offset=4b08):
   jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
   Locals
    - l0: empty
    - l1: reg rcx [2],oop
    - l2: reg rbx [6],int
    - l3: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rcx [2],oop
ScopeDesc(pc=0x000000011127c308 offset=4b08):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127c308 offset=4b08):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127c308 offset=4b08):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
ScopeDesc(pc=0x000000011127c329 offset=4b29):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x00000001614058e0}
ScopeDesc(pc=0x000000011127c329 offset=4b29):
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rcx [2],oop
    - @4: 0
    - @5: reg r9 [18],long
    - @6: reg rcx [2],oop
    - @7: reg rbx [6],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
ScopeDesc(pc=0x000000011127c329 offset=4b29):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127c329 offset=4b29):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127c329 offset=4b29):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
ScopeDesc(pc=0x000000011127c34a offset=4b4a):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05000::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x00000001614058e0}
ScopeDesc(pc=0x000000011127c34a offset=4b4a):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   Locals
    - l0: empty
ScopeDesc(pc=0x000000011127c34a offset=4b4a):
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @1: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @2: 4
    - @3: reg rcx [2],oop
    - @4: 0
    - @5: reg r9 [18],long
    - @6: reg rcx [2],oop
    - @7: reg rbx [6],int
    - @8: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
ScopeDesc(pc=0x000000011127c34a offset=4b4a):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127c34a offset=4b4a):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127c34a offset=4b4a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
ScopeDesc(pc=0x000000011127c358 offset=4b58):
   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127c358 offset=4b58):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127c358 offset=4b58):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127c358 offset=4b58):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
ScopeDesc(pc=0x000000011127c371 offset=4b71):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127c3a1 offset=4ba1):
   jdk.incubator.vector.DoubleVector::sub@-1 (line 1138)
   Locals
    - l0: reg rdi [14],oop
    - l1: 0
    - l2: stack[688],double
ScopeDesc(pc=0x000000011127c3a1 offset=4ba1):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
ScopeDesc(pc=0x000000011127c3c2 offset=4bc2):
   jdk.incubator.vector.DoubleVector::lanewise@-1 (line 714)
   Locals
    - l0: reg rdi [14],oop
    - l1: a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x00000001614058c0}
    - l2: 0
    - l3: stack[688],double
ScopeDesc(pc=0x000000011127c3c2 offset=4bc2):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127c3c2 offset=4bc2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
ScopeDesc(pc=0x000000011127c3cc offset=4bcc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127c3fc offset=4bfc):
   jdk.incubator.vector.DoubleVector::mul@-1 (line 1187)
   Locals
    - l0: reg rax [0],oop
    - l1: stack[560],oop
ScopeDesc(pc=0x000000011127c3fc offset=4bfc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@242 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
ScopeDesc(pc=0x000000011127c406 offset=4c06):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127c436 offset=4c36):
   jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
   Locals
    - l0: reg rbx [6],oop
    - l1: reg rax [0],oop
ScopeDesc(pc=0x000000011127c436 offset=4c36):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
ScopeDesc(pc=0x000000011127c440 offset=4c40):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127c470 offset=4c70):
   jdk.incubator.vector.DoubleVector::mul@-1 (line 1187)
   Locals
    - l0: reg r8 [16],oop
    - l1: reg r8 [16],oop
ScopeDesc(pc=0x000000011127c470 offset=4c70):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@256 (line 49)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: reg rax [0],oop
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[544],oop
ScopeDesc(pc=0x000000011127c47a offset=4c7a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127c4aa offset=4caa):
   jdk.incubator.vector.DoubleVector::add@-1 (line 1038)
   Locals
    - l0: reg rcx [2],oop
    - l1: reg rax [0],oop
ScopeDesc(pc=0x000000011127c4aa offset=4caa):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[592],oop
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127c4cb offset=4ccb):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rdx [4],int
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[592],oop
    - l21: reg rax [0],oop
    - l22: empty
ScopeDesc(pc=0x000000011127c4de offset=4cde):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@313 (line 56)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127c4f7 offset=4cf7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127c510 offset=4d10):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127c532 offset=4d32):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@340 (line 57)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127c562 offset=4d62):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)  reexecute=true
   Locals
    - l0: stack[440],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rax [0],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: reg xmm3 [96],double
    - l18: 0
    - l19: reg xmm1 [64],double
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127c56c offset=4d6c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@360 (line 60)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127c59b offset=4d9b):
   jdk.internal.util.Preconditions::checkIndex@15 (line 266)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127c59b offset=4d9b):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011127c59b offset=4d9b):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127c59b offset=4d9b):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: stack[432],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127c59b offset=4d9b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: stack[536],oop
    - l21: stack[544],oop
    - l22: empty
ScopeDesc(pc=0x000000011127c5b4 offset=4db4):
   jdk.internal.util.Preconditions::checkIndex@15 (line 266)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127c5b4 offset=4db4):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011127c5b4 offset=4db4):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127c5b4 offset=4db4):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: stack[416],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127c5b4 offset=4db4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[516]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[408],oop
    - l11: stack[424],oop
    - l12: 0
    - l13: stack[680],double
    - l14: 0
    - l15: stack[688],double
    - l16: 0
    - l17: 0
    - l18: 0
    - l19: 0
    - l20: empty
    - l21: stack[544],oop
    - l22: stack[560],oop
   Expression stack
    - @0: stack[536],oop
ScopeDesc(pc=0x000000011127c5cd offset=4dcd):
   jdk.internal.util.Preconditions::checkIndex@15 (line 266)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127c5cd offset=4dcd):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011127c5cd offset=4dcd):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127c5cd offset=4dcd):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: stack[432],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127c5cd offset=4dcd):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: empty
    - l11: stack[424],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[408],oop
ScopeDesc(pc=0x000000011127c5e6 offset=4de6):
   jdk.internal.util.Preconditions::checkIndex@15 (line 266)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127c5e6 offset=4de6):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011127c5e6 offset=4de6):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011127c5e6 offset=4de6):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: stack[416],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011127c5e6 offset=4de6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[440],oop
    - l1: stack[432],oop
    - l2: stack[416],oop
    - l3: 0
    - l4: stack[656],double
    - l5: 0
    - l6: stack[664],double
    - l7: stack[372]
    - l8: 0
    - l9: stack[648],double
    - l10: stack[448],oop
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[424],oop
ScopeDesc(pc=0x000000011127c60e offset=4e0e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@7 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011127c61b offset=4e1b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@7 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x0000000111277008: 0020
relocInfo@0x0000000111277008 [type=0(none) addr=0x0000000111277800 offset=32]
         @0x000000011127700a: 600b
relocInfo@0x000000011127700a [type=6(runtime_call) addr=0x000000011127780b offset=11] | [destination=0x0000000110bf9920]
         @0x000000011127700c: c024
relocInfo@0x000000011127700c [type=12(metadata) addr=0x000000011127782f offset=36] | [metadata_addr=0x0000000111277831 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011127700e: c038
relocInfo@0x000000011127700e [type=12(metadata) addr=0x0000000111277867 offset=56] | [metadata_addr=0x0000000111277869 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111277010: 1036
relocInfo@0x0000000111277010 [type=1(oop) addr=0x000000011127789d offset=54] | [oop_addr=0x000000011127789f *=0x0000000161400178 offset=0]
         @0x0000000111277012: c00a
relocInfo@0x0000000111277012 [type=12(metadata) addr=0x00000001112778a7 offset=10] | [metadata_addr=0x00000001112778a9 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111277014: c08e
relocInfo@0x0000000111277014 [type=12(metadata) addr=0x0000000111277935 offset=142] | [metadata_addr=0x0000000111277937 *=0x0000000267a9dc18 offset=0]metadata_value=0x0000000267a9dc18: method data for {method} {0x0000000267b3fa08} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
         @0x0000000111277016: c02a
relocInfo@0x0000000111277016 [type=12(metadata) addr=0x000000011127795f offset=42] | [metadata_addr=0x0000000111277961 *=0x0000000267a9dc18 offset=0]metadata_value=0x0000000267a9dc18: method data for {method} {0x0000000267b3fa08} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
         @0x0000000111277018: c012
relocInfo@0x0000000111277018 [type=12(metadata) addr=0x0000000111277971 offset=18] | [metadata_addr=0x0000000111277973 *=0x0000000267a9ddd0 offset=0]metadata_value=0x0000000267a9ddd0: method data for {method} {0x0000000267b96588} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x000000011127701a: c02a
relocInfo@0x000000011127701a [type=12(metadata) addr=0x000000011127799b offset=42] | [metadata_addr=0x000000011127799d *=0x0000000267a9ddd0 offset=0]metadata_value=0x0000000267a9ddd0: method data for {method} {0x0000000267b96588} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x000000011127701c: c032
relocInfo@0x000000011127701c [type=12(metadata) addr=0x00000001112779cd offset=50] | [metadata_addr=0x00000001112779cf *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011127701e: c012
relocInfo@0x000000011127701e [type=12(metadata) addr=0x00000001112779df offset=18] | [metadata_addr=0x00000001112779e1 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277020: 102d
relocInfo@0x0000000111277020 [type=1(oop) addr=0x0000000111277a0c offset=45] | [oop_addr=0x0000000111277a0e *=0x0000000161400178 offset=0]
         @0x0000000111277022: c00d
relocInfo@0x0000000111277022 [type=12(metadata) addr=0x0000000111277a19 offset=13] | [metadata_addr=0x0000000111277a1b *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277024: c015
relocInfo@0x0000000111277024 [type=12(metadata) addr=0x0000000111277a2e offset=21] | [metadata_addr=0x0000000111277a30 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277026: c08e
relocInfo@0x0000000111277026 [type=12(metadata) addr=0x0000000111277abc offset=142] | [metadata_addr=0x0000000111277abe *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277028: c012
relocInfo@0x0000000111277028 [type=12(metadata) addr=0x0000000111277ace offset=18] | [metadata_addr=0x0000000111277ad0 *=0x0000000267a9e268 offset=0]metadata_value=0x0000000267a9e268: method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127702a: c02d
relocInfo@0x000000011127702a [type=12(metadata) addr=0x0000000111277afb offset=45] | [metadata_addr=0x0000000111277afd *=0x0000000267a9e268 offset=0]metadata_value=0x0000000267a9e268: method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127702c: c012
relocInfo@0x000000011127702c [type=12(metadata) addr=0x0000000111277b0d offset=18] | [metadata_addr=0x0000000111277b0f *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011127702e: 1011
relocInfo@0x000000011127702e [type=1(oop) addr=0x0000000111277b1e offset=17] | [oop_addr=0x0000000111277b20 *=0x0000000161405ab0 offset=0]
         @0x0000000111277030: c019
relocInfo@0x0000000111277030 [type=12(metadata) addr=0x0000000111277b37 offset=25] | [metadata_addr=0x0000000111277b39 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277032: c012
relocInfo@0x0000000111277032 [type=12(metadata) addr=0x0000000111277b49 offset=18] | [metadata_addr=0x0000000111277b4b *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111277034: c02d
relocInfo@0x0000000111277034 [type=12(metadata) addr=0x0000000111277b76 offset=45] | [metadata_addr=0x0000000111277b78 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x0000000111277036: c020
relocInfo@0x0000000111277036 [type=12(metadata) addr=0x0000000111277b96 offset=32] | [metadata_addr=0x0000000111277b98 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111277038: c012
relocInfo@0x0000000111277038 [type=12(metadata) addr=0x0000000111277ba8 offset=18] | [metadata_addr=0x0000000111277baa *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011127703a: c02d
relocInfo@0x000000011127703a [type=12(metadata) addr=0x0000000111277bd5 offset=45] | [metadata_addr=0x0000000111277bd7 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011127703c: 1011
relocInfo@0x000000011127703c [type=1(oop) addr=0x0000000111277be6 offset=17] | [oop_addr=0x0000000111277be8 *=0x0000000161405ae0 offset=0]
         @0x000000011127703e: c019
relocInfo@0x000000011127703e [type=12(metadata) addr=0x0000000111277bff offset=25] | [metadata_addr=0x0000000111277c01 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277040: c020
relocInfo@0x0000000111277040 [type=12(metadata) addr=0x0000000111277c1f offset=32] | [metadata_addr=0x0000000111277c21 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277042: 1012
relocInfo@0x0000000111277042 [type=1(oop) addr=0x0000000111277c31 offset=18] | [oop_addr=0x0000000111277c33 *=0x0000000161400080 offset=0]
         @0x0000000111277044: 100a
relocInfo@0x0000000111277044 [type=1(oop) addr=0x0000000111277c3b offset=10] | [oop_addr=0x0000000111277c3d *=0x000000011ff8c550 offset=0]
         @0x0000000111277046: 4464
relocInfo@0x0000000111277046 [type=4(static_call) addr=0x0000000111277c9f offset=100 format=1] | [destination=0x0000000110bfa220 metadata=0x0000000000000000]
         @0x0000000111277048: c00b
relocInfo@0x0000000111277048 [type=12(metadata) addr=0x0000000111277caa offset=11] | [metadata_addr=0x0000000111277cac *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127704a: c016
relocInfo@0x000000011127704a [type=12(metadata) addr=0x0000000111277cc0 offset=22] | [metadata_addr=0x0000000111277cc2 *=0x0000000225d4ce30 offset=0]metadata_value=0x0000000225d4ce30: 'jdk/incubator/vector/DoubleVector'
         @0x000000011127704c: c01b
relocInfo@0x000000011127704c [type=12(metadata) addr=0x0000000111277cdb offset=27] | [metadata_addr=0x0000000111277cdd *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127704e: c08a
relocInfo@0x000000011127704e [type=12(metadata) addr=0x0000000111277d65 offset=138] | [metadata_addr=0x0000000111277d67 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277050: c01f
relocInfo@0x0000000111277050 [type=12(metadata) addr=0x0000000111277d84 offset=31] | [metadata_addr=0x0000000111277d86 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111277052: c012
relocInfo@0x0000000111277052 [type=12(metadata) addr=0x0000000111277d96 offset=18] | [metadata_addr=0x0000000111277d98 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277054: c030
relocInfo@0x0000000111277054 [type=12(metadata) addr=0x0000000111277dc6 offset=48] | [metadata_addr=0x0000000111277dc8 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277056: c01a
relocInfo@0x0000000111277056 [type=12(metadata) addr=0x0000000111277de0 offset=26] | [metadata_addr=0x0000000111277de2 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277058: c08d
relocInfo@0x0000000111277058 [type=12(metadata) addr=0x0000000111277e6d offset=141] | [metadata_addr=0x0000000111277e6f *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127705a: c012
relocInfo@0x000000011127705a [type=12(metadata) addr=0x0000000111277e7f offset=18] | [metadata_addr=0x0000000111277e81 *=0x0000000267a9e268 offset=0]metadata_value=0x0000000267a9e268: method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127705c: c028
relocInfo@0x000000011127705c [type=12(metadata) addr=0x0000000111277ea7 offset=40] | [metadata_addr=0x0000000111277ea9 *=0x0000000267a9e268 offset=0]metadata_value=0x0000000267a9e268: method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127705e: c012
relocInfo@0x000000011127705e [type=12(metadata) addr=0x0000000111277eb9 offset=18] | [metadata_addr=0x0000000111277ebb *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111277060: c028
relocInfo@0x0000000111277060 [type=12(metadata) addr=0x0000000111277ee1 offset=40] | [metadata_addr=0x0000000111277ee3 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277062: c012
relocInfo@0x0000000111277062 [type=12(metadata) addr=0x0000000111277ef3 offset=18] | [metadata_addr=0x0000000111277ef5 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111277064: c028
relocInfo@0x0000000111277064 [type=12(metadata) addr=0x0000000111277f1b offset=40] | [metadata_addr=0x0000000111277f1d *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x0000000111277066: c020
relocInfo@0x0000000111277066 [type=12(metadata) addr=0x0000000111277f3b offset=32] | [metadata_addr=0x0000000111277f3d *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111277068: c012
relocInfo@0x0000000111277068 [type=12(metadata) addr=0x0000000111277f4d offset=18] | [metadata_addr=0x0000000111277f4f *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011127706a: c028
relocInfo@0x000000011127706a [type=12(metadata) addr=0x0000000111277f75 offset=40] | [metadata_addr=0x0000000111277f77 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011127706c: c028
relocInfo@0x000000011127706c [type=12(metadata) addr=0x0000000111277f9d offset=40] | [metadata_addr=0x0000000111277f9f *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127706e: c020
relocInfo@0x000000011127706e [type=12(metadata) addr=0x0000000111277fbd offset=32] | [metadata_addr=0x0000000111277fbf *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277070: 4442
relocInfo@0x0000000111277070 [type=4(static_call) addr=0x0000000111277fff offset=66 format=1] | [destination=0x0000000110bfa220 metadata=0x0000000000000000]
         @0x0000000111277072: c00b
relocInfo@0x0000000111277072 [type=12(metadata) addr=0x000000011127800a offset=11] | [metadata_addr=0x000000011127800c *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277074: c016
relocInfo@0x0000000111277074 [type=12(metadata) addr=0x0000000111278020 offset=22] | [metadata_addr=0x0000000111278022 *=0x0000000225d4ce30 offset=0]metadata_value=0x0000000225d4ce30: 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277076: c01b
relocInfo@0x0000000111277076 [type=12(metadata) addr=0x000000011127803b offset=27] | [metadata_addr=0x000000011127803d *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277078: c08a
relocInfo@0x0000000111277078 [type=12(metadata) addr=0x00000001112780c5 offset=138] | [metadata_addr=0x00000001112780c7 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127707a: c0b9
relocInfo@0x000000011127707a [type=12(metadata) addr=0x000000011127817e offset=185] | [metadata_addr=0x0000000111278180 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011127707c: c036
relocInfo@0x000000011127707c [type=12(metadata) addr=0x00000001112781b4 offset=54] | [metadata_addr=0x00000001112781b6 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011127707e: c012
relocInfo@0x000000011127707e [type=12(metadata) addr=0x00000001112781c6 offset=18] | [metadata_addr=0x00000001112781c8 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277080: 102d
relocInfo@0x0000000111277080 [type=1(oop) addr=0x00000001112781f3 offset=45] | [oop_addr=0x00000001112781f5 *=0x0000000161400178 offset=0]
         @0x0000000111277082: c00a
relocInfo@0x0000000111277082 [type=12(metadata) addr=0x00000001112781fd offset=10] | [metadata_addr=0x00000001112781ff *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277084: c092
relocInfo@0x0000000111277084 [type=12(metadata) addr=0x000000011127828f offset=146] | [metadata_addr=0x0000000111278291 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277086: c012
relocInfo@0x0000000111277086 [type=12(metadata) addr=0x00000001112782a1 offset=18] | [metadata_addr=0x00000001112782a3 *=0x0000000267a95d30 offset=0]metadata_value=0x0000000267a95d30: method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x0000000111277088: c02e
relocInfo@0x0000000111277088 [type=12(metadata) addr=0x00000001112782cf offset=46] | [metadata_addr=0x00000001112782d1 *=0x0000000267a95d30 offset=0]metadata_value=0x0000000267a95d30: method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x000000011127708a: c012
relocInfo@0x000000011127708a [type=12(metadata) addr=0x00000001112782e1 offset=18] | [metadata_addr=0x00000001112782e3 *=0x00000002679f4c18 offset=0]metadata_value=0x00000002679f4c18: method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x000000011127708c: c02a
relocInfo@0x000000011127708c [type=12(metadata) addr=0x000000011127830b offset=42] | [metadata_addr=0x000000011127830d *=0x00000002679f4c18 offset=0]metadata_value=0x00000002679f4c18: method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x000000011127708e: c012
relocInfo@0x000000011127708e [type=12(metadata) addr=0x000000011127831d offset=18] | [metadata_addr=0x000000011127831f *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111277090: c02e
relocInfo@0x0000000111277090 [type=12(metadata) addr=0x000000011127834b offset=46] | [metadata_addr=0x000000011127834d *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111277092: c039
relocInfo@0x0000000111277092 [type=12(metadata) addr=0x0000000111278384 offset=57] | [metadata_addr=0x0000000111278386 *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111277094: 1036
relocInfo@0x0000000111277094 [type=1(oop) addr=0x00000001112783ba offset=54] | [oop_addr=0x00000001112783bc *=0x0000000161400178 offset=0]
         @0x0000000111277096: c00d
relocInfo@0x0000000111277096 [type=12(metadata) addr=0x00000001112783c7 offset=13] | [metadata_addr=0x00000001112783c9 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277098: c012
relocInfo@0x0000000111277098 [type=12(metadata) addr=0x00000001112783d9 offset=18] | [metadata_addr=0x00000001112783db *=0x0000000267a948b0 offset=0]metadata_value=0x0000000267a948b0: method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x000000011127709a: c02a
relocInfo@0x000000011127709a [type=12(metadata) addr=0x0000000111278403 offset=42] | [metadata_addr=0x0000000111278405 *=0x0000000267a948b0 offset=0]metadata_value=0x0000000267a948b0: method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x000000011127709c: c012
relocInfo@0x000000011127709c [type=12(metadata) addr=0x0000000111278415 offset=18] | [metadata_addr=0x0000000111278417 *=0x0000000267a94a98 offset=0]metadata_value=0x0000000267a94a98: method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x000000011127709e: c02d
relocInfo@0x000000011127709e [type=12(metadata) addr=0x0000000111278442 offset=45] | [metadata_addr=0x0000000111278444 *=0x0000000267a94a98 offset=0]metadata_value=0x0000000267a94a98: method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x00000001112770a0: 101a
relocInfo@0x00000001112770a0 [type=1(oop) addr=0x000000011127845c offset=26] | [oop_addr=0x000000011127845e *=0x00000001614d5db8 offset=0]
         @0x00000001112770a2: c00d
relocInfo@0x00000001112770a2 [type=12(metadata) addr=0x0000000111278469 offset=13] | [metadata_addr=0x000000011127846b *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112770a4: c012
relocInfo@0x00000001112770a4 [type=12(metadata) addr=0x000000011127847b offset=18] | [metadata_addr=0x000000011127847d *=0x0000000267a95f60 offset=0]metadata_value=0x0000000267a95f60: method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x00000001112770a6: c02d
relocInfo@0x00000001112770a6 [type=12(metadata) addr=0x00000001112784a8 offset=45] | [metadata_addr=0x00000001112784aa *=0x0000000267a95f60 offset=0]metadata_value=0x0000000267a95f60: method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x00000001112770a8: c012
relocInfo@0x00000001112770a8 [type=12(metadata) addr=0x00000001112784ba offset=18] | [metadata_addr=0x00000001112784bc *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112770aa: c02a
relocInfo@0x00000001112770aa [type=12(metadata) addr=0x00000001112784e4 offset=42] | [metadata_addr=0x00000001112784e6 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112770ac: c012
relocInfo@0x00000001112770ac [type=12(metadata) addr=0x00000001112784f6 offset=18] | [metadata_addr=0x00000001112784f8 *=0x0000000267a96408 offset=0]metadata_value=0x0000000267a96408: method data for {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
         @0x00000001112770ae: 102d
relocInfo@0x00000001112770ae [type=1(oop) addr=0x0000000111278523 offset=45] | [oop_addr=0x0000000111278525 *=0x0000000161400178 offset=0]
         @0x00000001112770b0: c00d
relocInfo@0x00000001112770b0 [type=12(metadata) addr=0x0000000111278530 offset=13] | [metadata_addr=0x0000000111278532 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112770b2: c015
relocInfo@0x00000001112770b2 [type=12(metadata) addr=0x0000000111278545 offset=21] | [metadata_addr=0x0000000111278547 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112770b4: c012
relocInfo@0x00000001112770b4 [type=12(metadata) addr=0x0000000111278557 offset=18] | [metadata_addr=0x0000000111278559 *=0x0000000267a95910 offset=0]metadata_value=0x0000000267a95910: method data for {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x00000001112770b6: c02a
relocInfo@0x00000001112770b6 [type=12(metadata) addr=0x0000000111278581 offset=42] | [metadata_addr=0x0000000111278583 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112770b8: c012
relocInfo@0x00000001112770b8 [type=12(metadata) addr=0x0000000111278593 offset=18] | [metadata_addr=0x0000000111278595 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112770ba: c012
relocInfo@0x00000001112770ba [type=12(metadata) addr=0x00000001112785a5 offset=18] | [metadata_addr=0x00000001112785a7 *=0x0000000267a96588 offset=0]metadata_value=0x0000000267a96588: method data for {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112770bc: c045
relocInfo@0x00000001112770bc [type=12(metadata) addr=0x00000001112785ea offset=69] | [metadata_addr=0x00000001112785ec *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x00000001112770be: 1011
relocInfo@0x00000001112770be [type=1(oop) addr=0x00000001112785fb offset=17] | [oop_addr=0x00000001112785fd *=0x00000001614058e0 offset=0]
         @0x00000001112770c0: c019
relocInfo@0x00000001112770c0 [type=12(metadata) addr=0x0000000111278614 offset=25] | [metadata_addr=0x0000000111278616 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112770c2: c012
relocInfo@0x00000001112770c2 [type=12(metadata) addr=0x0000000111278626 offset=18] | [metadata_addr=0x0000000111278628 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x00000001112770c4: c028
relocInfo@0x00000001112770c4 [type=12(metadata) addr=0x000000011127864e offset=40] | [metadata_addr=0x0000000111278650 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x00000001112770c6: c01d
relocInfo@0x00000001112770c6 [type=12(metadata) addr=0x000000011127866b offset=29] | [metadata_addr=0x000000011127866d *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x00000001112770c8: c012
relocInfo@0x00000001112770c8 [type=12(metadata) addr=0x000000011127867d offset=18] | [metadata_addr=0x000000011127867f *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x00000001112770ca: c02d
relocInfo@0x00000001112770ca [type=12(metadata) addr=0x00000001112786aa offset=45] | [metadata_addr=0x00000001112786ac *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x00000001112770cc: 1011
relocInfo@0x00000001112770cc [type=1(oop) addr=0x00000001112786bb offset=17] | [oop_addr=0x00000001112786bd *=0x0000000161405910 offset=0]
         @0x00000001112770ce: c019
relocInfo@0x00000001112770ce [type=12(metadata) addr=0x00000001112786d4 offset=25] | [metadata_addr=0x00000001112786d6 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112770d0: c01d
relocInfo@0x00000001112770d0 [type=12(metadata) addr=0x00000001112786f1 offset=29] | [metadata_addr=0x00000001112786f3 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112770d2: 1012
relocInfo@0x00000001112770d2 [type=1(oop) addr=0x0000000111278703 offset=18] | [oop_addr=0x0000000111278705 *=0x0000000161400080 offset=0]
         @0x00000001112770d4: 100a
relocInfo@0x00000001112770d4 [type=1(oop) addr=0x000000011127870d offset=10] | [oop_addr=0x000000011127870f *=0x000000011ff8c550 offset=0]
         @0x00000001112770d6: 1030
relocInfo@0x00000001112770d6 [type=1(oop) addr=0x000000011127873d offset=48] | [oop_addr=0x000000011127873f *=0x0000000161400178 offset=0]
         @0x00000001112770d8: 100f
relocInfo@0x00000001112770d8 [type=1(oop) addr=0x000000011127874c offset=15] | [oop_addr=0x000000011127874e *=0x0000000161405910 offset=0]
         @0x00000001112770da: 4423
relocInfo@0x00000001112770da [type=4(static_call) addr=0x000000011127876f offset=35 format=1] | [destination=0x00000001186844c0 metadata=0x0000000000000000]
         @0x00000001112770dc: c00b
relocInfo@0x00000001112770dc [type=12(metadata) addr=0x000000011127877a offset=11] | [metadata_addr=0x000000011127877c *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112770de: c016
relocInfo@0x00000001112770de [type=12(metadata) addr=0x0000000111278790 offset=22] | [metadata_addr=0x0000000111278792 *=0x0000000225d4ce30 offset=0]metadata_value=0x0000000225d4ce30: 'jdk/incubator/vector/DoubleVector'
         @0x00000001112770e0: c01b
relocInfo@0x00000001112770e0 [type=12(metadata) addr=0x00000001112787ab offset=27] | [metadata_addr=0x00000001112787ad *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112770e2: c08a
relocInfo@0x00000001112770e2 [type=12(metadata) addr=0x0000000111278835 offset=138] | [metadata_addr=0x0000000111278837 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112770e4: c02d
relocInfo@0x00000001112770e4 [type=12(metadata) addr=0x0000000111278862 offset=45] | [metadata_addr=0x0000000111278864 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x00000001112770e6: c012
relocInfo@0x00000001112770e6 [type=12(metadata) addr=0x0000000111278874 offset=18] | [metadata_addr=0x0000000111278876 *=0x0000000267a97298 offset=0]metadata_value=0x0000000267a97298: method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112770e8: c02b
relocInfo@0x00000001112770e8 [type=12(metadata) addr=0x000000011127889f offset=43] | [metadata_addr=0x00000001112788a1 *=0x0000000267a97298 offset=0]metadata_value=0x0000000267a97298: method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112770ea: 108d
relocInfo@0x00000001112770ea [type=1(oop) addr=0x000000011127892c offset=141] | [oop_addr=0x000000011127892e *=0x00000001614001e8 offset=0]
         @0x00000001112770ec: f00a241b
relocInfo@0x00000001112770ee [type=2(virtual_call) addr=0x0000000111278947 offset=27 format=1 data=10] | [destination=0x0000000118694020 cached_value=0x000000011127893d metadata=0x0000000000000000]
         @0x00000001112770f0: c00d
relocInfo@0x00000001112770f0 [type=12(metadata) addr=0x0000000111278954 offset=13] | [metadata_addr=0x0000000111278956 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x00000001112770f2: c012
relocInfo@0x00000001112770f2 [type=12(metadata) addr=0x0000000111278966 offset=18] | [metadata_addr=0x0000000111278968 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112770f4: 1028
relocInfo@0x00000001112770f4 [type=1(oop) addr=0x000000011127898e offset=40] | [oop_addr=0x0000000111278990 *=0x0000000161400178 offset=0]
         @0x00000001112770f6: c00a
relocInfo@0x00000001112770f6 [type=12(metadata) addr=0x0000000111278998 offset=10] | [metadata_addr=0x000000011127899a *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112770f8: c098
relocInfo@0x00000001112770f8 [type=12(metadata) addr=0x0000000111278a30 offset=152] | [metadata_addr=0x0000000111278a32 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112770fa: c012
relocInfo@0x00000001112770fa [type=12(metadata) addr=0x0000000111278a42 offset=18] | [metadata_addr=0x0000000111278a44 *=0x0000000267a95d30 offset=0]metadata_value=0x0000000267a95d30: method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x00000001112770fc: c03b
relocInfo@0x00000001112770fc [type=12(metadata) addr=0x0000000111278a7d offset=59] | [metadata_addr=0x0000000111278a7f *=0x0000000267a95d30 offset=0]metadata_value=0x0000000267a95d30: method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x00000001112770fe: c012
relocInfo@0x00000001112770fe [type=12(metadata) addr=0x0000000111278a8f offset=18] | [metadata_addr=0x0000000111278a91 *=0x00000002679f4c18 offset=0]metadata_value=0x00000002679f4c18: method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x0000000111277100: c028
relocInfo@0x0000000111277100 [type=12(metadata) addr=0x0000000111278ab7 offset=40] | [metadata_addr=0x0000000111278ab9 *=0x00000002679f4c18 offset=0]metadata_value=0x00000002679f4c18: method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x0000000111277102: c012
relocInfo@0x0000000111277102 [type=12(metadata) addr=0x0000000111278ac9 offset=18] | [metadata_addr=0x0000000111278acb *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111277104: c02c
relocInfo@0x0000000111277104 [type=12(metadata) addr=0x0000000111278af5 offset=44] | [metadata_addr=0x0000000111278af7 *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111277106: c039
relocInfo@0x0000000111277106 [type=12(metadata) addr=0x0000000111278b2e offset=57] | [metadata_addr=0x0000000111278b30 *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111277108: 1036
relocInfo@0x0000000111277108 [type=1(oop) addr=0x0000000111278b64 offset=54] | [oop_addr=0x0000000111278b66 *=0x0000000161400178 offset=0]
         @0x000000011127710a: c00d
relocInfo@0x000000011127710a [type=12(metadata) addr=0x0000000111278b71 offset=13] | [metadata_addr=0x0000000111278b73 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127710c: c012
relocInfo@0x000000011127710c [type=12(metadata) addr=0x0000000111278b83 offset=18] | [metadata_addr=0x0000000111278b85 *=0x0000000267a948b0 offset=0]metadata_value=0x0000000267a948b0: method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x000000011127710e: c02d
relocInfo@0x000000011127710e [type=12(metadata) addr=0x0000000111278bb0 offset=45] | [metadata_addr=0x0000000111278bb2 *=0x0000000267a948b0 offset=0]metadata_value=0x0000000267a948b0: method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x0000000111277110: c012
relocInfo@0x0000000111277110 [type=12(metadata) addr=0x0000000111278bc2 offset=18] | [metadata_addr=0x0000000111278bc4 *=0x0000000267a94a98 offset=0]metadata_value=0x0000000267a94a98: method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x0000000111277112: c028
relocInfo@0x0000000111277112 [type=12(metadata) addr=0x0000000111278bea offset=40] | [metadata_addr=0x0000000111278bec *=0x0000000267a94a98 offset=0]metadata_value=0x0000000267a94a98: method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x0000000111277114: 1018
relocInfo@0x0000000111277114 [type=1(oop) addr=0x0000000111278c02 offset=24] | [oop_addr=0x0000000111278c04 *=0x00000001614d5db8 offset=0]
         @0x0000000111277116: c00d
relocInfo@0x0000000111277116 [type=12(metadata) addr=0x0000000111278c0f offset=13] | [metadata_addr=0x0000000111278c11 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277118: c012
relocInfo@0x0000000111277118 [type=12(metadata) addr=0x0000000111278c21 offset=18] | [metadata_addr=0x0000000111278c23 *=0x0000000267a95f60 offset=0]metadata_value=0x0000000267a95f60: method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x000000011127711a: c030
relocInfo@0x000000011127711a [type=12(metadata) addr=0x0000000111278c51 offset=48] | [metadata_addr=0x0000000111278c53 *=0x0000000267a95f60 offset=0]metadata_value=0x0000000267a95f60: method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x000000011127711c: c012
relocInfo@0x000000011127711c [type=12(metadata) addr=0x0000000111278c63 offset=18] | [metadata_addr=0x0000000111278c65 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127711e: c02d
relocInfo@0x000000011127711e [type=12(metadata) addr=0x0000000111278c90 offset=45] | [metadata_addr=0x0000000111278c92 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277120: c012
relocInfo@0x0000000111277120 [type=12(metadata) addr=0x0000000111278ca2 offset=18] | [metadata_addr=0x0000000111278ca4 *=0x0000000267a96408 offset=0]metadata_value=0x0000000267a96408: method data for {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
         @0x0000000111277122: 1028
relocInfo@0x0000000111277122 [type=1(oop) addr=0x0000000111278cca offset=40] | [oop_addr=0x0000000111278ccc *=0x0000000161400178 offset=0]
         @0x0000000111277124: c00d
relocInfo@0x0000000111277124 [type=12(metadata) addr=0x0000000111278cd7 offset=13] | [metadata_addr=0x0000000111278cd9 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277126: c015
relocInfo@0x0000000111277126 [type=12(metadata) addr=0x0000000111278cec offset=21] | [metadata_addr=0x0000000111278cee *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277128: c012
relocInfo@0x0000000111277128 [type=12(metadata) addr=0x0000000111278cfe offset=18] | [metadata_addr=0x0000000111278d00 *=0x0000000267a95910 offset=0]metadata_value=0x0000000267a95910: method data for {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x000000011127712a: c02d
relocInfo@0x000000011127712a [type=12(metadata) addr=0x0000000111278d2b offset=45] | [metadata_addr=0x0000000111278d2d *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127712c: c012
relocInfo@0x000000011127712c [type=12(metadata) addr=0x0000000111278d3d offset=18] | [metadata_addr=0x0000000111278d3f *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127712e: c012
relocInfo@0x000000011127712e [type=12(metadata) addr=0x0000000111278d4f offset=18] | [metadata_addr=0x0000000111278d51 *=0x0000000267a96588 offset=0]metadata_value=0x0000000267a96588: method data for {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277130: c028
relocInfo@0x0000000111277130 [type=12(metadata) addr=0x0000000111278d77 offset=40] | [metadata_addr=0x0000000111278d79 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111277132: 1011
relocInfo@0x0000000111277132 [type=1(oop) addr=0x0000000111278d88 offset=17] | [oop_addr=0x0000000111278d8a *=0x00000001614058e0 offset=0]
         @0x0000000111277134: c019
relocInfo@0x0000000111277134 [type=12(metadata) addr=0x0000000111278da1 offset=25] | [metadata_addr=0x0000000111278da3 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277136: c012
relocInfo@0x0000000111277136 [type=12(metadata) addr=0x0000000111278db3 offset=18] | [metadata_addr=0x0000000111278db5 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111277138: c02d
relocInfo@0x0000000111277138 [type=12(metadata) addr=0x0000000111278de0 offset=45] | [metadata_addr=0x0000000111278de2 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011127713a: c01d
relocInfo@0x000000011127713a [type=12(metadata) addr=0x0000000111278dfd offset=29] | [metadata_addr=0x0000000111278dff *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011127713c: c012
relocInfo@0x000000011127713c [type=12(metadata) addr=0x0000000111278e0f offset=18] | [metadata_addr=0x0000000111278e11 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011127713e: c028
relocInfo@0x000000011127713e [type=12(metadata) addr=0x0000000111278e37 offset=40] | [metadata_addr=0x0000000111278e39 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111277140: 1011
relocInfo@0x0000000111277140 [type=1(oop) addr=0x0000000111278e48 offset=17] | [oop_addr=0x0000000111278e4a *=0x0000000161405910 offset=0]
         @0x0000000111277142: c019
relocInfo@0x0000000111277142 [type=12(metadata) addr=0x0000000111278e61 offset=25] | [metadata_addr=0x0000000111278e63 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277144: c01d
relocInfo@0x0000000111277144 [type=12(metadata) addr=0x0000000111278e7e offset=29] | [metadata_addr=0x0000000111278e80 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277146: 1012
relocInfo@0x0000000111277146 [type=1(oop) addr=0x0000000111278e90 offset=18] | [oop_addr=0x0000000111278e92 *=0x0000000161400080 offset=0]
         @0x0000000111277148: 100a
relocInfo@0x0000000111277148 [type=1(oop) addr=0x0000000111278e9a offset=10] | [oop_addr=0x0000000111278e9c *=0x000000011ff8c550 offset=0]
         @0x000000011127714a: 101c
relocInfo@0x000000011127714a [type=1(oop) addr=0x0000000111278eb6 offset=28] | [oop_addr=0x0000000111278eb8 *=0x0000000161400178 offset=0]
         @0x000000011127714c: 100f
relocInfo@0x000000011127714c [type=1(oop) addr=0x0000000111278ec5 offset=15] | [oop_addr=0x0000000111278ec7 *=0x0000000161405910 offset=0]
         @0x000000011127714e: 4422
relocInfo@0x000000011127714e [type=4(static_call) addr=0x0000000111278ee7 offset=34 format=1] | [destination=0x00000001186844c0 metadata=0x0000000000000000]
         @0x0000000111277150: c00b
relocInfo@0x0000000111277150 [type=12(metadata) addr=0x0000000111278ef2 offset=11] | [metadata_addr=0x0000000111278ef4 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277152: c016
relocInfo@0x0000000111277152 [type=12(metadata) addr=0x0000000111278f08 offset=22] | [metadata_addr=0x0000000111278f0a *=0x0000000225d4ce30 offset=0]metadata_value=0x0000000225d4ce30: 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277154: c01b
relocInfo@0x0000000111277154 [type=12(metadata) addr=0x0000000111278f23 offset=27] | [metadata_addr=0x0000000111278f25 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277156: c08a
relocInfo@0x0000000111277156 [type=12(metadata) addr=0x0000000111278fad offset=138] | [metadata_addr=0x0000000111278faf *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277158: c02d
relocInfo@0x0000000111277158 [type=12(metadata) addr=0x0000000111278fda offset=45] | [metadata_addr=0x0000000111278fdc *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011127715a: c012
relocInfo@0x000000011127715a [type=12(metadata) addr=0x0000000111278fec offset=18] | [metadata_addr=0x0000000111278fee *=0x0000000267a97298 offset=0]metadata_value=0x0000000267a97298: method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127715c: c02b
relocInfo@0x000000011127715c [type=12(metadata) addr=0x0000000111279017 offset=43] | [metadata_addr=0x0000000111279019 *=0x0000000267a97298 offset=0]metadata_value=0x0000000267a97298: method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127715e: 108d
relocInfo@0x000000011127715e [type=1(oop) addr=0x00000001112790a4 offset=141] | [oop_addr=0x00000001112790a6 *=0x00000001614001e8 offset=0]
         @0x0000000111277160: f00a241b
relocInfo@0x0000000111277162 [type=2(virtual_call) addr=0x00000001112790bf offset=27 format=1 data=10] | [destination=0x0000000118694020 cached_value=0x00000001112790b5 metadata=0x0000000000000000]
         @0x0000000111277164: c011
relocInfo@0x0000000111277164 [type=12(metadata) addr=0x00000001112790d0 offset=17] | [metadata_addr=0x00000001112790d2 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111277166: a02f
relocInfo@0x0000000111277166 [type=10(poll) addr=0x00000001112790ff offset=47]
         @0x0000000111277168: c003
relocInfo@0x0000000111277168 [type=12(metadata) addr=0x0000000111279102 offset=3] | [metadata_addr=0x0000000111279104 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011127716a: c068
relocInfo@0x000000011127716a [type=12(metadata) addr=0x000000011127916a offset=104] | [metadata_addr=0x000000011127916c *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011127716c: 108d
relocInfo@0x000000011127716c [type=1(oop) addr=0x00000001112791f7 offset=141] | [oop_addr=0x00000001112791f9 *=0x00000001614001e8 offset=0]
         @0x000000011127716e: f00a2430
relocInfo@0x0000000111277170 [type=2(virtual_call) addr=0x0000000111279227 offset=48 format=1 data=10] | [destination=0x0000000110bf9f20 cached_value=0x000000011127921d metadata=0x0000000000000000]
         @0x0000000111277172: c01c
relocInfo@0x0000000111277172 [type=12(metadata) addr=0x0000000111279243 offset=28] | [metadata_addr=0x0000000111279245 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111277174: f00a24bc
relocInfo@0x0000000111277176 [type=2(virtual_call) addr=0x00000001112792ff offset=188 format=1 data=10] | [destination=0x0000000110bf9f20 cached_value=0x00000001112792f5 metadata=0x0000000000000000]
         @0x0000000111277178: c06a
relocInfo@0x0000000111277178 [type=12(metadata) addr=0x0000000111279369 offset=106] | [metadata_addr=0x000000011127936b *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011127717a: a034
relocInfo@0x000000011127717a [type=10(poll) addr=0x000000011127939d offset=52]
         @0x000000011127717c: c003
relocInfo@0x000000011127717c [type=12(metadata) addr=0x00000001112793a0 offset=3] | [metadata_addr=0x00000001112793a2 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011127717e: c025
relocInfo@0x000000011127717e [type=12(metadata) addr=0x00000001112793c5 offset=37] | [metadata_addr=0x00000001112793c7 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111277180: c064
relocInfo@0x0000000111277180 [type=12(metadata) addr=0x0000000111279429 offset=100] | [metadata_addr=0x000000011127942b *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111277182: c012
relocInfo@0x0000000111277182 [type=12(metadata) addr=0x000000011127943b offset=18] | [metadata_addr=0x000000011127943d *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277184: 102d
relocInfo@0x0000000111277184 [type=1(oop) addr=0x0000000111279468 offset=45] | [oop_addr=0x000000011127946a *=0x0000000161400178 offset=0]
         @0x0000000111277186: c00d
relocInfo@0x0000000111277186 [type=12(metadata) addr=0x0000000111279475 offset=13] | [metadata_addr=0x0000000111279477 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277188: c015
relocInfo@0x0000000111277188 [type=12(metadata) addr=0x000000011127948a offset=21] | [metadata_addr=0x000000011127948c *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127718a: c08d
relocInfo@0x000000011127718a [type=12(metadata) addr=0x0000000111279517 offset=141] | [metadata_addr=0x0000000111279519 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127718c: c012
relocInfo@0x000000011127718c [type=12(metadata) addr=0x0000000111279529 offset=18] | [metadata_addr=0x000000011127952b *=0x0000000267a9e268 offset=0]metadata_value=0x0000000267a9e268: method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127718e: c02d
relocInfo@0x000000011127718e [type=12(metadata) addr=0x0000000111279556 offset=45] | [metadata_addr=0x0000000111279558 *=0x0000000267a9e268 offset=0]metadata_value=0x0000000267a9e268: method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277190: c012
relocInfo@0x0000000111277190 [type=12(metadata) addr=0x0000000111279568 offset=18] | [metadata_addr=0x000000011127956a *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111277192: 1011
relocInfo@0x0000000111277192 [type=1(oop) addr=0x0000000111279579 offset=17] | [oop_addr=0x000000011127957b *=0x0000000161405ab0 offset=0]
         @0x0000000111277194: c019
relocInfo@0x0000000111277194 [type=12(metadata) addr=0x0000000111279592 offset=25] | [metadata_addr=0x0000000111279594 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277196: c012
relocInfo@0x0000000111277196 [type=12(metadata) addr=0x00000001112795a4 offset=18] | [metadata_addr=0x00000001112795a6 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111277198: c02d
relocInfo@0x0000000111277198 [type=12(metadata) addr=0x00000001112795d1 offset=45] | [metadata_addr=0x00000001112795d3 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011127719a: c020
relocInfo@0x000000011127719a [type=12(metadata) addr=0x00000001112795f1 offset=32] | [metadata_addr=0x00000001112795f3 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011127719c: c012
relocInfo@0x000000011127719c [type=12(metadata) addr=0x0000000111279603 offset=18] | [metadata_addr=0x0000000111279605 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011127719e: c02d
relocInfo@0x000000011127719e [type=12(metadata) addr=0x0000000111279630 offset=45] | [metadata_addr=0x0000000111279632 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x00000001112771a0: 1011
relocInfo@0x00000001112771a0 [type=1(oop) addr=0x0000000111279641 offset=17] | [oop_addr=0x0000000111279643 *=0x0000000161405ae0 offset=0]
         @0x00000001112771a2: c019
relocInfo@0x00000001112771a2 [type=12(metadata) addr=0x000000011127965a offset=25] | [metadata_addr=0x000000011127965c *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112771a4: c020
relocInfo@0x00000001112771a4 [type=12(metadata) addr=0x000000011127967a offset=32] | [metadata_addr=0x000000011127967c *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112771a6: 1012
relocInfo@0x00000001112771a6 [type=1(oop) addr=0x000000011127968c offset=18] | [oop_addr=0x000000011127968e *=0x0000000161400080 offset=0]
         @0x00000001112771a8: 100a
relocInfo@0x00000001112771a8 [type=1(oop) addr=0x0000000111279696 offset=10] | [oop_addr=0x0000000111279698 *=0x000000011ff8c550 offset=0]
         @0x00000001112771aa: 4459
relocInfo@0x00000001112771aa [type=4(static_call) addr=0x00000001112796ef offset=89 format=1] | [destination=0x0000000110bfa220 metadata=0x0000000000000000]
         @0x00000001112771ac: c00b
relocInfo@0x00000001112771ac [type=12(metadata) addr=0x00000001112796fa offset=11] | [metadata_addr=0x00000001112796fc *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112771ae: c016
relocInfo@0x00000001112771ae [type=12(metadata) addr=0x0000000111279710 offset=22] | [metadata_addr=0x0000000111279712 *=0x0000000225d4ce30 offset=0]metadata_value=0x0000000225d4ce30: 'jdk/incubator/vector/DoubleVector'
         @0x00000001112771b0: c01b
relocInfo@0x00000001112771b0 [type=12(metadata) addr=0x000000011127972b offset=27] | [metadata_addr=0x000000011127972d *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112771b2: c08a
relocInfo@0x00000001112771b2 [type=12(metadata) addr=0x00000001112797b5 offset=138] | [metadata_addr=0x00000001112797b7 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112771b4: c01f
relocInfo@0x00000001112771b4 [type=12(metadata) addr=0x00000001112797d4 offset=31] | [metadata_addr=0x00000001112797d6 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x00000001112771b6: c012
relocInfo@0x00000001112771b6 [type=12(metadata) addr=0x00000001112797e6 offset=18] | [metadata_addr=0x00000001112797e8 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112771b8: c030
relocInfo@0x00000001112771b8 [type=12(metadata) addr=0x0000000111279816 offset=48] | [metadata_addr=0x0000000111279818 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112771ba: c01a
relocInfo@0x00000001112771ba [type=12(metadata) addr=0x0000000111279830 offset=26] | [metadata_addr=0x0000000111279832 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112771bc: c08d
relocInfo@0x00000001112771bc [type=12(metadata) addr=0x00000001112798bd offset=141] | [metadata_addr=0x00000001112798bf *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112771be: c012
relocInfo@0x00000001112771be [type=12(metadata) addr=0x00000001112798cf offset=18] | [metadata_addr=0x00000001112798d1 *=0x0000000267a9e268 offset=0]metadata_value=0x0000000267a9e268: method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112771c0: c028
relocInfo@0x00000001112771c0 [type=12(metadata) addr=0x00000001112798f7 offset=40] | [metadata_addr=0x00000001112798f9 *=0x0000000267a9e268 offset=0]metadata_value=0x0000000267a9e268: method data for {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112771c2: c012
relocInfo@0x00000001112771c2 [type=12(metadata) addr=0x0000000111279909 offset=18] | [metadata_addr=0x000000011127990b *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x00000001112771c4: c028
relocInfo@0x00000001112771c4 [type=12(metadata) addr=0x0000000111279931 offset=40] | [metadata_addr=0x0000000111279933 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112771c6: c012
relocInfo@0x00000001112771c6 [type=12(metadata) addr=0x0000000111279943 offset=18] | [metadata_addr=0x0000000111279945 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x00000001112771c8: c028
relocInfo@0x00000001112771c8 [type=12(metadata) addr=0x000000011127996b offset=40] | [metadata_addr=0x000000011127996d *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x00000001112771ca: c020
relocInfo@0x00000001112771ca [type=12(metadata) addr=0x000000011127998b offset=32] | [metadata_addr=0x000000011127998d *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x00000001112771cc: c012
relocInfo@0x00000001112771cc [type=12(metadata) addr=0x000000011127999d offset=18] | [metadata_addr=0x000000011127999f *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x00000001112771ce: c028
relocInfo@0x00000001112771ce [type=12(metadata) addr=0x00000001112799c5 offset=40] | [metadata_addr=0x00000001112799c7 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x00000001112771d0: c028
relocInfo@0x00000001112771d0 [type=12(metadata) addr=0x00000001112799ed offset=40] | [metadata_addr=0x00000001112799ef *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112771d2: c020
relocInfo@0x00000001112771d2 [type=12(metadata) addr=0x0000000111279a0d offset=32] | [metadata_addr=0x0000000111279a0f *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112771d4: 4442
relocInfo@0x00000001112771d4 [type=4(static_call) addr=0x0000000111279a4f offset=66 format=1] | [destination=0x0000000110bfa220 metadata=0x0000000000000000]
         @0x00000001112771d6: c00b
relocInfo@0x00000001112771d6 [type=12(metadata) addr=0x0000000111279a5a offset=11] | [metadata_addr=0x0000000111279a5c *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112771d8: c017
relocInfo@0x00000001112771d8 [type=12(metadata) addr=0x0000000111279a71 offset=23] | [metadata_addr=0x0000000111279a73 *=0x0000000225d4ce30 offset=0]metadata_value=0x0000000225d4ce30: 'jdk/incubator/vector/DoubleVector'
         @0x00000001112771da: c01c
relocInfo@0x00000001112771da [type=12(metadata) addr=0x0000000111279a8d offset=28] | [metadata_addr=0x0000000111279a8f *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112771dc: c08a
relocInfo@0x00000001112771dc [type=12(metadata) addr=0x0000000111279b17 offset=138] | [metadata_addr=0x0000000111279b19 *=0x0000000267a9dfa8 offset=0]metadata_value=0x0000000267a9dfa8: method data for {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112771de: c082
relocInfo@0x00000001112771de [type=12(metadata) addr=0x0000000111279b99 offset=130] | [metadata_addr=0x0000000111279b9b *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x00000001112771e0: c036
relocInfo@0x00000001112771e0 [type=12(metadata) addr=0x0000000111279bcf offset=54] | [metadata_addr=0x0000000111279bd1 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x00000001112771e2: c012
relocInfo@0x00000001112771e2 [type=12(metadata) addr=0x0000000111279be1 offset=18] | [metadata_addr=0x0000000111279be3 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112771e4: 102d
relocInfo@0x00000001112771e4 [type=1(oop) addr=0x0000000111279c0e offset=45] | [oop_addr=0x0000000111279c10 *=0x0000000161400178 offset=0]
         @0x00000001112771e6: c00a
relocInfo@0x00000001112771e6 [type=12(metadata) addr=0x0000000111279c18 offset=10] | [metadata_addr=0x0000000111279c1a *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112771e8: c08d
relocInfo@0x00000001112771e8 [type=12(metadata) addr=0x0000000111279ca5 offset=141] | [metadata_addr=0x0000000111279ca7 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112771ea: c012
relocInfo@0x00000001112771ea [type=12(metadata) addr=0x0000000111279cb7 offset=18] | [metadata_addr=0x0000000111279cb9 *=0x0000000267a95d30 offset=0]metadata_value=0x0000000267a95d30: method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x00000001112771ec: c033
relocInfo@0x00000001112771ec [type=12(metadata) addr=0x0000000111279cea offset=51] | [metadata_addr=0x0000000111279cec *=0x0000000267a95d30 offset=0]metadata_value=0x0000000267a95d30: method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x00000001112771ee: c012
relocInfo@0x00000001112771ee [type=12(metadata) addr=0x0000000111279cfc offset=18] | [metadata_addr=0x0000000111279cfe *=0x00000002679f4c18 offset=0]metadata_value=0x00000002679f4c18: method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x00000001112771f0: c02d
relocInfo@0x00000001112771f0 [type=12(metadata) addr=0x0000000111279d29 offset=45] | [metadata_addr=0x0000000111279d2b *=0x00000002679f4c18 offset=0]metadata_value=0x00000002679f4c18: method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x00000001112771f2: c012
relocInfo@0x00000001112771f2 [type=12(metadata) addr=0x0000000111279d3b offset=18] | [metadata_addr=0x0000000111279d3d *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x00000001112771f4: c030
relocInfo@0x00000001112771f4 [type=12(metadata) addr=0x0000000111279d6b offset=48] | [metadata_addr=0x0000000111279d6d *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x00000001112771f6: c038
relocInfo@0x00000001112771f6 [type=12(metadata) addr=0x0000000111279da3 offset=56] | [metadata_addr=0x0000000111279da5 *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x00000001112771f8: 1036
relocInfo@0x00000001112771f8 [type=1(oop) addr=0x0000000111279dd9 offset=54] | [oop_addr=0x0000000111279ddb *=0x0000000161400178 offset=0]
         @0x00000001112771fa: c00d
relocInfo@0x00000001112771fa [type=12(metadata) addr=0x0000000111279de6 offset=13] | [metadata_addr=0x0000000111279de8 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112771fc: c012
relocInfo@0x00000001112771fc [type=12(metadata) addr=0x0000000111279df8 offset=18] | [metadata_addr=0x0000000111279dfa *=0x0000000267a948b0 offset=0]metadata_value=0x0000000267a948b0: method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x00000001112771fe: c02d
relocInfo@0x00000001112771fe [type=12(metadata) addr=0x0000000111279e25 offset=45] | [metadata_addr=0x0000000111279e27 *=0x0000000267a948b0 offset=0]metadata_value=0x0000000267a948b0: method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x0000000111277200: c012
relocInfo@0x0000000111277200 [type=12(metadata) addr=0x0000000111279e37 offset=18] | [metadata_addr=0x0000000111279e39 *=0x0000000267a94a98 offset=0]metadata_value=0x0000000267a94a98: method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x0000000111277202: c02d
relocInfo@0x0000000111277202 [type=12(metadata) addr=0x0000000111279e64 offset=45] | [metadata_addr=0x0000000111279e66 *=0x0000000267a94a98 offset=0]metadata_value=0x0000000267a94a98: method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x0000000111277204: 1019
relocInfo@0x0000000111277204 [type=1(oop) addr=0x0000000111279e7d offset=25] | [oop_addr=0x0000000111279e7f *=0x00000001614d5db8 offset=0]
         @0x0000000111277206: c00d
relocInfo@0x0000000111277206 [type=12(metadata) addr=0x0000000111279e8a offset=13] | [metadata_addr=0x0000000111279e8c *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277208: c012
relocInfo@0x0000000111277208 [type=12(metadata) addr=0x0000000111279e9c offset=18] | [metadata_addr=0x0000000111279e9e *=0x0000000267a95f60 offset=0]metadata_value=0x0000000267a95f60: method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x000000011127720a: c030
relocInfo@0x000000011127720a [type=12(metadata) addr=0x0000000111279ecc offset=48] | [metadata_addr=0x0000000111279ece *=0x0000000267a95f60 offset=0]metadata_value=0x0000000267a95f60: method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x000000011127720c: c012
relocInfo@0x000000011127720c [type=12(metadata) addr=0x0000000111279ede offset=18] | [metadata_addr=0x0000000111279ee0 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127720e: c02d
relocInfo@0x000000011127720e [type=12(metadata) addr=0x0000000111279f0b offset=45] | [metadata_addr=0x0000000111279f0d *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277210: c012
relocInfo@0x0000000111277210 [type=12(metadata) addr=0x0000000111279f1d offset=18] | [metadata_addr=0x0000000111279f1f *=0x0000000267a96408 offset=0]metadata_value=0x0000000267a96408: method data for {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
         @0x0000000111277212: 102d
relocInfo@0x0000000111277212 [type=1(oop) addr=0x0000000111279f4a offset=45] | [oop_addr=0x0000000111279f4c *=0x0000000161400178 offset=0]
         @0x0000000111277214: c00d
relocInfo@0x0000000111277214 [type=12(metadata) addr=0x0000000111279f57 offset=13] | [metadata_addr=0x0000000111279f59 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277216: c015
relocInfo@0x0000000111277216 [type=12(metadata) addr=0x0000000111279f6c offset=21] | [metadata_addr=0x0000000111279f6e *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277218: c012
relocInfo@0x0000000111277218 [type=12(metadata) addr=0x0000000111279f7e offset=18] | [metadata_addr=0x0000000111279f80 *=0x0000000267a95910 offset=0]metadata_value=0x0000000267a95910: method data for {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x000000011127721a: c02d
relocInfo@0x000000011127721a [type=12(metadata) addr=0x0000000111279fab offset=45] | [metadata_addr=0x0000000111279fad *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127721c: c012
relocInfo@0x000000011127721c [type=12(metadata) addr=0x0000000111279fbd offset=18] | [metadata_addr=0x0000000111279fbf *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127721e: c012
relocInfo@0x000000011127721e [type=12(metadata) addr=0x0000000111279fcf offset=18] | [metadata_addr=0x0000000111279fd1 *=0x0000000267a96588 offset=0]metadata_value=0x0000000267a96588: method data for {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277220: c045
relocInfo@0x0000000111277220 [type=12(metadata) addr=0x000000011127a014 offset=69] | [metadata_addr=0x000000011127a016 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111277222: 1011
relocInfo@0x0000000111277222 [type=1(oop) addr=0x000000011127a025 offset=17] | [oop_addr=0x000000011127a027 *=0x00000001614058e0 offset=0]
         @0x0000000111277224: c019
relocInfo@0x0000000111277224 [type=12(metadata) addr=0x000000011127a03e offset=25] | [metadata_addr=0x000000011127a040 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277226: c012
relocInfo@0x0000000111277226 [type=12(metadata) addr=0x000000011127a050 offset=18] | [metadata_addr=0x000000011127a052 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111277228: c02d
relocInfo@0x0000000111277228 [type=12(metadata) addr=0x000000011127a07d offset=45] | [metadata_addr=0x000000011127a07f *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011127722a: c01d
relocInfo@0x000000011127722a [type=12(metadata) addr=0x000000011127a09a offset=29] | [metadata_addr=0x000000011127a09c *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011127722c: c012
relocInfo@0x000000011127722c [type=12(metadata) addr=0x000000011127a0ac offset=18] | [metadata_addr=0x000000011127a0ae *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011127722e: c02d
relocInfo@0x000000011127722e [type=12(metadata) addr=0x000000011127a0d9 offset=45] | [metadata_addr=0x000000011127a0db *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111277230: 1011
relocInfo@0x0000000111277230 [type=1(oop) addr=0x000000011127a0ea offset=17] | [oop_addr=0x000000011127a0ec *=0x0000000161405910 offset=0]
         @0x0000000111277232: c019
relocInfo@0x0000000111277232 [type=12(metadata) addr=0x000000011127a103 offset=25] | [metadata_addr=0x000000011127a105 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277234: c01d
relocInfo@0x0000000111277234 [type=12(metadata) addr=0x000000011127a120 offset=29] | [metadata_addr=0x000000011127a122 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277236: 1012
relocInfo@0x0000000111277236 [type=1(oop) addr=0x000000011127a132 offset=18] | [oop_addr=0x000000011127a134 *=0x0000000161400080 offset=0]
         @0x0000000111277238: 100a
relocInfo@0x0000000111277238 [type=1(oop) addr=0x000000011127a13c offset=10] | [oop_addr=0x000000011127a13e *=0x000000011ff8c550 offset=0]
         @0x000000011127723a: 1034
relocInfo@0x000000011127723a [type=1(oop) addr=0x000000011127a170 offset=52] | [oop_addr=0x000000011127a172 *=0x0000000161400178 offset=0]
         @0x000000011127723c: 100f
relocInfo@0x000000011127723c [type=1(oop) addr=0x000000011127a17f offset=15] | [oop_addr=0x000000011127a181 *=0x0000000161405910 offset=0]
         @0x000000011127723e: 4420
relocInfo@0x000000011127723e [type=4(static_call) addr=0x000000011127a19f offset=32 format=1] | [destination=0x0000000110bfa220 metadata=0x0000000000000000]
         @0x0000000111277240: c00b
relocInfo@0x0000000111277240 [type=12(metadata) addr=0x000000011127a1aa offset=11] | [metadata_addr=0x000000011127a1ac *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277242: c016
relocInfo@0x0000000111277242 [type=12(metadata) addr=0x000000011127a1c0 offset=22] | [metadata_addr=0x000000011127a1c2 *=0x0000000225d4ce30 offset=0]metadata_value=0x0000000225d4ce30: 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277244: c01b
relocInfo@0x0000000111277244 [type=12(metadata) addr=0x000000011127a1db offset=27] | [metadata_addr=0x000000011127a1dd *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277246: c08a
relocInfo@0x0000000111277246 [type=12(metadata) addr=0x000000011127a265 offset=138] | [metadata_addr=0x000000011127a267 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277248: c025
relocInfo@0x0000000111277248 [type=12(metadata) addr=0x000000011127a28a offset=37] | [metadata_addr=0x000000011127a28c *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011127724a: c012
relocInfo@0x000000011127724a [type=12(metadata) addr=0x000000011127a29c offset=18] | [metadata_addr=0x000000011127a29e *=0x0000000267a9e688 offset=0]metadata_value=0x0000000267a9e688: method data for {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127724c: c02b
relocInfo@0x000000011127724c [type=12(metadata) addr=0x000000011127a2c7 offset=43] | [metadata_addr=0x000000011127a2c9 *=0x0000000267a9e688 offset=0]metadata_value=0x0000000267a9e688: method data for {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127724e: c012
relocInfo@0x000000011127724e [type=12(metadata) addr=0x000000011127a2d9 offset=18] | [metadata_addr=0x000000011127a2db *=0x0000000267a9e870 offset=0]metadata_value=0x0000000267a9e870: method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277250: c02b
relocInfo@0x0000000111277250 [type=12(metadata) addr=0x000000011127a304 offset=43] | [metadata_addr=0x000000011127a306 *=0x0000000267a9e870 offset=0]metadata_value=0x0000000267a9e870: method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277252: f00a24ab
relocInfo@0x0000000111277254 [type=2(virtual_call) addr=0x000000011127a3af offset=171 format=1 data=10] | [destination=0x0000000110bf9f20 cached_value=0x000000011127a3a5 metadata=0x0000000000000000]
         @0x0000000111277256: c00d
relocInfo@0x0000000111277256 [type=12(metadata) addr=0x000000011127a3bc offset=13] | [metadata_addr=0x000000011127a3be *=0x0000000267a9e870 offset=0]metadata_value=0x0000000267a9e870: method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277258: 108d
relocInfo@0x0000000111277258 [type=1(oop) addr=0x000000011127a449 offset=141] | [oop_addr=0x000000011127a44b *=0x00000001614058c0 offset=0]
         @0x000000011127725a: f00a2426
relocInfo@0x000000011127725c [type=2(virtual_call) addr=0x000000011127a46f offset=38 format=1 data=10] | [destination=0x0000000110bf9f20 cached_value=0x000000011127a465 metadata=0x0000000000000000]
         @0x000000011127725e: c00d
relocInfo@0x000000011127725e [type=12(metadata) addr=0x000000011127a47c offset=13] | [metadata_addr=0x000000011127a47e *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111277260: c012
relocInfo@0x0000000111277260 [type=12(metadata) addr=0x000000011127a48e offset=18] | [metadata_addr=0x000000011127a490 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277262: 1028
relocInfo@0x0000000111277262 [type=1(oop) addr=0x000000011127a4b6 offset=40] | [oop_addr=0x000000011127a4b8 *=0x0000000161400178 offset=0]
         @0x0000000111277264: c00a
relocInfo@0x0000000111277264 [type=12(metadata) addr=0x000000011127a4c0 offset=10] | [metadata_addr=0x000000011127a4c2 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277266: c098
relocInfo@0x0000000111277266 [type=12(metadata) addr=0x000000011127a558 offset=152] | [metadata_addr=0x000000011127a55a *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277268: c012
relocInfo@0x0000000111277268 [type=12(metadata) addr=0x000000011127a56a offset=18] | [metadata_addr=0x000000011127a56c *=0x0000000267a95d30 offset=0]metadata_value=0x0000000267a95d30: method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x000000011127726a: c03a
relocInfo@0x000000011127726a [type=12(metadata) addr=0x000000011127a5a4 offset=58] | [metadata_addr=0x000000011127a5a6 *=0x0000000267a95d30 offset=0]metadata_value=0x0000000267a95d30: method data for {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x000000011127726c: c012
relocInfo@0x000000011127726c [type=12(metadata) addr=0x000000011127a5b6 offset=18] | [metadata_addr=0x000000011127a5b8 *=0x00000002679f4c18 offset=0]metadata_value=0x00000002679f4c18: method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x000000011127726e: c028
relocInfo@0x000000011127726e [type=12(metadata) addr=0x000000011127a5de offset=40] | [metadata_addr=0x000000011127a5e0 *=0x00000002679f4c18 offset=0]metadata_value=0x00000002679f4c18: method data for {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x0000000111277270: c012
relocInfo@0x0000000111277270 [type=12(metadata) addr=0x000000011127a5f0 offset=18] | [metadata_addr=0x000000011127a5f2 *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111277272: c02b
relocInfo@0x0000000111277272 [type=12(metadata) addr=0x000000011127a61b offset=43] | [metadata_addr=0x000000011127a61d *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111277274: c038
relocInfo@0x0000000111277274 [type=12(metadata) addr=0x000000011127a653 offset=56] | [metadata_addr=0x000000011127a655 *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111277276: 1036
relocInfo@0x0000000111277276 [type=1(oop) addr=0x000000011127a689 offset=54] | [oop_addr=0x000000011127a68b *=0x0000000161400178 offset=0]
         @0x0000000111277278: c00d
relocInfo@0x0000000111277278 [type=12(metadata) addr=0x000000011127a696 offset=13] | [metadata_addr=0x000000011127a698 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127727a: c012
relocInfo@0x000000011127727a [type=12(metadata) addr=0x000000011127a6a8 offset=18] | [metadata_addr=0x000000011127a6aa *=0x0000000267a948b0 offset=0]metadata_value=0x0000000267a948b0: method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x000000011127727c: c02d
relocInfo@0x000000011127727c [type=12(metadata) addr=0x000000011127a6d5 offset=45] | [metadata_addr=0x000000011127a6d7 *=0x0000000267a948b0 offset=0]metadata_value=0x0000000267a948b0: method data for {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x000000011127727e: c012
relocInfo@0x000000011127727e [type=12(metadata) addr=0x000000011127a6e7 offset=18] | [metadata_addr=0x000000011127a6e9 *=0x0000000267a94a98 offset=0]metadata_value=0x0000000267a94a98: method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x0000000111277280: c028
relocInfo@0x0000000111277280 [type=12(metadata) addr=0x000000011127a70f offset=40] | [metadata_addr=0x000000011127a711 *=0x0000000267a94a98 offset=0]metadata_value=0x0000000267a94a98: method data for {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x0000000111277282: 1018
relocInfo@0x0000000111277282 [type=1(oop) addr=0x000000011127a727 offset=24] | [oop_addr=0x000000011127a729 *=0x00000001614d5db8 offset=0]
         @0x0000000111277284: c00d
relocInfo@0x0000000111277284 [type=12(metadata) addr=0x000000011127a734 offset=13] | [metadata_addr=0x000000011127a736 *=0x0000000267a95a90 offset=0]metadata_value=0x0000000267a95a90: method data for {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277286: c012
relocInfo@0x0000000111277286 [type=12(metadata) addr=0x000000011127a746 offset=18] | [metadata_addr=0x000000011127a748 *=0x0000000267a95f60 offset=0]metadata_value=0x0000000267a95f60: method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x0000000111277288: c030
relocInfo@0x0000000111277288 [type=12(metadata) addr=0x000000011127a776 offset=48] | [metadata_addr=0x000000011127a778 *=0x0000000267a95f60 offset=0]metadata_value=0x0000000267a95f60: method data for {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x000000011127728a: c012
relocInfo@0x000000011127728a [type=12(metadata) addr=0x000000011127a788 offset=18] | [metadata_addr=0x000000011127a78a *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127728c: c02d
relocInfo@0x000000011127728c [type=12(metadata) addr=0x000000011127a7b5 offset=45] | [metadata_addr=0x000000011127a7b7 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127728e: c012
relocInfo@0x000000011127728e [type=12(metadata) addr=0x000000011127a7c7 offset=18] | [metadata_addr=0x000000011127a7c9 *=0x0000000267a96408 offset=0]metadata_value=0x0000000267a96408: method data for {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
         @0x0000000111277290: 1028
relocInfo@0x0000000111277290 [type=1(oop) addr=0x000000011127a7ef offset=40] | [oop_addr=0x000000011127a7f1 *=0x0000000161400178 offset=0]
         @0x0000000111277292: c00d
relocInfo@0x0000000111277292 [type=12(metadata) addr=0x000000011127a7fc offset=13] | [metadata_addr=0x000000011127a7fe *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277294: c015
relocInfo@0x0000000111277294 [type=12(metadata) addr=0x000000011127a811 offset=21] | [metadata_addr=0x000000011127a813 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277296: c012
relocInfo@0x0000000111277296 [type=12(metadata) addr=0x000000011127a823 offset=18] | [metadata_addr=0x000000011127a825 *=0x0000000267a95910 offset=0]metadata_value=0x0000000267a95910: method data for {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x0000000111277298: c02d
relocInfo@0x0000000111277298 [type=12(metadata) addr=0x000000011127a850 offset=45] | [metadata_addr=0x000000011127a852 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127729a: c012
relocInfo@0x000000011127729a [type=12(metadata) addr=0x000000011127a862 offset=18] | [metadata_addr=0x000000011127a864 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127729c: c012
relocInfo@0x000000011127729c [type=12(metadata) addr=0x000000011127a874 offset=18] | [metadata_addr=0x000000011127a876 *=0x0000000267a96588 offset=0]metadata_value=0x0000000267a96588: method data for {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127729e: c028
relocInfo@0x000000011127729e [type=12(metadata) addr=0x000000011127a89c offset=40] | [metadata_addr=0x000000011127a89e *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x00000001112772a0: 1011
relocInfo@0x00000001112772a0 [type=1(oop) addr=0x000000011127a8ad offset=17] | [oop_addr=0x000000011127a8af *=0x00000001614058e0 offset=0]
         @0x00000001112772a2: c019
relocInfo@0x00000001112772a2 [type=12(metadata) addr=0x000000011127a8c6 offset=25] | [metadata_addr=0x000000011127a8c8 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112772a4: c012
relocInfo@0x00000001112772a4 [type=12(metadata) addr=0x000000011127a8d8 offset=18] | [metadata_addr=0x000000011127a8da *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x00000001112772a6: c02d
relocInfo@0x00000001112772a6 [type=12(metadata) addr=0x000000011127a905 offset=45] | [metadata_addr=0x000000011127a907 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x00000001112772a8: c01d
relocInfo@0x00000001112772a8 [type=12(metadata) addr=0x000000011127a922 offset=29] | [metadata_addr=0x000000011127a924 *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x00000001112772aa: c012
relocInfo@0x00000001112772aa [type=12(metadata) addr=0x000000011127a934 offset=18] | [metadata_addr=0x000000011127a936 *=0x0000000110409d08 offset=0]metadata_value=0x0000000110409d08: method data for {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x00000001112772ac: c028
relocInfo@0x00000001112772ac [type=12(metadata) addr=0x000000011127a95c offset=40] | [metadata_addr=0x000000011127a95e *=0x000000011040ad08 offset=0]metadata_value=0x000000011040ad08: method data for {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x00000001112772ae: 1011
relocInfo@0x00000001112772ae [type=1(oop) addr=0x000000011127a96d offset=17] | [oop_addr=0x000000011127a96f *=0x0000000161405910 offset=0]
         @0x00000001112772b0: c019
relocInfo@0x00000001112772b0 [type=12(metadata) addr=0x000000011127a986 offset=25] | [metadata_addr=0x000000011127a988 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112772b2: c01d
relocInfo@0x00000001112772b2 [type=12(metadata) addr=0x000000011127a9a3 offset=29] | [metadata_addr=0x000000011127a9a5 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112772b4: 1012
relocInfo@0x00000001112772b4 [type=1(oop) addr=0x000000011127a9b5 offset=18] | [oop_addr=0x000000011127a9b7 *=0x0000000161400080 offset=0]
         @0x00000001112772b6: 100a
relocInfo@0x00000001112772b6 [type=1(oop) addr=0x000000011127a9bf offset=10] | [oop_addr=0x000000011127a9c1 *=0x000000011ff8c550 offset=0]
         @0x00000001112772b8: 101b
relocInfo@0x00000001112772b8 [type=1(oop) addr=0x000000011127a9da offset=27] | [oop_addr=0x000000011127a9dc *=0x0000000161400178 offset=0]
         @0x00000001112772ba: 100f
relocInfo@0x00000001112772ba [type=1(oop) addr=0x000000011127a9e9 offset=15] | [oop_addr=0x000000011127a9eb *=0x0000000161405910 offset=0]
         @0x00000001112772bc: 441e
relocInfo@0x00000001112772bc [type=4(static_call) addr=0x000000011127aa07 offset=30 format=1] | [destination=0x0000000110bfa220 metadata=0x0000000000000000]
         @0x00000001112772be: c00b
relocInfo@0x00000001112772be [type=12(metadata) addr=0x000000011127aa12 offset=11] | [metadata_addr=0x000000011127aa14 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112772c0: c016
relocInfo@0x00000001112772c0 [type=12(metadata) addr=0x000000011127aa28 offset=22] | [metadata_addr=0x000000011127aa2a *=0x0000000225d4ce30 offset=0]metadata_value=0x0000000225d4ce30: 'jdk/incubator/vector/DoubleVector'
         @0x00000001112772c2: c01b
relocInfo@0x00000001112772c2 [type=12(metadata) addr=0x000000011127aa43 offset=27] | [metadata_addr=0x000000011127aa45 *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112772c4: c08a
relocInfo@0x00000001112772c4 [type=12(metadata) addr=0x000000011127aacd offset=138] | [metadata_addr=0x000000011127aacf *=0x0000000267a96100 offset=0]metadata_value=0x0000000267a96100: method data for {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112772c6: c025
relocInfo@0x00000001112772c6 [type=12(metadata) addr=0x000000011127aaf2 offset=37] | [metadata_addr=0x000000011127aaf4 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x00000001112772c8: c012
relocInfo@0x00000001112772c8 [type=12(metadata) addr=0x000000011127ab04 offset=18] | [metadata_addr=0x000000011127ab06 *=0x0000000267a9e688 offset=0]metadata_value=0x0000000267a9e688: method data for {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112772ca: c02b
relocInfo@0x00000001112772ca [type=12(metadata) addr=0x000000011127ab2f offset=43] | [metadata_addr=0x000000011127ab31 *=0x0000000267a9e688 offset=0]metadata_value=0x0000000267a9e688: method data for {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112772cc: c012
relocInfo@0x00000001112772cc [type=12(metadata) addr=0x000000011127ab41 offset=18] | [metadata_addr=0x000000011127ab43 *=0x0000000267a9e870 offset=0]metadata_value=0x0000000267a9e870: method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112772ce: c02b
relocInfo@0x00000001112772ce [type=12(metadata) addr=0x000000011127ab6c offset=43] | [metadata_addr=0x000000011127ab6e *=0x0000000267a9e870 offset=0]metadata_value=0x0000000267a9e870: method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112772d0: f00a24ab
relocInfo@0x00000001112772d2 [type=2(virtual_call) addr=0x000000011127ac17 offset=171 format=1 data=10] | [destination=0x0000000110bf9f20 cached_value=0x000000011127ac0d metadata=0x0000000000000000]
         @0x00000001112772d4: c00d
relocInfo@0x00000001112772d4 [type=12(metadata) addr=0x000000011127ac24 offset=13] | [metadata_addr=0x000000011127ac26 *=0x0000000267a9e870 offset=0]metadata_value=0x0000000267a9e870: method data for {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112772d6: 108d
relocInfo@0x00000001112772d6 [type=1(oop) addr=0x000000011127acb1 offset=141] | [oop_addr=0x000000011127acb3 *=0x00000001614058c0 offset=0]
         @0x00000001112772d8: f00a2426
relocInfo@0x00000001112772da [type=2(virtual_call) addr=0x000000011127acd7 offset=38 format=1 data=10] | [destination=0x0000000110bf9f20 cached_value=0x000000011127accd metadata=0x0000000000000000]
         @0x00000001112772dc: c00b
relocInfo@0x00000001112772dc [type=12(metadata) addr=0x000000011127ace2 offset=11] | [metadata_addr=0x000000011127ace4 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x00000001112772de: c012
relocInfo@0x00000001112772de [type=12(metadata) addr=0x000000011127acf4 offset=18] | [metadata_addr=0x000000011127acf6 *=0x0000000267a9ea98 offset=0]metadata_value=0x0000000267a9ea98: method data for {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112772e0: c02b
relocInfo@0x00000001112772e0 [type=12(metadata) addr=0x000000011127ad1f offset=43] | [metadata_addr=0x000000011127ad21 *=0x0000000267a9ea98 offset=0]metadata_value=0x0000000267a9ea98: method data for {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112772e2: 108d
relocInfo@0x00000001112772e2 [type=1(oop) addr=0x000000011127adac offset=141] | [oop_addr=0x000000011127adae *=0x0000000161400370 offset=0]
         @0x00000001112772e4: f00a242b
relocInfo@0x00000001112772e6 [type=2(virtual_call) addr=0x000000011127add7 offset=43 format=1 data=10] | [destination=0x0000000110bf9f20 cached_value=0x000000011127adcd metadata=0x0000000000000000]
         @0x00000001112772e8: c013
relocInfo@0x00000001112772e8 [type=12(metadata) addr=0x000000011127adea offset=19] | [metadata_addr=0x000000011127adec *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x00000001112772ea: c012
relocInfo@0x00000001112772ea [type=12(metadata) addr=0x000000011127adfc offset=18] | [metadata_addr=0x000000011127adfe *=0x0000000267a97298 offset=0]metadata_value=0x0000000267a97298: method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112772ec: c02b
relocInfo@0x00000001112772ec [type=12(metadata) addr=0x000000011127ae27 offset=43] | [metadata_addr=0x000000011127ae29 *=0x0000000267a97298 offset=0]metadata_value=0x0000000267a97298: method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112772ee: 108d
relocInfo@0x00000001112772ee [type=1(oop) addr=0x000000011127aeb4 offset=141] | [oop_addr=0x000000011127aeb6 *=0x00000001614001e8 offset=0]
         @0x00000001112772f0: f00a242b
relocInfo@0x00000001112772f2 [type=2(virtual_call) addr=0x000000011127aedf offset=43 format=1 data=10] | [destination=0x0000000110bf9f20 cached_value=0x000000011127aed5 metadata=0x0000000000000000]
         @0x00000001112772f4: c013
relocInfo@0x00000001112772f4 [type=12(metadata) addr=0x000000011127aef2 offset=19] | [metadata_addr=0x000000011127aef4 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x00000001112772f6: c012
relocInfo@0x00000001112772f6 [type=12(metadata) addr=0x000000011127af04 offset=18] | [metadata_addr=0x000000011127af06 *=0x0000000267a9ea98 offset=0]metadata_value=0x0000000267a9ea98: method data for {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112772f8: c02b
relocInfo@0x00000001112772f8 [type=12(metadata) addr=0x000000011127af2f offset=43] | [metadata_addr=0x000000011127af31 *=0x0000000267a9ea98 offset=0]metadata_value=0x0000000267a9ea98: method data for {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112772fa: f00a24b0
relocInfo@0x00000001112772fc [type=2(virtual_call) addr=0x000000011127afdf offset=176 format=1 data=10] | [destination=0x0000000110bf9f20 cached_value=0x000000011127afd5 metadata=0x0000000000000000]
         @0x00000001112772fe: c013
relocInfo@0x00000001112772fe [type=12(metadata) addr=0x000000011127aff2 offset=19] | [metadata_addr=0x000000011127aff4 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111277300: c012
relocInfo@0x0000000111277300 [type=12(metadata) addr=0x000000011127b004 offset=18] | [metadata_addr=0x000000011127b006 *=0x0000000267a97298 offset=0]metadata_value=0x0000000267a97298: method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277302: c02b
relocInfo@0x0000000111277302 [type=12(metadata) addr=0x000000011127b02f offset=43] | [metadata_addr=0x000000011127b031 *=0x0000000267a97298 offset=0]metadata_value=0x0000000267a97298: method data for {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277304: f00a24a8
relocInfo@0x0000000111277306 [type=2(virtual_call) addr=0x000000011127b0d7 offset=168 format=1 data=10] | [destination=0x0000000110bf9f20 cached_value=0x000000011127b0cd metadata=0x0000000000000000]
         @0x0000000111277308: c00f
relocInfo@0x0000000111277308 [type=12(metadata) addr=0x000000011127b0e6 offset=15] | [metadata_addr=0x000000011127b0e8 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011127730a: a02f
relocInfo@0x000000011127730a [type=10(poll) addr=0x000000011127b115 offset=47]
         @0x000000011127730c: c003
relocInfo@0x000000011127730c [type=12(metadata) addr=0x000000011127b118 offset=3] | [metadata_addr=0x000000011127b11a *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011127730e: c042
relocInfo@0x000000011127730e [type=12(metadata) addr=0x000000011127b15a offset=66] | [metadata_addr=0x000000011127b15c *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111277310: 108d
relocInfo@0x0000000111277310 [type=1(oop) addr=0x000000011127b1e7 offset=141] | [oop_addr=0x000000011127b1e9 *=0x00000001614001e8 offset=0]
         @0x0000000111277312: f00a2428
relocInfo@0x0000000111277314 [type=2(virtual_call) addr=0x000000011127b20f offset=40 format=1 data=10] | [destination=0x0000000110bf9f20 cached_value=0x000000011127b205 metadata=0x0000000000000000]
         @0x0000000111277316: 9405
relocInfo@0x0000000111277316 [type=9(section_word) addr=0x000000011127b214 offset=5 format=1] | [target=0x00000001112777e0]
         @0x0000000111277318: c010
relocInfo@0x0000000111277318 [type=12(metadata) addr=0x000000011127b224 offset=16] | [metadata_addr=0x000000011127b226 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011127731a: f00a24b3
relocInfo@0x000000011127731c [type=2(virtual_call) addr=0x000000011127b2d7 offset=179 format=1 data=10] | [destination=0x0000000110bf9f20 cached_value=0x000000011127b2cd metadata=0x0000000000000000]
         @0x000000011127731e: f801ffe09405
relocInfo@0x0000000111277322 [type=9(section_word) addr=0x000000011127b2dc offset=5 format=1 data=-32] | [target=0x00000001112777e8]
         @0x0000000111277324: c080
relocInfo@0x0000000111277324 [type=12(metadata) addr=0x000000011127b35c offset=128] | [metadata_addr=0x000000011127b35e *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111277326: a02f
relocInfo@0x0000000111277326 [type=10(poll) addr=0x000000011127b38b offset=47]
         @0x0000000111277328: c003
relocInfo@0x0000000111277328 [type=12(metadata) addr=0x000000011127b38e offset=3] | [metadata_addr=0x000000011127b390 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011127732a: c01a
relocInfo@0x000000011127732a [type=12(metadata) addr=0x000000011127b3a8 offset=26] | [metadata_addr=0x000000011127b3aa *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011127732c: b06a
relocInfo@0x000000011127732c [type=11(poll_return) addr=0x000000011127b412 offset=106]
         @0x000000011127732e: c026
relocInfo@0x000000011127732e [type=12(metadata) addr=0x000000011127b438 offset=38] | [metadata_addr=0x000000011127b43a *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111277330: 1012
relocInfo@0x0000000111277330 [type=1(oop) addr=0x000000011127b44a offset=18] | [oop_addr=0x000000011127b44c *=0x0000000000000000 offset=0]
         @0x0000000111277332: 4415
relocInfo@0x0000000111277332 [type=4(static_call) addr=0x000000011127b45f offset=21 format=1] | [destination=0x0000000110bfa220 metadata=0x0000000000000000]
         @0x0000000111277334: c018
relocInfo@0x0000000111277334 [type=12(metadata) addr=0x000000011127b477 offset=24] | [metadata_addr=0x000000011127b479 *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111277336: 1012
relocInfo@0x0000000111277336 [type=1(oop) addr=0x000000011127b489 offset=18] | [oop_addr=0x000000011127b48b *=0x0000000000000000 offset=0]
         @0x0000000111277338: 441e
relocInfo@0x0000000111277338 [type=4(static_call) addr=0x000000011127b4a7 offset=30 format=1] | [destination=0x0000000110bfa220 metadata=0x0000000000000000]
         @0x000000011127733a: c026
relocInfo@0x000000011127733a [type=12(metadata) addr=0x000000011127b4cd offset=38] | [metadata_addr=0x000000011127b4cf *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x000000011127733c: 1012
relocInfo@0x000000011127733c [type=1(oop) addr=0x000000011127b4df offset=18] | [oop_addr=0x000000011127b4e1 *=0x0000000000000000 offset=0]
         @0x000000011127733e: 4418
relocInfo@0x000000011127733e [type=4(static_call) addr=0x000000011127b4f7 offset=24 format=1] | [destination=0x0000000110bfa220 metadata=0x0000000000000000]
         @0x0000000111277340: c015
relocInfo@0x0000000111277340 [type=12(metadata) addr=0x000000011127b50c offset=21] | [metadata_addr=0x000000011127b50e *=0x00000002679f4dd0 offset=0]metadata_value=0x00000002679f4dd0: method data for {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111277342: 1012
relocInfo@0x0000000111277342 [type=1(oop) addr=0x000000011127b51e offset=18] | [oop_addr=0x000000011127b520 *=0x0000000000000000 offset=0]
         @0x0000000111277344: 4419
relocInfo@0x0000000111277344 [type=4(static_call) addr=0x000000011127b537 offset=25 format=1] | [destination=0x0000000110bfa220 metadata=0x0000000000000000]
         @0x0000000111277346: 0011
relocInfo@0x0000000111277346 [type=0(none) addr=0x000000011127b548 offset=17]
         @0x0000000111277348: c05a
relocInfo@0x0000000111277348 [type=12(metadata) addr=0x000000011127b5a2 offset=90] | [metadata_addr=0x000000011127b5a4 *=0x0000000267a04640 offset=0]metadata_value=0x0000000267a04640: method data for {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011127734a: 1012
relocInfo@0x000000011127734a [type=1(oop) addr=0x000000011127b5b4 offset=18] | [oop_addr=0x000000011127b5b6 *=0x000000016140d810 offset=0]
         @0x000000011127734c: 341b
relocInfo@0x000000011127734c [type=3(opt_virtual_call) addr=0x000000011127b5cf offset=27 format=1] | [destination=0x0000000110bf9c20 metadata=0x0000000000000000]
         @0x000000011127734e: 64a3
relocInfo@0x000000011127734e [type=6(runtime_call) addr=0x000000011127b672 offset=163 format=1] | [destination=0x00000001097810a0]
         @0x0000000111277350: c09c
relocInfo@0x0000000111277350 [type=12(metadata) addr=0x000000011127b70e offset=156] | [metadata_addr=0x000000011127b710 *=0x000000026788fe18 offset=0]metadata_value=0x000000026788fe18: {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111277352: 6417
relocInfo@0x0000000111277352 [type=6(runtime_call) addr=0x000000011127b725 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277354: 640a
relocInfo@0x0000000111277354 [type=6(runtime_call) addr=0x000000011127b72f offset=10 format=1] | [destination=0x0000000110b44540]
         @0x0000000111277356: f80309b26b6900017005
relocInfo@0x000000011127735e [type=7(external_word) addr=0x000000011127b734 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111277360: 640e
relocInfo@0x0000000111277360 [type=6(runtime_call) addr=0x000000011127b742 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111277362: 6406
relocInfo@0x0000000111277362 [type=6(runtime_call) addr=0x000000011127b748 offset=6 format=1] | [destination=0x0000000110b44540]
         @0x0000000111277364: f80309b26b6900017005
relocInfo@0x000000011127736c [type=7(external_word) addr=0x000000011127b74d offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011127736e: 640e
relocInfo@0x000000011127736e [type=6(runtime_call) addr=0x000000011127b75b offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111277370: c006
relocInfo@0x0000000111277370 [type=12(metadata) addr=0x000000011127b761 offset=6] | [metadata_addr=0x000000011127b763 *=0x0000000267b3fa08 offset=0]metadata_value=0x0000000267b3fa08: {method} {0x0000000267b3fa08} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
         @0x0000000111277372: 6417
relocInfo@0x0000000111277372 [type=6(runtime_call) addr=0x000000011127b778 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277374: c00a
relocInfo@0x0000000111277374 [type=12(metadata) addr=0x000000011127b782 offset=10] | [metadata_addr=0x000000011127b784 *=0x0000000267b96588 offset=0]metadata_value=0x0000000267b96588: {method} {0x0000000267b96588} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x0000000111277376: 6417
relocInfo@0x0000000111277376 [type=6(runtime_call) addr=0x000000011127b799 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277378: c00a
relocInfo@0x0000000111277378 [type=12(metadata) addr=0x000000011127b7a3 offset=10] | [metadata_addr=0x000000011127b7a5 *=0x0000000267b17448 offset=0]metadata_value=0x0000000267b17448: {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127737a: 6417
relocInfo@0x000000011127737a [type=6(runtime_call) addr=0x000000011127b7ba offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011127737c: c00a
relocInfo@0x000000011127737c [type=12(metadata) addr=0x000000011127b7c4 offset=10] | [metadata_addr=0x000000011127b7c6 *=0x0000000267b17270 offset=0]metadata_value=0x0000000267b17270: {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127737e: 6417
relocInfo@0x000000011127737e [type=6(runtime_call) addr=0x000000011127b7db offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277380: c00a
relocInfo@0x0000000111277380 [type=12(metadata) addr=0x000000011127b7e5 offset=10] | [metadata_addr=0x000000011127b7e7 *=0x000000011040aa78 offset=0]metadata_value=0x000000011040aa78: {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111277382: 6417
relocInfo@0x0000000111277382 [type=6(runtime_call) addr=0x000000011127b7fc offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277384: c00a
relocInfo@0x0000000111277384 [type=12(metadata) addr=0x000000011127b806 offset=10] | [metadata_addr=0x000000011127b808 *=0x0000000110409a78 offset=0]metadata_value=0x0000000110409a78: {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x0000000111277386: 6417
relocInfo@0x0000000111277386 [type=6(runtime_call) addr=0x000000011127b81d offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277388: 640e
relocInfo@0x0000000111277388 [type=6(runtime_call) addr=0x000000011127b82b offset=14 format=1] | [destination=0x0000000110b41ac0]
         @0x000000011127738a: f80309b26b6900017005
relocInfo@0x0000000111277392 [type=7(external_word) addr=0x000000011127b830 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111277394: 640e
relocInfo@0x0000000111277394 [type=6(runtime_call) addr=0x000000011127b83e offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111277396: c006
relocInfo@0x0000000111277396 [type=12(metadata) addr=0x000000011127b844 offset=6] | [metadata_addr=0x000000011127b846 *=0x0000000267b17448 offset=0]metadata_value=0x0000000267b17448: {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277398: 6417
relocInfo@0x0000000111277398 [type=6(runtime_call) addr=0x000000011127b85b offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011127739a: c00a
relocInfo@0x000000011127739a [type=12(metadata) addr=0x000000011127b865 offset=10] | [metadata_addr=0x000000011127b867 *=0x0000000267b17270 offset=0]metadata_value=0x0000000267b17270: {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127739c: 6417
relocInfo@0x000000011127739c [type=6(runtime_call) addr=0x000000011127b87c offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011127739e: c00a
relocInfo@0x000000011127739e [type=12(metadata) addr=0x000000011127b886 offset=10] | [metadata_addr=0x000000011127b888 *=0x000000011040aa78 offset=0]metadata_value=0x000000011040aa78: {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x00000001112773a0: 6417
relocInfo@0x00000001112773a0 [type=6(runtime_call) addr=0x000000011127b89d offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112773a2: c00a
relocInfo@0x00000001112773a2 [type=12(metadata) addr=0x000000011127b8a7 offset=10] | [metadata_addr=0x000000011127b8a9 *=0x0000000110409a78 offset=0]metadata_value=0x0000000110409a78: {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x00000001112773a4: 6417
relocInfo@0x00000001112773a4 [type=6(runtime_call) addr=0x000000011127b8be offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112773a6: 640e
relocInfo@0x00000001112773a6 [type=6(runtime_call) addr=0x000000011127b8cc offset=14 format=1] | [destination=0x0000000110b41ac0]
         @0x00000001112773a8: f80309b26b6900017005
relocInfo@0x00000001112773b0 [type=7(external_word) addr=0x000000011127b8d1 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x00000001112773b2: 640e
relocInfo@0x00000001112773b2 [type=6(runtime_call) addr=0x000000011127b8df offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001112773b4: c006
relocInfo@0x00000001112773b4 [type=12(metadata) addr=0x000000011127b8e5 offset=6] | [metadata_addr=0x000000011127b8e7 *=0x0000000267b1ded0 offset=0]metadata_value=0x0000000267b1ded0: {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112773b6: 6417
relocInfo@0x00000001112773b6 [type=6(runtime_call) addr=0x000000011127b8fc offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112773b8: 640a
relocInfo@0x00000001112773b8 [type=6(runtime_call) addr=0x000000011127b906 offset=10 format=1] | [destination=0x0000000110b44540]
         @0x00000001112773ba: f80309b26b6900017005
relocInfo@0x00000001112773c2 [type=7(external_word) addr=0x000000011127b90b offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x00000001112773c4: 640e
relocInfo@0x00000001112773c4 [type=6(runtime_call) addr=0x000000011127b919 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001112773c6: c006
relocInfo@0x00000001112773c6 [type=12(metadata) addr=0x000000011127b91f offset=6] | [metadata_addr=0x000000011127b921 *=0x0000000267b96280 offset=0]metadata_value=0x0000000267b96280: {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x00000001112773c8: 6417
relocInfo@0x00000001112773c8 [type=6(runtime_call) addr=0x000000011127b936 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112773ca: c00a
relocInfo@0x00000001112773ca [type=12(metadata) addr=0x000000011127b940 offset=10] | [metadata_addr=0x000000011127b942 *=0x000000011015f0e0 offset=0]metadata_value=0x000000011015f0e0: {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x00000001112773cc: 6417
relocInfo@0x00000001112773cc [type=6(runtime_call) addr=0x000000011127b957 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112773ce: c00a
relocInfo@0x00000001112773ce [type=12(metadata) addr=0x000000011127b961 offset=10] | [metadata_addr=0x000000011127b963 *=0x00000001103f3408 offset=0]metadata_value=0x00000001103f3408: {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x00000001112773d0: 6417
relocInfo@0x00000001112773d0 [type=6(runtime_call) addr=0x000000011127b978 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112773d2: c00a
relocInfo@0x00000001112773d2 [type=12(metadata) addr=0x000000011127b982 offset=10] | [metadata_addr=0x000000011127b984 *=0x0000000267b39e30 offset=0]metadata_value=0x0000000267b39e30: {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x00000001112773d4: 6417
relocInfo@0x00000001112773d4 [type=6(runtime_call) addr=0x000000011127b999 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112773d6: c00a
relocInfo@0x00000001112773d6 [type=12(metadata) addr=0x000000011127b9a3 offset=10] | [metadata_addr=0x000000011127b9a5 *=0x0000000267b40508 offset=0]metadata_value=0x0000000267b40508: {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x00000001112773d8: 6417
relocInfo@0x00000001112773d8 [type=6(runtime_call) addr=0x000000011127b9ba offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112773da: c00a
relocInfo@0x00000001112773da [type=12(metadata) addr=0x000000011127b9c4 offset=10] | [metadata_addr=0x000000011127b9c6 *=0x0000000267b710c0 offset=0]metadata_value=0x0000000267b710c0: {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x00000001112773dc: 6417
relocInfo@0x00000001112773dc [type=6(runtime_call) addr=0x000000011127b9db offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112773de: c00a
relocInfo@0x00000001112773de [type=12(metadata) addr=0x000000011127b9e5 offset=10] | [metadata_addr=0x000000011127b9e7 *=0x0000000267b1f228 offset=0]metadata_value=0x0000000267b1f228: {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112773e0: 6417
relocInfo@0x00000001112773e0 [type=6(runtime_call) addr=0x000000011127b9fc offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112773e2: c00a
relocInfo@0x00000001112773e2 [type=12(metadata) addr=0x000000011127ba06 offset=10] | [metadata_addr=0x000000011127ba08 *=0x0000000267b6d620 offset=0]metadata_value=0x0000000267b6d620: {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
         @0x00000001112773e4: 6417
relocInfo@0x00000001112773e4 [type=6(runtime_call) addr=0x000000011127ba1d offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112773e6: c00a
relocInfo@0x00000001112773e6 [type=12(metadata) addr=0x000000011127ba27 offset=10] | [metadata_addr=0x000000011127ba29 *=0x0000000267b393b0 offset=0]metadata_value=0x0000000267b393b0: {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x00000001112773e8: 6417
relocInfo@0x00000001112773e8 [type=6(runtime_call) addr=0x000000011127ba3e offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112773ea: c00a
relocInfo@0x00000001112773ea [type=12(metadata) addr=0x000000011127ba48 offset=10] | [metadata_addr=0x000000011127ba4a *=0x0000000267b1fe80 offset=0]metadata_value=0x0000000267b1fe80: {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112773ec: 6417
relocInfo@0x00000001112773ec [type=6(runtime_call) addr=0x000000011127ba5f offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112773ee: c00a
relocInfo@0x00000001112773ee [type=12(metadata) addr=0x000000011127ba69 offset=10] | [metadata_addr=0x000000011127ba6b *=0x000000011040aa78 offset=0]metadata_value=0x000000011040aa78: {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x00000001112773f0: 6417
relocInfo@0x00000001112773f0 [type=6(runtime_call) addr=0x000000011127ba80 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112773f2: c00a
relocInfo@0x00000001112773f2 [type=12(metadata) addr=0x000000011127ba8a offset=10] | [metadata_addr=0x000000011127ba8c *=0x0000000110409a78 offset=0]metadata_value=0x0000000110409a78: {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x00000001112773f4: 6417
relocInfo@0x00000001112773f4 [type=6(runtime_call) addr=0x000000011127baa1 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112773f6: 640e
relocInfo@0x00000001112773f6 [type=6(runtime_call) addr=0x000000011127baaf offset=14 format=1] | [destination=0x0000000110b41ac0]
         @0x00000001112773f8: f80309b26b6900017005
relocInfo@0x0000000111277400 [type=7(external_word) addr=0x000000011127bab4 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111277402: 640e
relocInfo@0x0000000111277402 [type=6(runtime_call) addr=0x000000011127bac2 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111277404: 6406
relocInfo@0x0000000111277404 [type=6(runtime_call) addr=0x000000011127bac8 offset=6 format=1] | [destination=0x0000000110b44540]
         @0x0000000111277406: f80309b26b6900017005
relocInfo@0x000000011127740e [type=7(external_word) addr=0x000000011127bacd offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111277410: 640e
relocInfo@0x0000000111277410 [type=6(runtime_call) addr=0x000000011127badb offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111277412: c006
relocInfo@0x0000000111277412 [type=12(metadata) addr=0x000000011127bae1 offset=6] | [metadata_addr=0x000000011127bae3 *=0x0000000267b18ef0 offset=0]metadata_value=0x0000000267b18ef0: {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277414: 6417
relocInfo@0x0000000111277414 [type=6(runtime_call) addr=0x000000011127baf8 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277416: c00a
relocInfo@0x0000000111277416 [type=12(metadata) addr=0x000000011127bb02 offset=10] | [metadata_addr=0x000000011127bb04 *=0x0000000267b1ded0 offset=0]metadata_value=0x0000000267b1ded0: {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277418: 6417
relocInfo@0x0000000111277418 [type=6(runtime_call) addr=0x000000011127bb19 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011127741a: 640a
relocInfo@0x000000011127741a [type=6(runtime_call) addr=0x000000011127bb23 offset=10 format=1] | [destination=0x0000000110b44540]
         @0x000000011127741c: f80309b26b6900017005
relocInfo@0x0000000111277424 [type=7(external_word) addr=0x000000011127bb28 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111277426: 640e
relocInfo@0x0000000111277426 [type=6(runtime_call) addr=0x000000011127bb36 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111277428: c006
relocInfo@0x0000000111277428 [type=12(metadata) addr=0x000000011127bb3c offset=6] | [metadata_addr=0x000000011127bb3e *=0x0000000267b96280 offset=0]metadata_value=0x0000000267b96280: {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x000000011127742a: 6417
relocInfo@0x000000011127742a [type=6(runtime_call) addr=0x000000011127bb53 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011127742c: c00a
relocInfo@0x000000011127742c [type=12(metadata) addr=0x000000011127bb5d offset=10] | [metadata_addr=0x000000011127bb5f *=0x000000011015f0e0 offset=0]metadata_value=0x000000011015f0e0: {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x000000011127742e: 6417
relocInfo@0x000000011127742e [type=6(runtime_call) addr=0x000000011127bb74 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277430: c00a
relocInfo@0x0000000111277430 [type=12(metadata) addr=0x000000011127bb7e offset=10] | [metadata_addr=0x000000011127bb80 *=0x00000001103f3408 offset=0]metadata_value=0x00000001103f3408: {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111277432: 6417
relocInfo@0x0000000111277432 [type=6(runtime_call) addr=0x000000011127bb95 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277434: c00a
relocInfo@0x0000000111277434 [type=12(metadata) addr=0x000000011127bb9f offset=10] | [metadata_addr=0x000000011127bba1 *=0x0000000267b39e30 offset=0]metadata_value=0x0000000267b39e30: {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x0000000111277436: 6417
relocInfo@0x0000000111277436 [type=6(runtime_call) addr=0x000000011127bbb6 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277438: c00a
relocInfo@0x0000000111277438 [type=12(metadata) addr=0x000000011127bbc0 offset=10] | [metadata_addr=0x000000011127bbc2 *=0x0000000267b40508 offset=0]metadata_value=0x0000000267b40508: {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x000000011127743a: 6417
relocInfo@0x000000011127743a [type=6(runtime_call) addr=0x000000011127bbd7 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011127743c: c00a
relocInfo@0x000000011127743c [type=12(metadata) addr=0x000000011127bbe1 offset=10] | [metadata_addr=0x000000011127bbe3 *=0x0000000267b710c0 offset=0]metadata_value=0x0000000267b710c0: {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x000000011127743e: 6417
relocInfo@0x000000011127743e [type=6(runtime_call) addr=0x000000011127bbf8 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277440: c00a
relocInfo@0x0000000111277440 [type=12(metadata) addr=0x000000011127bc02 offset=10] | [metadata_addr=0x000000011127bc04 *=0x0000000267b1f228 offset=0]metadata_value=0x0000000267b1f228: {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277442: 6417
relocInfo@0x0000000111277442 [type=6(runtime_call) addr=0x000000011127bc19 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277444: c00a
relocInfo@0x0000000111277444 [type=12(metadata) addr=0x000000011127bc23 offset=10] | [metadata_addr=0x000000011127bc25 *=0x0000000267b6d620 offset=0]metadata_value=0x0000000267b6d620: {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
         @0x0000000111277446: 6417
relocInfo@0x0000000111277446 [type=6(runtime_call) addr=0x000000011127bc3a offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277448: c00a
relocInfo@0x0000000111277448 [type=12(metadata) addr=0x000000011127bc44 offset=10] | [metadata_addr=0x000000011127bc46 *=0x0000000267b393b0 offset=0]metadata_value=0x0000000267b393b0: {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x000000011127744a: 6417
relocInfo@0x000000011127744a [type=6(runtime_call) addr=0x000000011127bc5b offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011127744c: c00a
relocInfo@0x000000011127744c [type=12(metadata) addr=0x000000011127bc65 offset=10] | [metadata_addr=0x000000011127bc67 *=0x0000000267b1fe80 offset=0]metadata_value=0x0000000267b1fe80: {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127744e: 6417
relocInfo@0x000000011127744e [type=6(runtime_call) addr=0x000000011127bc7c offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277450: c00a
relocInfo@0x0000000111277450 [type=12(metadata) addr=0x000000011127bc86 offset=10] | [metadata_addr=0x000000011127bc88 *=0x000000011040aa78 offset=0]metadata_value=0x000000011040aa78: {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x0000000111277452: 6417
relocInfo@0x0000000111277452 [type=6(runtime_call) addr=0x000000011127bc9d offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277454: c00a
relocInfo@0x0000000111277454 [type=12(metadata) addr=0x000000011127bca7 offset=10] | [metadata_addr=0x000000011127bca9 *=0x0000000110409a78 offset=0]metadata_value=0x0000000110409a78: {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x0000000111277456: 6417
relocInfo@0x0000000111277456 [type=6(runtime_call) addr=0x000000011127bcbe offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277458: 640e
relocInfo@0x0000000111277458 [type=6(runtime_call) addr=0x000000011127bccc offset=14 format=1] | [destination=0x0000000110b41ac0]
         @0x000000011127745a: f80309b26b6900017005
relocInfo@0x0000000111277462 [type=7(external_word) addr=0x000000011127bcd1 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111277464: 640e
relocInfo@0x0000000111277464 [type=6(runtime_call) addr=0x000000011127bcdf offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111277466: 6406
relocInfo@0x0000000111277466 [type=6(runtime_call) addr=0x000000011127bce5 offset=6 format=1] | [destination=0x0000000110b44540]
         @0x0000000111277468: f80309b26b6900017005
relocInfo@0x0000000111277470 [type=7(external_word) addr=0x000000011127bcea offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111277472: 640e
relocInfo@0x0000000111277472 [type=6(runtime_call) addr=0x000000011127bcf8 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111277474: c006
relocInfo@0x0000000111277474 [type=12(metadata) addr=0x000000011127bcfe offset=6] | [metadata_addr=0x000000011127bd00 *=0x0000000267b18ef0 offset=0]metadata_value=0x0000000267b18ef0: {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277476: 6417
relocInfo@0x0000000111277476 [type=6(runtime_call) addr=0x000000011127bd15 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277478: c00a
relocInfo@0x0000000111277478 [type=12(metadata) addr=0x000000011127bd1f offset=10] | [metadata_addr=0x000000011127bd21 *=0x000000026788fe18 offset=0]metadata_value=0x000000026788fe18: {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011127747a: 6417
relocInfo@0x000000011127747a [type=6(runtime_call) addr=0x000000011127bd36 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011127747c: 640a
relocInfo@0x000000011127747c [type=6(runtime_call) addr=0x000000011127bd40 offset=10 format=1] | [destination=0x0000000110b44540]
         @0x000000011127747e: f80309b26b6900017005
relocInfo@0x0000000111277486 [type=7(external_word) addr=0x000000011127bd45 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111277488: 640e
relocInfo@0x0000000111277488 [type=6(runtime_call) addr=0x000000011127bd53 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011127748a: 6406
relocInfo@0x000000011127748a [type=6(runtime_call) addr=0x000000011127bd59 offset=6 format=1] | [destination=0x0000000110b44540]
         @0x000000011127748c: f80309b26b6900017005
relocInfo@0x0000000111277494 [type=7(external_word) addr=0x000000011127bd5e offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111277496: 640e
relocInfo@0x0000000111277496 [type=6(runtime_call) addr=0x000000011127bd6c offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111277498: 640f
relocInfo@0x0000000111277498 [type=6(runtime_call) addr=0x000000011127bd7b offset=15 format=1] | [destination=0x0000000110b44e40]
         @0x000000011127749a: f80309b26b6900017005
relocInfo@0x00000001112774a2 [type=7(external_word) addr=0x000000011127bd80 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x00000001112774a4: 640e
relocInfo@0x00000001112774a4 [type=6(runtime_call) addr=0x000000011127bd8e offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001112774a6: 6406
relocInfo@0x00000001112774a6 [type=6(runtime_call) addr=0x000000011127bd94 offset=6 format=1] | [destination=0x0000000110b44540]
         @0x00000001112774a8: f80309b26b6900017005
relocInfo@0x00000001112774b0 [type=7(external_word) addr=0x000000011127bd99 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x00000001112774b2: 640e
relocInfo@0x00000001112774b2 [type=6(runtime_call) addr=0x000000011127bda7 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001112774b4: 6406
relocInfo@0x00000001112774b4 [type=6(runtime_call) addr=0x000000011127bdad offset=6 format=1] | [destination=0x0000000110b44540]
         @0x00000001112774b6: f80309b26b6900017005
relocInfo@0x00000001112774be [type=7(external_word) addr=0x000000011127bdb2 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x00000001112774c0: 640e
relocInfo@0x00000001112774c0 [type=6(runtime_call) addr=0x000000011127bdc0 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001112774c2: 640f
relocInfo@0x00000001112774c2 [type=6(runtime_call) addr=0x000000011127bdcf offset=15 format=1] | [destination=0x0000000110b44e40]
         @0x00000001112774c4: f80309b26b6900017005
relocInfo@0x00000001112774cc [type=7(external_word) addr=0x000000011127bdd4 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x00000001112774ce: 640e
relocInfo@0x00000001112774ce [type=6(runtime_call) addr=0x000000011127bde2 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001112774d0: c006
relocInfo@0x00000001112774d0 [type=12(metadata) addr=0x000000011127bde8 offset=6] | [metadata_addr=0x000000011127bdea *=0x000000026788fe18 offset=0]metadata_value=0x000000026788fe18: {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x00000001112774d2: 6417
relocInfo@0x00000001112774d2 [type=6(runtime_call) addr=0x000000011127bdff offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112774d4: 640a
relocInfo@0x00000001112774d4 [type=6(runtime_call) addr=0x000000011127be09 offset=10 format=1] | [destination=0x0000000110b44540]
         @0x00000001112774d6: f80309b26b6900017005
relocInfo@0x00000001112774de [type=7(external_word) addr=0x000000011127be0e offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x00000001112774e0: 640e
relocInfo@0x00000001112774e0 [type=6(runtime_call) addr=0x000000011127be1c offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001112774e2: c006
relocInfo@0x00000001112774e2 [type=12(metadata) addr=0x000000011127be22 offset=6] | [metadata_addr=0x000000011127be24 *=0x0000000267b17448 offset=0]metadata_value=0x0000000267b17448: {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112774e4: 6417
relocInfo@0x00000001112774e4 [type=6(runtime_call) addr=0x000000011127be39 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112774e6: c00a
relocInfo@0x00000001112774e6 [type=12(metadata) addr=0x000000011127be43 offset=10] | [metadata_addr=0x000000011127be45 *=0x0000000267b17270 offset=0]metadata_value=0x0000000267b17270: {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112774e8: 6417
relocInfo@0x00000001112774e8 [type=6(runtime_call) addr=0x000000011127be5a offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112774ea: c00a
relocInfo@0x00000001112774ea [type=12(metadata) addr=0x000000011127be64 offset=10] | [metadata_addr=0x000000011127be66 *=0x000000011040aa78 offset=0]metadata_value=0x000000011040aa78: {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x00000001112774ec: 6417
relocInfo@0x00000001112774ec [type=6(runtime_call) addr=0x000000011127be7b offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112774ee: c00a
relocInfo@0x00000001112774ee [type=12(metadata) addr=0x000000011127be85 offset=10] | [metadata_addr=0x000000011127be87 *=0x0000000110409a78 offset=0]metadata_value=0x0000000110409a78: {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x00000001112774f0: 6417
relocInfo@0x00000001112774f0 [type=6(runtime_call) addr=0x000000011127be9c offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112774f2: 640e
relocInfo@0x00000001112774f2 [type=6(runtime_call) addr=0x000000011127beaa offset=14 format=1] | [destination=0x0000000110b41ac0]
         @0x00000001112774f4: f80309b26b6900017005
relocInfo@0x00000001112774fc [type=7(external_word) addr=0x000000011127beaf offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x00000001112774fe: 640e
relocInfo@0x00000001112774fe [type=6(runtime_call) addr=0x000000011127bebd offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111277500: c006
relocInfo@0x0000000111277500 [type=12(metadata) addr=0x000000011127bec3 offset=6] | [metadata_addr=0x000000011127bec5 *=0x0000000267b17448 offset=0]metadata_value=0x0000000267b17448: {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277502: 6417
relocInfo@0x0000000111277502 [type=6(runtime_call) addr=0x000000011127beda offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277504: c00a
relocInfo@0x0000000111277504 [type=12(metadata) addr=0x000000011127bee4 offset=10] | [metadata_addr=0x000000011127bee6 *=0x0000000267b17270 offset=0]metadata_value=0x0000000267b17270: {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277506: 6417
relocInfo@0x0000000111277506 [type=6(runtime_call) addr=0x000000011127befb offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277508: c00a
relocInfo@0x0000000111277508 [type=12(metadata) addr=0x000000011127bf05 offset=10] | [metadata_addr=0x000000011127bf07 *=0x000000011040aa78 offset=0]metadata_value=0x000000011040aa78: {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011127750a: 6417
relocInfo@0x000000011127750a [type=6(runtime_call) addr=0x000000011127bf1c offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011127750c: c00a
relocInfo@0x000000011127750c [type=12(metadata) addr=0x000000011127bf26 offset=10] | [metadata_addr=0x000000011127bf28 *=0x0000000110409a78 offset=0]metadata_value=0x0000000110409a78: {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x000000011127750e: 6417
relocInfo@0x000000011127750e [type=6(runtime_call) addr=0x000000011127bf3d offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277510: 640e
relocInfo@0x0000000111277510 [type=6(runtime_call) addr=0x000000011127bf4b offset=14 format=1] | [destination=0x0000000110b41ac0]
         @0x0000000111277512: f80309b26b6900017005
relocInfo@0x000000011127751a [type=7(external_word) addr=0x000000011127bf50 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011127751c: 640e
relocInfo@0x000000011127751c [type=6(runtime_call) addr=0x000000011127bf5e offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011127751e: c006
relocInfo@0x000000011127751e [type=12(metadata) addr=0x000000011127bf64 offset=6] | [metadata_addr=0x000000011127bf66 *=0x0000000267b1ded0 offset=0]metadata_value=0x0000000267b1ded0: {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277520: 6417
relocInfo@0x0000000111277520 [type=6(runtime_call) addr=0x000000011127bf7b offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277522: c00a
relocInfo@0x0000000111277522 [type=12(metadata) addr=0x000000011127bf85 offset=10] | [metadata_addr=0x000000011127bf87 *=0x0000000267b96280 offset=0]metadata_value=0x0000000267b96280: {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x0000000111277524: 6417
relocInfo@0x0000000111277524 [type=6(runtime_call) addr=0x000000011127bf9c offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277526: c00a
relocInfo@0x0000000111277526 [type=12(metadata) addr=0x000000011127bfa6 offset=10] | [metadata_addr=0x000000011127bfa8 *=0x000000011015f0e0 offset=0]metadata_value=0x000000011015f0e0: {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x0000000111277528: 6417
relocInfo@0x0000000111277528 [type=6(runtime_call) addr=0x000000011127bfbd offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011127752a: c00a
relocInfo@0x000000011127752a [type=12(metadata) addr=0x000000011127bfc7 offset=10] | [metadata_addr=0x000000011127bfc9 *=0x00000001103f3408 offset=0]metadata_value=0x00000001103f3408: {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x000000011127752c: 6417
relocInfo@0x000000011127752c [type=6(runtime_call) addr=0x000000011127bfde offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011127752e: c00a
relocInfo@0x000000011127752e [type=12(metadata) addr=0x000000011127bfe8 offset=10] | [metadata_addr=0x000000011127bfea *=0x0000000267b39e30 offset=0]metadata_value=0x0000000267b39e30: {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x0000000111277530: 6417
relocInfo@0x0000000111277530 [type=6(runtime_call) addr=0x000000011127bfff offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277532: c00a
relocInfo@0x0000000111277532 [type=12(metadata) addr=0x000000011127c009 offset=10] | [metadata_addr=0x000000011127c00b *=0x0000000267b40508 offset=0]metadata_value=0x0000000267b40508: {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x0000000111277534: 6417
relocInfo@0x0000000111277534 [type=6(runtime_call) addr=0x000000011127c020 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277536: c00a
relocInfo@0x0000000111277536 [type=12(metadata) addr=0x000000011127c02a offset=10] | [metadata_addr=0x000000011127c02c *=0x0000000267b710c0 offset=0]metadata_value=0x0000000267b710c0: {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x0000000111277538: 6417
relocInfo@0x0000000111277538 [type=6(runtime_call) addr=0x000000011127c041 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011127753a: c00a
relocInfo@0x000000011127753a [type=12(metadata) addr=0x000000011127c04b offset=10] | [metadata_addr=0x000000011127c04d *=0x0000000267b1f228 offset=0]metadata_value=0x0000000267b1f228: {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x000000011127753c: 6417
relocInfo@0x000000011127753c [type=6(runtime_call) addr=0x000000011127c062 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011127753e: c00a
relocInfo@0x000000011127753e [type=12(metadata) addr=0x000000011127c06c offset=10] | [metadata_addr=0x000000011127c06e *=0x0000000267b6d620 offset=0]metadata_value=0x0000000267b6d620: {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
         @0x0000000111277540: 6417
relocInfo@0x0000000111277540 [type=6(runtime_call) addr=0x000000011127c083 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277542: c00a
relocInfo@0x0000000111277542 [type=12(metadata) addr=0x000000011127c08d offset=10] | [metadata_addr=0x000000011127c08f *=0x0000000267b393b0 offset=0]metadata_value=0x0000000267b393b0: {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x0000000111277544: 6417
relocInfo@0x0000000111277544 [type=6(runtime_call) addr=0x000000011127c0a4 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277546: c00a
relocInfo@0x0000000111277546 [type=12(metadata) addr=0x000000011127c0ae offset=10] | [metadata_addr=0x000000011127c0b0 *=0x0000000267b1fe80 offset=0]metadata_value=0x0000000267b1fe80: {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277548: 6417
relocInfo@0x0000000111277548 [type=6(runtime_call) addr=0x000000011127c0c5 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011127754a: c00a
relocInfo@0x000000011127754a [type=12(metadata) addr=0x000000011127c0cf offset=10] | [metadata_addr=0x000000011127c0d1 *=0x000000011040aa78 offset=0]metadata_value=0x000000011040aa78: {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x000000011127754c: 6417
relocInfo@0x000000011127754c [type=6(runtime_call) addr=0x000000011127c0e6 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011127754e: c00a
relocInfo@0x000000011127754e [type=12(metadata) addr=0x000000011127c0f0 offset=10] | [metadata_addr=0x000000011127c0f2 *=0x0000000110409a78 offset=0]metadata_value=0x0000000110409a78: {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x0000000111277550: 6417
relocInfo@0x0000000111277550 [type=6(runtime_call) addr=0x000000011127c107 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277552: 640e
relocInfo@0x0000000111277552 [type=6(runtime_call) addr=0x000000011127c115 offset=14 format=1] | [destination=0x0000000110b41ac0]
         @0x0000000111277554: f80309b26b6900017005
relocInfo@0x000000011127755c [type=7(external_word) addr=0x000000011127c11a offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011127755e: 640e
relocInfo@0x000000011127755e [type=6(runtime_call) addr=0x000000011127c128 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111277560: 6406
relocInfo@0x0000000111277560 [type=6(runtime_call) addr=0x000000011127c12e offset=6 format=1] | [destination=0x0000000110b44540]
         @0x0000000111277562: f80309b26b6900017005
relocInfo@0x000000011127756a [type=7(external_word) addr=0x000000011127c133 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011127756c: 640e
relocInfo@0x000000011127756c [type=6(runtime_call) addr=0x000000011127c141 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011127756e: c006
relocInfo@0x000000011127756e [type=12(metadata) addr=0x000000011127c147 offset=6] | [metadata_addr=0x000000011127c149 *=0x0000000267b19378 offset=0]metadata_value=0x0000000267b19378: {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277570: 6417
relocInfo@0x0000000111277570 [type=6(runtime_call) addr=0x000000011127c15e offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277572: c00a
relocInfo@0x0000000111277572 [type=12(metadata) addr=0x000000011127c168 offset=10] | [metadata_addr=0x000000011127c16a *=0x0000000267b181a0 offset=0]metadata_value=0x0000000267b181a0: {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277574: 6417
relocInfo@0x0000000111277574 [type=6(runtime_call) addr=0x000000011127c17f offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277576: c00a
relocInfo@0x0000000111277576 [type=12(metadata) addr=0x000000011127c189 offset=10] | [metadata_addr=0x000000011127c18b *=0x0000000267b1ded0 offset=0]metadata_value=0x0000000267b1ded0: {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277578: 6417
relocInfo@0x0000000111277578 [type=6(runtime_call) addr=0x000000011127c1a0 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011127757a: 640a
relocInfo@0x000000011127757a [type=6(runtime_call) addr=0x000000011127c1aa offset=10 format=1] | [destination=0x0000000110b44540]
         @0x000000011127757c: f80309b26b6900017005
relocInfo@0x0000000111277584 [type=7(external_word) addr=0x000000011127c1af offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111277586: 640e
relocInfo@0x0000000111277586 [type=6(runtime_call) addr=0x000000011127c1bd offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111277588: c006
relocInfo@0x0000000111277588 [type=12(metadata) addr=0x000000011127c1c3 offset=6] | [metadata_addr=0x000000011127c1c5 *=0x0000000267b96280 offset=0]metadata_value=0x0000000267b96280: {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x000000011127758a: 6417
relocInfo@0x000000011127758a [type=6(runtime_call) addr=0x000000011127c1da offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011127758c: c00a
relocInfo@0x000000011127758c [type=12(metadata) addr=0x000000011127c1e4 offset=10] | [metadata_addr=0x000000011127c1e6 *=0x000000011015f0e0 offset=0]metadata_value=0x000000011015f0e0: {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x000000011127758e: 6417
relocInfo@0x000000011127758e [type=6(runtime_call) addr=0x000000011127c1fb offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277590: c00a
relocInfo@0x0000000111277590 [type=12(metadata) addr=0x000000011127c205 offset=10] | [metadata_addr=0x000000011127c207 *=0x00000001103f3408 offset=0]metadata_value=0x00000001103f3408: {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
         @0x0000000111277592: 6417
relocInfo@0x0000000111277592 [type=6(runtime_call) addr=0x000000011127c21c offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277594: c00a
relocInfo@0x0000000111277594 [type=12(metadata) addr=0x000000011127c226 offset=10] | [metadata_addr=0x000000011127c228 *=0x0000000267b39e30 offset=0]metadata_value=0x0000000267b39e30: {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x0000000111277596: 6417
relocInfo@0x0000000111277596 [type=6(runtime_call) addr=0x000000011127c23d offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277598: c00a
relocInfo@0x0000000111277598 [type=12(metadata) addr=0x000000011127c247 offset=10] | [metadata_addr=0x000000011127c249 *=0x0000000267b40508 offset=0]metadata_value=0x0000000267b40508: {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x000000011127759a: 6417
relocInfo@0x000000011127759a [type=6(runtime_call) addr=0x000000011127c25e offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x000000011127759c: c00a
relocInfo@0x000000011127759c [type=12(metadata) addr=0x000000011127c268 offset=10] | [metadata_addr=0x000000011127c26a *=0x0000000267b710c0 offset=0]metadata_value=0x0000000267b710c0: {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
         @0x000000011127759e: 6417
relocInfo@0x000000011127759e [type=6(runtime_call) addr=0x000000011127c27f offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112775a0: c00a
relocInfo@0x00000001112775a0 [type=12(metadata) addr=0x000000011127c289 offset=10] | [metadata_addr=0x000000011127c28b *=0x0000000267b1f228 offset=0]metadata_value=0x0000000267b1f228: {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112775a2: 6417
relocInfo@0x00000001112775a2 [type=6(runtime_call) addr=0x000000011127c2a0 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112775a4: c00a
relocInfo@0x00000001112775a4 [type=12(metadata) addr=0x000000011127c2aa offset=10] | [metadata_addr=0x000000011127c2ac *=0x0000000267b6d620 offset=0]metadata_value=0x0000000267b6d620: {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
         @0x00000001112775a6: 6417
relocInfo@0x00000001112775a6 [type=6(runtime_call) addr=0x000000011127c2c1 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112775a8: c00a
relocInfo@0x00000001112775a8 [type=12(metadata) addr=0x000000011127c2cb offset=10] | [metadata_addr=0x000000011127c2cd *=0x0000000267b393b0 offset=0]metadata_value=0x0000000267b393b0: {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
         @0x00000001112775aa: 6417
relocInfo@0x00000001112775aa [type=6(runtime_call) addr=0x000000011127c2e2 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112775ac: c00a
relocInfo@0x00000001112775ac [type=12(metadata) addr=0x000000011127c2ec offset=10] | [metadata_addr=0x000000011127c2ee *=0x0000000267b1fe80 offset=0]metadata_value=0x0000000267b1fe80: {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112775ae: 6417
relocInfo@0x00000001112775ae [type=6(runtime_call) addr=0x000000011127c303 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112775b0: c00a
relocInfo@0x00000001112775b0 [type=12(metadata) addr=0x000000011127c30d offset=10] | [metadata_addr=0x000000011127c30f *=0x000000011040aa78 offset=0]metadata_value=0x000000011040aa78: {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
         @0x00000001112775b2: 6417
relocInfo@0x00000001112775b2 [type=6(runtime_call) addr=0x000000011127c324 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112775b4: c00a
relocInfo@0x00000001112775b4 [type=12(metadata) addr=0x000000011127c32e offset=10] | [metadata_addr=0x000000011127c330 *=0x0000000110409a78 offset=0]metadata_value=0x0000000110409a78: {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
         @0x00000001112775b6: 6417
relocInfo@0x00000001112775b6 [type=6(runtime_call) addr=0x000000011127c345 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112775b8: 640e
relocInfo@0x00000001112775b8 [type=6(runtime_call) addr=0x000000011127c353 offset=14 format=1] | [destination=0x0000000110b41ac0]
         @0x00000001112775ba: f80309b26b6900017005
relocInfo@0x00000001112775c2 [type=7(external_word) addr=0x000000011127c358 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x00000001112775c4: 640e
relocInfo@0x00000001112775c4 [type=6(runtime_call) addr=0x000000011127c366 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001112775c6: 6406
relocInfo@0x00000001112775c6 [type=6(runtime_call) addr=0x000000011127c36c offset=6 format=1] | [destination=0x0000000110b44540]
         @0x00000001112775c8: f80309b26b6900017005
relocInfo@0x00000001112775d0 [type=7(external_word) addr=0x000000011127c371 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x00000001112775d2: 640e
relocInfo@0x00000001112775d2 [type=6(runtime_call) addr=0x000000011127c37f offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001112775d4: c006
relocInfo@0x00000001112775d4 [type=12(metadata) addr=0x000000011127c385 offset=6] | [metadata_addr=0x000000011127c387 *=0x0000000267b19378 offset=0]metadata_value=0x0000000267b19378: {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112775d6: 6417
relocInfo@0x00000001112775d6 [type=6(runtime_call) addr=0x000000011127c39c offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112775d8: c00a
relocInfo@0x00000001112775d8 [type=12(metadata) addr=0x000000011127c3a6 offset=10] | [metadata_addr=0x000000011127c3a8 *=0x0000000267b181a0 offset=0]metadata_value=0x0000000267b181a0: {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112775da: 6417
relocInfo@0x00000001112775da [type=6(runtime_call) addr=0x000000011127c3bd offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112775dc: 640a
relocInfo@0x00000001112775dc [type=6(runtime_call) addr=0x000000011127c3c7 offset=10 format=1] | [destination=0x0000000110b44540]
         @0x00000001112775de: f80309b26b6900017005
relocInfo@0x00000001112775e6 [type=7(external_word) addr=0x000000011127c3cc offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x00000001112775e8: 640e
relocInfo@0x00000001112775e8 [type=6(runtime_call) addr=0x000000011127c3da offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001112775ea: c006
relocInfo@0x00000001112775ea [type=12(metadata) addr=0x000000011127c3e0 offset=6] | [metadata_addr=0x000000011127c3e2 *=0x0000000267b19640 offset=0]metadata_value=0x0000000267b19640: {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112775ec: 6417
relocInfo@0x00000001112775ec [type=6(runtime_call) addr=0x000000011127c3f7 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x00000001112775ee: 640a
relocInfo@0x00000001112775ee [type=6(runtime_call) addr=0x000000011127c401 offset=10 format=1] | [destination=0x0000000110b44540]
         @0x00000001112775f0: f80309b26b6900017005
relocInfo@0x00000001112775f8 [type=7(external_word) addr=0x000000011127c406 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x00000001112775fa: 640e
relocInfo@0x00000001112775fa [type=6(runtime_call) addr=0x000000011127c414 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001112775fc: c006
relocInfo@0x00000001112775fc [type=12(metadata) addr=0x000000011127c41a offset=6] | [metadata_addr=0x000000011127c41c *=0x0000000267b18ef0 offset=0]metadata_value=0x0000000267b18ef0: {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x00000001112775fe: 6417
relocInfo@0x00000001112775fe [type=6(runtime_call) addr=0x000000011127c431 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277600: 640a
relocInfo@0x0000000111277600 [type=6(runtime_call) addr=0x000000011127c43b offset=10 format=1] | [destination=0x0000000110b44540]
         @0x0000000111277602: f80309b26b6900017005
relocInfo@0x000000011127760a [type=7(external_word) addr=0x000000011127c440 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011127760c: 640e
relocInfo@0x000000011127760c [type=6(runtime_call) addr=0x000000011127c44e offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011127760e: c006
relocInfo@0x000000011127760e [type=12(metadata) addr=0x000000011127c454 offset=6] | [metadata_addr=0x000000011127c456 *=0x0000000267b19640 offset=0]metadata_value=0x0000000267b19640: {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277610: 6417
relocInfo@0x0000000111277610 [type=6(runtime_call) addr=0x000000011127c46b offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277612: 640a
relocInfo@0x0000000111277612 [type=6(runtime_call) addr=0x000000011127c475 offset=10 format=1] | [destination=0x0000000110b44540]
         @0x0000000111277614: f80309b26b6900017005
relocInfo@0x000000011127761c [type=7(external_word) addr=0x000000011127c47a offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011127761e: 640e
relocInfo@0x000000011127761e [type=6(runtime_call) addr=0x000000011127c488 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111277620: c006
relocInfo@0x0000000111277620 [type=12(metadata) addr=0x000000011127c48e offset=6] | [metadata_addr=0x000000011127c490 *=0x0000000267b18ef0 offset=0]metadata_value=0x0000000267b18ef0: {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
         @0x0000000111277622: 6417
relocInfo@0x0000000111277622 [type=6(runtime_call) addr=0x000000011127c4a5 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277624: c00a
relocInfo@0x0000000111277624 [type=12(metadata) addr=0x000000011127c4af offset=10] | [metadata_addr=0x000000011127c4b1 *=0x000000026788fe18 offset=0]metadata_value=0x000000026788fe18: {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111277626: 6417
relocInfo@0x0000000111277626 [type=6(runtime_call) addr=0x000000011127c4c6 offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277628: 6413
relocInfo@0x0000000111277628 [type=6(runtime_call) addr=0x000000011127c4d9 offset=19 format=1] | [destination=0x0000000110b44e40]
         @0x000000011127762a: f80309b26b6900017005
relocInfo@0x0000000111277632 [type=7(external_word) addr=0x000000011127c4de offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111277634: 640e
relocInfo@0x0000000111277634 [type=6(runtime_call) addr=0x000000011127c4ec offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111277636: 6406
relocInfo@0x0000000111277636 [type=6(runtime_call) addr=0x000000011127c4f2 offset=6 format=1] | [destination=0x0000000110b44540]
         @0x0000000111277638: f80309b26b6900017005
relocInfo@0x0000000111277640 [type=7(external_word) addr=0x000000011127c4f7 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111277642: 640e
relocInfo@0x0000000111277642 [type=6(runtime_call) addr=0x000000011127c505 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111277644: 6406
relocInfo@0x0000000111277644 [type=6(runtime_call) addr=0x000000011127c50b offset=6 format=1] | [destination=0x0000000110b44540]
         @0x0000000111277646: f80309b26b6900017005
relocInfo@0x000000011127764e [type=7(external_word) addr=0x000000011127c510 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111277650: 640e
relocInfo@0x0000000111277650 [type=6(runtime_call) addr=0x000000011127c51e offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111277652: 640f
relocInfo@0x0000000111277652 [type=6(runtime_call) addr=0x000000011127c52d offset=15 format=1] | [destination=0x0000000110b44e40]
         @0x0000000111277654: f80309b26b6900017005
relocInfo@0x000000011127765c [type=7(external_word) addr=0x000000011127c532 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x000000011127765e: 640e
relocInfo@0x000000011127765e [type=6(runtime_call) addr=0x000000011127c540 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111277660: c006
relocInfo@0x0000000111277660 [type=12(metadata) addr=0x000000011127c546 offset=6] | [metadata_addr=0x000000011127c548 *=0x000000026788fe18 offset=0]metadata_value=0x000000026788fe18: {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x0000000111277662: 6417
relocInfo@0x0000000111277662 [type=6(runtime_call) addr=0x000000011127c55d offset=23 format=1] | [destination=0x0000000110b3e5c0]
         @0x0000000111277664: 640a
relocInfo@0x0000000111277664 [type=6(runtime_call) addr=0x000000011127c567 offset=10 format=1] | [destination=0x0000000110b44540]
         @0x0000000111277666: f80309b26b6900017005
relocInfo@0x000000011127766e [type=7(external_word) addr=0x000000011127c56c offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111277670: 640e
relocInfo@0x0000000111277670 [type=6(runtime_call) addr=0x000000011127c57a offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111277672: f801116e8006
relocInfo@0x0000000111277676 [type=8(internal_word) addr=0x000000011127c580 offset=6 data=4462] | [target=0x000000011127b412]
         @0x0000000111277678: 6411
relocInfo@0x0000000111277678 [type=6(runtime_call) addr=0x000000011127c591 offset=17 format=1] | [destination=0x0000000110bfb220]
         @0x000000011127767a: 6405
relocInfo@0x000000011127767a [type=6(runtime_call) addr=0x000000011127c596 offset=5 format=1] | [destination=0x0000000110b44540]
         @0x000000011127767c: f80309b26b6900017005
relocInfo@0x0000000111277684 [type=7(external_word) addr=0x000000011127c59b offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111277686: 640e
relocInfo@0x0000000111277686 [type=6(runtime_call) addr=0x000000011127c5a9 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111277688: 6406
relocInfo@0x0000000111277688 [type=6(runtime_call) addr=0x000000011127c5af offset=6 format=1] | [destination=0x0000000110b44540]
         @0x000000011127768a: f80309b26b6900017005
relocInfo@0x0000000111277692 [type=7(external_word) addr=0x000000011127c5b4 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x0000000111277694: 640e
relocInfo@0x0000000111277694 [type=6(runtime_call) addr=0x000000011127c5c2 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x0000000111277696: 6406
relocInfo@0x0000000111277696 [type=6(runtime_call) addr=0x000000011127c5c8 offset=6 format=1] | [destination=0x0000000110b44540]
         @0x0000000111277698: f80309b26b6900017005
relocInfo@0x00000001112776a0 [type=7(external_word) addr=0x000000011127c5cd offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x00000001112776a2: 640e
relocInfo@0x00000001112776a2 [type=6(runtime_call) addr=0x000000011127c5db offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001112776a4: 6406
relocInfo@0x00000001112776a4 [type=6(runtime_call) addr=0x000000011127c5e1 offset=6 format=1] | [destination=0x0000000110b44540]
         @0x00000001112776a6: f80309b26b6900017005
relocInfo@0x00000001112776ae [type=7(external_word) addr=0x000000011127c5e6 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x00000001112776b0: 640e
relocInfo@0x00000001112776b0 [type=6(runtime_call) addr=0x000000011127c5f4 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001112776b2: c006
relocInfo@0x00000001112776b2 [type=12(metadata) addr=0x000000011127c5fa offset=6] | [metadata_addr=0x000000011127c5fc *=0x0000000000000000 offset=0]
         @0x00000001112776b4: 640f
relocInfo@0x00000001112776b4 [type=6(runtime_call) addr=0x000000011127c609 offset=15 format=1] | [destination=0x0000000110b3f880]
         @0x00000001112776b6: 640d
relocInfo@0x00000001112776b6 [type=6(runtime_call) addr=0x000000011127c616 offset=13 format=1] | [destination=0x0000000110b43ac0]
         @0x00000001112776b8: 6431
relocInfo@0x00000001112776b8 [type=6(runtime_call) addr=0x000000011127c647 offset=49 format=1] | [destination=0x0000000110b45840]
         @0x00000001112776ba: 0019
relocInfo@0x00000001112776ba [type=0(none) addr=0x000000011127c660 offset=25]
         @0x00000001112776bc: f801fb615005
relocInfo@0x00000001112776c0 [type=5(static_stub) addr=0x000000011127c665 offset=5 data=-1183] | [static_call=0x0000000111277c9f]
         @0x00000001112776c2: c000
relocInfo@0x00000001112776c2 [type=12(metadata) addr=0x000000011127c665 offset=0] | [metadata_addr=0x000000011127c667 *=0x0000000000000000 offset=0]
         @0x00000001112776c4: 640a
relocInfo@0x00000001112776c4 [type=6(runtime_call) addr=0x000000011127c66f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x00000001112776c6: f801f8015006
relocInfo@0x00000001112776ca [type=5(static_stub) addr=0x000000011127c675 offset=6 data=-2047] | [static_call=0x0000000111277fff]
         @0x00000001112776cc: c000
relocInfo@0x00000001112776cc [type=12(metadata) addr=0x000000011127c675 offset=0] | [metadata_addr=0x000000011127c677 *=0x0000000000000000 offset=0]
         @0x00000001112776ce: 640a
relocInfo@0x00000001112776ce [type=6(runtime_call) addr=0x000000011127c67f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x00000001112776d0: f801f0915006
relocInfo@0x00000001112776d4 [type=5(static_stub) addr=0x000000011127c685 offset=6 data=-3951] | [static_call=0x000000011127876f]
         @0x00000001112776d6: c000
relocInfo@0x00000001112776d6 [type=12(metadata) addr=0x000000011127c685 offset=0] | [metadata_addr=0x000000011127c687 *=0x0000000000000000 offset=0]
         @0x00000001112776d8: 640a
relocInfo@0x00000001112776d8 [type=6(runtime_call) addr=0x000000011127c68f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x00000001112776da: f801eec35006
relocInfo@0x00000001112776de [type=5(static_stub) addr=0x000000011127c695 offset=6 data=-4413] | [static_call=0x000000011127893d]
         @0x00000001112776e0: c000
relocInfo@0x00000001112776e0 [type=12(metadata) addr=0x000000011127c695 offset=0] | [metadata_addr=0x000000011127c697 *=0x0000000000000000 offset=0]
         @0x00000001112776e2: 640a
relocInfo@0x00000001112776e2 [type=6(runtime_call) addr=0x000000011127c69f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x00000001112776e4: f801e9195006
relocInfo@0x00000001112776e8 [type=5(static_stub) addr=0x000000011127c6a5 offset=6 data=-5863] | [static_call=0x0000000111278ee7]
         @0x00000001112776ea: c000
relocInfo@0x00000001112776ea [type=12(metadata) addr=0x000000011127c6a5 offset=0] | [metadata_addr=0x000000011127c6a7 *=0x0000000000000000 offset=0]
         @0x00000001112776ec: 640a
relocInfo@0x00000001112776ec [type=6(runtime_call) addr=0x000000011127c6af offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x00000001112776ee: f801e74b5006
relocInfo@0x00000001112776f2 [type=5(static_stub) addr=0x000000011127c6b5 offset=6 data=-6325] | [static_call=0x00000001112790b5]
         @0x00000001112776f4: c000
relocInfo@0x00000001112776f4 [type=12(metadata) addr=0x000000011127c6b5 offset=0] | [metadata_addr=0x000000011127c6b7 *=0x0000000000000000 offset=0]
         @0x00000001112776f6: 640a
relocInfo@0x00000001112776f6 [type=6(runtime_call) addr=0x000000011127c6bf offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x00000001112776f8: f801e5e35006
relocInfo@0x00000001112776fc [type=5(static_stub) addr=0x000000011127c6c5 offset=6 data=-6685] | [static_call=0x000000011127921d]
         @0x00000001112776fe: c000
relocInfo@0x00000001112776fe [type=12(metadata) addr=0x000000011127c6c5 offset=0] | [metadata_addr=0x000000011127c6c7 *=0x0000000000000000 offset=0]
         @0x0000000111277700: 640a
relocInfo@0x0000000111277700 [type=6(runtime_call) addr=0x000000011127c6cf offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000000111277702: f801e50b5006
relocInfo@0x0000000111277706 [type=5(static_stub) addr=0x000000011127c6d5 offset=6 data=-6901] | [static_call=0x00000001112792f5]
         @0x0000000111277708: c000
relocInfo@0x0000000111277708 [type=12(metadata) addr=0x000000011127c6d5 offset=0] | [metadata_addr=0x000000011127c6d7 *=0x0000000000000000 offset=0]
         @0x000000011127770a: 640a
relocInfo@0x000000011127770a [type=6(runtime_call) addr=0x000000011127c6df offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011127770c: f801e1115006
relocInfo@0x0000000111277710 [type=5(static_stub) addr=0x000000011127c6e5 offset=6 data=-7919] | [static_call=0x00000001112796ef]
         @0x0000000111277712: c000
relocInfo@0x0000000111277712 [type=12(metadata) addr=0x000000011127c6e5 offset=0] | [metadata_addr=0x000000011127c6e7 *=0x0000000000000000 offset=0]
         @0x0000000111277714: 640a
relocInfo@0x0000000111277714 [type=6(runtime_call) addr=0x000000011127c6ef offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000000111277716: f801ddb15006
relocInfo@0x000000011127771a [type=5(static_stub) addr=0x000000011127c6f5 offset=6 data=-8783] | [static_call=0x0000000111279a4f]
         @0x000000011127771c: c000
relocInfo@0x000000011127771c [type=12(metadata) addr=0x000000011127c6f5 offset=0] | [metadata_addr=0x000000011127c6f7 *=0x0000000000000000 offset=0]
         @0x000000011127771e: 640a
relocInfo@0x000000011127771e [type=6(runtime_call) addr=0x000000011127c6ff offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000000111277720: f801d6615006
relocInfo@0x0000000111277724 [type=5(static_stub) addr=0x000000011127c705 offset=6 data=-10655] | [static_call=0x000000011127a19f]
         @0x0000000111277726: c000
relocInfo@0x0000000111277726 [type=12(metadata) addr=0x000000011127c705 offset=0] | [metadata_addr=0x000000011127c707 *=0x0000000000000000 offset=0]
         @0x0000000111277728: 640a
relocInfo@0x0000000111277728 [type=6(runtime_call) addr=0x000000011127c70f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011127772a: f801d45b5006
relocInfo@0x000000011127772e [type=5(static_stub) addr=0x000000011127c715 offset=6 data=-11173] | [static_call=0x000000011127a3a5]
         @0x0000000111277730: c000
relocInfo@0x0000000111277730 [type=12(metadata) addr=0x000000011127c715 offset=0] | [metadata_addr=0x000000011127c717 *=0x0000000000000000 offset=0]
         @0x0000000111277732: 640a
relocInfo@0x0000000111277732 [type=6(runtime_call) addr=0x000000011127c71f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000000111277734: f801d39b5006
relocInfo@0x0000000111277738 [type=5(static_stub) addr=0x000000011127c725 offset=6 data=-11365] | [static_call=0x000000011127a465]
         @0x000000011127773a: c000
relocInfo@0x000000011127773a [type=12(metadata) addr=0x000000011127c725 offset=0] | [metadata_addr=0x000000011127c727 *=0x0000000000000000 offset=0]
         @0x000000011127773c: 640a
relocInfo@0x000000011127773c [type=6(runtime_call) addr=0x000000011127c72f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011127773e: f801cdf95006
relocInfo@0x0000000111277742 [type=5(static_stub) addr=0x000000011127c735 offset=6 data=-12807] | [static_call=0x000000011127aa07]
         @0x0000000111277744: c000
relocInfo@0x0000000111277744 [type=12(metadata) addr=0x000000011127c735 offset=0] | [metadata_addr=0x000000011127c737 *=0x0000000000000000 offset=0]
         @0x0000000111277746: 640a
relocInfo@0x0000000111277746 [type=6(runtime_call) addr=0x000000011127c73f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000000111277748: f801cbf35006
relocInfo@0x000000011127774c [type=5(static_stub) addr=0x000000011127c745 offset=6 data=-13325] | [static_call=0x000000011127ac0d]
         @0x000000011127774e: c000
relocInfo@0x000000011127774e [type=12(metadata) addr=0x000000011127c745 offset=0] | [metadata_addr=0x000000011127c747 *=0x0000000000000000 offset=0]
         @0x0000000111277750: 640a
relocInfo@0x0000000111277750 [type=6(runtime_call) addr=0x000000011127c74f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000000111277752: f801cb335006
relocInfo@0x0000000111277756 [type=5(static_stub) addr=0x000000011127c755 offset=6 data=-13517] | [static_call=0x000000011127accd]
         @0x0000000111277758: c000
relocInfo@0x0000000111277758 [type=12(metadata) addr=0x000000011127c755 offset=0] | [metadata_addr=0x000000011127c757 *=0x0000000000000000 offset=0]
         @0x000000011127775a: 640a
relocInfo@0x000000011127775a [type=6(runtime_call) addr=0x000000011127c75f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011127775c: f801ca335006
relocInfo@0x0000000111277760 [type=5(static_stub) addr=0x000000011127c765 offset=6 data=-13773] | [static_call=0x000000011127adcd]
         @0x0000000111277762: c000
relocInfo@0x0000000111277762 [type=12(metadata) addr=0x000000011127c765 offset=0] | [metadata_addr=0x000000011127c767 *=0x0000000000000000 offset=0]
         @0x0000000111277764: 640a
relocInfo@0x0000000111277764 [type=6(runtime_call) addr=0x000000011127c76f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000000111277766: f801c92b5006
relocInfo@0x000000011127776a [type=5(static_stub) addr=0x000000011127c775 offset=6 data=-14037] | [static_call=0x000000011127aed5]
         @0x000000011127776c: c000
relocInfo@0x000000011127776c [type=12(metadata) addr=0x000000011127c775 offset=0] | [metadata_addr=0x000000011127c777 *=0x0000000000000000 offset=0]
         @0x000000011127776e: 640a
relocInfo@0x000000011127776e [type=6(runtime_call) addr=0x000000011127c77f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000000111277770: f801c82b5006
relocInfo@0x0000000111277774 [type=5(static_stub) addr=0x000000011127c785 offset=6 data=-14293] | [static_call=0x000000011127afd5]
         @0x0000000111277776: c000
relocInfo@0x0000000111277776 [type=12(metadata) addr=0x000000011127c785 offset=0] | [metadata_addr=0x000000011127c787 *=0x0000000000000000 offset=0]
         @0x0000000111277778: 640a
relocInfo@0x0000000111277778 [type=6(runtime_call) addr=0x000000011127c78f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011127777a: f801c7335006
relocInfo@0x000000011127777e [type=5(static_stub) addr=0x000000011127c795 offset=6 data=-14541] | [static_call=0x000000011127b0cd]
         @0x0000000111277780: c000
relocInfo@0x0000000111277780 [type=12(metadata) addr=0x000000011127c795 offset=0] | [metadata_addr=0x000000011127c797 *=0x0000000000000000 offset=0]
         @0x0000000111277782: 640a
relocInfo@0x0000000111277782 [type=6(runtime_call) addr=0x000000011127c79f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000000111277784: f801c5fb5006
relocInfo@0x0000000111277788 [type=5(static_stub) addr=0x000000011127c7a5 offset=6 data=-14853] | [static_call=0x000000011127b205]
         @0x000000011127778a: c000
relocInfo@0x000000011127778a [type=12(metadata) addr=0x000000011127c7a5 offset=0] | [metadata_addr=0x000000011127c7a7 *=0x0000000000000000 offset=0]
         @0x000000011127778c: 640a
relocInfo@0x000000011127778c [type=6(runtime_call) addr=0x000000011127c7af offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x000000011127778e: f801c5335006
relocInfo@0x0000000111277792 [type=5(static_stub) addr=0x000000011127c7b5 offset=6 data=-15053] | [static_call=0x000000011127b2cd]
         @0x0000000111277794: c000
relocInfo@0x0000000111277794 [type=12(metadata) addr=0x000000011127c7b5 offset=0] | [metadata_addr=0x000000011127c7b7 *=0x0000000000000000 offset=0]
         @0x0000000111277796: 640a
relocInfo@0x0000000111277796 [type=6(runtime_call) addr=0x000000011127c7bf offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x0000000111277798: f801c3a15006
relocInfo@0x000000011127779c [type=5(static_stub) addr=0x000000011127c7c5 offset=6 data=-15455] | [static_call=0x000000011127b45f]
         @0x000000011127779e: c000
relocInfo@0x000000011127779e [type=12(metadata) addr=0x000000011127c7c5 offset=0] | [metadata_addr=0x000000011127c7c7 *=0x0000000000000000 offset=0]
         @0x00000001112777a0: 640a
relocInfo@0x00000001112777a0 [type=6(runtime_call) addr=0x000000011127c7cf offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x00000001112777a2: f801c3595006
relocInfo@0x00000001112777a6 [type=5(static_stub) addr=0x000000011127c7d5 offset=6 data=-15527] | [static_call=0x000000011127b4a7]
         @0x00000001112777a8: c000
relocInfo@0x00000001112777a8 [type=12(metadata) addr=0x000000011127c7d5 offset=0] | [metadata_addr=0x000000011127c7d7 *=0x0000000000000000 offset=0]
         @0x00000001112777aa: 640a
relocInfo@0x00000001112777aa [type=6(runtime_call) addr=0x000000011127c7df offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x00000001112777ac: f801c3095006
relocInfo@0x00000001112777b0 [type=5(static_stub) addr=0x000000011127c7e5 offset=6 data=-15607] | [static_call=0x000000011127b4f7]
         @0x00000001112777b2: c000
relocInfo@0x00000001112777b2 [type=12(metadata) addr=0x000000011127c7e5 offset=0] | [metadata_addr=0x000000011127c7e7 *=0x0000000000000000 offset=0]
         @0x00000001112777b4: 640a
relocInfo@0x00000001112777b4 [type=6(runtime_call) addr=0x000000011127c7ef offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x00000001112777b6: f801c2c95006
relocInfo@0x00000001112777ba [type=5(static_stub) addr=0x000000011127c7f5 offset=6 data=-15671] | [static_call=0x000000011127b537]
         @0x00000001112777bc: c000
relocInfo@0x00000001112777bc [type=12(metadata) addr=0x000000011127c7f5 offset=0] | [metadata_addr=0x000000011127c7f7 *=0x0000000000000000 offset=0]
         @0x00000001112777be: 640a
relocInfo@0x00000001112777be [type=6(runtime_call) addr=0x000000011127c7ff offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x00000001112777c0: f801c2315006
relocInfo@0x00000001112777c4 [type=5(static_stub) addr=0x000000011127c805 offset=6 data=-15823] | [static_call=0x000000011127b5cf]
         @0x00000001112777c6: c000
relocInfo@0x00000001112777c6 [type=12(metadata) addr=0x000000011127c805 offset=0] | [metadata_addr=0x000000011127c807 *=0x0000000000000000 offset=0]
         @0x00000001112777c8: 640a
relocInfo@0x00000001112777c8 [type=6(runtime_call) addr=0x000000011127c80f offset=10 format=1] | [destination=0xffffffffffffffff]
         @0x00000001112777ca: 642d
relocInfo@0x00000001112777ca [type=6(runtime_call) addr=0x000000011127c83c offset=45 format=1] | [destination=0x0000000110b420e0]
         @0x00000001112777cc: f80309b26b6900017005
relocInfo@0x00000001112777d4 [type=7(external_word) addr=0x000000011127c841 offset=5 data={09b26b690001}] | [target=0x0000000109b26b69]
         @0x00000001112777d6: 640e
relocInfo@0x00000001112777d6 [type=6(runtime_call) addr=0x000000011127c84f offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001112777d8: f801f82e9006
relocInfo@0x00000001112777dc [type=9(section_word) addr=0x000000011127c855 offset=6 data=-2002] | [target=0x000000011127c855]
         @0x00000001112777de: 640c
relocInfo@0x00000001112777de [type=6(runtime_call) addr=0x000000011127c861 offset=12 format=1] | [destination=0x0000000110bfa860]
         @0x00000001112777e0: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 25 entries, 204 bytes):
{
   < 0x000000011127785c, 0x000000011127b72f > < 0x0000000111277860, 0x000000011127b748 > < 0x000000011127828b, 0x000000011127b906 > 
   < 0x000000011127885c, 0x000000011127bac8 > < 0x0000000111278a2d, 0x000000011127bb23 > < 0x0000000111278fd4, 0x000000011127bce5 > 
   < 0x0000000111279164, 0x000000011127bd40 > < 0x000000011127923d, 0x000000011127bd59 > < 0x000000011127934f, 0x000000011127bd94 > 
   < 0x000000011127934f, 0x000000011127bdad > < 0x00000001112793b8, 0x000000011127be09 > < 0x000000011127a284, 0x000000011127c12e > 
   < 0x000000011127a555, 0x000000011127c1aa > < 0x000000011127aaec, 0x000000011127c36c > < 0x000000011127acdc, 0x000000011127c3c7 > 
   < 0x000000011127ade4, 0x000000011127c401 > < 0x000000011127aeec, 0x000000011127c43b > < 0x000000011127afec, 0x000000011127c475 > 
   < 0x000000011127b337, 0x000000011127c4f2 > < 0x000000011127b337, 0x000000011127c50b > < 0x000000011127b3ea, 0x000000011127c567 > 
   < 0x000000011127b464, 0x000000011127c596 > < 0x000000011127b4ac, 0x000000011127c5af > < 0x000000011127b4fc, 0x000000011127c5c8 > 
   < 0x000000011127b53c, 0x000000011127c5e1 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
# 0: 0x0000000000000000 NULL-oop
# 1: 0x00000001614058c0 a 'jdk/incubator/vector/VectorOperators$BinaryImpl'{0x00000001614058c0}
# 2: 0x0000000161400178 a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
# 3: 0x0000000161400080 a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
# 4: 0x000000011ff8c550 a 'java/lang/Class'{0x000000011ff8c550} = double
# 5: 0x0000000161405ab0 a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000000161405ab0}
# 6: 0x00000001614d5db8 a 'jdk/incubator/vector/Double256Vector'{0x00000001614d5db8}
# 7: 0x00000001614058e0 a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x00000001614058e0}
# 8: 0x000000011ff58b48 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011ff58b48}
# 9: 0x00000001200a7938 a 'java/lang/Class'{0x00000001200a7938} = 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
#10: 0x000000011ffc7b70 a 'java/lang/Class'{0x000000011ffc7b70} = 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 NULL-oop
# 1: 0x000000026788fe18 {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
# 2: 0x0000000267b3fa08 {method} {0x0000000267b3fa08} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
# 3: 0x0000000267b96588 {method} {0x0000000267b96588} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
# 4: 0x0000000267b17448 {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
# 5: 0x0000000267b1ded0 {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
# 6: 0x0000000267b96280 {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
# 7: 0x000000011015f0e0 {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
# 8: 0x00000001103f3408 {method} {0x00000001103f3408} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
# 9: 0x0000000267b39e30 {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
#10: 0x0000000267b40508 {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
#11: 0x0000000267b710c0 {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
#12: 0x0000000267b1f228 {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
#13: 0x0000000267b18ef0 {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
#14: 0x0000000267b19378 {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
#15: 0x0000000267b181a0 {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
#16: 0x0000000267b19640 {method} {0x0000000267b19640} 'mul' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
#17: 0x0000000267b17270 {method} {0x0000000267b17270} 'toBits' '(D)J' in 'jdk/incubator/vector/DoubleVector'
#18: 0x000000011040aa78 {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
#19: 0x0000000110409a78 {method} {0x0000000110409a78} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05000'
#20: 0x0000000267b6d620 {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
#21: 0x0000000267b393b0 {method} {0x0000000267b393b0} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
#22: 0x0000000267b1fe80 {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

============================= C2-compiled nmethod ==============================
----------------------- MetaData before Compile_id = 1178 ------------------------
{method}
 - this oop:          0x000000026788fe18
 - method holder:     'org/jml/regression/linear/DoubleVectorLinearRegression'
 - constants:         0x000000026788f558 constant pool [135]/operands[5] {0x000000026788f558} for 'org/jml/regression/linear/DoubleVectorLinearRegression' cache=0x0000000267a042d0
 - access:            0xc1000001  public 
 - name:              'fit'
 - signature:         '([D[D)V'
 - max stack:         9
 - max locals:        23
 - size of params:    3
 - method size:       13
 - vtable index:      5
 - i2i entry:         0x0000000110af1e20
 - adapters:          AHE@0x00007f846603a870: 0xbbb00000 i2c: 0x0000000110b69ee0 c2i: 0x0000000110b69fbf c2iUV: 0x0000000110b69f92 c2iNCI: 0x0000000110b69ffc
 - compiled entry     0x0000000110b69fbf
 - code size:         378
 - code start:        0x000000026788fba8
 - code end (excl):   0x000000026788fd22
 - method data:       0x0000000267a04640
 - checked ex length: 0
 - linenumber start:  0x000000026788fd22
 - localvar length:   16
 - localvar start:    0x000000026788fd56

------------------------ OptoAssembly for Compile_id = 1178 -----------------------
#
#  void ( rawptr:BotPTR )
#
#r018 rsi:rsi   : parm 0: rawptr:BotPTR
# -- Old rsp -- Framesize: 320 --
#r583 rsp+316: in_preserve
#r582 rsp+312: return address
#r581 rsp+308: in_preserve
#r580 rsp+304: saved fp register
#r579 rsp+300: pad2, stack alignment
#r578 rsp+296: pad2, stack alignment
#r577 rsp+292: Fixed slot 1
#r576 rsp+288: Fixed slot 0
#r655 rsp+284: spill
#r654 rsp+280: spill
#r653 rsp+276: spill
#r652 rsp+272: spill
#r651 rsp+268: spill
#r650 rsp+264: spill
#r649 rsp+260: spill
#r648 rsp+256: spill
#r647 rsp+252: spill
#r646 rsp+248: spill
#r645 rsp+244: spill
#r644 rsp+240: spill
#r643 rsp+236: spill
#r642 rsp+232: spill
#r641 rsp+228: spill
#r640 rsp+224: spill
#r639 rsp+220: spill
#r638 rsp+216: spill
#r637 rsp+212: spill
#r636 rsp+208: spill
#r635 rsp+204: spill
#r634 rsp+200: spill
#r633 rsp+196: spill
#r632 rsp+192: spill
#r631 rsp+188: spill
#r630 rsp+184: spill
#r629 rsp+180: spill
#r628 rsp+176: spill
#r627 rsp+172: spill
#r626 rsp+168: spill
#r625 rsp+164: spill
#r624 rsp+160: spill
#r623 rsp+156: spill
#r622 rsp+152: spill
#r621 rsp+148: spill
#r620 rsp+144: spill
#r619 rsp+140: spill
#r618 rsp+136: spill
#r617 rsp+132: spill
#r616 rsp+128: spill
#r615 rsp+124: spill
#r614 rsp+120: spill
#r613 rsp+116: spill
#r612 rsp+112: spill
#r611 rsp+108: spill
#r610 rsp+104: spill
#r609 rsp+100: spill
#r608 rsp+96: spill
#r607 rsp+92: spill
#r606 rsp+88: spill
#r605 rsp+84: spill
#r604 rsp+80: spill
#r603 rsp+76: spill
#r602 rsp+72: spill
#r601 rsp+68: spill
#r600 rsp+64: spill
#r599 rsp+60: spill
#r598 rsp+56: spill
#r597 rsp+52: spill
#r596 rsp+48: spill
#r595 rsp+44: spill
#r594 rsp+40: spill
#r593 rsp+36: spill
#r592 rsp+32: spill
#r591 rsp+28: spill
#r590 rsp+24: spill
#r589 rsp+20: spill
#r588 rsp+16: spill
#r587 rsp+12: spill
#r586 rsp+ 8: spill
#r585 rsp+ 4: spill
#r584 rsp+ 0: spill
#
0000    N1834: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
0000    # breakpoint
        nop 	# 11 bytes pad for loops and calls

0010    B1: #	out( B92 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
0010    # stack bang (816 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #304	# Create frame

001f    movq    RBX, [RSI + #176 (32-bit)]	# ptr
0026    movq    RBP, [RSI + #168 (32-bit)]	# ptr
002d    movsd   XMM0, [RSI + #24 (8-bit)]	# double
0032    movsd   [rsp + #72], XMM0	# spill
0038    movq    R13, [RSI + #160 (32-bit)]	# ptr
003f    movq    R14, [RSI + #96 (8-bit)]	# ptr
0043    movq    R10, [RSI + #88 (8-bit)]	# ptr
0047    movq    [rsp + #48], R10	# spill
004c    movq    R10, [RSI + #16 (8-bit)]	# ptr
0050    movq    [rsp + #56], R10	# spill
0055    movq    R10, [RSI + #8 (8-bit)]	# ptr
0059    movq    [rsp + #40], R10	# spill
005e    movl    R12, [RSI + #120 (8-bit)]	# int
0062    movl    [rsp + #16], R12	# spill
0067    movsd   XMM0, [RSI + #104 (8-bit)]	# double
006c    movsd   [rsp + #24], XMM0	# spill
0072    movsd   XMM0, [RSI + #72 (8-bit)]	# double
0077    movsd   [rsp + #64], XMM0	# spill
007d    movsd   XMM0, [RSI + #56 (8-bit)]	# double
0082    movsd   [rsp + #80], XMM0	# spill
0088    movsd   XMM0, [RSI + #40 (8-bit)]	# double
008d    movsd   [rsp + #88], XMM0	# spill
0093    movq    RDI, RSI	# spill
        nop 	# 10 bytes pad for loops and calls
00a0    call_leaf,runtime  OSR_migration_end
        No JVM State Info
        # 
00b0    testq   RBX, RBX	# ptr
00b3    je     B92  P=0.001000 C=-1.000000

00b9    B2: #	out( B100 B3 ) <- in( B1 )  Freq: 0.999
00b9    movl    R11, [RBX + #8 (8-bit)]	# compressed klass ptr
        nop 	# 3 bytes pad for loops and calls
00c0    cmpl    R11, narrowklass: precise klass org/jml/regression/linear/DoubleVectorLinearRegression: 0x00007f846c401a20:Constant:exact *	# compressed klass ptr
00c7    jne,u   B100  P=0.000001 C=-1.000000

00cd    B3: #	out( B4 ) <- in( B2 )  Freq: 0.998999
00cd    movq    R9, RBX	# spill
00d0    # checkcastPP of R9

00d0    B4: #	out( B93 B5 ) <- in( B3 B92 )  Freq: 0.999999
00d0    movq    R8, RBP	# spill
00d3    testq   RBP, RBP	# ptr
00d6    je     B93  P=0.001000 C=-1.000000

00dc    B5: #	out( B101 B6 ) <- in( B4 )  Freq: 0.998999
00dc    movl    R10, [RBP + #8 (8-bit)]	# compressed klass ptr
00e0    cmpl    R10, narrowklass: precise klass [D: 0x00007f8467f0e730:Constant:exact *	# compressed klass ptr
00e7    jne,u   B101  P=0.000001 C=-1.000000

00ed    B6: #	out( B7 ) <- in( B5 )  Freq: 0.998998
00ed    movq    R12, RBP	# spill
00f0    # checkcastPP of R12

00f0    B7: #	out( B94 B8 ) <- in( B6 B93 )  Freq: 0.999998
00f0    testq   R13, R13	# ptr
00f3    je     B94  P=0.001000 C=-1.000000

00f9    B8: #	out( B101 B9 ) <- in( B7 )  Freq: 0.998998
00f9    movl    R11, [R13 + #8 (8-bit)]	# compressed klass ptr
        nop 	# 3 bytes pad for loops and calls
0100    cmpl    R11, narrowklass: precise klass [D: 0x00007f8467f0e730:Constant:exact *	# compressed klass ptr
0107    jne,u   B101  P=0.000001 C=-1.000000

010d    B9: #	out( B10 ) <- in( B8 )  Freq: 0.998997
010d    movq    RCX, R13	# spill
0110    # checkcastPP of RCX

0110    B10: #	out( B95 B11 ) <- in( B9 B94 )  Freq: 0.999997
0110    movq    R11, precise klass jdk/incubator/vector/DoubleVector: 0x00007f846c406450:Constant:exact *	# ptr
        nop 	# 6 bytes pad for loops and calls
0120    testq   R14, R14	# ptr
0123    je     B95  P=0.001000 C=-1.000000

0129    B11: #	out( B101 B12 ) <- in( B10 )  Freq: 0.998997
0129    movq    RDI, R9	# spill
012c    movl    R10, [R14 + #8 (8-bit)]	# compressed klass ptr
0130    decode_and_move_klass_not_null R9,R10
0137    movq    R10, [R9 + #96 (8-bit)]	# class
        nop 	# 5 bytes pad for loops and calls
0140    cmpq    R10, R11	# ptr
0143    jne,u   B101  P=0.000001 C=-1.000000

0149    B12: #	out( B13 ) <- in( B11 )  Freq: 0.998996
0149    movq    RBP, R14	# spill
014c    # checkcastPP of RBP
014c    movq    R9, RDI	# spill

014f    B13: #	out( B96 B14 ) <- in( B12 B95 )  Freq: 0.999996
014f    movq    R10, [rsp + #48]	# spill
0154    testq   R10, R10	# ptr
0157    je     B96  P=0.001000 C=-1.000000

015d    B14: #	out( B102 B15 ) <- in( B13 )  Freq: 0.998996
015d    movq    [rsp + #96], RBP	# spill
0162    movq    RDI, RCX	# spill
0165    movq    RCX, R12	# spill
0168    movq    [rsp + #32], R9	# spill
016d    movq    R9, R8	# spill
0170    movl    R8, [R10 + #8 (8-bit)]	# compressed klass ptr
0174    decode_and_move_klass_not_null R10,R8
017b    movq    R10, [R10 + #96 (8-bit)]	# class
        nop 	# 1 bytes pad for loops and calls
0180    cmpq    R10, R11	# ptr
0183    jne,u   B102  P=0.000001 C=-1.000000

0189    B15: #	out( B16 ) <- in( B14 )  Freq: 0.998995
0189    movq    RBP, [rsp + #48]	# spill
018e    # checkcastPP of RBP
018e    movq    [rsp + #104], RBP	# spill

0193    B16: #	out( B97 B17 ) <- in( B15 B96 )  Freq: 0.999995
0193    movq    R10, [rsp + #56]	# spill
0198    testq   R10, R10	# ptr
        nop 	# 5 bytes pad for loops and calls
01a0    je     B97  P=0.001000 C=-1.000000

01a6    B17: #	out( B103 B18 ) <- in( B16 )  Freq: 0.998995
01a6    movl    R10, [R10 + #8 (8-bit)]	# compressed klass ptr
01aa    decode_and_move_klass_not_null R8,R10
01b1    movq    R10, [R8 + #96 (8-bit)]	# class
01b5    cmpq    R10, R11	# ptr
01b8    jne,u   B103  P=0.000001 C=-1.000000

01be    B18: #	out( B19 ) <- in( B17 )  Freq: 0.998994
01be    movq    RBP, [rsp + #56]	# spill
01c3    # checkcastPP of RBP
01c3    movq    [rsp + #112], RBP	# spill

01c8    B19: #	out( B98 B20 ) <- in( B18 B97 )  Freq: 0.999994
01c8    movq    R10, [rsp + #40]	# spill
01cd    testq   R10, R10	# ptr
01d0    je     B98  P=0.001000 C=-1.000000

01d6    B20: #	out( B104 B21 ) <- in( B19 )  Freq: 0.998994
01d6    movl    R8, [R10 + #8 (8-bit)]	# compressed klass ptr
01da    decode_and_move_klass_not_null R10,R8
01e1    movq    R10, [R10 + #96 (8-bit)]	# class
01e5    cmpq    R10, R11	# ptr
01e8    jne,u   B104  P=0.000001 C=-1.000000

01ee    B21: #	out( B22 ) <- in( B20 )  Freq: 0.998993
01ee    movq    R12, [rsp + #40]	# spill
01f3    # checkcastPP of R12

01f3    B22: #	out( B99 B23 ) <- in( B21 B98 )  Freq: 0.999993
01f3    movl    R8, [RCX + #12 (8-bit)]	# range
01f7    NullCheck RCX

01f7    B23: #	out( B99 B24 ) <- in( B22 )  Freq: 0.999992
01f7    movl    R10, R8	# spill
01fa    addl    R10, #-3	# int
        nop 	# 2 bytes pad for loops and calls
0200    testl   R10, R10
0203    jl     B99  P=0.000001 C=-1.000000

0209    B24: #	out( B99 B25 ) <- in( B23 )  Freq: 0.999991
0209    movl    R11, [RDI + #12 (8-bit)]	# range
020d    NullCheck RDI

020d    B25: #	out( B99 B26 ) <- in( B24 )  Freq: 0.99999
020d    movl    RBP, R11	# spill
0210    addl    RBP, #-3	# int
0213    testl   RBP, RBP
0215    jl     B99  P=0.000001 C=-1.000000

021b    B26: #	out( B31 ) <- in( B25 )  Freq: 0.999989
021b    movl    [rsp + #148], RBP	# spill
0222    movl    [rsp + #44], R11	# spill
0227    movl    [rsp + #144], R10	# spill
022f    movl    [rsp + #40], R8	# spill
0234    movq    [rsp + #136], RDI	# spill
023c    movq    [rsp + #128], RCX	# spill
0244    movq    [rsp + #120], R12	# spill
0249    replicateD XMM2,[RSP + #80 (32-bit)]
0250    replicateD XMM3,[RSP + #64 (32-bit)]
0257    jmp     B31
        nop 	# 4 bytes pad for loops and calls

0260    B27: #	out( B28 ) <- in( B42 ) top-of-loop Freq: 139466
0260    # TLS is in R15
0260    movq    [R15 + #328 (32-bit)], R10	# ptr
0267    PREFETCHW [R10 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
026f    movq    [RAX], #1	# long
0276    PREFETCHW [R10 + #256 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
027e    movl    [RAX + #8 (8-bit)], narrowklass: precise klass [D: 0x00007f8467f0e730:Constant:exact *	# compressed klass ptr
0285    PREFETCHW [R10 + #320 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
028d    movl    [RAX + #12 (8-bit)], #4	# int
0294    PREFETCHW [R10 + #384 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
029c    movq    [RAX + #16 (8-bit)], #0	# long
02a4    movq    [RAX + #24 (8-bit)], #0	# long
02ac    movq    [RAX + #32 (8-bit)], #0	# long
02b4    movq    [RAX + #40 (8-bit)], #0	# long

02bc    B28: #	out( B49 B29 ) <- in( B44 B27 ) top-of-loop Freq: 139480
02bc    
02bc    MEMBAR-storestore (empty encoding)
02bc    # checkcastPP of RAX
02bc    movq    [rsp + #48], RAX	# spill
02c1    movq    R10, [RBP + #16 (8-bit)]	# ptr ! Field: jdk/internal/vm/vector/VectorSupport$VectorPayload.payload (constant)
02c5    vaddpd  XMM4,XMM5,[R10 + #16 (8-bit)]	! add packedD
02cb    store_vector [RAX + #16 (8-bit)],XMM4
	
02d0    # TLS is in R15
02d0    movq    RAX, [R15 + #328 (32-bit)]	# ptr
02d7    movq    R10, RAX	# spill
02da    addq    R10, #24	# ptr
02de    # TLS is in R15
        nop 	# 2 bytes pad for loops and calls
02e0    cmpq    R10, [R15 + #344 (32-bit)]	# raw ptr
02e7    jnb,u   B49  P=0.000100 C=-1.000000

02ed    B29: #	out( B30 ) <- in( B28 )  Freq: 139466
02ed    # TLS is in R15
02ed    movq    [R15 + #328 (32-bit)], R10	# ptr
02f4    PREFETCHW [R10 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
02fc    movq    [RAX], #1	# long
0303    movl    [RAX + #8 (8-bit)], narrowklass: precise klass jdk/incubator/vector/Double256Vector: 0x00007f846c402ba0:Constant:exact *	# compressed klass ptr
030a    movl    [RAX + #12 (8-bit)], #0	# int

0311    B30: #	out( B31 ) <- in( B50 B29 )  Freq: 139480
0311    movq    R10, [rsp + #48]	# spill
0316    movq    [RAX + #16 (8-bit)], R10	# ptr
031a    
031a    # checkcastPP of RAX
031a    movq    [rsp + #120], RAX	# spill
031f    # TLS is in R15
031f    movq    R10, [R15 + #304 (32-bit)]	# ptr
0326    movl    RBP, [rsp + #152]	# spill
032d    addl    RBP, #4	# int
0330    movl    [rsp + #16], RBP	# spill
0334    testl   rax, [R10]	# Safepoint: poll for GC        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:272 (line 46) L[0]=rsp + #32 L[1]=rsp + #128 L[2]=rsp + #136 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=RBP L[8]=XMM1 L[9]=_ L[10]=rsp + #96 L[11]=rsp + #104 L[12]=rsp + #64 L[13]=_ L[14]=rsp + #80 L[15]=_ L[16]=rsp + #88 L[17]=_ L[18]=rsp + #72 L[19]=_ L[20]=#ScObj0 L[21]=#ScObj1 L[22]=_
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=XMM0 }
        # ScObj1 jdk/incubator/vector/Double256Vector={ [payload :0]=XMM4 }
        # OopMap {[32]=Oop [96]=Oop [104]=Oop [112]=Oop [120]=Oop [128]=Oop [136]=Oop off=820/0x334}
0337    movsd   [rsp + #24], XMM1	# spill

033d    B31: #	out( B51 B32 ) <- in( B26 B30 ) Loop( B31-B30 inner ) Freq: 139481
033d    movl    R12, [rsp + #16]	# spill
0342    cvtsi2sdl XMM0, R12	# i2d
0347    movsd   XMM1, [rsp + #24]	# spill
034d    ucomisd XMM1, XMM0 test
0351    jbe,u   B51  P=0.000001 C=899077.000000

0357    B32: #	out( B74 B33 ) <- in( B31 )  Freq: 139481
        nop 	# 9 bytes pad for loops and calls
0360    cmpl    R12, [RSP + #144 (32-bit)]	# unsigned
0368    jnb,u   B74  P=0.000001 C=-1.000000

036e    B33: #	out( B75 B34 ) <- in( B32 )  Freq: 139481
036e    # castII of R12
036e    movl    [rsp + #152], R12	# spill
0376    movq    R10, [rsp + #128]	# spill
037e    load_vector XMM0,[R10 + #16 + R12 << #3]
0385    vsubpd  XMM4,XMM0,XMM3	! sub packedD
0389    cmpl    R12, [RSP + #148 (32-bit)]	# unsigned
0391    jnb,u   B75  P=0.000001 C=-1.000000

0397    B34: #	out( B116 B35 ) <- in( B33 )  Freq: 139481
0397    movq    R10, [rsp + #136]	# spill
039f    load_vector XMM0,[R10 + #16 + R12 << #3]
03a6    vsubpd  XMM0,XMM0,XMM2	! sub packedD
03aa    vmulpd  XMM5,XMM0,XMM4	! mul packedD
03ae    movq    R10, [rsp + #112]	# spill
03b3    movl    R10, [R10 + #8 (8-bit)]	# compressed klass ptr
03b7    NullCheck R10

03b7    B35: #	out( B76 B36 ) <- in( B34 )  Freq: 139481
        nop 	# 9 bytes pad for loops and calls
03c0    cmpl    R10, narrowklass: precise klass jdk/incubator/vector/Double256Vector: 0x00007f846c402ba0:Constant:exact *	# compressed klass ptr
03c7    jne,u   B76  P=0.000001 C=-1.000000

03cd    B36: #	out( B47 B37 ) <- in( B35 )  Freq: 139480
03cd    movq    R10, [rsp + #112]	# spill
03d2    # checkcastPP of R10
03d2    movq    RBP, R10	# spill
03d5    # TLS is in R15
03d5    movq    RAX, [R15 + #328 (32-bit)]	# ptr
03dc    movq    R10, RAX	# spill
03df    addq    R10, #48	# ptr
03e3    # TLS is in R15
03e3    cmpq    R10, [R15 + #344 (32-bit)]	# raw ptr
03ea    jnb,u   B47  P=0.000100 C=-1.000000

03f0    B37: #	out( B38 ) <- in( B36 )  Freq: 139467
03f0    # TLS is in R15
03f0    movq    [R15 + #328 (32-bit)], R10	# ptr
03f7    PREFETCHW [R10 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
03ff    movq    [RAX], #1	# long
0406    PREFETCHW [R10 + #256 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
040e    movl    [RAX + #8 (8-bit)], narrowklass: precise klass [D: 0x00007f8467f0e730:Constant:exact *	# compressed klass ptr
0415    PREFETCHW [R10 + #320 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
041d    movl    [RAX + #12 (8-bit)], #4	# int
0424    PREFETCHW [R10 + #384 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
042c    movq    [RAX + #16 (8-bit)], #0	# long
0434    movq    [RAX + #24 (8-bit)], #0	# long
043c    movq    [RAX + #32 (8-bit)], #0	# long
0444    movq    [RAX + #40 (8-bit)], #0	# long

044c    B38: #	out( B45 B39 ) <- in( B48 B37 )  Freq: 139480
044c    
044c    MEMBAR-storestore (empty encoding)
044c    # checkcastPP of RAX
044c    movq    [rsp + #48], RAX	# spill
0451    movq    R10, [RBP + #16 (8-bit)]	# ptr ! Field: jdk/internal/vm/vector/VectorSupport$VectorPayload.payload (constant)
0455    vaddpd  XMM0,XMM5,[R10 + #16 (8-bit)]	! add packedD
045b    store_vector [RAX + #16 (8-bit)],XMM0
	
0460    # TLS is in R15
0460    movq    RAX, [R15 + #328 (32-bit)]	# ptr
0467    movq    R10, RAX	# spill
046a    addq    R10, #24	# ptr
046e    # TLS is in R15
046e    cmpq    R10, [R15 + #344 (32-bit)]	# raw ptr
0475    jnb,u   B45  P=0.000100 C=-1.000000

047b    B39: #	out( B40 ) <- in( B38 )  Freq: 139467
047b    # TLS is in R15
047b    movq    [R15 + #328 (32-bit)], R10	# ptr
0482    PREFETCHW [R10 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
048a    movq    [RAX], #1	# long
0491    movl    [RAX + #8 (8-bit)], narrowklass: precise klass jdk/incubator/vector/Double256Vector: 0x00007f846c402ba0:Constant:exact *	# compressed klass ptr
0498    movl    [RAX + #12 (8-bit)], #0	# int

049f    B40: #	out( B117 B41 ) <- in( B46 B39 )  Freq: 139480
049f    movq    R10, [rsp + #48]	# spill
04a4    movq    [RAX + #16 (8-bit)], R10	# ptr
04a8    
04a8    # checkcastPP of RAX
04a8    movq    [rsp + #112], RAX	# spill
04ad    vmulpd  XMM5,XMM4,XMM4	! mul packedD
04b1    movq    R10, [rsp + #120]	# spill
04b6    movl    R11, [R10 + #8 (8-bit)]	# compressed klass ptr
04ba    NullCheck R10

04ba    B41: #	out( B77 B42 ) <- in( B40 )  Freq: 139480
        nop 	# 6 bytes pad for loops and calls
04c0    cmpl    R11, narrowklass: precise klass jdk/incubator/vector/Double256Vector: 0x00007f846c402ba0:Constant:exact *	# compressed klass ptr
04c7    jne,u   B77  P=0.000001 C=-1.000000

04cd    B42: #	out( B27 B43 ) <- in( B41 )  Freq: 139480
04cd    # checkcastPP of R10
04cd    movq    RBP, R10	# spill
04d0    # TLS is in R15
04d0    movq    RAX, [R15 + #328 (32-bit)]	# ptr
04d7    movq    R10, RAX	# spill
04da    addq    R10, #48	# ptr
04de    # TLS is in R15
        nop 	# 2 bytes pad for loops and calls
04e0    cmpq    R10, [R15 + #344 (32-bit)]	# raw ptr
04e7    jb,u   B27  P=0.999900 C=-1.000000

04ed    B43: #	out( B122 B44 ) <- in( B42 )  Freq: 13.9503
04ed    vmovdqu [rsp + 256],XMM5	# spill
04f6    vmovdqu [rsp + 224],XMM0	# spill
04ff    vmovdqu [rsp + 192],XMM3	# spill
0508    vmovdqu [rsp + 160],XMM2	# spill
0511    movsd   [rsp + #0], XMM1	# spill
0516    movq    RSI, precise klass [D: 0x00007f8467f0e730:Constant:exact *	# ptr
0520    movl    RDX, #4	# int
        nop 	# 3 bytes pad for loops and calls
0528    call,static  wrapper for: _new_array_Java
        # jdk.incubator.vector.DoubleVector::lanewiseTemplate @ bci:168 (line 651) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x00007f84693ef0b0 STK[2]=#Ptr0x00007f84693f0910 STK[3]=#4 STK[4]=RBP STK[5]=#ScObj0 STK[6]=#Ptr0x00007f8469344a40
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #256 }
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 279) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:259 (line 49) L[0]=rsp + #32 L[1]=rsp + #128 L[2]=rsp + #136 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #152 L[8]=rsp + #0 L[9]=_ L[10]=rsp + #96 L[11]=rsp + #104 L[12]=rsp + #64 L[13]=_ L[14]=rsp + #80 L[15]=_ L[16]=rsp + #88 L[17]=_ L[18]=rsp + #72 L[19]=_ L[20]=#ScObj0 L[21]=_ L[22]=_
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #224 }
        # OopMap {rbp=Oop [32]=Oop [96]=Oop [104]=Oop [112]=Oop [128]=Oop [136]=Oop off=1328/0x530}

0530    B44: #	out( B28 ) <- in( B43 )  Freq: 13.9501
        # Block is sole successor of call
0530    movsd   XMM1, [rsp + #0]	# spill
0535    vmovdqu XMM2,[rsp + 160]	# spill
053e    vmovdqu XMM3,[rsp + 192]	# spill
0547    vmovdqu XMM0,[rsp + 224]	# spill
0550    vmovdqu XMM5,[rsp + 256]	# spill
0559    jmp     B28

055e    B45: #	out( B118 B46 ) <- in( B38 )  Freq: 13.9504
055e    vmovdqu [rsp + 256],XMM0	# spill
0567    vmovdqu [rsp + 224],XMM4	# spill
0570    vmovdqu [rsp + 192],XMM3	# spill
0579    vmovdqu [rsp + 160],XMM2	# spill
0582    movsd   [rsp + #56], XMM1	# spill
0588    vmovdqu [rsp + 0],XMM5	# spill
058d    movq    RSI, precise klass jdk/incubator/vector/Double256Vector: 0x00007f846c402ba0:Constant:exact *	# ptr
        nop 	# 1 bytes pad for loops and calls
0598    call,static  wrapper for: _new_instance_Java
        # jdk.incubator.vector.DoubleVector::lanewiseTemplate @ bci:168 (line 651) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x00007f84693ef0b0 STK[2]=#Ptr0x00007f84693f0910 STK[3]=#4 STK[4]=RBP STK[5]=#ScObj0 STK[6]=#Ptr0x00007f8469344a40
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #0 }
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 279) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:245 (line 48) L[0]=rsp + #32 L[1]=rsp + #128 L[2]=rsp + #136 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #152 L[8]=rsp + #56 L[9]=_ L[10]=rsp + #96 L[11]=rsp + #104 L[12]=rsp + #64 L[13]=_ L[14]=rsp + #80 L[15]=_ L[16]=rsp + #88 L[17]=_ L[18]=rsp + #72 L[19]=_ L[20]=_ L[21]=rsp + #120 L[22]=#ScObj0
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #224 }
        # OopMap {rbp=Oop [32]=Oop [48]=Oop [96]=Oop [104]=Oop [120]=Oop [128]=Oop [136]=Oop off=1440/0x5a0}

05a0    B46: #	out( B40 ) <- in( B45 )  Freq: 13.9501
        # Block is sole successor of call
05a0    movsd   XMM1, [rsp + #56]	# spill
05a6    vmovdqu XMM2,[rsp + 160]	# spill
05af    vmovdqu XMM3,[rsp + 192]	# spill
05b8    vmovdqu XMM4,[rsp + 224]	# spill
05c1    vmovdqu XMM0,[rsp + 256]	# spill
05ca    jmp     B40

05cf    B47: #	out( B119 B48 ) <- in( B36 )  Freq: 13.9504
05cf    vmovdqu [rsp + 256],XMM5	# spill
05d8    vmovdqu [rsp + 224],XMM4	# spill
05e1    vmovdqu [rsp + 192],XMM3	# spill
05ea    vmovdqu [rsp + 160],XMM2	# spill
05f3    pushq   [rsp + #24]	# 64-bit mem-mem spill
	popq    [rsp + #0]
05fc    movq    RSI, precise klass [D: 0x00007f8467f0e730:Constant:exact *	# ptr
0606    movl    RDX, #4	# int
        nop 	# 1 bytes pad for loops and calls
060c    call,static  wrapper for: _new_array_Java
        # jdk.incubator.vector.DoubleVector::lanewiseTemplate @ bci:168 (line 651) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x00007f84693ef0b0 STK[2]=#Ptr0x00007f84693f0910 STK[3]=#4 STK[4]=RBP STK[5]=#ScObj0 STK[6]=#Ptr0x00007f8469344a40
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #256 }
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 279) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:245 (line 48) L[0]=rsp + #32 L[1]=rsp + #128 L[2]=rsp + #136 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #152 L[8]=rsp + #0 L[9]=_ L[10]=rsp + #96 L[11]=rsp + #104 L[12]=rsp + #64 L[13]=_ L[14]=rsp + #80 L[15]=_ L[16]=rsp + #88 L[17]=_ L[18]=rsp + #72 L[19]=_ L[20]=_ L[21]=rsp + #120 L[22]=#ScObj0
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #224 }
        # OopMap {rbp=Oop [32]=Oop [96]=Oop [104]=Oop [120]=Oop [128]=Oop [136]=Oop off=1556/0x614}

0614    B48: #	out( B38 ) <- in( B47 )  Freq: 13.9501
        # Block is sole successor of call
0614    movsd   XMM1, [rsp + #0]	# spill
0619    vmovdqu XMM2,[rsp + 160]	# spill
0622    vmovdqu XMM3,[rsp + 192]	# spill
062b    vmovdqu XMM4,[rsp + 224]	# spill
0634    vmovdqu XMM5,[rsp + 256]	# spill
        nop 	# 3 bytes pad for loops and calls
0640    jmp     B38

0645    B49: #	out( B121 B50 ) <- in( B28 )  Freq: 13.9503
0645    vmovdqu [rsp + 256],XMM4	# spill
064e    vmovdqu [rsp + 224],XMM0	# spill
0657    vmovdqu [rsp + 192],XMM3	# spill
0660    vmovdqu [rsp + 160],XMM2	# spill
0669    movsd   [rsp + #56], XMM1	# spill
066f    vmovdqu [rsp + 0],XMM5	# spill
0674    movq    RSI, precise klass jdk/incubator/vector/Double256Vector: 0x00007f846c402ba0:Constant:exact *	# ptr
        nop 	# 2 bytes pad for loops and calls
0680    call,static  wrapper for: _new_instance_Java
        # jdk.incubator.vector.DoubleVector::lanewiseTemplate @ bci:168 (line 651) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x00007f84693ef0b0 STK[2]=#Ptr0x00007f84693f0910 STK[3]=#4 STK[4]=RBP STK[5]=#ScObj0 STK[6]=#Ptr0x00007f8469344a40
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #0 }
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 279) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:259 (line 49) L[0]=rsp + #32 L[1]=rsp + #128 L[2]=rsp + #136 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #152 L[8]=rsp + #56 L[9]=_ L[10]=rsp + #96 L[11]=rsp + #104 L[12]=rsp + #64 L[13]=_ L[14]=rsp + #80 L[15]=_ L[16]=rsp + #88 L[17]=_ L[18]=rsp + #72 L[19]=_ L[20]=#ScObj0 L[21]=_ L[22]=_
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #224 }
        # OopMap {rbp=Oop [32]=Oop [48]=Oop [96]=Oop [104]=Oop [112]=Oop [128]=Oop [136]=Oop off=1672/0x688}

0688    B50: #	out( B30 ) <- in( B49 )  Freq: 13.9501
        # Block is sole successor of call
0688    movsd   XMM1, [rsp + #56]	# spill
068e    vmovdqu XMM2,[rsp + 160]	# spill
0697    vmovdqu XMM3,[rsp + 192]	# spill
06a0    vmovdqu XMM0,[rsp + 224]	# spill
06a9    vmovdqu XMM4,[rsp + 256]	# spill
06b2    jmp     B30

06b7    B51: #	out( B125 B52 ) <- in( B31 )  Freq: 0.155138
06b7    movq    R10, [rsp + #96]	# spill
        nop 	# 4 bytes pad for loops and calls
06c0    movl    R8, [R10 + #8 (8-bit)]	# compressed klass ptr
06c4    NullCheck R10

06c4    B52: #	out( B105 B53 ) <- in( B51 )  Freq: 0.155138
06c4    cmpl    R8, narrowklass: precise klass jdk/incubator/vector/Double256Vector: 0x00007f846c402ba0:Constant:exact *	# compressed klass ptr
06cb    jne,u   B105  P=0.000001 C=-1.000000

06d1    B53: #	out( B126 B54 ) <- in( B52 )  Freq: 0.155138
06d1    movq    R11, [rsp + #104]	# spill
06d6    movl    R8, [R11 + #8 (8-bit)]	# compressed klass ptr
06da    NullCheck R11

06da    B54: #	out( B106 B55 ) <- in( B53 )  Freq: 0.155138
06da    # checkcastPP of R10
06da    movq    R10, [R10 + #16 (8-bit)]	# ptr ! Field: jdk/internal/vm/vector/VectorSupport$VectorPayload.payload (constant)
06de    load_vector XMM4,[R10 + #16 (8-bit)]
06e4    xorpd   XMM0, XMM0	# double 0.0
06e8    xorpd   XMM1, XMM1	# double 0.0
06ec    vector_reduction_double XMM1,XMM4 ; using XMM6, XMM5 as TEMP
070c    vaddsd  XMM1, XMM1, [RSP + #88 (32-bit)]
        nop 	# 14 bytes pad for loops and calls
0720    cmpl    R8, narrowklass: precise klass jdk/incubator/vector/Double256Vector: 0x00007f846c402ba0:Constant:exact *	# compressed klass ptr
0727    jne,u   B106  P=0.000001 C=-1.000000

072d    B55: #	out( B72 B56 ) <- in( B54 )  Freq: 0.155138
072d    # checkcastPP of R11
072d    movq    R10, [R11 + #16 (8-bit)]	# ptr ! Field: jdk/internal/vm/vector/VectorSupport$VectorPayload.payload (constant)
0731    load_vector XMM4,[R10 + #16 (8-bit)]
0737    vector_reduction_double XMM0,XMM4 ; using XMM5, XMM6 as TEMP
0757    vaddsd  XMM4, XMM0, [RSP + #72 (32-bit)]
075d    movl    R8, [rsp + #16]	# spill
0762    cmpl    R8, [RSP + #40 (32-bit)]
0767    jge     B72  P=0.500000 C=-1.000000

076d    B56: #	out( B107 B57 ) <- in( B55 )  Freq: 0.0775688
076d    cmpl    R8, [RSP + #40 (32-bit)]	# unsigned
0772    jnb,u   B107  P=0.000001 C=-1.000000

0778    B57: #	out( B107 B58 ) <- in( B56 )  Freq: 0.0775687
0778    movl    R12, [rsp + #40]	# spill
077d    decl    R12	# int
0780    cmpl    R12, [RSP + #40 (32-bit)]	# unsigned
0785    jnb,u   B107  P=0.000001 C=-1.000000

078b    B58: #	out( B107 B59 ) <- in( B57 )  Freq: 0.0775686
078b    cmpl    R8, [RSP + #44 (32-bit)]	# unsigned
0790    jnb,u   B107  P=0.000001 C=-1.000000

0796    B59: #	out( B107 B60 ) <- in( B58 )  Freq: 0.0775685
        nop 	# 10 bytes pad for loops and calls
07a0    cmpl    R12, [RSP + #44 (32-bit)]	# unsigned
07a5    jnb,u   B107  P=0.000001 C=-1.000000

07ab    B60: #	out( B61 ) <- in( B59 )  Freq: 0.0775685
07ab    movq    RCX, [rsp + #136]	# spill
07b3    movl    RBX, RCX	# ptr -> int
07b5    shrl    RBX, #3
07b8    andl    RBX, #3	# int
07bb    addl    RBX, [RSP + #16 (32-bit)]	# int
07bf    movl    R9, #1	# int
07c5    subl    R9, RBX	# int
07c8    andl    R9, #3	# int
07cc    addl    R9, [RSP + #16 (32-bit)]	# int
07d1    incl    R9	# int
07d4    cmpl    R9, [RSP + #40 (32-bit)]
07d9    movl    RBX, [rsp + #40]	# spill
07dd    cmovlgt R9, RBX	# min
        nop 	# 3 bytes pad for loops and calls

07e4    B61: #	out( B61 B62 ) <- in( B60 B61 ) Loop( B61-B61 inner pre of N656) Freq: 0.775685
07e4    movsd   XMM0, [RCX + #16 + R8 << #3]	# double
07eb    movq    RDX, [rsp + #128]	# spill
07f3    movsd   XMM5, [RDX + #16 + R8 << #3]	# double
07fa    vsubsd  XMM0, XMM0, [RSP + #80 (32-bit)]
0800    vsubsd  XMM5, XMM5, [RSP + #64 (32-bit)]
0806    vmulsd  XMM6, XMM5, XMM5
080a    vmulsd  XMM0, XMM0, XMM5
080e    vaddsd  XMM1, XMM1, XMM6
0812    vaddsd  XMM4, XMM4, XMM0
0816    incl    R8	# int
0819    cmpl    R8, R9
081c    jl,s   B61	# loop end  P=0.900000 C=-1.000000

081e    B62: #	out( B88 B63 ) <- in( B61 )  Freq: 0.0775685
081e    movl    RDI, RBX	# spill
0820    addl    RDI, #-15	# int
0823    movl    RSI, #-2147483648	# int
0828    cmpl    R12, RDI
082b    cmovll RDI, RSI	# signed, int
082e    cmpl    R8, RDI
0831    jge     B88  P=0.000001 C=-1.000000

0837    B63: #	out( B108 B64 ) <- in( B62 )  Freq: 0.0775684
0837    # castII of R8
        nop 	# 9 bytes pad for loops and calls
0840    cmpl    R8, [RSP + #44 (32-bit)]	# unsigned
0845    jnb,u   B108  P=0.000001 C=-1.000000

084b    B64: #	out( B109 B65 ) <- in( B63 )  Freq: 0.0775683
084b    cmpl    R8, [RSP + #44 (32-bit)]	# unsigned
0850    jnb,u   B109  P=0.000001 C=-1.000000

0856    B65: #	out( B110 B66 ) <- in( B64 )  Freq: 0.0775682
0856    cmpl    R8, RBX	# unsigned
0859    jnb,u   B110  P=0.000001 C=-1.000000

085f    B66: #	out( B111 B67 ) <- in( B65 )  Freq: 0.0775682
        nop 	# 1 bytes pad for loops and calls
0860    cmpl    R8, RBX	# unsigned
0863    jnb,u   B111  P=0.000001 C=-1.000000

0869    B67: #	out( B112 B68 ) <- in( B66 )  Freq: 0.0775681
0869    cmpl    R8, RBX	# unsigned
086c    jnb,u   B112  P=0.000001 C=-1.000000

0872    B68: #	out( B113 B69 ) <- in( B67 )  Freq: 0.077568
0872    movl    R11, R8	# spill
0875    addl    R11, #15	# int
0879    cmpl    R11, RBX	# unsigned
        nop 	# 4 bytes pad for loops and calls
0880    jnb,u   B113  P=0.000001 C=-1.000000

0886    B69: #	out( B114 B70 ) <- in( B68 )  Freq: 0.0775679
0886    cmpl    R8, [RSP + #44 (32-bit)]	# unsigned
088b    jnb,u   B114  P=0.000001 C=-1.000000

0891    B70: #	out( B115 B71 ) <- in( B69 )  Freq: 0.0775678
0891    cmpl    R11, [RSP + #44 (32-bit)]	# unsigned
0896    jnb,u   B115  P=0.000001 C=-1.000000

089c    B71: #	out( B82 ) <- in( B70 )  Freq: 0.0775678
089c    xorl    R10, R10	# int
089f    movl    R11, #16000	# int
08a5    jmp     B82

08aa    B72: #	out( B127 B73 ) <- in( B91 B88 B55 )  Freq: 0.155137
08aa    vdivsd  XMM0, XMM4, XMM1
08ae    movq    R10, [rsp + #32]	# spill
08b3    movsd   [R10 + #24 (8-bit)], XMM0	# double ! Field: org/jml/regression/linear/DoubleVectorLinearRegression.slope
08b9    NullCheck R10

08b9    B73: #	out( N1834 ) <- in( B72 )  Freq: 0.155136
08b9    vmulsd  XMM0, XMM0, [RSP + #64 (32-bit)]
08bf    movsd   XMM1, [rsp + #80]	# spill
08c5    vsubsd  XMM0, XMM1, XMM0
08c9    movsd   [R10 + #16 (8-bit)], XMM0	# double ! Field: org/jml/regression/linear/DoubleVectorLinearRegression.intercept
08cf    vzeroupper
	addq    rsp, 304	# Destroy frame
	popq    rbp
	cmpq     rsp, poll_offset[r15_thread] 
	ja       #safepoint_stub	# Safepoint: poll for GC

08e7    ret

08e8    B74: #	out( N1834 ) <- in( B32 )  Freq: 0.141333
08e8    movl    RSI, #-28	# int
08ed    movq    RBP, [rsp + #32]	# spill
08f2    movq    R10, [rsp + #128]	# spill
08fa    movq    [rsp + #0], R10	# spill
08fe    movq    R10, [rsp + #96]	# spill
0903    movq    [rsp + #32], R10	# spill
0908    movq    R10, [rsp + #104]	# spill
090d    movq    [rsp + #40], R10	# spill
0912    movsd   XMM0, [rsp + #64]	# spill
0918    movsd   [rsp + #48], XMM0	# spill
091e    movsd   XMM0, [rsp + #80]	# spill
0924    movsd   [rsp + #56], XMM0	# spill
092a    movsd   XMM0, [rsp + #88]	# spill
0930    movsd   [rsp + #64], XMM0	# spill
        nop 	# 2 bytes pad for loops and calls
0938    call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 359) L[0]=_ L[1]=_ STK[0]=rsp + #16 STK[1]=rsp + #144 STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 74) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::fromArray @ bci:9 (line 2562) L[0]=#Ptr0x00007f846c48a850 L[1]=rsp + #0 L[2]=_ L[3]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:214 (line 47) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #136 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #16 L[8]=rsp + #24 L[9]=_ L[10]=rsp + #32 L[11]=rsp + #40 L[12]=rsp + #48 L[13]=_ L[14]=rsp + #56 L[15]=_ L[16]=rsp + #64 L[17]=_ L[18]=rsp + #72 L[19]=_ L[20]=rsp + #112 L[21]=rsp + #120 L[22]=_
        # OopMap {rbp=Oop [0]=Oop [32]=Oop [40]=Oop [112]=Oop [120]=Oop [136]=Oop off=2368/0x940}
0940    stop	# ShouldNotReachHere

0954    B75: #	out( N1834 ) <- in( B33 )  Freq: 0.141333
0954    movl    RSI, #-28	# int
0959    movq    RBP, [rsp + #32]	# spill
095e    movq    [rsp + #0], R10	# spill
0962    movq    R10, [rsp + #136]	# spill
096a    movq    [rsp + #8], R10	# spill
096f    movq    R10, [rsp + #96]	# spill
0974    movq    [rsp + #32], R10	# spill
0979    movq    R10, [rsp + #104]	# spill
097e    movq    [rsp + #40], R10	# spill
0983    movsd   XMM0, [rsp + #64]	# spill
0989    movsd   [rsp + #48], XMM0	# spill
098f    movsd   XMM0, [rsp + #80]	# spill
0995    movsd   [rsp + #56], XMM0	# spill
099b    movsd   XMM0, [rsp + #88]	# spill
09a1    movsd   [rsp + #64], XMM0	# spill
09a7    movl    [rsp + #20], R12	# spill
09ac    movl    R11, [rsp + #148]	# spill
09b4    movl    [rsp + #104], R11	# spill
09b9    vmovdqu [rsp + 128],XMM4	# spill
        nop 	# 2 bytes pad for loops and calls
09c4    call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 359) L[0]=_ L[1]=_ STK[0]=rsp + #20 STK[1]=rsp + #104 STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 74) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::fromArray @ bci:9 (line 2562) L[0]=#Ptr0x00007f846c48a850 L[1]=rsp + #8 L[2]=_ L[3]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:232 (line 48) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #20 L[8]=rsp + #24 L[9]=_ L[10]=rsp + #32 L[11]=rsp + #40 L[12]=rsp + #48 L[13]=_ L[14]=rsp + #56 L[15]=_ L[16]=rsp + #64 L[17]=_ L[18]=rsp + #72 L[19]=_ L[20]=_ L[21]=rsp + #120 L[22]=#ScObj0 STK[0]=rsp + #112
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #128 }
        # OopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [40]=Oop [112]=Oop [120]=Oop off=2508/0x9cc}
09cc    stop	# ShouldNotReachHere

09e0    B76: #	out( N1834 ) <- in( B35 )  Freq: 0.139481
09e0    movl    RSI, #-34	# int
09e5    movq    RBP, [rsp + #32]	# spill
09ea    movq    R10, [rsp + #128]	# spill
09f2    movq    [rsp + #0], R10	# spill
09f6    movq    R10, [rsp + #136]	# spill
09fe    movq    [rsp + #8], R10	# spill
0a03    movl    [rsp + #16], R12	# spill
0a08    movq    R10, [rsp + #96]	# spill
0a0d    movq    [rsp + #32], R10	# spill
0a12    movq    R10, [rsp + #104]	# spill
0a17    movq    [rsp + #40], R10	# spill
0a1c    movsd   XMM0, [rsp + #64]	# spill
0a22    movsd   [rsp + #48], XMM0	# spill
0a28    movsd   XMM0, [rsp + #80]	# spill
0a2e    movsd   [rsp + #56], XMM0	# spill
0a34    movsd   XMM0, [rsp + #88]	# spill
0a3a    movsd   [rsp + #64], XMM0	# spill
0a40    movq    R10, [rsp + #120]	# spill
0a45    movq    [rsp + #80], R10	# spill
0a4a    movq    R10, [rsp + #112]	# spill
0a4f    movq    [rsp + #88], R10	# spill
0a54    vmovdqu [rsp + 96],XMM5	# spill
0a5a    vmovdqu [rsp + 128],XMM4	# spill
        nop 	# 1 bytes pad for loops and calls
0a64    call,static  wrapper for: uncommon_trap(reason='class_check' action='maybe_recompile' debug_id='0')
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_ STK[0]=rsp + #88 STK[1]=#Ptr0x00007f846c0cdf80 STK[2]=#ScObj0
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #96 }
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:245 (line 48) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #16 L[8]=rsp + #24 L[9]=_ L[10]=rsp + #32 L[11]=rsp + #40 L[12]=rsp + #48 L[13]=_ L[14]=rsp + #56 L[15]=_ L[16]=rsp + #64 L[17]=_ L[18]=rsp + #72 L[19]=_ L[20]=_ L[21]=rsp + #80 L[22]=#ScObj0
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #128 }
        # OopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [40]=Oop [80]=Oop [88]=Oop off=2668/0xa6c}
0a6c    stop	# ShouldNotReachHere

0a80    B77: #	out( N1834 ) <- in( B41 )  Freq: 0.13948
0a80    movl    RSI, #-34	# int
0a85    movq    RBP, [rsp + #32]	# spill
0a8a    movq    R10, [rsp + #128]	# spill
0a92    movq    [rsp + #0], R10	# spill
0a96    movq    R10, [rsp + #136]	# spill
0a9e    movq    [rsp + #8], R10	# spill
0aa3    movl    R11, [rsp + #152]	# spill
0aab    movl    [rsp + #16], R11	# spill
0ab0    movsd   [rsp + #24], XMM1	# spill
0ab6    movq    R10, [rsp + #96]	# spill
0abb    movq    [rsp + #32], R10	# spill
0ac0    movq    R10, [rsp + #104]	# spill
0ac5    movq    [rsp + #40], R10	# spill
0aca    movsd   XMM1, [rsp + #64]	# spill
0ad0    movsd   [rsp + #48], XMM1	# spill
0ad6    movsd   XMM1, [rsp + #80]	# spill
0adc    movsd   [rsp + #56], XMM1	# spill
0ae2    movq    R10, [rsp + #120]	# spill
0ae7    movq    [rsp + #80], R10	# spill
0aec    vmovdqu [rsp + 96],XMM0	# spill
0af2    vmovdqu [rsp + 128],XMM5	# spill
        nop 	# 1 bytes pad for loops and calls
0afc    call,static  wrapper for: uncommon_trap(reason='class_check' action='maybe_recompile' debug_id='0')
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_ STK[0]=rsp + #80 STK[1]=#Ptr0x00007f846c0cdf80 STK[2]=#ScObj0
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #128 }
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:259 (line 49) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #16 L[8]=rsp + #24 L[9]=_ L[10]=rsp + #32 L[11]=rsp + #40 L[12]=rsp + #48 L[13]=_ L[14]=rsp + #56 L[15]=_ L[16]=rsp + #88 L[17]=_ L[18]=rsp + #72 L[19]=_ L[20]=#ScObj0 L[21]=_ L[22]=_
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #96 }
        # OopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [40]=Oop [80]=Oop off=2820/0xb04}
0b04    stop	# ShouldNotReachHere

0b18    B78: #	out( B79 ) <- in( B79 ) top-of-loop Freq: 0.349055
0b18    movdq   RAX, XMM1	# spill
0b1d    movdq   R13, XMM4	# spill

0b22    B79: #	out( B78 B80 ) <- in( B86 B78 ) Loop( B79-B78 inner post of N1079) Freq: 0.387839
0b22    load_vector XMM0,[RCX + #16 + R8 << #3]
0b29    load_vector XMM1,[RDX + #16 + R8 << #3]
0b30    vmovdqu XMM5,[rsp + 0]	# spill
0b35    vsubpd  XMM0,XMM0,XMM5	! sub packedD
0b39    vmovdqu XMM6,[rsp + 96]	# spill
0b3f    vsubpd  XMM1,XMM1,XMM6	! sub packedD
0b43    vmulpd  XMM0,XMM1,XMM0	! mul packedD
0b47    vmulpd  XMM2,XMM1,XMM1	! mul packedD
0b4b    movdq   XMM4, R13	# spill
0b50    vector_reduction_double XMM4,XMM0 ; using XMM3, XMM1 as TEMP
0b70    movdq   XMM1, RAX	# spill
0b75    vector_reduction_double XMM1,XMM2 ; using XMM0, XMM3 as TEMP
0b95    addl    R8, #4	# int
0b99    cmpl    R8, R10
        nop 	# 4 bytes pad for loops and calls
0ba0    jl     B78	# loop end  P=0.900000 C=-1.000000

0ba6    B80: #	out( B88 ) <- in( B79 )  Freq: 0.0387839
0ba6    jmp     B88

0bab    B81: #	out( B82 ) <- in( B84 ) top-of-loop Freq: 0.69811
0bab    vmovdqu XMM2,[rsp + 0]	# spill
0bb0    vmovdqu XMM3,[rsp + 96]	# spill
0bb6    movdq   XMM1, RAX	# spill
0bbb    movapd  XMM4, XMM0	# spill

0bbf    B82: #	out( B83 ) <- in( B71 B81 ) Loop( B82-B81 ) Freq: 0.775677
0bbf    movl    R9, RDI	# spill
0bc2    subl    R9, R8	# int
0bc5    cmpl    RDI, R8
0bc8    cmovll R9, R10	# signed, int
0bcc    cmpl    R9, #16000	# unsigned
0bd3    cmovlnbe R9, R11	# unsigned, int
0bd7    addl    R9, R8	# int
0bda    vmovdqu [rsp + 0],XMM2	# spill
0bdf    vmovdqu [rsp + 96],XMM3	# spill
0be5    movdq   RAX, XMM1	# spill
0bea    movdq   R13, XMM4	# spill
        nop 	# 1 bytes pad for loops and calls

0bf0    B83: #	out( B83 B84 ) <- in( B82 B83 ) Loop( B83-B83 inner main of N616 strip mined) Freq: 7.75677
0bf0    load_vector XMM0,[RCX + #16 + R8 << #3]
0bf7    load_vector XMM1,[RDX + #16 + R8 << #3]
0bfe    vmovdqu XMM3,[rsp + 0]	# spill
0c03    vsubpd  XMM0,XMM0,XMM3	! sub packedD
0c07    vmovdqu XMM4,[rsp + 96]	# spill
0c0d    vsubpd  XMM1,XMM1,XMM4	! sub packedD
0c11    vmulpd  XMM12,XMM1,XMM1	! mul packedD
0c15    vmulpd  XMM0,XMM1,XMM0	! mul packedD
0c19    vmovdqu [rsp + 160],XMM0	# spill
0c22    movslq  RBP, R8	# i2l
0c25    load_vector XMM0,[RDX + #48 + RBP << #3]
0c2b    load_vector XMM5,[RCX + #112 + RBP << #3]
0c31    load_vector XMM6,[RDX + #80 + RBP << #3]
0c37    load_vector XMM1,[RDX + #112 + RBP << #3]
0c3d    load_vector XMM2,[RCX + #48 + RBP << #3]
0c43    load_vector XMM8,[RCX + #80 + RBP << #3]
0c49    vsubpd  XMM7,XMM0,XMM4	! sub packedD
0c4d    vsubpd  XMM0,XMM8,XMM3	! sub packedD
0c51    vmulpd  XMM13,XMM7,XMM7	! mul packedD
0c55    vsubpd  XMM8,XMM2,XMM3	! sub packedD
0c59    vsubpd  XMM2,XMM1,XMM4	! sub packedD
0c5d    vmulpd  XMM1,XMM7,XMM8	! mul packedD
0c62    vmulpd  XMM10,XMM2,XMM2	! mul packedD
0c66    vsubpd  XMM4,XMM6,XMM4	! sub packedD
0c6a    vsubpd  XMM5,XMM5,XMM3	! sub packedD
0c6e    vmulpd  XMM3,XMM4,XMM0	! mul packedD
0c72    vmulpd  XMM5,XMM2,XMM5	! mul packedD
0c76    vmulpd  XMM11,XMM4,XMM4	! mul packedD
0c7a    movdq   XMM0, RAX	# spill
0c7f    vector_reduction_double XMM0,XMM12 ; using XMM14, XMM15 as TEMP
0ca5    vector_reduction_double XMM0,XMM13 ; using XMM12, XMM14 as TEMP
0ccb    vector_reduction_double XMM0,XMM11 ; using XMM12, XMM13 as TEMP
0cf1    vector_reduction_double XMM0,XMM10 ; using XMM11, XMM12 as TEMP
0d17    movdq   RAX, XMM0	# spill
0d1c    movdq   XMM0, R13	# spill
0d21    vmovdqu XMM12,[rsp + 160]	# spill
0d2a    vector_reduction_double XMM0,XMM12 ; using XMM10, XMM11 as TEMP
0d50    vector_reduction_double XMM0,XMM1 ; using XMM9, XMM2 as TEMP
0d71    vector_reduction_double XMM0,XMM3 ; using XMM8, XMM4 as TEMP
0d92    vector_reduction_double XMM0,XMM5 ; using XMM6, XMM7 as TEMP
0db2    movdq   R13, XMM0	# spill
0db7    addl    R8, #16	# int
        nop 	# 5 bytes pad for loops and calls
0dc0    cmpl    R8, R9
0dc3    jl     B83	# loop end  P=0.900000 C=-1.000000

0dc9    B84: #	out( B81 B85 ) <- in( B83 )  Freq: 0.775677
0dc9    # TLS is in R15
0dc9    movq    R9, [R15 + #304 (32-bit)]	# ptr
0dd0    testl   rax, [R9]	# Safepoint: poll for GC        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:351 (line 55) L[0]=rsp + #32 L[1]=RDX L[2]=RCX L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=R8 L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=rsp + #64 L[13]=_ L[14]=rsp + #80 L[15]=_ L[16]=RAX L[17]=_ L[18]=XMM0 L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # OopMap {rcx=Oop rdx=Oop [32]=Oop off=3536/0xdd0}
0dd3    cmpl    R8, RDI
0dd6    jl     B81  P=0.900000 C=-1.000000

0ddc    B85: #	out( B87 B86 ) <- in( B84 )  Freq: 0.0775678
0ddc    cmpl    R12, [RSP + #144 (32-bit)]
0de4    movl    R10, [rsp + #144]	# spill
0dec    cmovll R10, RSI	# signed, int
0df0    cmpl    R8, R10
0df3    jge,s   B87  P=0.500000 C=-1.000000

0df5    B86: #	out( B79 ) <- in( B85 )  Freq: 0.0387839
0df5    # castII of R8
0df5    jmp     B79

0dfa    B87: #	out( B88 ) <- in( B85 )  Freq: 0.0387839
0dfa    movdq   XMM1, RAX	# spill
0dff    movapd  XMM4, XMM0	# spill

0e03    B88: #	out( B72 B89 ) <- in( B62 B80 B87 )  Freq: 0.0775678
0e03    cmpl    R8, RBX
0e06    jge     B72  P=0.500000 C=-1.000000

0e0c    B89: #	out( B90 ) <- in( B88 )  Freq: 0.0387839
0e0c    # castII of R8

0e0c    B90: #	out( B90 B91 ) <- in( B89 B90 ) Loop( B90-B90 inner post of N656) Freq: 0.387839
0e0c    movsd   XMM0, [RDX + #16 + R8 << #3]	# double
0e13    movsd   XMM2, [RCX + #16 + R8 << #3]	# double
0e1a    vsubsd  XMM0, XMM0, [RSP + #64 (32-bit)]
0e20    vsubsd  XMM2, XMM2, [RSP + #80 (32-bit)]
0e26    vmulsd  XMM3, XMM0, XMM0
0e2a    vmulsd  XMM0, XMM2, XMM0
0e2e    vaddsd  XMM1, XMM1, XMM3
0e32    vaddsd  XMM4, XMM4, XMM0
0e36    incl    R8	# int
0e39    cmpl    R8, RBX
0e3c    jl,s   B90	# loop end  P=0.900000 C=-1.000000

0e3e    B91: #	out( B72 ) <- in( B90 )  Freq: 0.0387839
        nop 	# 2 bytes pad for loops and calls
0e40    jmp     B72

0e45    B92: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
0e45    xorl    R9, R9	# ptr
0e48    jmp     B4

0e4d    B93: #	out( B7 ) <- in( B4 )  Freq: 0.000999986
0e4d    xorl    R12, R12	# ptr
0e50    jmp     B7

0e55    B94: #	out( B10 ) <- in( B7 )  Freq: 0.000999985
0e55    xorl    RCX, RCX	# ptr
0e57    jmp     B10

0e5c    B95: #	out( B13 ) <- in( B10 )  Freq: 0.000999984
0e5c    xorl    RBP, RBP	# ptr
        nop 	# 2 bytes pad for loops and calls
0e60    jmp     B13

0e65    B96: #	out( B16 ) <- in( B13 )  Freq: 0.000999983
0e65    movq    [rsp + #96], RBP	# spill
0e6a    movq    RDI, RCX	# spill
0e6d    movq    RCX, R12	# spill
0e70    movq    [rsp + #32], R9	# spill
0e75    movq    R9, R8	# spill
0e78    xorl    R10, R10	# ptr
0e7b    movq    [rsp + #104], R10	# spill
0e80    jmp     B16

0e85    B97: #	out( B19 ) <- in( B16 )  Freq: 0.000999982
0e85    xorl    R10, R10	# ptr
0e88    movq    [rsp + #112], R10	# spill
0e8d    jmp     B19

0e92    B98: #	out( B22 ) <- in( B19 )  Freq: 0.000999981
0e92    xorl    R12, R12	# ptr
0e95    jmp     B22

0e9a    B99: #	out( N1834 ) <- in( B25 B22 B23 B24 )  Freq: 4.02652e-06
0e9a    movl    RSI, #-66	# int
0e9f    movq    RBP, [rsp + #32]	# spill
0ea4    movq    [rsp + #0], RCX	# spill
0ea8    movq    [rsp + #8], RDI	# spill
0ead    movsd   XMM0, [rsp + #64]	# spill
0eb3    movsd   [rsp + #48], XMM0	# spill
0eb9    movsd   XMM0, [rsp + #80]	# spill
0ebf    movsd   [rsp + #56], XMM0	# spill
0ec5    movsd   XMM0, [rsp + #88]	# spill
0ecb    movsd   [rsp + #64], XMM0	# spill
0ed1    movq    [rsp + #88], R12	# spill
        nop 	# 2 bytes pad for loops and calls
0ed8    call,static  wrapper for: uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:199 (line 46) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #16 L[8]=rsp + #24 L[9]=_ L[10]=rsp + #96 L[11]=rsp + #104 L[12]=rsp + #48 L[13]=_ L[14]=rsp + #56 L[15]=_ L[16]=rsp + #64 L[17]=_ L[18]=rsp + #72 L[19]=_ L[20]=rsp + #112 L[21]=rsp + #88 L[22]=_
        # OopMap {rbp=Oop [0]=Oop [8]=Oop [88]=Oop [96]=Oop [104]=Oop [112]=Oop off=3808/0xee0}
0ee0    stop	# ShouldNotReachHere

0ef4    B100: #	out( B101 ) <- in( B2 )  Freq: 9.99e-07
0ef4    movq    R8, RBP	# spill

0ef7    B101: #	out( N1834 ) <- in( B100 B5 B8 B11 B102 B103 B104 )  Freq: 6.99298e-06
0ef7    movl    RSI, #-115	# int
0efc    movl    RBP, [rsp + #16]	# spill
0f00    movsd   XMM0, [rsp + #24]	# spill
0f06    movsd   [rsp + #0], XMM0	# spill
0f0b    movsd   XMM0, [rsp + #64]	# spill
0f11    movsd   [rsp + #8], XMM0	# spill
0f17    movsd   XMM0, [rsp + #80]	# spill
0f1d    movsd   [rsp + #16], XMM0	# spill
0f23    movsd   XMM0, [rsp + #88]	# spill
0f29    movsd   [rsp + #24], XMM0	# spill
0f2f    movsd   XMM0, [rsp + #72]	# spill
0f35    movsd   [rsp + #32], XMM0	# spill
0f3b    movq    [rsp + #64], RBX	# spill
0f40    movq    [rsp + #72], R8	# spill
0f45    movq    [rsp + #80], R13	# spill
0f4a    movq    [rsp + #88], R14	# spill
        nop 	# 1 bytes pad for loops and calls
0f50    call,static  wrapper for: uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:199 (line 46) L[0]=rsp + #64 L[1]=rsp + #72 L[2]=rsp + #80 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=RBP L[8]=rsp + #0 L[9]=_ L[10]=rsp + #88 L[11]=rsp + #48 L[12]=rsp + #8 L[13]=_ L[14]=rsp + #16 L[15]=_ L[16]=rsp + #24 L[17]=_ L[18]=rsp + #32 L[19]=_ L[20]=rsp + #56 L[21]=rsp + #40 L[22]=_
        # OopMap {[40]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop off=3928/0xf58}
0f58    stop	# ShouldNotReachHere

0f6c    B102: #	out( B101 ) <- in( B14 )  Freq: 9.98996e-07
0f6c    movq    R8, R9	# spill
0f6f    jmp,s   B101

0f71    B103: #	out( B101 ) <- in( B17 )  Freq: 9.98995e-07
0f71    movq    R8, R9	# spill
0f74    jmp     B101

0f79    B104: #	out( B101 ) <- in( B20 )  Freq: 9.98994e-07
0f79    movq    R8, R9	# spill
        nop 	# 4 bytes pad for loops and calls
0f80    jmp     B101

0f85    B105: #	out( N1834 ) <- in( B52 )  Freq: 1.55138e-07
0f85    movl    RSI, #-34	# int
0f8a    movq    RBP, [rsp + #32]	# spill
0f8f    movsd   XMM0, [rsp + #64]	# spill
0f95    movsd   [rsp + #32], XMM0	# spill
        nop 	# 1 bytes pad for loops and calls
0f9c    call,static  wrapper for: uncommon_trap(reason='class_check' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:282 (line 52) L[0]=RBP L[1]=rsp + #128 L[2]=rsp + #136 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #16 L[8]=_ L[9]=_ L[10]=_ L[11]=rsp + #104 L[12]=rsp + #32 L[13]=_ L[14]=rsp + #80 L[15]=_ L[16]=_ L[17]=_ L[18]=rsp + #72 L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=rsp + #88 STK[1]=_ STK[2]=rsp + #96 STK[3]=#Ptr0x00007f846c0cdf80
        # OopMap {rbp=Oop [96]=Oop [104]=Oop [128]=Oop [136]=Oop off=4004/0xfa4}
0fa4    stop	# ShouldNotReachHere

0fb8    B106: #	out( N1834 ) <- in( B54 )  Freq: 1.55138e-07
0fb8    movl    RSI, #-34	# int
0fbd    movq    RBP, [rsp + #32]	# spill
0fc2    movsd   [rsp + #56], XMM1	# spill
0fc8    call,static  wrapper for: uncommon_trap(reason='class_check' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:295 (line 53) L[0]=RBP L[1]=rsp + #128 L[2]=rsp + #136 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #16 L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=rsp + #64 L[13]=_ L[14]=rsp + #80 L[15]=_ L[16]=rsp + #56 L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=rsp + #72 STK[1]=_ STK[2]=rsp + #104 STK[3]=#Ptr0x00007f846c0cdf80
        # OopMap {rbp=Oop [104]=Oop [128]=Oop [136]=Oop off=4048/0xfd0}
0fd0    stop	# ShouldNotReachHere

0fe4    B107: #	out( N1834 ) <- in( B59 B56 B57 B58 )  Freq: 3.14395e-07
0fe4    movl    RSI, #-138	# int
0fe9    movq    RBP, [rsp + #32]	# spill
0fee    movsd   [rsp + #48], XMM1	# spill
0ff4    movsd   [rsp + #56], XMM4	# spill
        nop 	# 2 bytes pad for loops and calls
0ffc    call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:305 (line 55) L[0]=RBP L[1]=rsp + #128 L[2]=rsp + #136 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #16 L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=rsp + #64 L[13]=_ L[14]=rsp + #80 L[15]=_ L[16]=rsp + #48 L[17]=_ L[18]=rsp + #56 L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=rsp + #16 STK[1]=rsp + #40
        # OopMap {rbp=Oop [128]=Oop [136]=Oop off=4100/0x1004}
1004    stop	# ShouldNotReachHere

1018    B108: #	out( N1834 ) <- in( B63 )  Freq: 7.85984e-08
1018    stop	# ShouldNotReachHere

102c    B109: #	out( N1834 ) <- in( B64 )  Freq: 7.85983e-08
102c    stop	# ShouldNotReachHere

1040    B110: #	out( N1834 ) <- in( B65 )  Freq: 7.85983e-08
1040    stop	# ShouldNotReachHere

1054    B111: #	out( N1834 ) <- in( B66 )  Freq: 7.85982e-08
1054    stop	# ShouldNotReachHere

1068    B112: #	out( N1834 ) <- in( B67 )  Freq: 7.85981e-08
1068    stop	# ShouldNotReachHere

107c    B113: #	out( N1834 ) <- in( B68 )  Freq: 7.8598e-08
107c    stop	# ShouldNotReachHere

1090    B114: #	out( N1834 ) <- in( B69 )  Freq: 7.85979e-08
1090    stop	# ShouldNotReachHere

10a4    B115: #	out( N1834 ) <- in( B70 )  Freq: 7.85979e-08
10a4    stop	# ShouldNotReachHere

10b8    B116: #	out( N1834 ) <- in( B34 )  Freq: 0.141333
10b8    movl    RSI, #-10	# int
10bd    vmovdqu [rsp + 0],XMM5	# spill
        nop 	# 2 bytes pad for loops and calls
10c4    call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:245 (line 48) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=#NULL STK[1]=#ScObj0
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #0 }
        # OopMap {off=4300/0x10cc}
10cc    stop	# ShouldNotReachHere

10e0    B117: #	out( N1834 ) <- in( B40 )  Freq: 0.141333
10e0    movl    RSI, #-10	# int
10e5    vmovdqu [rsp + 0],XMM5	# spill
        nop 	# 2 bytes pad for loops and calls
10ec    call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:259 (line 49) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=#NULL STK[1]=#ScObj0
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #0 }
        # OopMap {off=4340/0x10f4}
10f4    stop	# ShouldNotReachHere

1108    B118: #	out( B120 ) <- in( B45 )  Freq: 0.000139504
1108    # exception oop is in rax; no code emitted
1108    jmp,s   B120

110a    B119: #	out( B120 ) <- in( B47 )  Freq: 0.000139504
110a    # exception oop is in rax; no code emitted

110a    B120: #	out( B124 ) <- in( B119 B118 )  Freq: 0.000279007
110a    movq    RSI, RAX	# spill
110d    jmp,s   B124

110f    B121: #	out( B123 ) <- in( B49 )  Freq: 0.000139503
110f    # exception oop is in rax; no code emitted
110f    jmp,s   B123

1111    B122: #	out( B123 ) <- in( B43 )  Freq: 0.000139503
1111    # exception oop is in rax; no code emitted

1111    B123: #	out( B124 ) <- in( B122 B121 )  Freq: 0.000279007
1111    movq    RSI, RAX	# spill

1114    B124: #	out( N1834 ) <- in( B123 B120 )  Freq: 0.000558014
1114    vzeroupper
	addq    rsp, 304	# Destroy frame
	popq    rbp

111f    jmp     rethrow_stub

1124    B125: #	out( N1834 ) <- in( B51 )  Freq: 1.57198e-07
1124    movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
112c    call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:282 (line 52) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=_ STK[1]=_ STK[2]=#NULL STK[3]=#Ptr0x00007f846c0cdf80
        # OopMap {off=4404/0x1134}
1134    stop	# ShouldNotReachHere

1148    B126: #	out( N1834 ) <- in( B53 )  Freq: 1.57198e-07
1148    movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
1150    call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:295 (line 53) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=_ STK[1]=_ STK[2]=#NULL STK[3]=#Ptr0x00007f846c0cdf80
        # OopMap {off=4440/0x1158}
1158    stop	# ShouldNotReachHere

116c    B127: #	out( N1834 ) <- in( B72 )  Freq: 1.57197e-07
116c    movl    RSI, #-10	# int
1171    movdq   RBP, XMM0	# spill
        nop 	# 2 bytes pad for loops and calls
1178    call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:360 (line 60) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=#NULL STK[1]=RBP STK[2]=_
        # OopMap {off=4480/0x1180}
1180    stop	# ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    3843 1178 %     4       org.jml.regression.linear.DoubleVectorLinearRegression::fit @ 199 (378 bytes)
 total in heap  [0x000000011869cd90,0x000000011869f778] = 10728
 relocation     [0x000000011869cf08,0x000000011869d088] = 384
 main code      [0x000000011869d0a0,0x000000011869e260] = 4544
 stub code      [0x000000011869e260,0x000000011869e278] = 24
 oops           [0x000000011869e278,0x000000011869e2b0] = 56
 metadata       [0x000000011869e2b0,0x000000011869e3b8] = 264
 scopes data    [0x000000011869e3b8,0x000000011869eba0] = 2024
 scopes pcs     [0x000000011869eba0,0x000000011869f6c0] = 2848
 dependencies   [0x000000011869f6c0,0x000000011869f6d8] = 24
 handler table  [0x000000011869f6d8,0x000000011869f738] = 96
 nul chk table  [0x000000011869f738,0x000000011869f778] = 64

[Constant Pool (empty)]

[MachCode]
[Verified Entry Point]
  # {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
 ;; N1834: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x000000011869d0a0: ;   {runtime_call os::breakpoint()}
  0x000000011869d0a0: e8fb aefd | f090 9090 | 9090 9090 | 9090 9090 
 ;; B1: #	out( B92 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x000000011869d0b0: 8984 2400 | a0fe ff55 | 4881 ec30 | 0100 0048 | 8b9e b000 

  0x000000011869d0c4: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869d0c4: 0000 488b | aea8 0000 

  0x000000011869d0cc: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d0cc: 00c5 fb10 

  0x000000011869d0d0: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869d0d0: 4618 c5fb 

  0x000000011869d0d4: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d0d4: 1144 2448 | 4c8b aea0 | 0000 004c | 8b76 604c 

  0x000000011869d0e4: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869d0e4: 8b56 584c 

  0x000000011869d0e8: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d0e8: 8954 2430 

  0x000000011869d0ec: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869d0ec: 4c8b 5610 | 4c89 5424 

  0x000000011869d0f4: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d0f4: 384c 8b56 

  0x000000011869d0f8: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869d0f8: 084c 8954 

  0x000000011869d0fc: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d0fc: 2428 448b 

  0x000000011869d100: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869d100: 6678 4489 

  0x000000011869d104: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d104: 6424 10c5 

  0x000000011869d108: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869d108: fb10 4668 | c5fb 1144 

  0x000000011869d110: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d110: 2418 c5fb 

  0x000000011869d114: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869d114: 1046 48c5 | fb11 4424 

  0x000000011869d11c: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d11c: 40c5 fb10 

  0x000000011869d120: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869d120: 4638 c5fb 

  0x000000011869d124: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d124: 1144 2450 | c5fb 1046 

  0x000000011869d12c: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869d12c: 28c5 fb11 | 4424 5848 | 8bfe 9090 | 9090 9090 | 9090 9090 | c5f8 7749 | baa0 1078 | 0901 0000 
  0x000000011869d14c: 0041 ffd2 | 4885 db0f | 848c 0d00 | 0044 8b5b | 0890 9090 

  0x000000011869d160: ;   {metadata('org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011869d160: 4181 fb20 

  0x000000011869d164: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d164: 1dba 440f | 8527 0e00 

  0x000000011869d16c: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869d16c: 004c 8bcb 
 ;; B4: #	out( B93 B5 ) <- in( B3 B92 )  Freq: 0.999999
  0x000000011869d170: 4c8b c548 | 85ed 0f84 | 710d 0000 
 ;; B5: #	out( B101 B6 ) <- in( B4 )  Freq: 0.998999
  0x000000011869d17c: 448b 5508 

  0x000000011869d180: ;   {metadata({type array double})}
  0x000000011869d180: 4181 fac3 

  0x000000011869d184: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d184: 80b8 440f | 850a 0e00 

  0x000000011869d18c: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869d18c: 004c 8be5 
 ;; B7: #	out( B94 B8 ) <- in( B6 B93 )  Freq: 0.999998
  0x000000011869d190: 4d85 ed0f | 845c 0d00 | 0045 8b5d | 0890 9090 

  0x000000011869d1a0: ;   {metadata({type array double})}
  0x000000011869d1a0: 4181 fbc3 

  0x000000011869d1a4: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d1a4: 80b8 440f | 85ea 0d00 

  0x000000011869d1ac: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869d1ac: 0049 8bcd 
 ;; B10: #	out( B95 B11 ) <- in( B9 B94 )  Freq: 0.999997
  0x000000011869d1b0: ;   {metadata('jdk/incubator/vector/DoubleVector')}
  0x000000011869d1b0: 49bb 30ce | d425 0200 | 0000 9090 | 9090 9090 | 4d85 f60f | 8433 0d00 | 0049 8bf9 | 458b 5608 
  0x000000011869d1d0: 4d33 c94f | 8d0c d14d | 8b51 6090 | 9090 9090 

  0x000000011869d1e0: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d1e0: 4d3b d30f | 85ae 0d00 

  0x000000011869d1e8: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869d1e8: 0049 8bee | 4c8b cf4c | 8b54 2430 | 4d85 d20f | 8408 0d00 | 0048 896c | 2460 488b | f949 8bcc 
  0x000000011869d208: 4c89 4c24 | 204d 8bc8 | 458b 4208 | 4d33 d24f | 8d14 c24d | 8b52 6090 | 4d3b d30f | 85e3 0d00 
  0x000000011869d228: 0048 8b6c | 2430 4889 | 6c24 684c | 8b54 2438 | 4d85 d290 | 9090 9090 | 0f84 df0c | 0000 458b 
  0x000000011869d248: 5208 4d33 | c04f 8d04 | d04d 8b50 

  0x000000011869d254: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d254: 604d 3bd3 | 0f85 b30d | 0000 488b | 6c24 3848 

  0x000000011869d264: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869d264: 896c 2470 
 ;; B19: #	out( B98 B20 ) <- in( B18 B97 )  Freq: 0.999994
  0x000000011869d268: 4c8b 5424 | 284d 85d2 | 0f84 bc0c | 0000 458b | 4208 4d33 | d24f 8d14 | c24d 8b52 

  0x000000011869d284: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d284: 604d 3bd3 | 0f85 8b0d | 0000 4c8b 

  0x000000011869d290: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869d290: 6424 2844 | 8b41 0c45 | 8bd0 4183 | c2fd 9090 | 4585 d20f | 8c91 0c00 | 0044 8b5f | 0c41 8beb 
  0x000000011869d2b0: 83c5 fd85 | ed0f 8c7f | 0c00 0089 | ac24 9400 | 0000 4489 | 5c24 2c44 | 8994 2490 | 0000 0044 
  0x000000011869d2d0: 8944 2428 | 4889 bc24 | 8800 0000 | 4889 8c24 | 8000 0000 | 4c89 6424 

  0x000000011869d2e8: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d2e8: 78c4 e27d 

  0x000000011869d2ec: ;*invokevirtual vectorType {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@6 (line 3120)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869d2ec: 1954 2450 | c4e2 7d19 

  0x000000011869d2f4: ;*invokevirtual opCodeRaw {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorOperators$OperatorImpl::opCode@1 (line 774)
                      ; - jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
                      ; - jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x000000011869d2f4: 5c24 40e9 | e100 0000 | 9090 9090 
 ;; B27: #	out( B28 ) <- in( B42 ) top-of-loop Freq: 139466
  0x000000011869d300: 4d89 9748 | 0100 0041 | 0f0d 8ac0 | 0000 0048 | c700 0100 | 0000 410f | 0d8a 0001 

  0x000000011869d31c: ;   {metadata({type array double})}
  0x000000011869d31c: 0000 c740 | 08c3 80b8 | 4441 0f0d | 8a40 0100 | 00c7 400c | 0400 0000 | 410f 0d8a | 8001 0000 
  0x000000011869d33c: 48c7 4010 | 0000 0000 | 48c7 4018 | 0000 0000 | 48c7 4020 | 0000 0000 | 48c7 4028 

  0x000000011869d358: ;*invokespecial fromArray0Template {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869d358: 0000 0000 
 ;; B28: #	out( B49 B29 ) <- in( B44 B27 ) top-of-loop Freq: 139480
  0x000000011869d35c: 4889 4424 

  0x000000011869d360: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d360: 304c 8b55 

  0x000000011869d364: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869d364: 10c4 c155 

  0x000000011869d368: ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@2 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869d368: 5862 10c5 | fe7f 6010 | 498b 8748 | 0100 004c | 8bd0 4983 

  0x000000011869d37c: ;*invokespecial fromArray0Template {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869d37c: c218 9090 | 4d3b 9758 

  0x000000011869d384: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d384: 0100 000f | 8358 0300 | 004d 8997 | 4801 0000 | 410f 0d8a | c000 0000 | 48c7 0001 

  0x000000011869d3a0: ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x000000011869d3a0: 0000 00c7 | 4008 14a4 | ba44 c740 | 0c00 0000 

  0x000000011869d3b0: ;*invokespecial fromArray0Template {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869d3b0: 004c 8b54 

  0x000000011869d3b4: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d3b4: 2430 4c89 

  0x000000011869d3b8: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869d3b8: 5010 4889 

  0x000000011869d3bc: ;*invokespecial fromArray0Template {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869d3bc: 4424 784d | 8b97 3001 | 0000 8bac | 2498 0000 

  0x000000011869d3cc: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d3cc: 0083 c504 

  0x000000011869d3d0: ; ImmutableOopMap {[32]=Oop [96]=Oop [104]=Oop [112]=Oop [120]=Oop [128]=Oop [136]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)
  0x000000011869d3d0: 896c 2410 

  0x000000011869d3d4: ;   {poll}
  0x000000011869d3d4: 4185 02c5 | fb11 4c24 | 1844 8b64 | 2410 c4c1 | 7b2a c4c5 | fb10 4c24 | 18c5 f92e 

  0x000000011869d3f0: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d3f0: c80f 8660 | 0300 0090 | 9090 9090 | 9090 9090 | 443b a424 | 9000 0000 | 0f83 7a05 

  0x000000011869d40c: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869d40c: 0000 4489 | a424 9800 | 0000 4c8b | 9424 8000 | 0000 c481 | 7e6f 44e2 

  0x000000011869d424: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d424: 10c5 fd5c 

  0x000000011869d428: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869d428: e344 3ba4 | 2494 0000 | 000f 83bd | 0500 004c | 8b94 2488 | 0000 00c4 | 817e 6f44 | e210 c5fd 
  0x000000011869d448: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d448: 5cc2 c5fd 

  0x000000011869d44c: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869d44c: 59ec 4c8b | 5424 7045 | 8b52 0890 | 9090 9090 | 9090 9090 

  0x000000011869d460: ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x000000011869d460: 4181 fa14 | a4ba 440f | 8513 0600 | 004c 8b54 

  0x000000011869d470: ;*invokevirtual vspecies {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869d470: 2470 498b | ea49 8b87 | 4801 0000 | 4c8b d049 

  0x000000011869d480: ;*invokespecial fromArray0Template {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869d480: 83c2 304d | 3b97 5801 

  0x000000011869d488: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d488: 0000 0f83 

  0x000000011869d48c: ;*invokespecial fromArray0Template {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869d48c: df01 0000 
 ;; B37: #	out( B38 ) <- in( B36 )  Freq: 139467
  0x000000011869d490: 4d89 9748 | 0100 0041 | 0f0d 8ac0 | 0000 0048 | c700 0100 | 0000 410f | 0d8a 0001 

  0x000000011869d4ac: ;   {metadata({type array double})}
  0x000000011869d4ac: 0000 c740 | 08c3 80b8 | 4441 0f0d | 8a40 0100 | 00c7 400c | 0400 0000 | 410f 0d8a | 8001 0000 
  0x000000011869d4cc: 48c7 4010 | 0000 0000 | 48c7 4018 | 0000 0000 | 48c7 4020 | 0000 0000 | 48c7 4028 

  0x000000011869d4e8: ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@0
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869d4e8: 0000 0000 
 ;; B38: #	out( B45 B39 ) <- in( B48 B37 )  Freq: 139480
  0x000000011869d4ec: 4889 4424 

  0x000000011869d4f0: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d4f0: 304c 8b55 

  0x000000011869d4f4: ;*invokespecial fromArray0Template {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869d4f4: 10c4 c155 

  0x000000011869d4f8: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869d4f8: 5842 10c5 | fe7f 4010 | 498b 8748 | 0100 004c | 8bd0 4983 

  0x000000011869d50c: ;*invokespecial fromArray0Template {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869d50c: c218 4d3b | 9758 0100 

  0x000000011869d514: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d514: 000f 83e3 

  0x000000011869d518: ;*invokespecial fromArray0Template {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869d518: 0000 004d | 8997 4801 | 0000 410f | 0d8a c000 | 0000 48c7 | 0001 0000 

  0x000000011869d530: ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x000000011869d530: 00c7 4008 | 14a4 ba44 | c740 0c00 

  0x000000011869d53c: ;*getstatic VSPECIES {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.Double256Vector::vspecies@0 (line 86)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869d53c: 0000 004c | 8b54 2430 | 4c89 5010 | 4889 4424 | 70c5 dd59 

  0x000000011869d550: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869d550: ec4c 8b54 | 2478 458b | 5a08 9090 | 9090 9090 

  0x000000011869d560: ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x000000011869d560: 4181 fb14 

  0x000000011869d564: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d564: a4ba 440f | 85b3 0500 

  0x000000011869d56c: ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869d56c: 0049 8bea | 498b 8748 | 0100 004c | 8bd0 4983 

  0x000000011869d57c: ;*invokespecial fromArray0Template {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869d57c: c230 9090 | 4d3b 9758 | 0100 000f | 8273 fdff | ffc5 fe7f | ac24 0001 | 0000 c5fe | 7f84 24e0 
  0x000000011869d59c: 0000 00c5 | fe7f 9c24 | c000 0000 | c5fe 7f94 | 24a0 0000 | 00c5 fb11 

  0x000000011869d5b4: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
                      ;   {metadata({type array double})}
  0x000000011869d5b4: 0c24 48be | 1806 c425 | 0200 0000 | ba04 0000 | 0090 9090 

  0x000000011869d5c8: ;   {runtime_call _new_array_Java}
  0x000000011869d5c8: c5f8 77e8 

  0x000000011869d5cc: ; ImmutableOopMap {rbp=Oop [32]=Oop [96]=Oop [104]=Oop [112]=Oop [128]=Oop [136]=Oop }
                      ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                      ; - (reexecute) jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869d5cc: d0bb 49f8 
 ;; B44: #	out( B28 ) <- in( B43 )  Freq: 13.9501
  0x000000011869d5d0: c5fb 100c | 24c5 fe6f | 9424 a000 | 0000 c5fe | 6f9c 24c0 | 0000 00c5 | fe6f 8424 | e000 0000 
  0x000000011869d5f0: c5fe 6fac | 2400 0100 | 00e9 5efd | ffff c5fe | 7f84 2400 | 0100 00c5 | fe7f a424 | e000 0000 
  0x000000011869d610: c5fe 7f9c | 24c0 0000 | 00c5 fe7f | 9424 a000 | 0000 c5fb 

  0x000000011869d624: ;*invokevirtual vspecies {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869d624: 114c 2438 | c5fe 7f2c 

  0x000000011869d62c: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
                      ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x000000011869d62c: 2448 bea0 | 20d5 2502 | 0000 0090 

  0x000000011869d638: ;   {runtime_call _new_instance_Java}
  0x000000011869d638: c5f8 77e8 

  0x000000011869d63c: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [96]=Oop [104]=Oop [120]=Oop [128]=Oop [136]=Oop }
                      ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                      ; - (reexecute) jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
  0x000000011869d63c: 60be 49f8 
 ;; B46: #	out( B40 ) <- in( B45 )  Freq: 13.9501
  0x000000011869d640: c5fb 104c | 2438 c5fe | 6f94 24a0 | 0000 00c5 | fe6f 9c24 | c000 0000 | c5fe 6fa4 | 24e0 0000 
  0x000000011869d660: 00c5 fe6f | 8424 0001 | 0000 e9d0 | feff ffc5 | fe7f ac24 | 0001 0000 | c5fe 7fa4 | 24e0 0000 
  0x000000011869d680: 00c5 fe7f | 9c24 c000 | 0000 c5fe | 7f94 24a0 | 0000 0048 | ff74 2418 

  0x000000011869d698: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d698: 488f 0424 

  0x000000011869d69c: ;   {metadata({type array double})}
  0x000000011869d69c: 48be 1806 | c425 0200 | 0000 ba04 | 0000 0090 

  0x000000011869d6ac: ;   {runtime_call _new_array_Java}
  0x000000011869d6ac: c5f8 77e8 

  0x000000011869d6b0: ; ImmutableOopMap {rbp=Oop [32]=Oop [96]=Oop [104]=Oop [120]=Oop [128]=Oop [136]=Oop }
                      ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                      ; - (reexecute) jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
  0x000000011869d6b0: ecba 49f8 
 ;; B48: #	out( B38 ) <- in( B47 )  Freq: 13.9501
  0x000000011869d6b4: c5fb 100c | 24c5 fe6f | 9424 a000 | 0000 c5fe | 6f9c 24c0 | 0000 00c5 | fe6f a424 | e000 0000 
  0x000000011869d6d4: c5fe 6fac | 2400 0100 | 0090 9090 | e907 feff | ffc5 fe7f | a424 0001 | 0000 c5fe | 7f84 24e0 
  0x000000011869d6f4: 0000 00c5 | fe7f 9c24 | c000 0000 | c5fe 7f94 | 24a0 0000 | 00c5 fb11 

  0x000000011869d70c: ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@2 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869d70c: 4c24 38c5 

  0x000000011869d710: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d710: fe7f 2c24 

  0x000000011869d714: ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x000000011869d714: 48be a020 | d525 0200 | 0000 9090 

  0x000000011869d720: ;   {runtime_call _new_instance_Java}
  0x000000011869d720: c5f8 77e8 

  0x000000011869d724: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [96]=Oop [104]=Oop [112]=Oop [128]=Oop [136]=Oop }
                      ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                      ; - (reexecute) jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869d724: 78bd 49f8 
 ;; B50: #	out( B30 ) <- in( B49 )  Freq: 13.9501
  0x000000011869d728: c5fb 104c | 2438 c5fe | 6f94 24a0 | 0000 00c5 | fe6f 9c24 | c000 0000 | c5fe 6f84 | 24e0 0000 
  0x000000011869d748: 00c5 fe6f | a424 0001 | 0000 e95a | fcff ff4c | 8b54 2460 | 9090 9090 

  0x000000011869d760: ; implicit exception: dispatches to 0x000000011869e1c4
  0x000000011869d760: 458b 4208 
 ;; B52: #	out( B105 B53 ) <- in( B51 )  Freq: 0.155138
  0x000000011869d764: ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x000000011869d764: 4181 f814 

  0x000000011869d768: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d768: a4ba 440f | 85b4 0800 

  0x000000011869d770: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869d770: 004c 8b5c | 2468 458b 

  0x000000011869d778: ;*invokevirtual sub {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x000000011869d778: 4308 4d8b 

  0x000000011869d77c: ;*invokespecial fromArray0Template {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869d77c: 5210 c4c1 | 7e6f 6210 | c5f9 57c0 | c5f1 57c9 | c5f3 58cc | c5f9 70ec | 0ec5 f358 | cdc4 e37d 
  0x000000011869d79c: 19e5 01c5 | f358 cdc5 | f970 f50e 

  0x000000011869d7a8: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d7a8: c5f3 58ce | c5f3 584c 

  0x000000011869d7b0: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869d7b0: 2458 9090 | 9090 9090 | 9090 9090 | 9090 9090 

  0x000000011869d7c0: ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x000000011869d7c0: 4181 f814 | a4ba 440f | 858b 0800 

  0x000000011869d7cc: ;*invokevirtual sub {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x000000011869d7cc: 004d 8b53 | 10c4 c17e | 6f62 10c5 | fb58 c4c5 | f970 f40e | c5fb 58c6 | c4e3 7d19 | e601 c5fb 
  0x000000011869d7ec: 58c6 c5f9 | 70ee 0ec5 

  0x000000011869d7f4: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d7f4: fb58 c5c5 | fb58 6424 

  0x000000011869d7fc: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869d7fc: 4844 8b44 | 2410 443b | 4424 280f | 8d3d 0100 | 0044 3b44 | 2428 0f83 | 6c08 0000 
 ;; B57: #	out( B107 B58 ) <- in( B56 )  Freq: 0.0775687
  0x000000011869d818: 448b 6424 | 2841 ffcc | 443b 6424 | 280f 8359 | 0800 0044 | 3b44 242c | 0f83 4e08 | 0000 9090 
  0x000000011869d838: 9090 9090 | 9090 9090 | 443b 6424 | 2c0f 8339 | 0800 0048 | 8b8c 2488 | 0000 008b | d9c1 eb03 
  0x000000011869d858: 83e3 0303 | 5c24 1041 | b901 0000 | 0044 2bcb | 4183 e103 | 4403 4c24 | 1041 ffc1 | 443b 4c24 
  0x000000011869d878: 288b 5c24 | 2844 0f4f 

  0x000000011869d880: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d880: cb90 9090 
 ;; B61: #	out( B61 B62 ) <- in( B60 B61 ) Loop( B61-B61 inner pre of N656) Freq: 0.775685
  0x000000011869d884: c4a1 7b10 

  0x000000011869d888: ;*synchronization entry
                      ; - jdk.incubator.vector.Double256Vector::broadcast@-1 (line 125)
                      ; - jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x000000011869d888: 44c1 1048 | 8b94 2480 

  0x000000011869d890: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d890: 0000 00c4 | a17b 106c 

  0x000000011869d898: ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::lanewise@-1 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x000000011869d898: c210 c5fb 

  0x000000011869d89c: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d89c: 5c44 2450 | c5d3 5c6c 

  0x000000011869d8a4: ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::broadcastTemplate@-1 (line 490)
                      ; - jdk.incubator.vector.Double256Vector::broadcast@2 (line 125)
                      ; - jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x000000011869d8a4: 2440 c5d3 | 59f5 c5fb 

  0x000000011869d8ac: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d8ac: 59c5 c5f3 

  0x000000011869d8b0: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::broadcastBits@21 (line 3414)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::broadcast@5 (line 3423)
                      ; - jdk.incubator.vector.DoubleVector::broadcastTemplate@7 (line 491)
                      ; - jdk.incubator.vector.Double256Vector::broadcast@2 (line 125)
                      ; - jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x000000011869d8b0: 58ce c5db 

  0x000000011869d8b4: ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::broadcast@-1 (line 3423)
                      ; - jdk.incubator.vector.DoubleVector::broadcastTemplate@7 (line 491)
                      ; - jdk.incubator.vector.Double256Vector::broadcast@2 (line 125)
                      ; - jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x000000011869d8b4: 58e0 41ff | c045 3bc1 | 7cc6 8bfb | 83c7 f1be | 0000 0080 | 443b e70f | 4cfe 443b | c70f 8dcc 
  0x000000011869d8d4: 0500 0090 | 9090 9090 | 9090 9090 | 443b 4424 | 2c0f 83cd | 0700 0044 | 3b44 242c | 0f83 d607 
  0x000000011869d8f4: 0000 443b | c30f 83e1 | 0700 0090 | 443b c30f | 83eb 0700 | 0044 3bc3 | 0f83 f607 | 0000 458b 
  0x000000011869d914: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d914: d841 83c3 | 0f44 3bdb | 9090 9090 | 0f83 f607 | 0000 443b | 4424 2c0f | 83ff 0700 | 0044 3b5c 
  0x000000011869d934: 242c 0f83 | 0808 0000 
 ;; B71: #	out( B82 ) <- in( B70 )  Freq: 0.0775678
  0x000000011869d93c: 4533 d241 | bb80 3e00 | 00e9 1503 

  0x000000011869d948: ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@205 (line 46)
  0x000000011869d948: 0000 c5db 

  0x000000011869d94c: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869d94c: 5ec1 4c8b | 5424 20c4 | c17b 1142 | 18c5 fb59 | 4424 40c5 | fb10 4c24 | 50c5 f35c 

  0x000000011869d968: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d968: c0c4 c17b 

  0x000000011869d96c: ;*invokevirtual elementType {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869d96c: 1142 10c5 | f877 4881 | c430 0100 

  0x000000011869d978: ;   {poll_return}
  0x000000011869d978: 005d 493b | a728 0100 | 000f 87ad 

  0x000000011869d984: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d984: 0800 00c3 
 ;; B74: #	out( N1834 ) <- in( B32 )  Freq: 0.141333
  0x000000011869d988: bee4 ffff 

  0x000000011869d98c: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x000000011869d98c: ff48 8b6c | 2420 4c8b | 9424 8000 | 0000 4c89 | 1424 4c8b | 5424 604c | 8954 2420 | 4c8b 5424 
  0x000000011869d9ac: 684c 8954 | 2428 c5fb | 1044 2440 | c5fb 1144 | 2430 c5fb | 1044 2450 | c5fb 1144 | 2438 c5fb 
  0x000000011869d9cc: 1044 2458 | c5fb 1144 

  0x000000011869d9d4: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d9d4: 2440 9090 

  0x000000011869d9d8: ;   {runtime_call UncommonTrapBlob}
  0x000000011869d9d8: c5f8 77e8 

  0x000000011869d9dc: ; ImmutableOopMap {rbp=Oop [0]=Oop [32]=Oop [40]=Oop [112]=Oop [120]=Oop [136]=Oop }
                      ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869d9dc: 60cb 55f8 

  0x000000011869d9e0: ;   {external_word}
  0x000000011869d9e0: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011869d9ec: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011869d9ec: e4f0 e85d 

  0x000000011869d9f0: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869d9f0: 35e4 f0f4 
 ;; B75: #	out( N1834 ) <- in( B33 )  Freq: 0.141333
  0x000000011869d9f4: bee4 ffff 

  0x000000011869d9f8: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869d9f8: ff48 8b6c | 2420 4c89 | 1424 4c8b | 9424 8800 | 0000 4c89 | 5424 084c | 8b54 2460 | 4c89 5424 
  0x000000011869da18: 204c 8b54 | 2468 4c89 | 5424 28c5 | fb10 4424 | 40c5 fb11 | 4424 30c5 | fb10 4424 | 50c5 fb11 
  0x000000011869da38: 4424 38c5 | fb10 4424 | 58c5 fb11 | 4424 4044 | 8964 2414 | 448b 9c24 | 9400 0000 | 4489 5c24 
  0x000000011869da58: 68c5 fe7f | a424 8000 

  0x000000011869da60: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869da60: 0000 9090 

  0x000000011869da64: ;   {runtime_call UncommonTrapBlob}
  0x000000011869da64: c5f8 77e8 

  0x000000011869da68: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [40]=Oop [112]=Oop [120]=Oop }
                      ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011869da68: d4ca 55f8 

  0x000000011869da6c: ;   {external_word}
  0x000000011869da6c: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011869da78: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011869da78: e4f0 e8d1 

  0x000000011869da7c: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869da7c: 34e4 f0f4 
 ;; B76: #	out( N1834 ) <- in( B35 )  Freq: 0.139481
  0x000000011869da80: bede ffff 

  0x000000011869da84: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869da84: ff48 8b6c | 2420 4c8b | 9424 8000 | 0000 4c89 | 1424 4c8b | 9424 8800 | 0000 4c89 | 5424 0844 
  0x000000011869daa4: 8964 2410 | 4c8b 5424 | 604c 8954 | 2420 4c8b | 5424 684c | 8954 2428 | c5fb 1044 | 2440 c5fb 
  0x000000011869dac4: 1144 2430 | c5fb 1044 | 2450 c5fb | 1144 2438 | c5fb 1044 | 2458 c5fb | 1144 2440 | 4c8b 5424 
  0x000000011869dae4: 784c 8954 | 2450 4c8b | 5424 704c | 8954 2458 | c5fe 7f6c | 2460 c5fe | 7fa4 2480 

  0x000000011869db00: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869db00: 0000 0090 

  0x000000011869db04: ;   {runtime_call UncommonTrapBlob}
  0x000000011869db04: c5f8 77e8 

  0x000000011869db08: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [40]=Oop [80]=Oop [88]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
  0x000000011869db08: 34ca 55f8 

  0x000000011869db0c: ;   {external_word}
  0x000000011869db0c: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011869db18: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011869db18: e4f0 e831 

  0x000000011869db1c: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869db1c: 34e4 f0f4 
 ;; B77: #	out( N1834 ) <- in( B41 )  Freq: 0.13948
  0x000000011869db20: bede ffff 

  0x000000011869db24: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869db24: ff48 8b6c | 2420 4c8b | 9424 8000 | 0000 4c89 | 1424 4c8b | 9424 8800 | 0000 4c89 | 5424 0844 
  0x000000011869db44: 8b9c 2498 | 0000 0044 | 895c 2410 | c5fb 114c | 2418 4c8b | 5424 604c | 8954 2420 | 4c8b 5424 
  0x000000011869db64: 684c 8954 | 2428 c5fb | 104c 2440 | c5fb 114c | 2430 c5fb | 104c 2450 | c5fb 114c | 2438 4c8b 
  0x000000011869db84: 5424 784c | 8954 2450 | c5fe 7f44 | 2460 c5fe | 7fac 2480 

  0x000000011869db98: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869db98: 0000 0090 

  0x000000011869db9c: ;   {runtime_call UncommonTrapBlob}
  0x000000011869db9c: c5f8 77e8 

  0x000000011869dba0: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [40]=Oop [80]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869dba0: 9cc9 55f8 

  0x000000011869dba4: ;   {external_word}
  0x000000011869dba4: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011869dbb0: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011869dbb0: e4f0 e899 | 33e4 f0f4 
 ;; B78: #	out( B79 ) <- in( B79 ) top-of-loop Freq: 0.349055
  0x000000011869dbb8: c4e1 f97e | c8c4 c1f9 | 7ee5 c4a1 | 7e6f 44c1 | 10c4 a17e | 6f4c c210 | c5fe 6f2c | 24c5 fd5c 
  0x000000011869dbd8: c5c5 fe6f 

  0x000000011869dbdc: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869dbdc: 7424 60c5 

  0x000000011869dbe0: ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Objects::checkIndex@0 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011869dbe0: f55c cec5 | f559 c0c5 | f559 d1c4 | c1f9 6ee5 | c5db 58e0 | c5f9 70c8 | 0ec5 db58 | e1c4 e37d 
  0x000000011869dc00: 19c1 01c5 | db58 e1c5 | f970 d90e | c5db 58e3 | c4e1 f96e 

  0x000000011869dc14: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869dc14: c8c5 f358 | cac5 f970 | da0e c5f3 | 58cb c4e3 | 7d19 d301 | c5f3 58cb | c5f9 70c3 | 0ec5 f358 
  0x000000011869dc34: ;*synchronization entry
                      ; - java.util.Objects::checkIndex@-1 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011869dc34: c841 83c0 | 0445 3bc2 | 9090 9090 | 0f8c 72ff | ffff e958 | 0200 00c5 | fe6f 1424 | c5fe 6f5c 
  0x000000011869dc54: 2460 c4e1 | f96e c8c5 | f928 e044 | 8bcf 452b | c841 3bf8 | 450f 4cca | 4181 f980 | 3e00 0045 
  0x000000011869dc74: 0f47 cb45 | 03c8 c5fe | 7f14 24c5 | fe7f 5c24 | 60c4 e1f9 | 7ec8 c4c1 

  0x000000011869dc8c: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869dc8c: f97e e590 
 ;; B83: #	out( B83 B84 ) <- in( B82 B83 ) Loop( B83-B83 inner main of N616 strip mined) Freq: 7.75677
  0x000000011869dc90: c4a1 7e6f | 44c1 10c4 | a17e 6f4c | c210 c5fe | 6f1c 24c5 | fd5c c3c5 | fe6f 6424 

  0x000000011869dcac: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869dcac: 60c5 f55c 

  0x000000011869dcb0: ;*invokespecial fromArray0Template {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011869dcb0: ccc5 7559 | e1c5 f559 | c0c5 fe7f | 8424 a000 | 0000 4963 | e8c5 fe6f | 44ea 30c5 | fe6f 6ce9 
  0x000000011869dcd0: 70c5 fe6f | 74ea 50c5 | fe6f 4cea | 70c5 fe6f | 54e9 30c5 | 7e6f 44e9 

  0x000000011869dce8: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869dce8: 50c5 fd5c 

  0x000000011869dcec: ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011869dcec: fcc5 bd5c | c3c5 4559 | efc5 6d5c | c3c5 f55c | d4c4 c145 | 59c8 c56d 

  0x000000011869dd04: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869dd04: 59d2 c5cd 

  0x000000011869dd08: ;*invokevirtual vspecies {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x000000011869dd08: 5ce4 c5d5 | 5ceb c5dd | 59d8 c5ed | 59ed c55d | 59dc c4e1 | f96e c0c4 | c17b 58c4 | c441 7970 
  0x000000011869dd28: fc0e c4c1 | 7b58 c7c4 | 437d 19e7 | 01c4 c17b | 58c7 c441 | 7970 f70e | c4c1 7b58 | c6c4 c17b 
  0x000000011869dd48: 58c5 c441 | 7970 f50e | c4c1 7b58 | c6c4 437d | 19ee 01c4 | c17b 58c6 | c441 7970 | e60e c4c1 
  0x000000011869dd68: 7b58 c4c4 | c17b 58c3 | c441 7970 | eb0e c4c1 | 7b58 c5c4 | 437d 19dd | 01c4 c17b | 58c5 c441 
  0x000000011869dd88: 7970 e50e | c4c1 7b58 | c4c4 c17b | 58c2 c441 | 7970 e20e | c4c1 7b58 | c4c4 437d | 19d4 01c4 
  0x000000011869dda8: c17b 58c4 | c441 7970 | dc0e c4c1 | 7b58 c3c4 | e1f9 7ec0 | c4c1 f96e | c5c5 7e6f | a424 a000 
  0x000000011869ddc8: 0000 c4c1 | 7b58 c4c4 | 4179 70dc | 0ec4 c17b | 58c3 c443 | 7d19 e301 | c4c1 7b58 | c3c4 4179 
  0x000000011869dde8: 70d3 0ec4 | c17b 58c2 | c5fb 58c1 | c5f9 70d1 | 0ec5 fb58 | c2c4 e37d | 19ca 01c5 | fb58 c2c5 
  0x000000011869de08: 7970 ca0e | c4c1 7b58 | c1c5 fb58 | c3c5 f970 | e30e c5fb | 58c4 c4e3 | 7d19 dc01 | c5fb 58c4 
  0x000000011869de28: c579 70c4 | 0ec4 c17b | 58c0 c5fb | 58c5 c5f9 | 70fd 0ec5 | fb58 c7c4 | e37d 19ef | 01c5 fb58 
  0x000000011869de48: c7c5 f970 | f70e c5fb | 58c6 c4c1 

  0x000000011869de54: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869de54: f97e c541 | 83c0 1090 | 9090 9090 | 453b c10f | 8c27 feff 

  0x000000011869de68: ;*invokespecial fromArray0Template {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x000000011869de68: ff4d 8b8f 

  0x000000011869de6c: ; ImmutableOopMap {rcx=Oop rdx=Oop [32]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)
  0x000000011869de6c: 3001 0000 

  0x000000011869de70: ;   {poll}
  0x000000011869de70: 4185 0144 | 3bc7 0f8c | cffd ffff 
 ;; B85: #	out( B87 B86 ) <- in( B84 )  Freq: 0.0775678
  0x000000011869de7c: 443b a424 | 9000 0000 | 448b 9424 | 9000 0000 | 440f 4cd6 | 453b c27d | 05e9 28fd | ffff c4e1 
  0x000000011869de9c: f96e c8c5 | f928 e044 | 3bc3 0f8d | 9efa ffff 
 ;; B89: #	out( B90 ) <- in( B88 )  Freq: 0.0387839
 ;; B90: #	out( B90 B91 ) <- in( B89 B90 ) Loop( B90-B90 inner post of N656) Freq: 0.387839
  0x000000011869deac: c4a1 7b10 

  0x000000011869deb0: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::broadcastBits@21 (line 3414)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::broadcast@5 (line 3423)
                      ; - jdk.incubator.vector.DoubleVector::broadcastTemplate@7 (line 491)
                      ; - jdk.incubator.vector.Double256Vector::broadcast@2 (line 125)
                      ; - jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x000000011869deb0: 44c2 10c4 | a17b 1054 | c110 c5fb 

  0x000000011869debc: ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::broadcastBits@18 (line 3414)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::broadcast@5 (line 3423)
                      ; - jdk.incubator.vector.DoubleVector::broadcastTemplate@7 (line 491)
                      ; - jdk.incubator.vector.Double256Vector::broadcast@2 (line 125)
                      ; - jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x000000011869debc: 5c44 2440 | c5eb 5c54 | 2450 c5fb | 59d8 c5eb 

  0x000000011869decc: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869decc: 59c0 c5f3 

  0x000000011869ded0: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869ded0: 58cb c5db 

  0x000000011869ded4: ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::broadcastBits@18 (line 3414)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::broadcast@5 (line 3423)
                      ; - jdk.incubator.vector.DoubleVector::broadcastTemplate@7 (line 491)
                      ; - jdk.incubator.vector.Double256Vector::broadcast@2 (line 125)
                      ; - jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x000000011869ded4: 58e0 41ff 

  0x000000011869ded8: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869ded8: c044 3bc3 | 7cce 9090 | e965 faff | ff45 33c9 | e983 f2ff | ff45 33e4 | e99b f2ff | ff33 c9e9 
  0x000000011869def8: b4f2 ffff 
 ;; B95: #	out( B13 ) <- in( B10 )  Freq: 0.000999984
  0x000000011869defc: 33ed 9090 | e9ea f2ff | ff48 896c | 2460 488b | f949 8bcc | 4c89 4c24 | 204d 8bc8 | 4533 d24c 
  0x000000011869df1c: 8954 2468 | e90e f3ff | ff45 33d2 | 4c89 5424 | 70e9 36f3 | ffff 4533 | e4e9 59f3 | ffff bebe 
  0x000000011869df3c: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869df3c: ffff ff48 | 8b6c 2420 | 4889 0c24 | 4889 7c24 | 08c5 fb10 | 4424 40c5 | fb11 4424 | 30c5 fb10 
  0x000000011869df5c: 4424 50c5 | fb11 4424 | 38c5 fb10 | 4424 58c5 | fb11 4424 | 404c 8964 

  0x000000011869df74: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869df74: 2458 9090 

  0x000000011869df78: ;   {runtime_call UncommonTrapBlob}
  0x000000011869df78: c5f8 77e8 

  0x000000011869df7c: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [88]=Oop [96]=Oop [104]=Oop [112]=Oop }
                      ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869df7c: c0c5 55f8 

  0x000000011869df80: ;   {external_word}
  0x000000011869df80: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011869df8c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011869df8c: e4f0 e8bd | 2fe4 f0f4 
 ;; B100: #	out( B101 ) <- in( B2 )  Freq: 9.99e-07
  0x000000011869df94: 4c8b c5be 

  0x000000011869df98: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869df98: 8dff ffff | 8b6c 2410 | c5fb 1044 | 2418 c5fb | 1104 24c5 | fb10 4424 | 40c5 fb11 | 4424 08c5 
  0x000000011869dfb8: fb10 4424 | 50c5 fb11 | 4424 10c5 | fb10 4424 | 58c5 fb11 | 4424 18c5 | fb10 4424 | 48c5 fb11 
  0x000000011869dfd8: 4424 2048 | 895c 2440 | 4c89 4424 | 484c 896c | 2450 4c89 

  0x000000011869dfec: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869dfec: 7424 5890 

  0x000000011869dff0: ;   {runtime_call UncommonTrapBlob}
  0x000000011869dff0: c5f8 77e8 

  0x000000011869dff4: ; ImmutableOopMap {[40]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop }
                      ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869dff4: 48c5 55f8 

  0x000000011869dff8: ;   {external_word}
  0x000000011869dff8: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011869e004: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011869e004: e4f0 e845 | 2fe4 f0f4 
 ;; B102: #	out( B101 ) <- in( B14 )  Freq: 9.98996e-07
  0x000000011869e00c: 4d8b c1eb | 864d 8bc1 | e97e ffff | ff4d 8bc1 | 9090 9090 | e972 ffff 

  0x000000011869e024: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869e024: ffbe deff 

  0x000000011869e028: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x000000011869e028: ffff 488b | 6c24 20c5 | fb10 4424 | 40c5 fb11 

  0x000000011869e038: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869e038: 4424 2090 

  0x000000011869e03c: ;   {runtime_call UncommonTrapBlob}
  0x000000011869e03c: c5f8 77e8 

  0x000000011869e040: ; ImmutableOopMap {rbp=Oop [96]=Oop [104]=Oop [128]=Oop [136]=Oop }
                      ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@282 (line 52)
  0x000000011869e040: fcc4 55f8 

  0x000000011869e044: ;   {external_word}
  0x000000011869e044: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011869e050: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011869e050: e4f0 e8f9 

  0x000000011869e054: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869e054: 2ee4 f0f4 
 ;; B106: #	out( N1834 ) <- in( B54 )  Freq: 1.55138e-07
  0x000000011869e058: bede ffff 

  0x000000011869e05c: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869e05c: ff48 8b6c | 2420 c5fb | 114c 2438 

  0x000000011869e068: ;   {runtime_call UncommonTrapBlob}
  0x000000011869e068: c5f8 77e8 

  0x000000011869e06c: ; ImmutableOopMap {rbp=Oop [104]=Oop [128]=Oop [136]=Oop }
                      ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869e06c: d0c4 55f8 

  0x000000011869e070: ;   {external_word}
  0x000000011869e070: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011869e07c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011869e07c: e4f0 e8cd 

  0x000000011869e080: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869e080: 2ee4 f0f4 
 ;; B107: #	out( N1834 ) <- in( B59 B56 B57 B58 )  Freq: 3.14395e-07
  0x000000011869e084: be76 ffff 

  0x000000011869e088: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869e088: ff48 8b6c | 2420 c5fb | 114c 2430 | c5fb 1164 

  0x000000011869e098: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869e098: 2438 9090 

  0x000000011869e09c: ;   {runtime_call UncommonTrapBlob}
  0x000000011869e09c: c5f8 77e8 

  0x000000011869e0a0: ; ImmutableOopMap {rbp=Oop [128]=Oop [136]=Oop }
                      ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@305 (line 55)
  0x000000011869e0a0: 9cc4 55f8 

  0x000000011869e0a4: ;   {external_word}
  0x000000011869e0a4: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011869e0b0: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011869e0b0: e4f0 e899 | 2ee4 f0f4 
 ;; B108: #	out( N1834 ) <- in( B63 )  Freq: 7.85984e-08
  0x000000011869e0b8: ;   {external_word}
  0x000000011869e0b8: 48bf 3125 | c209 0100 | 0000 4883 

  0x000000011869e0c4: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011869e0c4: e4f0 e885 | 2ee4 f0f4 
 ;; B109: #	out( N1834 ) <- in( B64 )  Freq: 7.85983e-08
  0x000000011869e0cc: ;   {external_word}
  0x000000011869e0cc: 48bf 3125 | c209 0100 | 0000 4883 

  0x000000011869e0d8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011869e0d8: e4f0 e871 | 2ee4 f0f4 
 ;; B110: #	out( N1834 ) <- in( B65 )  Freq: 7.85983e-08
  0x000000011869e0e0: ;   {external_word}
  0x000000011869e0e0: 48bf 3125 | c209 0100 | 0000 4883 

  0x000000011869e0ec: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011869e0ec: e4f0 e85d | 2ee4 f0f4 
 ;; B111: #	out( N1834 ) <- in( B66 )  Freq: 7.85982e-08
  0x000000011869e0f4: ;   {external_word}
  0x000000011869e0f4: 48bf 3125 | c209 0100 | 0000 4883 

  0x000000011869e100: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011869e100: e4f0 e849 | 2ee4 f0f4 
 ;; B112: #	out( N1834 ) <- in( B67 )  Freq: 7.85981e-08
  0x000000011869e108: ;   {external_word}
  0x000000011869e108: 48bf 3125 | c209 0100 | 0000 4883 

  0x000000011869e114: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011869e114: e4f0 e835 | 2ee4 f0f4 
 ;; B113: #	out( N1834 ) <- in( B68 )  Freq: 7.8598e-08
  0x000000011869e11c: ;   {external_word}
  0x000000011869e11c: 48bf 3125 | c209 0100 | 0000 4883 

  0x000000011869e128: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011869e128: e4f0 e821 | 2ee4 f0f4 
 ;; B114: #	out( N1834 ) <- in( B69 )  Freq: 7.85979e-08
  0x000000011869e130: ;   {external_word}
  0x000000011869e130: 48bf 3125 | c209 0100 | 0000 4883 

  0x000000011869e13c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011869e13c: e4f0 e80d | 2ee4 f0f4 
 ;; B115: #	out( N1834 ) <- in( B70 )  Freq: 7.85979e-08
  0x000000011869e144: ;   {external_word}
  0x000000011869e144: 48bf 3125 | c209 0100 | 0000 4883 

  0x000000011869e150: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011869e150: e4f0 e8f9 

  0x000000011869e154: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869e154: 2de4 f0f4 
 ;; B116: #	out( N1834 ) <- in( B34 )  Freq: 0.141333
  0x000000011869e158: bef6 ffff 

  0x000000011869e15c: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869e15c: ffc5 fe7f 

  0x000000011869e160: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869e160: 2c24 9090 

  0x000000011869e164: ;   {runtime_call UncommonTrapBlob}
  0x000000011869e164: c5f8 77e8 

  0x000000011869e168: ; ImmutableOopMap {}
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
  0x000000011869e168: d4c3 55f8 

  0x000000011869e16c: ;   {external_word}
  0x000000011869e16c: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011869e178: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011869e178: e4f0 e8d1 

  0x000000011869e17c: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869e17c: 2de4 f0f4 
 ;; B117: #	out( N1834 ) <- in( B40 )  Freq: 0.141333
  0x000000011869e180: bef6 ffff 

  0x000000011869e184: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869e184: ffc5 fe7f 

  0x000000011869e188: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869e188: 2c24 9090 

  0x000000011869e18c: ;   {runtime_call UncommonTrapBlob}
  0x000000011869e18c: c5f8 77e8 

  0x000000011869e190: ; ImmutableOopMap {}
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
  0x000000011869e190: acc3 55f8 

  0x000000011869e194: ;   {external_word}
  0x000000011869e194: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011869e1a0: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011869e1a0: e4f0 e8a9 | 2de4 f0f4 
 ;; B118: #	out( B120 ) <- in( B45 )  Freq: 0.000139504
  0x000000011869e1a8: eb00 488b | f0eb 05eb 

  0x000000011869e1b0: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869e1b0: 0048 8bf0 
 ;; B124: #	out( N1834 ) <- in( B123 B120 )  Freq: 0.000558014
  0x000000011869e1b4: c5f8 7748 | 81c4 3001 

  0x000000011869e1bc: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
                      ;   {runtime_call _rethrow_Java}
  0x000000011869e1bc: 0000 5de9 | dcac 49f8 
 ;; B125: #	out( N1834 ) <- in( B51 )  Freq: 1.57198e-07
  0x000000011869e1c4: bef6 ffff 

  0x000000011869e1c8: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
  0x000000011869e1c8: ff90 9090 

  0x000000011869e1cc: ;   {runtime_call UncommonTrapBlob}
  0x000000011869e1cc: c5f8 77e8 

  0x000000011869e1d0: ; ImmutableOopMap {}
                      ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@282 (line 52)
  0x000000011869e1d0: 6cc3 55f8 

  0x000000011869e1d4: ;   {external_word}
  0x000000011869e1d4: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011869e1e0: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011869e1e0: e4f0 e869 

  0x000000011869e1e4: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869e1e4: 2de4 f0f4 
 ;; B126: #	out( N1834 ) <- in( B53 )  Freq: 1.57198e-07
  0x000000011869e1e8: bef6 ffff 

  0x000000011869e1ec: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x000000011869e1ec: ff90 9090 

  0x000000011869e1f0: ;   {runtime_call UncommonTrapBlob}
  0x000000011869e1f0: c5f8 77e8 

  0x000000011869e1f4: ; ImmutableOopMap {}
                      ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869e1f4: 48c3 55f8 

  0x000000011869e1f8: ;   {external_word}
  0x000000011869e1f8: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011869e204: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011869e204: e4f0 e845 

  0x000000011869e208: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869e208: 2de4 f0f4 
 ;; B127: #	out( N1834 ) <- in( B72 )  Freq: 1.57197e-07
  0x000000011869e20c: bef6 ffff 

  0x000000011869e210: ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x000000011869e210: ffc4 e1f9 

  0x000000011869e214: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869e214: 7ec5 9090 

  0x000000011869e218: ;   {runtime_call UncommonTrapBlob}
  0x000000011869e218: c5f8 77e8 

  0x000000011869e21c: ; ImmutableOopMap {}
                      ;*putfield slope {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@360 (line 60)
  0x000000011869e21c: 20c3 55f8 

  0x000000011869e220: ;   {external_word}
  0x000000011869e220: 48bf 7777 | ba09 0100 | 0000 4883 

  0x000000011869e22c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011869e22c: e4f0 e81d 

  0x000000011869e230: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869e230: 2de4 f0f4 

  0x000000011869e234: ;   {internal_word}
  0x000000011869e234: 49ba 7ad9 | 6918 0100 | 0000 4d89 | 97e8 0300 

  0x000000011869e244: ;   {runtime_call SafepointBlob}
  0x000000011869e244: 00e9 d6cf | 55f8 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 
[Exception Handler]
  0x000000011869e260: ;   {no_reloc}
  0x000000011869e260: e9bb 6e4a | f8e8 0000 | 0000 4883 

  0x000000011869e26c: ;   {runtime_call DeoptimizationBlob}
  0x000000011869e26c: 2c24 05e9 | ecc5 55f8 | f4f4 f4f4 
[/MachCode]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x000000011869e278:   0x0000000161400080 a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
  0x000000011869e280:   0x000000011ff8c550 a 'java/lang/Class'{0x000000011ff8c550} = double
  0x000000011869e288:   0x0000000161400168 a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x0000000161400168}
  0x000000011869e290:   0x0000000161400178 a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
  0x000000011869e298:   0x00000001614001e8 a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x00000001614001e8}
  0x000000011869e2a0:   0x000000011ff58b48 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011ff58b48}
  0x000000011869e2a8:   0x00000001200a7938 a 'java/lang/Class'{0x00000001200a7938} = 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x000000011869e2b0:   0x000000026788fe18 {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
  0x000000011869e2b8:   0x0000000267b6f330 {method} {0x0000000267b6f330} 'reduceLanes' '(Ljdk/incubator/vector/VectorOperators$Associative;)D' in 'jdk/incubator/vector/Double256Vector'
  0x000000011869e2c0:   0x0000000267b1d348 {method} {0x0000000267b1d348} 'reduceLanesTemplate' '(Ljdk/incubator/vector/VectorOperators$Associative;)D' in 'jdk/incubator/vector/DoubleVector'
  0x000000011869e2c8:   0x0000000225d0e900 'org/jml/regression/linear/DoubleVectorLinearRegression'
  0x000000011869e2d0:   0x0000000225c40618 {type array double}
  0x000000011869e2d8:   0x0000000267b1ded0 {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x000000011869e2e0:   0x0000000267b710c0 {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
  0x000000011869e2e8:   0x0000000267b1f228 {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x000000011869e2f0:   0x0000000267b19378 {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x000000011869e2f8:   0x0000000267b181a0 {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x000000011869e300:   0x0000000267b72458 {method} {0x0000000267b72458} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
  0x000000011869e308:   0x0000000267b6f070 {method} {0x0000000267b6f070} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/Double256Vector;' in 'jdk/incubator/vector/Double256Vector'
  0x000000011869e310:   0x0000000267b17fb0 {method} {0x0000000267b17fb0} 'lanewiseTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x000000011869e318:   0x0000000267b153c0 {method} {0x0000000267b153c0} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;)I' in 'jdk/incubator/vector/DoubleVector'
  0x000000011869e320:   0x0000000267b36008 {method} {0x0000000267b36008} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;II)I' in 'jdk/incubator/vector/VectorOperators'
  0x000000011869e328:   0x0000000267a85e38 {method} {0x0000000267a85e38} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x000000011869e330:   0x0000000225d520a0 'jdk/incubator/vector/Double256Vector'
  0x000000011869e338:   0x000000011040aa78 {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
  0x000000011869e340:   0x0000000267b6d620 {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
  0x000000011869e348:   0x0000000267b18ef0 {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x000000011869e350:   0x0000000267b726c8 {method} {0x0000000267b726c8} 'broadcast' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
  0x000000011869e358:   0x0000000267b6dcc0 {method} {0x0000000267b6dcc0} 'broadcast' '(D)Ljdk/incubator/vector/Double256Vector;' in 'jdk/incubator/vector/Double256Vector'
  0x000000011869e360:   0x0000000267b176d0 {method} {0x0000000267b176d0} 'broadcastTemplate' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x000000011869e368:   0x0000000267b39810 {method} {0x0000000267b39810} 'broadcast' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
  0x000000011869e370:   0x0000000267b39730 {method} {0x0000000267b39730} 'broadcastBits' '(J)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
  0x000000011869e378:   0x0000000267b96280 {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x000000011869e380:   0x000000011015f0e0 {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
  0x000000011869e388:   0x0000000225d4eb10 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
  0x000000011869e390:   0x0000000267b3ef30 {method} {0x0000000267b3ef30} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  0x000000011869e398:   0x0000000225d5a3b0 'jdk/incubator/vector/VectorOperators$BinaryImpl'
  0x000000011869e3a0:   0x0000000267a862a0 {method} {0x0000000267a862a0} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x000000011869e3a8:   0x0000000267a85f10 {method} {0x0000000267a85f10} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x000000011869e3b0:   0x0000000267b33200 {method} {0x0000000267b33200} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x000000011869d09f offset=ffffffff bits=0):
PcDesc(pc=0x000000011869d0c6 offset=26 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869d0cd offset=2d bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d0d2 offset=32 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869d0d8 offset=38 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d0e7 offset=47 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869d0ec offset=4c bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d0f0 offset=50 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869d0f5 offset=55 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d0f9 offset=59 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869d0fe offset=5e bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d102 offset=62 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869d107 offset=67 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d10c offset=6c bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869d112 offset=72 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d117 offset=77 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869d11d offset=7d bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d122 offset=82 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869d128 offset=88 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d12d offset=8d bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869d167 offset=c7 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d170 offset=d0 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869d187 offset=e7 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d190 offset=f0 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869d1a7 offset=107 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d1b0 offset=110 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869d1e3 offset=143 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d1ec offset=14c bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869d258 offset=1b8 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d268 offset=1c8 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869d288 offset=1e8 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d293 offset=1f3 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869d2e9 offset=249 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d2f0 offset=250 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@6 (line 3120)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869d2f7 offset=257 bits=0):   jdk.incubator.vector.VectorOperators$OperatorImpl::opCode@1 (line 774)
   jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
PcDesc(pc=0x000000011869d35c offset=2bc bits=0):   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869d361 offset=2c1 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d365 offset=2c5 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869d36b offset=2cb bits=0):   jdk.incubator.vector.DoubleVector::fromArray@2 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869d37e offset=2de bits=0):   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869d387 offset=2e7 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d3b1 offset=311 bits=0):   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869d3b6 offset=316 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d3ba offset=31a bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869d3bf offset=31f bits=0):   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869d3cd offset=32d bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d3d4 offset=334 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)  reexecute=true
   Locals
    - l0: stack[32],oop
    - l1: stack[128],oop
    - l2: stack[136],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbp [10],int
    - l8: 0
    - l9: reg xmm1 [64],double
    - l10: stack[96],oop
    - l11: stack[104],oop
    - l12: 0
    - l13: stack[64],double
    - l14: 0
    - l15: stack[80],double
    - l16: 0
    - l17: stack[88],double
    - l18: 0
    - l19: stack[72],double
    - l20: obj[438]
    - l21: obj[439]
    - l22: empty
   Objects
    - 438: jdk.incubator.vector.Double256Vector reg xmm0 [48]Wrong location type 7
    - 439: jdk.incubator.vector.Double256Vector reg xmm4 [112]Wrong location type 7
PcDesc(pc=0x000000011869d3f1 offset=351 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d40e offset=36e bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869d425 offset=385 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d429 offset=389 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869d44a offset=3aa bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d44e offset=3ae bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869d472 offset=3d2 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869d483 offset=3e3 bits=0):   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869d48a offset=3ea bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d490 offset=3f0 bits=0):   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869d4ec offset=44c bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@0
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869d4f1 offset=451 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d4f5 offset=455 bits=0):   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869d4fb offset=45b bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869d50e offset=46e bits=0):   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869d515 offset=475 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d51b offset=47b bits=0):   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869d53f offset=49f bits=0):   jdk.incubator.vector.Double256Vector::vspecies@0 (line 86)
   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869d551 offset=4b1 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869d567 offset=4c7 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d56d offset=4cd bits=0):   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869d57e offset=4de bits=0):   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869d5b6 offset=516 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d5d0 offset=530 bits=5):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: reg rbp [10],oop
    - @5: obj[406]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x0000000161400168}
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: stack[32],oop
    - l1: stack[128],oop
    - l2: stack[136],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[152]
    - l8: 0
    - l9: stack[0],double
    - l10: stack[96],oop
    - l11: stack[104],oop
    - l12: 0
    - l13: stack[64],double
    - l14: 0
    - l15: stack[80],double
    - l16: 0
    - l17: stack[88],double
    - l18: 0
    - l19: stack[72],double
    - l20: obj[405]
    - l21: empty
    - l22: empty
   Objects
    - 405: jdk.incubator.vector.Double256Vector stack[224]Wrong location type 7
    - 406: jdk.incubator.vector.Double256Vector stack[256]Wrong location type 7
PcDesc(pc=0x000000011869d628 offset=588 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869d62d offset=58d bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d640 offset=5a0 bits=5):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: reg rbp [10],oop
    - @5: obj[390]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x0000000161400168}
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: stack[32],oop
    - l1: stack[128],oop
    - l2: stack[136],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[152]
    - l8: 0
    - l9: stack[56],double
    - l10: stack[96],oop
    - l11: stack[104],oop
    - l12: 0
    - l13: stack[64],double
    - l14: 0
    - l15: stack[80],double
    - l16: 0
    - l17: stack[88],double
    - l18: 0
    - l19: stack[72],double
    - l20: empty
    - l21: stack[120],oop
    - l22: obj[389]
   Objects
    - 389: jdk.incubator.vector.Double256Vector stack[224]Wrong location type 7
    - 390: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
PcDesc(pc=0x000000011869d69c offset=5fc bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d6b4 offset=614 bits=5):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: reg rbp [10],oop
    - @5: obj[370]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x0000000161400168}
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: stack[32],oop
    - l1: stack[128],oop
    - l2: stack[136],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[152]
    - l8: 0
    - l9: stack[0],double
    - l10: stack[96],oop
    - l11: stack[104],oop
    - l12: 0
    - l13: stack[64],double
    - l14: 0
    - l15: stack[80],double
    - l16: 0
    - l17: stack[88],double
    - l18: 0
    - l19: stack[72],double
    - l20: empty
    - l21: stack[120],oop
    - l22: obj[369]
   Objects
    - 369: jdk.incubator.vector.Double256Vector stack[224]Wrong location type 7
    - 370: jdk.incubator.vector.Double256Vector stack[256]Wrong location type 7
PcDesc(pc=0x000000011869d70f offset=66f bits=0):   jdk.incubator.vector.DoubleVector::fromArray@2 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869d714 offset=674 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d728 offset=688 bits=5):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: reg rbp [10],oop
    - @5: obj[426]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x0000000161400168}
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: stack[32],oop
    - l1: stack[128],oop
    - l2: stack[136],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[152]
    - l8: 0
    - l9: stack[56],double
    - l10: stack[96],oop
    - l11: stack[104],oop
    - l12: 0
    - l13: stack[64],double
    - l14: 0
    - l15: stack[80],double
    - l16: 0
    - l17: stack[88],double
    - l18: 0
    - l19: stack[72],double
    - l20: obj[425]
    - l21: empty
    - l22: empty
   Objects
    - 425: jdk.incubator.vector.Double256Vector stack[224]Wrong location type 7
    - 426: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
PcDesc(pc=0x000000011869d76b offset=6cb bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d771 offset=6d1 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869d77a offset=6da bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
PcDesc(pc=0x000000011869d77e offset=6de bits=0):   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869d7ac offset=70c bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d7b2 offset=712 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869d7cd offset=72d bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
PcDesc(pc=0x000000011869d7f7 offset=757 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d7fd offset=75d bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869d884 offset=7e4 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d88b offset=7eb bits=0):   jdk.incubator.vector.Double256Vector::broadcast@-1 (line 125)
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
PcDesc(pc=0x000000011869d893 offset=7f3 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d89a offset=7fa bits=0):   jdk.incubator.vector.DoubleVector::lanewise@-1 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
PcDesc(pc=0x000000011869d8a0 offset=800 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d8a6 offset=806 bits=0):   jdk.incubator.vector.DoubleVector::broadcastTemplate@-1 (line 490)
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 125)
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
PcDesc(pc=0x000000011869d8ae offset=80e bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d8b2 offset=812 bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::broadcastBits@21 (line 3414)
   jdk.incubator.vector.DoubleVector$DoubleSpecies::broadcast@5 (line 3423)
   jdk.incubator.vector.DoubleVector::broadcastTemplate@7 (line 491)
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 125)
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
PcDesc(pc=0x000000011869d8b6 offset=816 bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::broadcast@-1 (line 3423)
   jdk.incubator.vector.DoubleVector::broadcastTemplate@7 (line 491)
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 125)
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
PcDesc(pc=0x000000011869d915 offset=875 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d94a offset=8aa bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@205 (line 46)
PcDesc(pc=0x000000011869d94e offset=8ae bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869d969 offset=8c9 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d96f offset=8cf bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869d987 offset=8e7 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d988 offset=8e8 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869d98d offset=8ed bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
PcDesc(pc=0x000000011869d9d6 offset=936 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d9e0 offset=940 bits=0):   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[16]
    - @1: stack[144]
    - @2: NULL
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: stack[0],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[136],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[16]
    - l8: 0
    - l9: stack[24],double
    - l10: stack[32],oop
    - l11: stack[40],oop
    - l12: 0
    - l13: stack[48],double
    - l14: 0
    - l15: stack[56],double
    - l16: 0
    - l17: stack[64],double
    - l18: 0
    - l19: stack[72],double
    - l20: stack[112],oop
    - l21: stack[120],oop
    - l22: empty
PcDesc(pc=0x000000011869d9f4 offset=954 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869d9f9 offset=959 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869da62 offset=9c2 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869da6c offset=9cc bits=0):   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[20]
    - @1: stack[104]
    - @2: NULL
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: stack[8],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[20]
    - l8: 0
    - l9: stack[24],double
    - l10: stack[32],oop
    - l11: stack[40],oop
    - l12: 0
    - l13: stack[48],double
    - l14: 0
    - l15: stack[56],double
    - l16: 0
    - l17: stack[64],double
    - l18: 0
    - l19: stack[72],double
    - l20: empty
    - l21: stack[120],oop
    - l22: obj[803]
   Expression stack
    - @0: stack[112],oop
   Objects
    - 803: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
PcDesc(pc=0x000000011869da80 offset=9e0 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869da85 offset=9e5 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869db03 offset=a63 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869db0c offset=a6c bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[88],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x00000001614001e8}
    - @2: obj[531]
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[16]
    - l8: 0
    - l9: stack[24],double
    - l10: stack[32],oop
    - l11: stack[40],oop
    - l12: 0
    - l13: stack[48],double
    - l14: 0
    - l15: stack[56],double
    - l16: 0
    - l17: stack[64],double
    - l18: 0
    - l19: stack[72],double
    - l20: empty
    - l21: stack[80],oop
    - l22: obj[530]
   Objects
    - 530: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
    - 531: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
PcDesc(pc=0x000000011869db20 offset=a80 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869db25 offset=a85 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869db9b offset=afb bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869dba4 offset=b04 bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[80],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x00000001614001e8}
    - @2: obj[765]
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[16]
    - l8: 0
    - l9: stack[24],double
    - l10: stack[32],oop
    - l11: stack[40],oop
    - l12: 0
    - l13: stack[48],double
    - l14: 0
    - l15: stack[56],double
    - l16: 0
    - l17: stack[88],double
    - l18: 0
    - l19: stack[72],double
    - l20: obj[764]
    - l21: empty
    - l22: empty
   Objects
    - 764: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
    - 765: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
PcDesc(pc=0x000000011869dbdf offset=b3f bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869dbe3 offset=b43 bits=0):   java.util.Objects::checkIndex@0 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x000000011869dc15 offset=b75 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869dc35 offset=b95 bits=0):   java.util.Objects::checkIndex@-1 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x000000011869dc8f offset=bef bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869dc90 offset=bf0 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x000000011869dcad offset=c0d bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869dcb1 offset=c11 bits=0):   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x000000011869dce9 offset=c49 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869dced offset=c4d bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x000000011869dd06 offset=c66 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869dd0a offset=c6a bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x000000011869de57 offset=db7 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869de69 offset=dc9 bits=0):   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x000000011869de70 offset=dd0 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)  reexecute=true
   Locals
    - l0: stack[32],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r8 [16],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[64],double
    - l14: 0
    - l15: stack[80],double
    - l16: 0
    - l17: reg rax [0],double
    - l18: 0
    - l19: reg xmm0 [48],double
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x000000011869deb3 offset=e13 bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::broadcastBits@21 (line 3414)
   jdk.incubator.vector.DoubleVector$DoubleSpecies::broadcast@5 (line 3423)
   jdk.incubator.vector.DoubleVector::broadcastTemplate@7 (line 491)
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 125)
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
PcDesc(pc=0x000000011869dec0 offset=e20 bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::broadcastBits@18 (line 3414)
   jdk.incubator.vector.DoubleVector$DoubleSpecies::broadcast@5 (line 3423)
   jdk.incubator.vector.DoubleVector::broadcastTemplate@7 (line 491)
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 125)
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
PcDesc(pc=0x000000011869dece offset=e2e bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869ded2 offset=e32 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869ded6 offset=e36 bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::broadcastBits@18 (line 3414)
   jdk.incubator.vector.DoubleVector$DoubleSpecies::broadcast@5 (line 3423)
   jdk.incubator.vector.DoubleVector::broadcastTemplate@7 (line 491)
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 125)
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
PcDesc(pc=0x000000011869dedc offset=e3c bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869df3f offset=e9f bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869df76 offset=ed6 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869df80 offset=ee0 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[16]
    - l8: 0
    - l9: stack[24],double
    - l10: stack[96],oop
    - l11: stack[104],oop
    - l12: 0
    - l13: stack[48],double
    - l14: 0
    - l15: stack[56],double
    - l16: 0
    - l17: stack[64],double
    - l18: 0
    - l19: stack[72],double
    - l20: stack[112],oop
    - l21: stack[88],oop
    - l22: empty
PcDesc(pc=0x000000011869df9c offset=efc bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869dfef offset=f4f bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869dff8 offset=f58 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
   Locals
    - l0: stack[64],oop
    - l1: stack[72],oop
    - l2: stack[80],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbp [10],int
    - l8: 0
    - l9: stack[0],double
    - l10: stack[88],oop
    - l11: stack[48],oop
    - l12: 0
    - l13: stack[8],double
    - l14: 0
    - l15: stack[16],double
    - l16: 0
    - l17: stack[24],double
    - l18: 0
    - l19: stack[32],double
    - l20: stack[56],oop
    - l21: stack[40],oop
    - l22: empty
PcDesc(pc=0x000000011869e025 offset=f85 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869e02a offset=f8a bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
PcDesc(pc=0x000000011869e03b offset=f9b bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869e044 offset=fa4 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@282 (line 52)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[128],oop
    - l2: stack[136],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[16]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: stack[104],oop
    - l12: 0
    - l13: stack[32],double
    - l14: 0
    - l15: stack[80],double
    - l16: empty
    - l17: empty
    - l18: 0
    - l19: stack[72],double
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[88],double
    - @2: stack[96],oop
    - @3: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x00000001614001e8}
PcDesc(pc=0x000000011869e058 offset=fb8 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869e05d offset=fbd bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869e070 offset=fd0 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[128],oop
    - l2: stack[136],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[16]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[64],double
    - l14: 0
    - l15: stack[80],double
    - l16: 0
    - l17: stack[56],double
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[72],double
    - @2: stack[104],oop
    - @3: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x00000001614001e8}
PcDesc(pc=0x000000011869e084 offset=fe4 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869e089 offset=fe9 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869e09a offset=ffa bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869e0a4 offset=1004 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@305 (line 55)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[128],oop
    - l2: stack[136],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[16]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[64],double
    - l14: 0
    - l15: stack[80],double
    - l16: 0
    - l17: stack[48],double
    - l18: 0
    - l19: stack[56],double
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[16]
    - @1: stack[40]
PcDesc(pc=0x000000011869e158 offset=10b8 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869e15d offset=10bd bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869e162 offset=10c2 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869e16c offset=10cc bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: NULL
    - @1: obj[547]
   Objects
    - 547: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
PcDesc(pc=0x000000011869e180 offset=10e0 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869e185 offset=10e5 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869e18a offset=10ea bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869e194 offset=10f4 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: NULL
    - @1: obj[504]
   Objects
    - 504: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
PcDesc(pc=0x000000011869e1b4 offset=1114 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869e1bf offset=111f bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869e1c9 offset=1129 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
PcDesc(pc=0x000000011869e1d4 offset=1134 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@282 (line 52)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: NULL
    - @3: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x00000001614001e8}
PcDesc(pc=0x000000011869e1e8 offset=1148 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869e1ed offset=114d bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
PcDesc(pc=0x000000011869e1f8 offset=1158 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: NULL
    - @3: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x00000001614001e8}
PcDesc(pc=0x000000011869e20c offset=116c bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869e211 offset=1171 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
PcDesc(pc=0x000000011869e216 offset=1176 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869e220 offset=1180 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@360 (line 60)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: NULL
    - @1: 0
    - @2: reg rbp [10],double
PcDesc(pc=0x000000011869e234 offset=1194 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869e279 offset=11d9 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 20 OopMaps

ImmutableOopMap {[32]=Oop [96]=Oop [104]=Oop [112]=Oop [120]=Oop [128]=Oop [136]=Oop } pc offsets: 820 
ImmutableOopMap {rbp=Oop [32]=Oop [96]=Oop [104]=Oop [112]=Oop [128]=Oop [136]=Oop } pc offsets: 1328 
ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [96]=Oop [104]=Oop [120]=Oop [128]=Oop [136]=Oop } pc offsets: 1440 
ImmutableOopMap {rbp=Oop [32]=Oop [96]=Oop [104]=Oop [120]=Oop [128]=Oop [136]=Oop } pc offsets: 1556 
ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [96]=Oop [104]=Oop [112]=Oop [128]=Oop [136]=Oop } pc offsets: 1672 
ImmutableOopMap {rbp=Oop [0]=Oop [32]=Oop [40]=Oop [112]=Oop [120]=Oop [136]=Oop } pc offsets: 2368 
ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [40]=Oop [112]=Oop [120]=Oop } pc offsets: 2508 
ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [40]=Oop [80]=Oop [88]=Oop } pc offsets: 2668 
ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [40]=Oop [80]=Oop } pc offsets: 2820 
ImmutableOopMap {rcx=Oop rdx=Oop [32]=Oop } pc offsets: 3536 
ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [88]=Oop [96]=Oop [104]=Oop [112]=Oop } pc offsets: 3808 
ImmutableOopMap {[40]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop } pc offsets: 3928 
ImmutableOopMap {rbp=Oop [96]=Oop [104]=Oop [128]=Oop [136]=Oop } pc offsets: 4004 
ImmutableOopMap {rbp=Oop [104]=Oop [128]=Oop [136]=Oop } pc offsets: 4048 
ImmutableOopMap {rbp=Oop [128]=Oop [136]=Oop } pc offsets: 4100 
ImmutableOopMap {} pc offsets: 4300 4340 4404 4440 4480 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x000000011869d0c6 offset=26):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869d0cd offset=2d):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d0cd offset=2d):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d0cd offset=2d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d0d2 offset=32):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869d0d8 offset=38):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d0d8 offset=38):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d0d8 offset=38):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d0e7 offset=47):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869d0ec offset=4c):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d0ec offset=4c):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d0ec offset=4c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d0f0 offset=50):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869d0f5 offset=55):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d0f5 offset=55):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d0f5 offset=55):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d0f9 offset=59):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869d0fe offset=5e):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d0fe offset=5e):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d0fe offset=5e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d102 offset=62):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869d107 offset=67):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d107 offset=67):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d107 offset=67):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d10c offset=6c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869d112 offset=72):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d112 offset=72):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d112 offset=72):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d117 offset=77):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869d11d offset=7d):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d11d offset=7d):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d11d offset=7d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d122 offset=82):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869d128 offset=88):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d128 offset=88):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d128 offset=88):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d12d offset=8d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869d167 offset=c7):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d167 offset=c7):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d167 offset=c7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d170 offset=d0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869d187 offset=e7):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d187 offset=e7):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d187 offset=e7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d190 offset=f0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869d1a7 offset=107):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d1a7 offset=107):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d1a7 offset=107):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d1b0 offset=110):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869d1e3 offset=143):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d1e3 offset=143):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d1e3 offset=143):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d1ec offset=14c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869d258 offset=1b8):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d258 offset=1b8):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d258 offset=1b8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d268 offset=1c8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869d288 offset=1e8):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d288 offset=1e8):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d288 offset=1e8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d293 offset=1f3):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869d2e9 offset=249):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d2e9 offset=249):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d2e9 offset=249):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d2f0 offset=250):
   jdk.incubator.vector.DoubleVector::fromArray0Template@6 (line 3120)
ScopeDesc(pc=0x000000011869d2f0 offset=250):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011869d2f0 offset=250):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011869d2f0 offset=250):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869d2f7 offset=257):
   jdk.incubator.vector.VectorOperators$OperatorImpl::opCode@1 (line 774)
ScopeDesc(pc=0x000000011869d2f7 offset=257):
   jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
ScopeDesc(pc=0x000000011869d2f7 offset=257):
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
ScopeDesc(pc=0x000000011869d2f7 offset=257):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
ScopeDesc(pc=0x000000011869d2f7 offset=257):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869d2f7 offset=257):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869d2f7 offset=257):
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
ScopeDesc(pc=0x000000011869d2f7 offset=257):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x000000011869d2f7 offset=257):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
ScopeDesc(pc=0x000000011869d35c offset=2bc):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011869d35c offset=2bc):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011869d35c offset=2bc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869d361 offset=2c1):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d361 offset=2c1):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d361 offset=2c1):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d365 offset=2c5):
   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
ScopeDesc(pc=0x000000011869d365 offset=2c5):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011869d365 offset=2c5):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011869d365 offset=2c5):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869d36b offset=2cb):
   jdk.incubator.vector.DoubleVector::fromArray@2 (line 2562)
ScopeDesc(pc=0x000000011869d36b offset=2cb):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869d37e offset=2de):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011869d37e offset=2de):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011869d37e offset=2de):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869d387 offset=2e7):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d387 offset=2e7):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d387 offset=2e7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d3b1 offset=311):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011869d3b1 offset=311):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011869d3b1 offset=311):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869d3b6 offset=316):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d3b6 offset=316):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d3b6 offset=316):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d3ba offset=31a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869d3bf offset=31f):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011869d3bf offset=31f):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011869d3bf offset=31f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869d3cd offset=32d):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d3cd offset=32d):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d3cd offset=32d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d3d4 offset=334):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)  reexecute=true
   Locals
    - l0: stack[32],oop
    - l1: stack[128],oop
    - l2: stack[136],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbp [10],int
    - l8: 0
    - l9: reg xmm1 [64],double
    - l10: stack[96],oop
    - l11: stack[104],oop
    - l12: 0
    - l13: stack[64],double
    - l14: 0
    - l15: stack[80],double
    - l16: 0
    - l17: stack[88],double
    - l18: 0
    - l19: stack[72],double
    - l20: obj[438]
    - l21: obj[439]
    - l22: empty
   Objects
    - 438: jdk.incubator.vector.Double256Vector reg xmm0 [48]Wrong location type 7
    - 439: jdk.incubator.vector.Double256Vector reg xmm4 [112]Wrong location type 7
ScopeDesc(pc=0x000000011869d3f1 offset=351):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d3f1 offset=351):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d3f1 offset=351):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d40e offset=36e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869d425 offset=385):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d425 offset=385):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d425 offset=385):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d429 offset=389):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869d44a offset=3aa):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d44a offset=3aa):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d44a offset=3aa):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d44e offset=3ae):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869d472 offset=3d2):
   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
ScopeDesc(pc=0x000000011869d472 offset=3d2):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011869d472 offset=3d2):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011869d472 offset=3d2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869d483 offset=3e3):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011869d483 offset=3e3):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011869d483 offset=3e3):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869d48a offset=3ea):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d48a offset=3ea):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d48a offset=3ea):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d490 offset=3f0):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011869d490 offset=3f0):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011869d490 offset=3f0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869d4ec offset=44c):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@0
ScopeDesc(pc=0x000000011869d4ec offset=44c):
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
ScopeDesc(pc=0x000000011869d4ec offset=44c):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011869d4ec offset=44c):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011869d4ec offset=44c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869d4f1 offset=451):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d4f1 offset=451):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d4f1 offset=451):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d4f5 offset=455):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011869d4f5 offset=455):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011869d4f5 offset=455):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869d4fb offset=45b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869d50e offset=46e):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011869d50e offset=46e):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011869d50e offset=46e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869d515 offset=475):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d515 offset=475):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d515 offset=475):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d51b offset=47b):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011869d51b offset=47b):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011869d51b offset=47b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869d53f offset=49f):
   jdk.incubator.vector.Double256Vector::vspecies@0 (line 86)
ScopeDesc(pc=0x000000011869d53f offset=49f):
   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
ScopeDesc(pc=0x000000011869d53f offset=49f):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011869d53f offset=49f):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011869d53f offset=49f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869d551 offset=4b1):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869d567 offset=4c7):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d567 offset=4c7):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d567 offset=4c7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d56d offset=4cd):
   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
ScopeDesc(pc=0x000000011869d56d offset=4cd):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869d57e offset=4de):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011869d57e offset=4de):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011869d57e offset=4de):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869d5b6 offset=516):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d5b6 offset=516):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d5b6 offset=516):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d5d0 offset=530):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: reg rbp [10],oop
    - @5: obj[406]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x0000000161400168}
ScopeDesc(pc=0x000000011869d5d0 offset=530):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011869d5d0 offset=530):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011869d5d0 offset=530):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011869d5d0 offset=530):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: stack[32],oop
    - l1: stack[128],oop
    - l2: stack[136],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[152]
    - l8: 0
    - l9: stack[0],double
    - l10: stack[96],oop
    - l11: stack[104],oop
    - l12: 0
    - l13: stack[64],double
    - l14: 0
    - l15: stack[80],double
    - l16: 0
    - l17: stack[88],double
    - l18: 0
    - l19: stack[72],double
    - l20: obj[405]
    - l21: empty
    - l22: empty
   Objects
    - 405: jdk.incubator.vector.Double256Vector stack[224]Wrong location type 7
    - 406: jdk.incubator.vector.Double256Vector stack[256]Wrong location type 7
ScopeDesc(pc=0x000000011869d628 offset=588):
   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
ScopeDesc(pc=0x000000011869d628 offset=588):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011869d628 offset=588):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011869d628 offset=588):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869d62d offset=58d):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d62d offset=58d):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d62d offset=58d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d640 offset=5a0):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: reg rbp [10],oop
    - @5: obj[390]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x0000000161400168}
ScopeDesc(pc=0x000000011869d640 offset=5a0):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011869d640 offset=5a0):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011869d640 offset=5a0):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011869d640 offset=5a0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: stack[32],oop
    - l1: stack[128],oop
    - l2: stack[136],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[152]
    - l8: 0
    - l9: stack[56],double
    - l10: stack[96],oop
    - l11: stack[104],oop
    - l12: 0
    - l13: stack[64],double
    - l14: 0
    - l15: stack[80],double
    - l16: 0
    - l17: stack[88],double
    - l18: 0
    - l19: stack[72],double
    - l20: empty
    - l21: stack[120],oop
    - l22: obj[389]
   Objects
    - 389: jdk.incubator.vector.Double256Vector stack[224]Wrong location type 7
    - 390: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
ScopeDesc(pc=0x000000011869d69c offset=5fc):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d69c offset=5fc):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d69c offset=5fc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d6b4 offset=614):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: reg rbp [10],oop
    - @5: obj[370]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x0000000161400168}
ScopeDesc(pc=0x000000011869d6b4 offset=614):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011869d6b4 offset=614):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011869d6b4 offset=614):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011869d6b4 offset=614):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: stack[32],oop
    - l1: stack[128],oop
    - l2: stack[136],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[152]
    - l8: 0
    - l9: stack[0],double
    - l10: stack[96],oop
    - l11: stack[104],oop
    - l12: 0
    - l13: stack[64],double
    - l14: 0
    - l15: stack[80],double
    - l16: 0
    - l17: stack[88],double
    - l18: 0
    - l19: stack[72],double
    - l20: empty
    - l21: stack[120],oop
    - l22: obj[369]
   Objects
    - 369: jdk.incubator.vector.Double256Vector stack[224]Wrong location type 7
    - 370: jdk.incubator.vector.Double256Vector stack[256]Wrong location type 7
ScopeDesc(pc=0x000000011869d70f offset=66f):
   jdk.incubator.vector.DoubleVector::fromArray@2 (line 2562)
ScopeDesc(pc=0x000000011869d70f offset=66f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869d714 offset=674):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d714 offset=674):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d714 offset=674):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d728 offset=688):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: reg rbp [10],oop
    - @5: obj[426]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x0000000161400168}
ScopeDesc(pc=0x000000011869d728 offset=688):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011869d728 offset=688):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011869d728 offset=688):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x000000011869d728 offset=688):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: stack[32],oop
    - l1: stack[128],oop
    - l2: stack[136],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[152]
    - l8: 0
    - l9: stack[56],double
    - l10: stack[96],oop
    - l11: stack[104],oop
    - l12: 0
    - l13: stack[64],double
    - l14: 0
    - l15: stack[80],double
    - l16: 0
    - l17: stack[88],double
    - l18: 0
    - l19: stack[72],double
    - l20: obj[425]
    - l21: empty
    - l22: empty
   Objects
    - 425: jdk.incubator.vector.Double256Vector stack[224]Wrong location type 7
    - 426: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
ScopeDesc(pc=0x000000011869d76b offset=6cb):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d76b offset=6cb):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d76b offset=6cb):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d771 offset=6d1):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869d77a offset=6da):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
ScopeDesc(pc=0x000000011869d77e offset=6de):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011869d77e offset=6de):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011869d77e offset=6de):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869d7ac offset=70c):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d7ac offset=70c):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d7ac offset=70c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d7b2 offset=712):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869d7cd offset=72d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
ScopeDesc(pc=0x000000011869d7f7 offset=757):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d7f7 offset=757):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d7f7 offset=757):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d7fd offset=75d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869d884 offset=7e4):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d884 offset=7e4):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d884 offset=7e4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d88b offset=7eb):
   jdk.incubator.vector.Double256Vector::broadcast@-1 (line 125)
ScopeDesc(pc=0x000000011869d88b offset=7eb):
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
ScopeDesc(pc=0x000000011869d88b offset=7eb):
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
ScopeDesc(pc=0x000000011869d88b offset=7eb):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x000000011869d88b offset=7eb):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
ScopeDesc(pc=0x000000011869d893 offset=7f3):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d893 offset=7f3):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d893 offset=7f3):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d89a offset=7fa):
   jdk.incubator.vector.DoubleVector::lanewise@-1 (line 714)
ScopeDesc(pc=0x000000011869d89a offset=7fa):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x000000011869d89a offset=7fa):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
ScopeDesc(pc=0x000000011869d8a0 offset=800):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d8a0 offset=800):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d8a0 offset=800):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d8a6 offset=806):
   jdk.incubator.vector.DoubleVector::broadcastTemplate@-1 (line 490)
ScopeDesc(pc=0x000000011869d8a6 offset=806):
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 125)
ScopeDesc(pc=0x000000011869d8a6 offset=806):
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
ScopeDesc(pc=0x000000011869d8a6 offset=806):
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
ScopeDesc(pc=0x000000011869d8a6 offset=806):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x000000011869d8a6 offset=806):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
ScopeDesc(pc=0x000000011869d8ae offset=80e):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d8ae offset=80e):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d8ae offset=80e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d8b2 offset=812):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::broadcastBits@21 (line 3414)
ScopeDesc(pc=0x000000011869d8b2 offset=812):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::broadcast@5 (line 3423)
ScopeDesc(pc=0x000000011869d8b2 offset=812):
   jdk.incubator.vector.DoubleVector::broadcastTemplate@7 (line 491)
ScopeDesc(pc=0x000000011869d8b2 offset=812):
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 125)
ScopeDesc(pc=0x000000011869d8b2 offset=812):
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
ScopeDesc(pc=0x000000011869d8b2 offset=812):
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
ScopeDesc(pc=0x000000011869d8b2 offset=812):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x000000011869d8b2 offset=812):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
ScopeDesc(pc=0x000000011869d8b6 offset=816):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::broadcast@-1 (line 3423)
ScopeDesc(pc=0x000000011869d8b6 offset=816):
   jdk.incubator.vector.DoubleVector::broadcastTemplate@7 (line 491)
ScopeDesc(pc=0x000000011869d8b6 offset=816):
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 125)
ScopeDesc(pc=0x000000011869d8b6 offset=816):
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
ScopeDesc(pc=0x000000011869d8b6 offset=816):
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
ScopeDesc(pc=0x000000011869d8b6 offset=816):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x000000011869d8b6 offset=816):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
ScopeDesc(pc=0x000000011869d915 offset=875):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d915 offset=875):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d915 offset=875):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d94a offset=8aa):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@205 (line 46)
ScopeDesc(pc=0x000000011869d94e offset=8ae):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869d969 offset=8c9):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d969 offset=8c9):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d969 offset=8c9):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d96f offset=8cf):
   jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
ScopeDesc(pc=0x000000011869d96f offset=8cf):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011869d96f offset=8cf):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011869d96f offset=8cf):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869d987 offset=8e7):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d987 offset=8e7):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d987 offset=8e7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d988 offset=8e8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869d98d offset=8ed):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869d98d offset=8ed):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869d98d offset=8ed):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869d98d offset=8ed):
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
ScopeDesc(pc=0x000000011869d98d offset=8ed):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x000000011869d98d offset=8ed):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
ScopeDesc(pc=0x000000011869d9d6 offset=936):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d9d6 offset=936):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d9d6 offset=936):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d9e0 offset=940):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[16]
    - @1: stack[144]
    - @2: NULL
ScopeDesc(pc=0x000000011869d9e0 offset=940):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011869d9e0 offset=940):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: stack[0],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011869d9e0 offset=940):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[136],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[16]
    - l8: 0
    - l9: stack[24],double
    - l10: stack[32],oop
    - l11: stack[40],oop
    - l12: 0
    - l13: stack[48],double
    - l14: 0
    - l15: stack[56],double
    - l16: 0
    - l17: stack[64],double
    - l18: 0
    - l19: stack[72],double
    - l20: stack[112],oop
    - l21: stack[120],oop
    - l22: empty
ScopeDesc(pc=0x000000011869d9f4 offset=954):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869d9f4 offset=954):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869d9f4 offset=954):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869d9f9 offset=959):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869da62 offset=9c2):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869da62 offset=9c2):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869da62 offset=9c2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869da6c offset=9cc):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[20]
    - @1: stack[104]
    - @2: NULL
ScopeDesc(pc=0x000000011869da6c offset=9cc):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x000000011869da6c offset=9cc):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
    - l1: stack[8],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x000000011869da6c offset=9cc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[20]
    - l8: 0
    - l9: stack[24],double
    - l10: stack[32],oop
    - l11: stack[40],oop
    - l12: 0
    - l13: stack[48],double
    - l14: 0
    - l15: stack[56],double
    - l16: 0
    - l17: stack[64],double
    - l18: 0
    - l19: stack[72],double
    - l20: empty
    - l21: stack[120],oop
    - l22: obj[803]
   Expression stack
    - @0: stack[112],oop
   Objects
    - 803: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
ScopeDesc(pc=0x000000011869da80 offset=9e0):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869da80 offset=9e0):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869da80 offset=9e0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869da85 offset=9e5):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869db03 offset=a63):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869db03 offset=a63):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869db03 offset=a63):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869db0c offset=a6c):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[88],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x00000001614001e8}
    - @2: obj[531]
ScopeDesc(pc=0x000000011869db0c offset=a6c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[16]
    - l8: 0
    - l9: stack[24],double
    - l10: stack[32],oop
    - l11: stack[40],oop
    - l12: 0
    - l13: stack[48],double
    - l14: 0
    - l15: stack[56],double
    - l16: 0
    - l17: stack[64],double
    - l18: 0
    - l19: stack[72],double
    - l20: empty
    - l21: stack[80],oop
    - l22: obj[530]
   Objects
    - 530: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
    - 531: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
ScopeDesc(pc=0x000000011869db20 offset=a80):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869db20 offset=a80):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869db20 offset=a80):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869db25 offset=a85):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869db9b offset=afb):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869db9b offset=afb):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869db9b offset=afb):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869dba4 offset=b04):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[80],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x00000001614001e8}
    - @2: obj[765]
ScopeDesc(pc=0x000000011869dba4 offset=b04):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[16]
    - l8: 0
    - l9: stack[24],double
    - l10: stack[32],oop
    - l11: stack[40],oop
    - l12: 0
    - l13: stack[48],double
    - l14: 0
    - l15: stack[56],double
    - l16: 0
    - l17: stack[88],double
    - l18: 0
    - l19: stack[72],double
    - l20: obj[764]
    - l21: empty
    - l22: empty
   Objects
    - 764: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
    - 765: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
ScopeDesc(pc=0x000000011869dbdf offset=b3f):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869dbdf offset=b3f):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869dbdf offset=b3f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869dbe3 offset=b43):
   java.util.Objects::checkIndex@0 (line 359)
ScopeDesc(pc=0x000000011869dbe3 offset=b43):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011869dbe3 offset=b43):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011869dbe3 offset=b43):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x000000011869dc15 offset=b75):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869dc15 offset=b75):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869dc15 offset=b75):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869dc35 offset=b95):
   java.util.Objects::checkIndex@-1 (line 359)
ScopeDesc(pc=0x000000011869dc35 offset=b95):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x000000011869dc35 offset=b95):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x000000011869dc35 offset=b95):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x000000011869dc8f offset=bef):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869dc8f offset=bef):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869dc8f offset=bef):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869dc90 offset=bf0):
   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
ScopeDesc(pc=0x000000011869dc90 offset=bf0):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011869dc90 offset=bf0):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011869dc90 offset=bf0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x000000011869dcad offset=c0d):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869dcad offset=c0d):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869dcad offset=c0d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869dcb1 offset=c11):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011869dcb1 offset=c11):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011869dcb1 offset=c11):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x000000011869dce9 offset=c49):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869dce9 offset=c49):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869dce9 offset=c49):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869dced offset=c4d):
   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
ScopeDesc(pc=0x000000011869dced offset=c4d):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011869dced offset=c4d):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011869dced offset=c4d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x000000011869dd06 offset=c66):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869dd06 offset=c66):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869dd06 offset=c66):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869dd0a offset=c6a):
   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
ScopeDesc(pc=0x000000011869dd0a offset=c6a):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011869dd0a offset=c6a):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011869dd0a offset=c6a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x000000011869de57 offset=db7):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869de57 offset=db7):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869de57 offset=db7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869de69 offset=dc9):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011869de69 offset=dc9):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011869de69 offset=dc9):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x000000011869de70 offset=dd0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)  reexecute=true
   Locals
    - l0: stack[32],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r8 [16],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[64],double
    - l14: 0
    - l15: stack[80],double
    - l16: 0
    - l17: reg rax [0],double
    - l18: 0
    - l19: reg xmm0 [48],double
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x000000011869deb3 offset=e13):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::broadcastBits@21 (line 3414)
ScopeDesc(pc=0x000000011869deb3 offset=e13):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::broadcast@5 (line 3423)
ScopeDesc(pc=0x000000011869deb3 offset=e13):
   jdk.incubator.vector.DoubleVector::broadcastTemplate@7 (line 491)
ScopeDesc(pc=0x000000011869deb3 offset=e13):
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 125)
ScopeDesc(pc=0x000000011869deb3 offset=e13):
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
ScopeDesc(pc=0x000000011869deb3 offset=e13):
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
ScopeDesc(pc=0x000000011869deb3 offset=e13):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x000000011869deb3 offset=e13):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
ScopeDesc(pc=0x000000011869dec0 offset=e20):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::broadcastBits@18 (line 3414)
ScopeDesc(pc=0x000000011869dec0 offset=e20):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::broadcast@5 (line 3423)
ScopeDesc(pc=0x000000011869dec0 offset=e20):
   jdk.incubator.vector.DoubleVector::broadcastTemplate@7 (line 491)
ScopeDesc(pc=0x000000011869dec0 offset=e20):
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 125)
ScopeDesc(pc=0x000000011869dec0 offset=e20):
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
ScopeDesc(pc=0x000000011869dec0 offset=e20):
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
ScopeDesc(pc=0x000000011869dec0 offset=e20):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x000000011869dec0 offset=e20):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
ScopeDesc(pc=0x000000011869dece offset=e2e):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869dece offset=e2e):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869dece offset=e2e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869ded2 offset=e32):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869ded6 offset=e36):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::broadcastBits@18 (line 3414)
ScopeDesc(pc=0x000000011869ded6 offset=e36):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::broadcast@5 (line 3423)
ScopeDesc(pc=0x000000011869ded6 offset=e36):
   jdk.incubator.vector.DoubleVector::broadcastTemplate@7 (line 491)
ScopeDesc(pc=0x000000011869ded6 offset=e36):
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 125)
ScopeDesc(pc=0x000000011869ded6 offset=e36):
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
ScopeDesc(pc=0x000000011869ded6 offset=e36):
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
ScopeDesc(pc=0x000000011869ded6 offset=e36):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x000000011869ded6 offset=e36):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
ScopeDesc(pc=0x000000011869dedc offset=e3c):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869dedc offset=e3c):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869dedc offset=e3c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869df3f offset=e9f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869df76 offset=ed6):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869df76 offset=ed6):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869df76 offset=ed6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869df80 offset=ee0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[16]
    - l8: 0
    - l9: stack[24],double
    - l10: stack[96],oop
    - l11: stack[104],oop
    - l12: 0
    - l13: stack[48],double
    - l14: 0
    - l15: stack[56],double
    - l16: 0
    - l17: stack[64],double
    - l18: 0
    - l19: stack[72],double
    - l20: stack[112],oop
    - l21: stack[88],oop
    - l22: empty
ScopeDesc(pc=0x000000011869df9c offset=efc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869dfef offset=f4f):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869dfef offset=f4f):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869dfef offset=f4f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869dff8 offset=f58):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
   Locals
    - l0: stack[64],oop
    - l1: stack[72],oop
    - l2: stack[80],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbp [10],int
    - l8: 0
    - l9: stack[0],double
    - l10: stack[88],oop
    - l11: stack[48],oop
    - l12: 0
    - l13: stack[8],double
    - l14: 0
    - l15: stack[16],double
    - l16: 0
    - l17: stack[24],double
    - l18: 0
    - l19: stack[32],double
    - l20: stack[56],oop
    - l21: stack[40],oop
    - l22: empty
ScopeDesc(pc=0x000000011869e025 offset=f85):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869e02a offset=f8a):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869e02a offset=f8a):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869e02a offset=f8a):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869e02a offset=f8a):
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
ScopeDesc(pc=0x000000011869e02a offset=f8a):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x000000011869e02a offset=f8a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
ScopeDesc(pc=0x000000011869e03b offset=f9b):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869e03b offset=f9b):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869e03b offset=f9b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869e044 offset=fa4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@282 (line 52)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[128],oop
    - l2: stack[136],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[16]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: stack[104],oop
    - l12: 0
    - l13: stack[32],double
    - l14: 0
    - l15: stack[80],double
    - l16: empty
    - l17: empty
    - l18: 0
    - l19: stack[72],double
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[88],double
    - @2: stack[96],oop
    - @3: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x00000001614001e8}
ScopeDesc(pc=0x000000011869e058 offset=fb8):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869e058 offset=fb8):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869e058 offset=fb8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869e05d offset=fbd):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869e070 offset=fd0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[128],oop
    - l2: stack[136],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[16]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[64],double
    - l14: 0
    - l15: stack[80],double
    - l16: 0
    - l17: stack[56],double
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[72],double
    - @2: stack[104],oop
    - @3: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x00000001614001e8}
ScopeDesc(pc=0x000000011869e084 offset=fe4):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869e084 offset=fe4):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869e084 offset=fe4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869e089 offset=fe9):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869e09a offset=ffa):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869e09a offset=ffa):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869e09a offset=ffa):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869e0a4 offset=1004):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@305 (line 55)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[128],oop
    - l2: stack[136],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[16]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[64],double
    - l14: 0
    - l15: stack[80],double
    - l16: 0
    - l17: stack[48],double
    - l18: 0
    - l19: stack[56],double
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[16]
    - @1: stack[40]
ScopeDesc(pc=0x000000011869e158 offset=10b8):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869e158 offset=10b8):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869e158 offset=10b8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869e15d offset=10bd):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869e162 offset=10c2):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869e162 offset=10c2):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869e162 offset=10c2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869e16c offset=10cc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@245 (line 48)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: NULL
    - @1: obj[547]
   Objects
    - 547: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
ScopeDesc(pc=0x000000011869e180 offset=10e0):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869e180 offset=10e0):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869e180 offset=10e0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869e185 offset=10e5):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869e18a offset=10ea):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869e18a offset=10ea):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869e18a offset=10ea):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869e194 offset=10f4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@259 (line 49)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: NULL
    - @1: obj[504]
   Objects
    - 504: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
ScopeDesc(pc=0x000000011869e1b4 offset=1114):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869e1bf offset=111f):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869e1bf offset=111f):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869e1bf offset=111f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869e1c9 offset=1129):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@199 (line 46)
ScopeDesc(pc=0x000000011869e1d4 offset=1134):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@282 (line 52)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: NULL
    - @3: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x00000001614001e8}
ScopeDesc(pc=0x000000011869e1e8 offset=1148):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869e1e8 offset=1148):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869e1e8 offset=1148):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869e1ed offset=114d):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869e1ed offset=114d):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869e1ed offset=114d):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869e1ed offset=114d):
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
ScopeDesc(pc=0x000000011869e1ed offset=114d):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x000000011869e1ed offset=114d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
ScopeDesc(pc=0x000000011869e1f8 offset=1158):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: NULL
    - @3: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x00000001614001e8}
ScopeDesc(pc=0x000000011869e20c offset=116c):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869e20c offset=116c):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869e20c offset=116c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869e211 offset=1171):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
ScopeDesc(pc=0x000000011869e211 offset=1171):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869e211 offset=1171):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869e211 offset=1171):
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
ScopeDesc(pc=0x000000011869e211 offset=1171):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x000000011869e211 offset=1171):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
ScopeDesc(pc=0x000000011869e216 offset=1176):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869e216 offset=1176):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869e216 offset=1176):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869e220 offset=1180):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@360 (line 60)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: NULL
    - @1: 0
    - @2: reg rbp [10],double
ScopeDesc(pc=0x000000011869e234 offset=1194):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869e234 offset=1194):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869e234 offset=1194):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x000000011869cf08: 6400
relocInfo@0x000000011869cf08 [type=6(runtime_call) addr=0x000000011869d0a0 offset=0 format=1] | [destination=0x0000000109677fa0]
         @0x000000011869cf0a: f004ccc0
relocInfo@0x000000011869cf0c [type=12(metadata) addr=0x000000011869d160 offset=192 format=3 data=4] | [metadata_addr=0x000000011869e2c8 *=0x0000000225d0e900 offset=0]metadata_value=0x0000000225d0e900: 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011869cf0e: f005cc20
relocInfo@0x000000011869cf10 [type=12(metadata) addr=0x000000011869d180 offset=32 format=3 data=5] | [metadata_addr=0x000000011869e2d0 *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011869cf12: f005cc20
relocInfo@0x000000011869cf14 [type=12(metadata) addr=0x000000011869d1a0 offset=32 format=3 data=5] | [metadata_addr=0x000000011869e2d0 *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011869cf16: c010
relocInfo@0x000000011869cf16 [type=12(metadata) addr=0x000000011869d1b0 offset=16] | [metadata_addr=0x000000011869d1b2 *=0x0000000225d4ce30 offset=0]metadata_value=0x0000000225d4ce30: 'jdk/incubator/vector/DoubleVector'
         @0x000000011869cf18: f005cd6e
relocInfo@0x000000011869cf1a [type=12(metadata) addr=0x000000011869d31e offset=366 format=3 data=5] | [metadata_addr=0x000000011869e2d0 *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011869cf1c: f011cc85
relocInfo@0x000000011869cf1e [type=12(metadata) addr=0x000000011869d3a3 offset=133 format=3 data=17] | [metadata_addr=0x000000011869e330 *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011869cf20: a031
relocInfo@0x000000011869cf20 [type=10(poll) addr=0x000000011869d3d4 offset=49]
         @0x000000011869cf22: f011cc8c
relocInfo@0x000000011869cf24 [type=12(metadata) addr=0x000000011869d460 offset=140 format=3 data=17] | [metadata_addr=0x000000011869e330 *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011869cf26: f005cc4e
relocInfo@0x000000011869cf28 [type=12(metadata) addr=0x000000011869d4ae offset=78 format=3 data=5] | [metadata_addr=0x000000011869e2d0 *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011869cf2a: f011cc83
relocInfo@0x000000011869cf2c [type=12(metadata) addr=0x000000011869d531 offset=131 format=3 data=17] | [metadata_addr=0x000000011869e330 *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011869cf2e: f011cc2f
relocInfo@0x000000011869cf30 [type=12(metadata) addr=0x000000011869d560 offset=47 format=3 data=17] | [metadata_addr=0x000000011869e330 *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011869cf32: c056
relocInfo@0x000000011869cf32 [type=12(metadata) addr=0x000000011869d5b6 offset=86] | [metadata_addr=0x000000011869d5b8 *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011869cf34: 6415
relocInfo@0x000000011869cf34 [type=6(runtime_call) addr=0x000000011869d5cb offset=21 format=1] | [destination=0x0000000110b391a0]
         @0x000000011869cf36: c062
relocInfo@0x000000011869cf36 [type=12(metadata) addr=0x000000011869d62d offset=98] | [metadata_addr=0x000000011869d62f *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011869cf38: 640e
relocInfo@0x000000011869cf38 [type=6(runtime_call) addr=0x000000011869d63b offset=14 format=1] | [destination=0x0000000110b394a0]
         @0x000000011869cf3a: c061
relocInfo@0x000000011869cf3a [type=12(metadata) addr=0x000000011869d69c offset=97] | [metadata_addr=0x000000011869d69e *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011869cf3c: 6413
relocInfo@0x000000011869cf3c [type=6(runtime_call) addr=0x000000011869d6af offset=19 format=1] | [destination=0x0000000110b391a0]
         @0x000000011869cf3e: c065
relocInfo@0x000000011869cf3e [type=12(metadata) addr=0x000000011869d714 offset=101] | [metadata_addr=0x000000011869d716 *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011869cf40: 640f
relocInfo@0x000000011869cf40 [type=6(runtime_call) addr=0x000000011869d723 offset=15 format=1] | [destination=0x0000000110b394a0]
         @0x000000011869cf42: f011cc41
relocInfo@0x000000011869cf44 [type=12(metadata) addr=0x000000011869d764 offset=65 format=3 data=17] | [metadata_addr=0x000000011869e330 *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011869cf46: f011cc5c
relocInfo@0x000000011869cf48 [type=12(metadata) addr=0x000000011869d7c0 offset=92 format=3 data=17] | [metadata_addr=0x000000011869e330 *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011869cf4a: b1ba
relocInfo@0x000000011869cf4a [type=11(poll_return) addr=0x000000011869d97a offset=442]
         @0x000000011869cf4c: 6461
relocInfo@0x000000011869cf4c [type=6(runtime_call) addr=0x000000011869d9db offset=97 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869cf4e: f80309ba777700017005
relocInfo@0x000000011869cf56 [type=7(external_word) addr=0x000000011869d9e0 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869cf58: 640e
relocInfo@0x000000011869cf58 [type=6(runtime_call) addr=0x000000011869d9ee offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869cf5a: 6479
relocInfo@0x000000011869cf5a [type=6(runtime_call) addr=0x000000011869da67 offset=121 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869cf5c: f80309ba777700017005
relocInfo@0x000000011869cf64 [type=7(external_word) addr=0x000000011869da6c offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869cf66: 640e
relocInfo@0x000000011869cf66 [type=6(runtime_call) addr=0x000000011869da7a offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869cf68: 648d
relocInfo@0x000000011869cf68 [type=6(runtime_call) addr=0x000000011869db07 offset=141 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869cf6a: f80309ba777700017005
relocInfo@0x000000011869cf72 [type=7(external_word) addr=0x000000011869db0c offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869cf74: 640e
relocInfo@0x000000011869cf74 [type=6(runtime_call) addr=0x000000011869db1a offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869cf76: 6485
relocInfo@0x000000011869cf76 [type=6(runtime_call) addr=0x000000011869db9f offset=133 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869cf78: f80309ba777700017005
relocInfo@0x000000011869cf80 [type=7(external_word) addr=0x000000011869dba4 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869cf82: 640e
relocInfo@0x000000011869cf82 [type=6(runtime_call) addr=0x000000011869dbb2 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869cf84: a2be
relocInfo@0x000000011869cf84 [type=10(poll) addr=0x000000011869de70 offset=702]
         @0x000000011869cf86: 650b
relocInfo@0x000000011869cf86 [type=6(runtime_call) addr=0x000000011869df7b offset=267 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869cf88: f80309ba777700017005
relocInfo@0x000000011869cf90 [type=7(external_word) addr=0x000000011869df80 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869cf92: 640e
relocInfo@0x000000011869cf92 [type=6(runtime_call) addr=0x000000011869df8e offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869cf94: 6465
relocInfo@0x000000011869cf94 [type=6(runtime_call) addr=0x000000011869dff3 offset=101 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869cf96: f80309ba777700017005
relocInfo@0x000000011869cf9e [type=7(external_word) addr=0x000000011869dff8 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869cfa0: 640e
relocInfo@0x000000011869cfa0 [type=6(runtime_call) addr=0x000000011869e006 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869cfa2: 6439
relocInfo@0x000000011869cfa2 [type=6(runtime_call) addr=0x000000011869e03f offset=57 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869cfa4: f80309ba777700017005
relocInfo@0x000000011869cfac [type=7(external_word) addr=0x000000011869e044 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869cfae: 640e
relocInfo@0x000000011869cfae [type=6(runtime_call) addr=0x000000011869e052 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869cfb0: 6419
relocInfo@0x000000011869cfb0 [type=6(runtime_call) addr=0x000000011869e06b offset=25 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869cfb2: f80309ba777700017005
relocInfo@0x000000011869cfba [type=7(external_word) addr=0x000000011869e070 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869cfbc: 640e
relocInfo@0x000000011869cfbc [type=6(runtime_call) addr=0x000000011869e07e offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869cfbe: 6421
relocInfo@0x000000011869cfbe [type=6(runtime_call) addr=0x000000011869e09f offset=33 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869cfc0: f80309ba777700017005
relocInfo@0x000000011869cfc8 [type=7(external_word) addr=0x000000011869e0a4 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869cfca: 640e
relocInfo@0x000000011869cfca [type=6(runtime_call) addr=0x000000011869e0b2 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869cfcc: f80309c2253100017006
relocInfo@0x000000011869cfd4 [type=7(external_word) addr=0x000000011869e0b8 offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x000000011869cfd6: 640e
relocInfo@0x000000011869cfd6 [type=6(runtime_call) addr=0x000000011869e0c6 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869cfd8: f80309c2253100017006
relocInfo@0x000000011869cfe0 [type=7(external_word) addr=0x000000011869e0cc offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x000000011869cfe2: 640e
relocInfo@0x000000011869cfe2 [type=6(runtime_call) addr=0x000000011869e0da offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869cfe4: f80309c2253100017006
relocInfo@0x000000011869cfec [type=7(external_word) addr=0x000000011869e0e0 offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x000000011869cfee: 640e
relocInfo@0x000000011869cfee [type=6(runtime_call) addr=0x000000011869e0ee offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869cff0: f80309c2253100017006
relocInfo@0x000000011869cff8 [type=7(external_word) addr=0x000000011869e0f4 offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x000000011869cffa: 640e
relocInfo@0x000000011869cffa [type=6(runtime_call) addr=0x000000011869e102 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869cffc: f80309c2253100017006
relocInfo@0x000000011869d004 [type=7(external_word) addr=0x000000011869e108 offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x000000011869d006: 640e
relocInfo@0x000000011869d006 [type=6(runtime_call) addr=0x000000011869e116 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869d008: f80309c2253100017006
relocInfo@0x000000011869d010 [type=7(external_word) addr=0x000000011869e11c offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x000000011869d012: 640e
relocInfo@0x000000011869d012 [type=6(runtime_call) addr=0x000000011869e12a offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869d014: f80309c2253100017006
relocInfo@0x000000011869d01c [type=7(external_word) addr=0x000000011869e130 offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x000000011869d01e: 640e
relocInfo@0x000000011869d01e [type=6(runtime_call) addr=0x000000011869e13e offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869d020: f80309c2253100017006
relocInfo@0x000000011869d028 [type=7(external_word) addr=0x000000011869e144 offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x000000011869d02a: 640e
relocInfo@0x000000011869d02a [type=6(runtime_call) addr=0x000000011869e152 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869d02c: 6415
relocInfo@0x000000011869d02c [type=6(runtime_call) addr=0x000000011869e167 offset=21 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869d02e: f80309ba777700017005
relocInfo@0x000000011869d036 [type=7(external_word) addr=0x000000011869e16c offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869d038: 640e
relocInfo@0x000000011869d038 [type=6(runtime_call) addr=0x000000011869e17a offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869d03a: 6415
relocInfo@0x000000011869d03a [type=6(runtime_call) addr=0x000000011869e18f offset=21 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869d03c: f80309ba777700017005
relocInfo@0x000000011869d044 [type=7(external_word) addr=0x000000011869e194 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869d046: 640e
relocInfo@0x000000011869d046 [type=6(runtime_call) addr=0x000000011869e1a2 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869d048: 641d
relocInfo@0x000000011869d048 [type=6(runtime_call) addr=0x000000011869e1bf offset=29 format=1] | [destination=0x0000000110b38ea0]
         @0x000000011869d04a: 6410
relocInfo@0x000000011869d04a [type=6(runtime_call) addr=0x000000011869e1cf offset=16 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869d04c: f80309ba777700017005
relocInfo@0x000000011869d054 [type=7(external_word) addr=0x000000011869e1d4 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869d056: 640e
relocInfo@0x000000011869d056 [type=6(runtime_call) addr=0x000000011869e1e2 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869d058: 6411
relocInfo@0x000000011869d058 [type=6(runtime_call) addr=0x000000011869e1f3 offset=17 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869d05a: f80309ba777700017005
relocInfo@0x000000011869d062 [type=7(external_word) addr=0x000000011869e1f8 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869d064: 640e
relocInfo@0x000000011869d064 [type=6(runtime_call) addr=0x000000011869e206 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869d066: 6415
relocInfo@0x000000011869d066 [type=6(runtime_call) addr=0x000000011869e21b offset=21 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869d068: f80309ba777700017005
relocInfo@0x000000011869d070 [type=7(external_word) addr=0x000000011869e220 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869d072: 640e
relocInfo@0x000000011869d072 [type=6(runtime_call) addr=0x000000011869e22e offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869d074: f80108ba8006
relocInfo@0x000000011869d078 [type=8(internal_word) addr=0x000000011869e234 offset=6 data=2234] | [target=0x000000011869d97a]
         @0x000000011869d07a: 6411
relocInfo@0x000000011869d07a [type=6(runtime_call) addr=0x000000011869e245 offset=17 format=1] | [destination=0x0000000110bfb220]
         @0x000000011869d07c: 001b
relocInfo@0x000000011869d07c [type=0(none) addr=0x000000011869e260 offset=27]
         @0x000000011869d07e: 6400
relocInfo@0x000000011869d07e [type=6(runtime_call) addr=0x000000011869e260 offset=0 format=1] | [destination=0x0000000110b45120]
         @0x000000011869d080: 640f
relocInfo@0x000000011869d080 [type=6(runtime_call) addr=0x000000011869e26f offset=15 format=1] | [destination=0x0000000110bfa860]
         @0x000000011869d082: 0000
relocInfo@0x000000011869d082 [type=0(none) addr=0x000000011869e26f offset=0]
         @0x000000011869d084: 0000
relocInfo@0x000000011869d084 [type=0(none) addr=0x000000011869e26f offset=0]
         @0x000000011869d086: 0000
relocInfo@0x000000011869d086 [type=0(none) addr=0x000000011869e26f offset=0]
         @0x000000011869d088: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type leaf_type
  context = org.jml.regression.linear.DoubleVectorLinearRegression
   [nmethod<=klass]org.jml.regression.linear.DoubleVectorLinearRegression
Dependency of type unique_concrete_method
  context = jdk.incubator.vector.DoubleVector$DoubleSpecies
  method  = {method} {0x0000000267b3ef30} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
   [nmethod<=klass]jdk.incubator.vector.DoubleVector$DoubleSpecies
Dependency of type unique_concrete_method
  context = jdk.incubator.vector.VectorOperators$BinaryImpl
  method  = {method} {0x0000000267a862a0} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$BinaryImpl
Dependency of type unique_concrete_method
  context = jdk.incubator.vector.VectorOperators$BinaryImpl
  method  = {method} {0x0000000267a85e38} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$BinaryImpl
Dependency of type unique_concrete_method
  context = jdk.incubator.vector.VectorOperators$BinaryImpl
  method  = {method} {0x0000000267a85f10} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$BinaryImpl
Dependency of type unique_concrete_method
  context = jdk.incubator.vector.VectorOperators$ImplCache
  method  = {method} {0x0000000267b33200} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$ImplCache
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 96 bytes)
catch_pco = 1328 (1 entries)
  bci -1 at scope depth 0 -> pco 4369
catch_pco = 1440 (1 entries)
  bci -1 at scope depth 0 -> pco 4360
catch_pco = 1556 (1 entries)
  bci -1 at scope depth 0 -> pco 4362
catch_pco = 1672 (1 entries)
  bci -1 at scope depth 0 -> pco 4367
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 7 entries, 60 bytes):
{
   < 0x000000011869d293, 0x000000011869df3a > < 0x000000011869d2a9, 0x000000011869df3a > < 0x000000011869d453, 0x000000011869e158 > 
   < 0x000000011869d556, 0x000000011869e180 > < 0x000000011869d760, 0x000000011869e1c4 > < 0x000000011869d776, 0x000000011869e1e8 > 
   < 0x000000011869d953, 0x000000011869e20c > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 NULL-oop
#1: 0x0000000161400080 a 'java/lang/Class'{0x0000000161400080} = 'jdk/incubator/vector/Double256Vector'
#2: 0x000000011ff8c550 a 'java/lang/Class'{0x000000011ff8c550} = double
#3: 0x0000000161400168 a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x0000000161400168}
#4: 0x0000000161400178 a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x0000000161400178}
#5: 0x00000001614001e8 a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x00000001614001e8}
#6: 0x000000011ff58b48 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011ff58b48}
#7: 0x00000001200a7938 a 'java/lang/Class'{0x00000001200a7938} = 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 NULL-oop
# 1: 0x000000026788fe18 {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
# 2: 0x0000000267b6f330 {method} {0x0000000267b6f330} 'reduceLanes' '(Ljdk/incubator/vector/VectorOperators$Associative;)D' in 'jdk/incubator/vector/Double256Vector'
# 3: 0x0000000267b1d348 {method} {0x0000000267b1d348} 'reduceLanesTemplate' '(Ljdk/incubator/vector/VectorOperators$Associative;)D' in 'jdk/incubator/vector/DoubleVector'
# 4: 0x0000000225d0e900 'org/jml/regression/linear/DoubleVectorLinearRegression'
# 5: 0x0000000225c40618 {type array double}
# 6: 0x0000000267b1ded0 {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
# 7: 0x0000000267b710c0 {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
# 8: 0x0000000267b1f228 {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
# 9: 0x0000000267b19378 {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
#10: 0x0000000267b181a0 {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
#11: 0x0000000267b72458 {method} {0x0000000267b72458} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
#12: 0x0000000267b6f070 {method} {0x0000000267b6f070} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/Double256Vector;' in 'jdk/incubator/vector/Double256Vector'
#13: 0x0000000267b17fb0 {method} {0x0000000267b17fb0} 'lanewiseTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
#14: 0x0000000267b153c0 {method} {0x0000000267b153c0} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;)I' in 'jdk/incubator/vector/DoubleVector'
#15: 0x0000000267b36008 {method} {0x0000000267b36008} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;II)I' in 'jdk/incubator/vector/VectorOperators'
#16: 0x0000000267a85e38 {method} {0x0000000267a85e38} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#17: 0x0000000225d520a0 'jdk/incubator/vector/Double256Vector'
#18: 0x000000011040aa78 {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
#19: 0x0000000267b6d620 {method} {0x0000000267b6d620} 'vspecies' '()Ljdk/incubator/vector/DoubleVector$DoubleSpecies;' in 'jdk/incubator/vector/Double256Vector'
#20: 0x0000000267b18ef0 {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
#21: 0x0000000267b726c8 {method} {0x0000000267b726c8} 'broadcast' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
#22: 0x0000000267b6dcc0 {method} {0x0000000267b6dcc0} 'broadcast' '(D)Ljdk/incubator/vector/Double256Vector;' in 'jdk/incubator/vector/Double256Vector'
#23: 0x0000000267b176d0 {method} {0x0000000267b176d0} 'broadcastTemplate' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
#24: 0x0000000267b39810 {method} {0x0000000267b39810} 'broadcast' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
#25: 0x0000000267b39730 {method} {0x0000000267b39730} 'broadcastBits' '(J)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
#26: 0x0000000267b96280 {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
#27: 0x000000011015f0e0 {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
#28: 0x0000000225d4eb10 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
#29: 0x0000000267b3ef30 {method} {0x0000000267b3ef30} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
#30: 0x0000000225d5a3b0 'jdk/incubator/vector/VectorOperators$BinaryImpl'
#31: 0x0000000267a862a0 {method} {0x0000000267a862a0} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#32: 0x0000000267a85f10 {method} {0x0000000267a85f10} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#33: 0x0000000267b33200 {method} {0x0000000267b33200} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
569.961 ms/op
# Warmup Iteration   3: 
============================= C2-compiled nmethod ==============================
----------------------- MetaData before Compile_id = 1182 ------------------------
{method}
 - this oop:          0x000000026788fe18
 - method holder:     'org/jml/regression/linear/DoubleVectorLinearRegression'
 - constants:         0x000000026788f558 constant pool [135]/operands[5] {0x000000026788f558} for 'org/jml/regression/linear/DoubleVectorLinearRegression' cache=0x0000000267a042d0
 - access:            0xc1000001  public 
 - name:              'fit'
 - signature:         '([D[D)V'
 - max stack:         9
 - max locals:        23
 - size of params:    3
 - method size:       13
 - vtable index:      5
 - i2i entry:         0x0000000110af1e20
 - adapters:          AHE@0x00007f846603a870: 0xbbb00000 i2c: 0x0000000110b69ee0 c2i: 0x0000000110b69fbf c2iUV: 0x0000000110b69f92 c2iNCI: 0x0000000110b69ffc
 - compiled entry     0x0000000110b69fbf
 - code size:         378
 - code start:        0x000000026788fba8
 - code end (excl):   0x000000026788fd22
 - method data:       0x0000000267a04640
 - checked ex length: 0
 - linenumber start:  0x000000026788fd22
 - localvar length:   16
 - localvar start:    0x000000026788fd56

------------------------ OptoAssembly for Compile_id = 1182 -----------------------
#
#  void ( rawptr:BotPTR )
#
#r018 rsi:rsi   : parm 0: rawptr:BotPTR
# -- Old rsp -- Framesize: 224 --
#r583 rsp+220: in_preserve
#r582 rsp+216: return address
#r581 rsp+212: in_preserve
#r580 rsp+208: saved fp register
#r579 rsp+204: pad2, stack alignment
#r578 rsp+200: pad2, stack alignment
#r577 rsp+196: Fixed slot 1
#r576 rsp+192: Fixed slot 0
#r631 rsp+188: spill
#r630 rsp+184: spill
#r629 rsp+180: spill
#r628 rsp+176: spill
#r627 rsp+172: spill
#r626 rsp+168: spill
#r625 rsp+164: spill
#r624 rsp+160: spill
#r623 rsp+156: spill
#r622 rsp+152: spill
#r621 rsp+148: spill
#r620 rsp+144: spill
#r619 rsp+140: spill
#r618 rsp+136: spill
#r617 rsp+132: spill
#r616 rsp+128: spill
#r615 rsp+124: spill
#r614 rsp+120: spill
#r613 rsp+116: spill
#r612 rsp+112: spill
#r611 rsp+108: spill
#r610 rsp+104: spill
#r609 rsp+100: spill
#r608 rsp+96: spill
#r607 rsp+92: spill
#r606 rsp+88: spill
#r605 rsp+84: spill
#r604 rsp+80: spill
#r603 rsp+76: spill
#r602 rsp+72: spill
#r601 rsp+68: spill
#r600 rsp+64: spill
#r599 rsp+60: spill
#r598 rsp+56: spill
#r597 rsp+52: spill
#r596 rsp+48: spill
#r595 rsp+44: spill
#r594 rsp+40: spill
#r593 rsp+36: spill
#r592 rsp+32: spill
#r591 rsp+28: spill
#r590 rsp+24: spill
#r589 rsp+20: spill
#r588 rsp+16: spill
#r587 rsp+12: spill
#r586 rsp+ 8: spill
#r585 rsp+ 4: spill
#r584 rsp+ 0: spill
#
0000    N3212: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
0000    # breakpoint
        nop 	# 11 bytes pad for loops and calls

0010    B1: #	out( B151 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
0010    # stack bang (816 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #208	# Create frame

001f    movq    RBX, [RSI + #176 (32-bit)]	# ptr
0026    movq    RBP, [RSI + #168 (32-bit)]	# ptr
002d    movsd   XMM0, [RSI + #104 (8-bit)]	# double
0032    movsd   [rsp + #16], XMM0	# spill
0038    movq    R10, [RSI + #160 (32-bit)]	# ptr
003f    movq    [rsp + #0], R10	# spill
0043    movq    R10, [RSI + #96 (8-bit)]	# ptr
0047    movq    [rsp + #8], R10	# spill
004c    movq    R10, [RSI + #88 (8-bit)]	# ptr
0050    movq    [rsp + #24], R10	# spill
0055    movsd   XMM0, [RSI + #144 (32-bit)]	# double
005d    movsd   [rsp + #56], XMM0	# spill
0063    movsd   XMM0, [RSI + #128 (32-bit)]	# double
006b    movsd   [rsp + #64], XMM0	# spill
0071    movl    R12, [RSI + #120 (8-bit)]	# int
0075    movl    [rsp + #32], R12	# spill
007a    movq    RDI, RSI	# spill
        nop 	# 3 bytes pad for loops and calls
0080    call_leaf,runtime  OSR_migration_end
        No JVM State Info
        # 
0090    testq   RBX, RBX	# ptr
0093    je     B151  P=0.001000 C=-1.000000

0099    B2: #	out( B180 B3 ) <- in( B1 )  Freq: 0.999
0099    movq    R13, RBX	# spill
009c    movl    R10, [RBX + #8 (8-bit)]	# compressed klass ptr
00a0    cmpl    R10, narrowklass: precise klass org/jml/regression/linear/DoubleVectorLinearRegression: 0x00007f8467be6a20:Constant:exact *	# compressed klass ptr
00a7    jne,u   B180  P=0.000001 C=-1.000000

00ad    B3: #	out( B4 ) <- in( B2 )  Freq: 0.998999
00ad    movq    R10, RBX	# spill
00b0    # checkcastPP of R10

00b0    B4: #	out( B152 B5 ) <- in( B3 B151 )  Freq: 0.999999
00b0    movq    R14, RBP	# spill
00b3    testq   RBP, RBP	# ptr
00b6    je     B152  P=0.001000 C=-1.000000

00bc    B5: #	out( B181 B6 ) <- in( B4 )  Freq: 0.998999
00bc    movl    R8, [RBP + #8 (8-bit)]	# compressed klass ptr
00c0    cmpl    R8, narrowklass: precise klass [D: 0x00007f8467f0e730:Constant:exact *	# compressed klass ptr
00c7    jne,u   B181  P=0.000001 C=-1.000000

00cd    B6: #	out( B7 ) <- in( B5 )  Freq: 0.998998
00cd    movq    R11, RBP	# spill
00d0    # checkcastPP of R11

00d0    B7: #	out( B153 B8 ) <- in( B6 B152 )  Freq: 0.999998
00d0    movq    RBX, [rsp + #0]	# spill
00d4    testq   RBX, RBX	# ptr
00d7    je     B153  P=0.001000 C=-1.000000

00dd    B8: #	out( B183 B9 ) <- in( B7 )  Freq: 0.998998
00dd    movl    R8, [RBX + #8 (8-bit)]	# compressed klass ptr
00e1    cmpl    R8, narrowklass: precise klass [D: 0x00007f8467f0e730:Constant:exact *	# compressed klass ptr
00e8    jne,u   B183  P=0.000001 C=-1.000000

00ee    B9: #	out( B10 ) <- in( B8 )  Freq: 0.998997
00ee    movq    R8, RBX	# spill
00f1    # checkcastPP of R8

00f1    B10: #	out( B154 B11 ) <- in( B9 B153 )  Freq: 0.999997
00f1    movq    RDX, precise klass jdk/incubator/vector/DoubleVector: 0x00007f8467beb450:Constant:exact *	# ptr
00fb    movq    RCX, [rsp + #8]	# spill
0100    testq   RCX, RCX	# ptr
0103    je     B154  P=0.001000 C=-1.000000

0109    B11: #	out( B184 B12 ) <- in( B10 )  Freq: 0.998997
0109    movl    R12, [RCX + #8 (8-bit)]	# compressed klass ptr
010d    decode_and_move_klass_not_null R9,R12
0114    movq    R9, [R9 + #96 (8-bit)]	# class
0118    cmpq    R9, RDX	# ptr
        nop 	# 5 bytes pad for loops and calls
0120    jne,u   B184  P=0.000001 C=-1.000000

0126    B12: #	out( B13 ) <- in( B11 )  Freq: 0.998996
0126    movq    RDI, RCX	# spill
0129    # checkcastPP of RDI

0129    B13: #	out( B155 B14 ) <- in( B12 B154 )  Freq: 0.999996
0129    movq    R12, [rsp + #24]	# spill
012e    testq   R12, R12	# ptr
0131    je     B155  P=0.001000 C=-1.000000

0137    B14: #	out( B182 B15 ) <- in( B13 )  Freq: 0.998996
0137    movl    R9, [R12 + #8 (8-bit)]	# compressed klass ptr
013c    decode_and_move_klass_not_null RSI,R9
0143    movq    R9, [RSI + #96 (8-bit)]	# class
0147    cmpq    R9, RDX	# ptr
014a    jne,u   B182  P=0.000001 C=-1.000000

0150    B15: #	out( B16 ) <- in( B14 )  Freq: 0.998995
0150    # checkcastPP of R12

0150    B16: #	out( B72 B17 ) <- in( B15 B155 )  Freq: 0.999995
0150    movl    R9, [rsp + #32]	# spill
0155    cvtsi2sdl XMM0, R9	# i2d
015a    movsd   XMM3, [rsp + #16]	# spill
0160    ucomisd XMM3, XMM0 test
0164    jbe,u   B72  P=0.000001 C=4043674.000000

016a    B17: #	out( B208 B18 ) <- in( B16 )  Freq: 0.999994
016a    movl    RBX, [R11 + #12 (8-bit)]	# range
016e    NullCheck R11

016e    B18: #	out( B175 B19 ) <- in( B17 )  Freq: 0.999993
016e    addl    RBX, #-3	# int
0171    testl   RBX, RBX
0173    jl     B175  P=0.000001 C=-1.000000

0179    B19: #	out( B67 B20 ) <- in( B18 )  Freq: 0.999992
0179    cmpl    R9, RBX	# unsigned
        nop 	# 4 bytes pad for loops and calls
0180    jnb,u   B67  P=0.000001 C=-1.000000

0186    B20: #	out( B209 B21 ) <- in( B19 )  Freq: 0.999991
0186    # castII of R9
0186    load_vector XMM0,[R11 + #16 + R9 << #3]
018d    movl    RCX, [RDI + #8 (8-bit)]	# compressed klass ptr
0190    NullCheck RDI

0190    B21: #	out( B176 B22 ) <- in( B20 )  Freq: 0.99999
0190    cmpl    RCX, narrowklass: precise klass jdk/incubator/vector/Double256Vector: 0x00007f8467be7ba0:Constant:exact *	# compressed klass ptr
0196    jne,u   B176  P=0.000001 C=-1.000000

019c    B22: #	out( B158 B23 ) <- in( B21 )  Freq: 0.999989
019c    # checkcastPP of RDI
019c    # TLS is in R15
019c    movq    RSI, [R15 + #328 (32-bit)]	# ptr
01a3    movq    RCX, RSI	# spill
01a6    addq    RCX, #48	# ptr
01aa    # TLS is in R15
01aa    cmpq    RCX, [R15 + #344 (32-bit)]	# raw ptr
01b1    jnb,u   B158  P=0.000100 C=-1.000000

01b7    B23: #	out( B24 ) <- in( B22 )  Freq: 0.999889
01b7    # TLS is in R15
01b7    movq    [R15 + #328 (32-bit)], RCX	# ptr
01be    PREFETCHW [RCX + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
01c5    movq    [RSI], #1	# long
01cc    PREFETCHW [RCX + #256 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
01d3    movl    [RSI + #8 (8-bit)], narrowklass: precise klass [D: 0x00007f8467f0e730:Constant:exact *	# compressed klass ptr
01da    PREFETCHW [RCX + #320 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
01e1    movl    [RSI + #12 (8-bit)], #4	# int
01e8    PREFETCHW [RCX + #384 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
01ef    movq    [RSI + #16 (8-bit)], #0	# long
01f7    movq    [RSI + #24 (8-bit)], #0	# long
01ff    movq    [RSI + #32 (8-bit)], #0	# long
0207    movq    [RSI + #40 (8-bit)], #0	# long

020f    B24: #	out( B156 B25 ) <- in( B159 B23 )  Freq: 0.999989
020f    
020f    MEMBAR-storestore (empty encoding)
020f    # checkcastPP of RSI
020f    movq    RCX, [RDI + #16 (8-bit)]	# ptr ! Field: jdk/internal/vm/vector/VectorSupport$VectorPayload.payload (constant)
0213    vaddpd  XMM2,XMM0,[RCX + #16 (8-bit)]	! add packedD
0218    store_vector [RSI + #16 (8-bit)],XMM2
	
021d    # TLS is in R15
021d    movq    RCX, [R15 + #328 (32-bit)]	# ptr
0224    movq    RDX, RCX	# spill
0227    addq    RDX, #24	# ptr
022b    # TLS is in R15
022b    cmpq    RDX, [R15 + #344 (32-bit)]	# raw ptr
0232    jnb,u   B156  P=0.000100 C=-1.000000

0238    B25: #	out( B26 ) <- in( B24 )  Freq: 0.999889
0238    # TLS is in R15
0238    movq    [R15 + #328 (32-bit)], RDX	# ptr
023f    PREFETCHW [RDX + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
0246    movq    [RCX], #1	# long
024d    movl    [RCX + #8 (8-bit)], narrowklass: precise klass jdk/incubator/vector/Double256Vector: 0x00007f8467be7ba0:Constant:exact *	# compressed klass ptr
0254    movl    [RCX + #12 (8-bit)], #0	# int

025b    B26: #	out( B210 B27 ) <- in( B157 B25 )  Freq: 0.999989
025b    movq    [RCX + #16 (8-bit)], RSI	# ptr
025f    
025f    # checkcastPP of RCX
        nop 	# 1 bytes pad for loops and calls
0260    movl    RBP, [R8 + #12 (8-bit)]	# range
0264    NullCheck R8

0264    B27: #	out( B177 B28 ) <- in( B26 )  Freq: 0.999988
0264    addl    RBP, #-3	# int
0267    testl   RBP, RBP
0269    jl     B177  P=0.000001 C=-1.000000

026f    B28: #	out( B172 B29 ) <- in( B27 )  Freq: 0.999987
026f    cmpl    R9, RBP	# unsigned
0272    jnb,u   B172  P=0.000001 C=-1.000000

0278    B29: #	out( B211 B30 ) <- in( B28 )  Freq: 0.999986
0278    load_vector XMM0,[R8 + #16 + R9 << #3]
        nop 	# 1 bytes pad for loops and calls
0280    movl    RDX, [R12 + #8 (8-bit)]	# compressed klass ptr
0285    NullCheck R12

0285    B30: #	out( B178 B31 ) <- in( B29 )  Freq: 0.999985
0285    cmpl    RDX, narrowklass: precise klass jdk/incubator/vector/Double256Vector: 0x00007f8467be7ba0:Constant:exact *	# compressed klass ptr
028b    jne,u   B178  P=0.000001 C=-1.000000

0291    B31: #	out( B160 B32 ) <- in( B30 )  Freq: 0.999984
0291    # checkcastPP of R12
0291    # TLS is in R15
0291    movq    RSI, [R15 + #328 (32-bit)]	# ptr
0298    movq    RDI, RSI	# spill
029b    addq    RDI, #48	# ptr
029f    # TLS is in R15
        nop 	# 1 bytes pad for loops and calls
02a0    cmpq    RDI, [R15 + #344 (32-bit)]	# raw ptr
02a7    jnb,u   B160  P=0.000100 C=-1.000000

02ad    B32: #	out( B33 ) <- in( B31 )  Freq: 0.999884
02ad    # TLS is in R15
02ad    movq    [R15 + #328 (32-bit)], RDI	# ptr
02b4    PREFETCHW [RDI + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
02bb    movq    [RSI], #1	# long
02c2    PREFETCHW [RDI + #256 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
02c9    movl    [RSI + #8 (8-bit)], narrowklass: precise klass [D: 0x00007f8467f0e730:Constant:exact *	# compressed klass ptr
02d0    PREFETCHW [RDI + #320 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
02d7    movl    [RSI + #12 (8-bit)], #4	# int
02de    PREFETCHW [RDI + #384 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
02e5    movq    [RSI + #16 (8-bit)], #0	# long
02ed    movq    [RSI + #24 (8-bit)], #0	# long
02f5    movq    [RSI + #32 (8-bit)], #0	# long
02fd    movq    [RSI + #40 (8-bit)], #0	# long

0305    B33: #	out( B162 B34 ) <- in( B161 B32 )  Freq: 0.999984
0305    
0305    MEMBAR-storestore (empty encoding)
0305    # checkcastPP of RSI
0305    movq    RDI, [R12 + #16 (8-bit)]	# ptr ! Field: jdk/internal/vm/vector/VectorSupport$VectorPayload.payload (constant)
030a    vaddpd  XMM1,XMM0,[RDI + #16 (8-bit)]	! add packedD
030f    store_vector [RSI + #16 (8-bit)],XMM1
	
0314    # TLS is in R15
0314    movq    RDX, [R15 + #328 (32-bit)]	# ptr
031b    movq    RDI, RDX	# spill
031e    addq    RDI, #24	# ptr
0322    # TLS is in R15
0322    cmpq    RDI, [R15 + #344 (32-bit)]	# raw ptr
0329    jnb,u   B162  P=0.000100 C=-1.000000

032f    B34: #	out( B35 ) <- in( B33 )  Freq: 0.999884
032f    # TLS is in R15
032f    movq    [R15 + #328 (32-bit)], RDI	# ptr
0336    PREFETCHW [RDI + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
033d    movq    [RDX], #1	# long
0344    movl    [RDX + #8 (8-bit)], narrowklass: precise klass jdk/incubator/vector/Double256Vector: 0x00007f8467be7ba0:Constant:exact *	# compressed klass ptr
034b    movl    [RDX + #12 (8-bit)], #0	# int

0352    B35: #	out( B179 B36 ) <- in( B163 B34 )  Freq: 0.999984
0352    movq    [RDX + #16 (8-bit)], RSI	# ptr
0356    
0356    # checkcastPP of RDX
0356    movl    RDI, R9	# spill
0359    addl    RDI, #4	# int
035c    cvtsi2sdl XMM0, RDI	# i2d
0360    ucomisd XMM3, XMM0 test
0364    jbe,u   B179  P=0.000001 C=4043674.000000

036a    B36: #	out( B173 B37 ) <- in( B35 )  Freq: 0.999983
036a    cmpl    RDI, RBX	# unsigned
036c    jnb,u   B173  P=0.000001 C=-1.000000

0372    B37: #	out( B164 B38 ) <- in( B36 )  Freq: 0.999982
0372    load_vector XMM0,[R11 + #48 + R9 << #3]
0379    # TLS is in R15
0379    movq    RAX, [R15 + #328 (32-bit)]	# ptr
0380    movq    R12, RAX	# spill
0383    addq    R12, #48	# ptr
0387    # TLS is in R15
0387    cmpq    R12, [R15 + #344 (32-bit)]	# raw ptr
038e    jnb,u   B164  P=0.000100 C=-1.000000

0394    B38: #	out( B39 ) <- in( B37 )  Freq: 0.999882
0394    # TLS is in R15
0394    movq    [R15 + #328 (32-bit)], R12	# ptr
039b    PREFETCHW [R12 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
03a4    movq    [RAX], #1	# long
03ab    PREFETCHW [R12 + #256 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
03b4    movl    [RAX + #8 (8-bit)], narrowklass: precise klass [D: 0x00007f8467f0e730:Constant:exact *	# compressed klass ptr
03bb    PREFETCHW [R12 + #320 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
03c4    movl    [RAX + #12 (8-bit)], #4	# int
03cb    PREFETCHW [R12 + #384 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
03d4    movq    [RAX + #16 (8-bit)], #0	# long
03dc    movq    [RAX + #24 (8-bit)], #0	# long
03e4    movq    [RAX + #32 (8-bit)], #0	# long
03ec    movq    [RAX + #40 (8-bit)], #0	# long

03f4    B39: #	out( B166 B40 ) <- in( B165 B38 )  Freq: 0.999982
03f4    
03f4    MEMBAR-storestore (empty encoding)
03f4    # checkcastPP of RAX
03f4    vaddpd  XMM4,XMM2,XMM0	! add packedD
03f8    store_vector [RAX + #16 (8-bit)],XMM4
	
03fd    # TLS is in R15
03fd    movq    R12, [R15 + #328 (32-bit)]	# ptr
0404    movq    RSI, R12	# spill
0407    addq    RSI, #24	# ptr
040b    # TLS is in R15
040b    cmpq    RSI, [R15 + #344 (32-bit)]	# raw ptr
0412    jnb,u   B166  P=0.000100 C=-1.000000

0418    B40: #	out( B41 ) <- in( B39 )  Freq: 0.999882
0418    # TLS is in R15
0418    movq    [R15 + #328 (32-bit)], RSI	# ptr
041f    PREFETCHW [RSI + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
0426    movq    [R12], #1	# long
042e    movl    [R12 + #8 (8-bit)], narrowklass: precise klass jdk/incubator/vector/Double256Vector: 0x00007f8467be7ba0:Constant:exact *	# compressed klass ptr
0437    movl    [R12 + #12 (8-bit)], #0	# int

0440    B41: #	out( B174 B42 ) <- in( B167 B40 )  Freq: 0.999982
0440    movq    [R12 + #16 (8-bit)], RAX	# ptr
0445    
0445    # checkcastPP of R12
0445    cmpl    RDI, RBP	# unsigned
0447    jnb,u   B174  P=0.000001 C=-1.000000

044d    B42: #	out( B168 B43 ) <- in( B41 )  Freq: 0.999981
044d    load_vector XMM2,[R8 + #48 + R9 << #3]
0454    # TLS is in R15
0454    movq    RAX, [R15 + #328 (32-bit)]	# ptr
045b    movq    RCX, RAX	# spill
045e    addq    RCX, #48	# ptr
0462    # TLS is in R15
0462    cmpq    RCX, [R15 + #344 (32-bit)]	# raw ptr
0469    jnb,u   B168  P=0.000100 C=-1.000000

046f    B43: #	out( B44 ) <- in( B42 )  Freq: 0.999881
046f    # TLS is in R15
046f    movq    [R15 + #328 (32-bit)], RCX	# ptr
0476    PREFETCHW [RCX + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
047d    movq    [RAX], #1	# long
0484    PREFETCHW [RCX + #256 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
048b    movl    [RAX + #8 (8-bit)], narrowklass: precise klass [D: 0x00007f8467f0e730:Constant:exact *	# compressed klass ptr
0492    PREFETCHW [RCX + #320 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
0499    movl    [RAX + #12 (8-bit)], #4	# int
04a0    PREFETCHW [RCX + #384 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
04a7    movq    [RAX + #16 (8-bit)], #0	# long
04af    movq    [RAX + #24 (8-bit)], #0	# long
04b7    movq    [RAX + #32 (8-bit)], #0	# long
04bf    movq    [RAX + #40 (8-bit)], #0	# long

04c7    B44: #	out( B170 B45 ) <- in( B169 B43 )  Freq: 0.999981
04c7    
04c7    MEMBAR-storestore (empty encoding)
04c7    # checkcastPP of RAX
04c7    vaddpd  XMM0,XMM1,XMM2	! add packedD
04cb    store_vector [RAX + #16 (8-bit)],XMM0
	
04d0    # TLS is in R15
04d0    movq    RCX, [R15 + #328 (32-bit)]	# ptr
04d7    movq    RSI, RCX	# spill
04da    addq    RSI, #24	# ptr
04de    # TLS is in R15
        nop 	# 2 bytes pad for loops and calls
04e0    cmpq    RSI, [R15 + #344 (32-bit)]	# raw ptr
04e7    jnb,u   B170  P=0.000100 C=-1.000000

04ed    B45: #	out( B46 ) <- in( B44 )  Freq: 0.999881
04ed    # TLS is in R15
04ed    movq    [R15 + #328 (32-bit)], RSI	# ptr
04f4    PREFETCHW [RSI + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
04fb    movq    [RCX], #1	# long
0502    movl    [RCX + #8 (8-bit)], narrowklass: precise klass jdk/incubator/vector/Double256Vector: 0x00007f8467be7ba0:Constant:exact *	# compressed klass ptr
0509    movl    [RCX + #12 (8-bit)], #0	# int

0510    B46: #	out( B51 ) <- in( B171 B45 )  Freq: 0.999981
0510    movq    [RCX + #16 (8-bit)], RAX	# ptr
0514    
0514    # checkcastPP of RCX
0514    addl    R9, #8	# int
0518    jmp     B51
        nop 	# 3 bytes pad for loops and calls

0520    B47: #	out( B48 ) <- in( B58 ) top-of-loop Freq: 329932
0520    # TLS is in R15
0520    movq    [R15 + #328 (32-bit)], R10	# ptr
0527    PREFETCHW [R10 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
052f    movq    [RAX], #1	# long
0536    PREFETCHW [R10 + #256 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
053e    movl    [RAX + #8 (8-bit)], narrowklass: precise klass [D: 0x00007f8467f0e730:Constant:exact *	# compressed klass ptr
0545    PREFETCHW [R10 + #320 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
054d    movl    [RAX + #12 (8-bit)], #4	# int
0554    PREFETCHW [R10 + #384 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
055c    movq    [RAX + #16 (8-bit)], #0	# long
0564    movq    [RAX + #24 (8-bit)], #0	# long
056c    movq    [RAX + #32 (8-bit)], #0	# long
0574    movq    [RAX + #40 (8-bit)], #0	# long

057c    B48: #	out( B65 B49 ) <- in( B60 B47 ) top-of-loop Freq: 329965
057c    
057c    MEMBAR-storestore (empty encoding)
057c    # checkcastPP of RAX
057c    movq    [rsp + #104], RAX	# spill
0581    movq    R10, [rsp + #88]	# spill
0586    movq    R10, [R10 + #16 (8-bit)]	# ptr ! Field: jdk/internal/vm/vector/VectorSupport$VectorPayload.payload (constant)
058a    vaddpd  XMM0,XMM1,[R10 + #16 (8-bit)]	! add packedD
0590    store_vector [RAX + #16 (8-bit)],XMM0
	
0595    # TLS is in R15
0595    movq    RAX, [R15 + #328 (32-bit)]	# ptr
059c    movq    R10, RAX	# spill
059f    addq    R10, #24	# ptr
05a3    # TLS is in R15
05a3    cmpq    R10, [R15 + #344 (32-bit)]	# raw ptr
05aa    jnb,u   B65  P=0.000100 C=-1.000000

05b0    B49: #	out( B50 ) <- in( B48 )  Freq: 329932
05b0    # TLS is in R15
05b0    movq    [R15 + #328 (32-bit)], R10	# ptr
05b7    PREFETCHW [R10 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
05bf    movq    [RAX], #1	# long
05c6    movl    [RAX + #8 (8-bit)], narrowklass: precise klass jdk/incubator/vector/Double256Vector: 0x00007f8467be7ba0:Constant:exact *	# compressed klass ptr
05cd    movl    [RAX + #12 (8-bit)], #0	# int

05d4    B50: #	out( B51 ) <- in( B66 B49 )  Freq: 329965
05d4    movq    R10, [rsp + #104]	# spill
05d9    movq    [RAX + #16 (8-bit)], R10	# ptr
05dd    
05dd    # checkcastPP of RAX
05dd    # TLS is in R15
05dd    movq    R10, [R15 + #304 (32-bit)]	# ptr
05e4    movl    RBP, [rsp + #80]	# spill
05e8    addl    RBP, #4	# int
05eb    testl   rax, [R10]	# Safepoint: poll for GC        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:103 (line 24) L[0]=rsp + #32 L[1]=rsp + #40 L[2]=rsp + #48 L[3]=rsp + #56 L[4]=_ L[5]=rsp + #64 L[6]=_ L[7]=RBP L[8]=XMM3 L[9]=_ L[10]=#ScObj0 L[11]=#ScObj1 L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=XMM4 }
        # ScObj1 jdk/incubator/vector/Double256Vector={ [payload :0]=XMM0 }
        # OopMap {rax=Oop [32]=Oop [40]=Oop [48]=Oop [96]=Oop off=1515/0x5eb}
05ee    movl    R9, RBP	# spill
05f1    movq    R10, [rsp + #32]	# spill
05f6    movq    R11, [rsp + #40]	# spill
05fb    movq    R8, [rsp + #48]	# spill
0600    movl    RBX, [rsp + #72]	# spill
0604    movl    RBP, [rsp + #76]	# spill
0608    movq    R12, [rsp + #96]	# spill
060d    movq    RCX, RAX	# spill

0610    B51: #	out( B74 B52 ) <- in( B46 B50 ) Loop( B51-B50 inner ) Freq: 329966
0610    cvtsi2sdl XMM0, R9	# i2d
0615    ucomisd XMM3, XMM0 test
0619    jbe,u   B74  P=0.000001 C=4043674.000000

061f    B52: #	out( B68 B53 ) <- in( B51 )  Freq: 329966
        nop 	# 1 bytes pad for loops and calls
0620    cmpl    R9, RBX	# unsigned
0623    jnb,u   B68  P=0.000001 C=-1.000000

0629    B53: #	out( B61 B54 ) <- in( B52 )  Freq: 329965
0629    movq    [rsp + #88], RCX	# spill
062e    movq    [rsp + #0], R12	# spill
0632    movl    [rsp + #76], RBP	# spill
0636    movl    [rsp + #72], RBX	# spill
063a    movq    [rsp + #48], R8	# spill
063f    movq    [rsp + #40], R11	# spill
0644    movq    [rsp + #32], R10	# spill
0649    # TLS is in R15
0649    movq    RAX, [R15 + #328 (32-bit)]	# ptr
0650    movq    R10, RAX	# spill
0653    addq    R10, #48	# ptr
0657    # castII of R9
0657    movl    [rsp + #80], R9	# spill
065c    load_vector XMM0,[R11 + #16 + R9 << #3]
0663    # TLS is in R15
0663    cmpq    R10, [R15 + #344 (32-bit)]	# raw ptr
066a    jnb,u   B61  P=0.000100 C=-1.000000

0670    B54: #	out( B55 ) <- in( B53 )  Freq: 329932
0670    # TLS is in R15
0670    movq    [R15 + #328 (32-bit)], R10	# ptr
0677    PREFETCHW [R10 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
067f    movq    [RAX], #1	# long
0686    PREFETCHW [R10 + #256 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
068e    movl    [RAX + #8 (8-bit)], narrowklass: precise klass [D: 0x00007f8467f0e730:Constant:exact *	# compressed klass ptr
0695    PREFETCHW [R10 + #320 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
069d    movl    [RAX + #12 (8-bit)], #4	# int
06a4    PREFETCHW [R10 + #384 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
06ac    movq    [RAX + #16 (8-bit)], #0	# long
06b4    movq    [RAX + #24 (8-bit)], #0	# long
06bc    movq    [RAX + #32 (8-bit)], #0	# long
06c4    movq    [RAX + #40 (8-bit)], #0	# long

06cc    B55: #	out( B63 B56 ) <- in( B62 B54 )  Freq: 329965
06cc    
06cc    MEMBAR-storestore (empty encoding)
06cc    # checkcastPP of RAX
06cc    movq    [rsp + #96], RAX	# spill
06d1    movq    R10, [rsp + #0]	# spill
06d5    movq    R10, [R10 + #16 (8-bit)]	# ptr ! Field: jdk/internal/vm/vector/VectorSupport$VectorPayload.payload (constant)
06d9    vaddpd  XMM4,XMM0,[R10 + #16 (8-bit)]	! add packedD
06df    store_vector [RAX + #16 (8-bit)],XMM4
	
06e4    # TLS is in R15
06e4    movq    RAX, [R15 + #328 (32-bit)]	# ptr
06eb    movq    R10, RAX	# spill
06ee    addq    R10, #24	# ptr
06f2    # TLS is in R15
        nop 	# 14 bytes pad for loops and calls
0700    cmpq    R10, [R15 + #344 (32-bit)]	# raw ptr
0707    jnb,u   B63  P=0.000100 C=-1.000000

070d    B56: #	out( B57 ) <- in( B55 )  Freq: 329932
070d    # TLS is in R15
070d    movq    [R15 + #328 (32-bit)], R10	# ptr
0714    PREFETCHW [R10 + #192 (32-bit)]	# Prefetch allocation into level 1 cache and mark modified
071c    movq    [RAX], #1	# long
0723    movl    [RAX + #8 (8-bit)], narrowklass: precise klass jdk/incubator/vector/Double256Vector: 0x00007f8467be7ba0:Constant:exact *	# compressed klass ptr
072a    movl    [RAX + #12 (8-bit)], #0	# int

0731    B57: #	out( B69 B58 ) <- in( B64 B56 )  Freq: 329965
0731    movq    R10, [rsp + #96]	# spill
0736    movq    [RAX + #16 (8-bit)], R10	# ptr
073a    
073a    # checkcastPP of RAX
073a    movq    [rsp + #96], RAX	# spill
073f    movl    R10, [rsp + #80]	# spill
0744    cmpl    R10, [RSP + #76 (32-bit)]	# unsigned
0749    jnb,u   B69  P=0.000001 C=-1.000000

074f    B58: #	out( B47 B59 ) <- in( B57 )  Freq: 329965
074f    movq    R10, [rsp + #48]	# spill
0754    movl    RBP, [rsp + #80]	# spill
0758    load_vector XMM1,[R10 + #16 + RBP << #3]
075f    # TLS is in R15
075f    movq    RAX, [R15 + #328 (32-bit)]	# ptr
0766    movq    R10, RAX	# spill
0769    addq    R10, #48	# ptr
076d    # TLS is in R15
076d    cmpq    R10, [R15 + #344 (32-bit)]	# raw ptr
0774    jb,u   B47  P=0.999900 C=-1.000000

077a    B59: #	out( B227 B60 ) <- in( B58 )  Freq: 33.002
077a    vmovdqu [rsp + 128],XMM1	# spill
0783    vmovdqu [rsp + 0],XMM4	# spill
0788    movdq   RBP, XMM3	# spill
078d    movq    RSI, precise klass [D: 0x00007f8467f0e730:Constant:exact *	# ptr
0797    movl    RDX, #4	# int
079c    call,static  wrapper for: _new_array_Java
        # jdk.incubator.vector.DoubleVector::lanewiseTemplate @ bci:168 (line 651) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x00007f8469580350 STK[2]=#Ptr0x00007f8469581bb0 STK[3]=#4 STK[4]=rsp + #88 STK[5]=#ScObj0 STK[6]=#Ptr0x00007f846a852f10
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #128 }
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 279) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:90 (line 26) L[0]=rsp + #32 L[1]=rsp + #40 L[2]=rsp + #48 L[3]=rsp + #56 L[4]=_ L[5]=rsp + #64 L[6]=_ L[7]=rsp + #80 L[8]=RBP L[9]=_ L[10]=#ScObj0 L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #0 }
        # OopMap {[32]=Oop [40]=Oop [48]=Oop [88]=Oop [96]=Oop off=1956/0x7a4}

07a4    B60: #	out( B48 ) <- in( B59 )  Freq: 33.0013
        # Block is sole successor of call
07a4    movdq   XMM3, RBP	# spill
07a9    vmovdqu XMM4,[rsp + 0]	# spill
07ae    vmovdqu XMM1,[rsp + 128]	# spill
07b7    jmp     B48

07bc    B61: #	out( B224 B62 ) <- in( B53 )  Freq: 33.002
07bc    vmovdqu [rsp + 96],XMM0	# spill
07c2    movdq   RBP, XMM3	# spill
07c7    movq    RSI, precise klass [D: 0x00007f8467f0e730:Constant:exact *	# ptr
07d1    movl    RDX, #4	# int
        nop 	# 2 bytes pad for loops and calls
07d8    call,static  wrapper for: _new_array_Java
        # jdk.incubator.vector.DoubleVector::lanewiseTemplate @ bci:168 (line 651) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x00007f8469580350 STK[2]=#Ptr0x00007f8469581bb0 STK[3]=#4 STK[4]=rsp + #0 STK[5]=#ScObj0 STK[6]=#Ptr0x00007f846a852f10
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #96 }
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 279) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:74 (line 25) L[0]=rsp + #32 L[1]=rsp + #40 L[2]=rsp + #48 L[3]=rsp + #56 L[4]=_ L[5]=rsp + #64 L[6]=_ L[7]=rsp + #80 L[8]=RBP L[9]=_ L[10]=_ L[11]=rsp + #88 L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # OopMap {[0]=Oop [32]=Oop [40]=Oop [48]=Oop [88]=Oop off=2016/0x7e0}

07e0    B62: #	out( B55 ) <- in( B61 )  Freq: 33.0014
        # Block is sole successor of call
07e0    movdq   XMM3, RBP	# spill
07e5    vmovdqu XMM0,[rsp + 96]	# spill
07eb    jmp     B55

07f0    B63: #	out( B223 B64 ) <- in( B55 )  Freq: 33.002
07f0    vmovdqu [rsp + 128],XMM4	# spill
07f9    movsd   [rsp + #104], XMM3	# spill
07ff    movq    RBP, [rsp + #0]	# spill
0803    vmovdqu [rsp + 0],XMM0	# spill
0808    movq    RSI, precise klass jdk/incubator/vector/Double256Vector: 0x00007f8467be7ba0:Constant:exact *	# ptr
        nop 	# 2 bytes pad for loops and calls
0814    call,static  wrapper for: _new_instance_Java
        # jdk.incubator.vector.DoubleVector::lanewiseTemplate @ bci:168 (line 651) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x00007f8469580350 STK[2]=#Ptr0x00007f8469581bb0 STK[3]=#4 STK[4]=RBP STK[5]=#ScObj0 STK[6]=#Ptr0x00007f846a852f10
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #0 }
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 279) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:74 (line 25) L[0]=rsp + #32 L[1]=rsp + #40 L[2]=rsp + #48 L[3]=rsp + #56 L[4]=_ L[5]=rsp + #64 L[6]=_ L[7]=rsp + #80 L[8]=rsp + #104 L[9]=_ L[10]=_ L[11]=rsp + #88 L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # OopMap {rbp=Oop [32]=Oop [40]=Oop [48]=Oop [88]=Oop [96]=Oop off=2076/0x81c}

081c    B64: #	out( B57 ) <- in( B63 )  Freq: 33.0014
        # Block is sole successor of call
081c    movsd   XMM3, [rsp + #104]	# spill
0822    vmovdqu XMM4,[rsp + 128]	# spill
082b    jmp     B57

0830    B65: #	out( B226 B66 ) <- in( B48 )  Freq: 33.002
0830    vmovdqu [rsp + 160],XMM0	# spill
0839    vmovdqu [rsp + 128],XMM4	# spill
0842    movsd   [rsp + #112], XMM3	# spill
0848    movq    RBP, [rsp + #88]	# spill
084d    vmovdqu [rsp + 0],XMM1	# spill
0852    movq    RSI, precise klass jdk/incubator/vector/Double256Vector: 0x00007f8467be7ba0:Constant:exact *	# ptr
085c    call,static  wrapper for: _new_instance_Java
        # jdk.incubator.vector.DoubleVector::lanewiseTemplate @ bci:168 (line 651) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x00007f8469580350 STK[2]=#Ptr0x00007f8469581bb0 STK[3]=#4 STK[4]=RBP STK[5]=#ScObj0 STK[6]=#Ptr0x00007f846a852f10
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #0 }
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 279) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:90 (line 26) L[0]=rsp + #32 L[1]=rsp + #40 L[2]=rsp + #48 L[3]=rsp + #56 L[4]=_ L[5]=rsp + #64 L[6]=_ L[7]=rsp + #80 L[8]=rsp + #112 L[9]=_ L[10]=#ScObj0 L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #128 }
        # OopMap {rbp=Oop [32]=Oop [40]=Oop [48]=Oop [96]=Oop [104]=Oop off=2148/0x864}

0864    B66: #	out( B50 ) <- in( B65 )  Freq: 33.0013
        # Block is sole successor of call
0864    movsd   XMM3, [rsp + #112]	# spill
086a    vmovdqu XMM4,[rsp + 128]	# spill
0873    vmovdqu XMM0,[rsp + 160]	# spill
        nop 	# 4 bytes pad for loops and calls
0880    jmp     B50

0885    B67: #	out( B68 ) <- in( B19 )  Freq: 1.01327e-06
0885    movq    RCX, RDI	# spill
0888    movq    RDI, R12	# spill
088b    movq    R12, RCX	# spill
088e    movq    RCX, RDI	# spill

0891    B68: #	out( N3212 ) <- in( B67 B173 B52 )  Freq: 0.334349
0891    movl    RSI, #-28	# int
0896    movq    RBP, R10	# spill
0899    movq    [rsp + #8], R8	# spill
089e    movsd   XMM0, [rsp + #56]	# spill
08a4    movsd   [rsp + #16], XMM0	# spill
08aa    movsd   XMM0, [rsp + #64]	# spill
08b0    movsd   [rsp + #24], XMM0	# spill
08b6    movsd   [rsp + #40], XMM3	# spill
08bc    movq    [rsp + #48], RCX	# spill
08c1    movq    [rsp + #56], R12	# spill
08c6    movq    [rsp + #64], R11	# spill
08cb    movl    [rsp + #36], R9	# spill
08d0    movl    [rsp + #72], RBX	# spill
08d4    call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 359) L[0]=_ L[1]=_ STK[0]=rsp + #36 STK[1]=rsp + #72 STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 74) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::fromArray @ bci:9 (line 2562) L[0]=#Ptr0x00007f846c5c22d0 L[1]=rsp + #64 L[2]=_ L[3]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:71 (line 25) L[0]=RBP L[1]=rsp + #64 L[2]=rsp + #8 L[3]=rsp + #16 L[4]=_ L[5]=rsp + #24 L[6]=_ L[7]=rsp + #36 L[8]=rsp + #40 L[9]=_ L[10]=_ L[11]=rsp + #48 L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=rsp + #56
        # OopMap {rbp=Oop [8]=Oop [48]=Oop [56]=Oop [64]=Oop off=2268/0x8dc}
08dc    stop	# ShouldNotReachHere

08f0    B69: #	out( B70 ) <- in( B57 )  Freq: 0.334347
08f0    movq    R10, [rsp + #32]	# spill
08f5    movq    R11, [rsp + #40]	# spill
08fa    movq    R8, [rsp + #48]	# spill
08ff    movl    RBP, [rsp + #76]	# spill

0903    B70: #	out( B71 ) <- in( B174 B69 )  Freq: 0.334348
0903    vmovdqu [rsp + 0],XMM4	# spill
0908    movl    R9, [rsp + #80]	# spill

090d    B71: #	out( N3212 ) <- in( B172 B70 )  Freq: 0.334349
090d    movl    RSI, #-28	# int
0912    movq    [rsp + #32], R10	# spill
0917    movq    [rsp + #40], R11	# spill
091c    movsd   [rsp + #80], XMM3	# spill
0922    movq    [rsp + #96], R8	# spill
0927    movl    [rsp + #76], R9	# spill
092c    call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 359) L[0]=_ L[1]=_ STK[0]=rsp + #76 STK[1]=RBP STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 74) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::fromArray @ bci:9 (line 2562) L[0]=#Ptr0x00007f846c5c22d0 L[1]=rsp + #96 L[2]=_ L[3]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:87 (line 26) L[0]=rsp + #32 L[1]=rsp + #40 L[2]=rsp + #96 L[3]=rsp + #56 L[4]=_ L[5]=rsp + #64 L[6]=_ L[7]=rsp + #76 L[8]=rsp + #80 L[9]=_ L[10]=#ScObj0 L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=rsp + #88
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #0 }
        # OopMap {[32]=Oop [40]=Oop [88]=Oop [96]=Oop off=2356/0x934}
0934    stop	# ShouldNotReachHere

0948    B72: #	out( B207 B73 ) <- in( B16 )  Freq: 9.99995e-07
0948    testq   RDI, RDI	# ptr
094b    je     B207  P=0.000001 C=-1.000000

0951    B73: #	out( B74 ) <- in( B72 )  Freq: 9.99994e-07
0951    movq    RCX, R12	# spill
0954    movq    R12, RDI	# spill

0957    B74: #	out( B185 B75 ) <- in( B73 B179 B51 )  Freq: 0.329968
0957    movl    RBX, [R12 + #8 (8-bit)]	# compressed klass ptr
        nop 	# 4 bytes pad for loops and calls
0960    cmpl    RBX, narrowklass: precise klass jdk/incubator/vector/Double256Vector: 0x00007f8467be7ba0:Constant:exact *	# compressed klass ptr
0966    jne,u   B185  P=0.000001 C=-1.000000

096c    B75: #	out( B212 B76 ) <- in( B74 )  Freq: 0.329968
096c    movl    RBX, [RCX + #8 (8-bit)]	# compressed klass ptr
096f    NullCheck RCX

096f    B76: #	out( B186 B77 ) <- in( B75 )  Freq: 0.329967
096f    # checkcastPP of R12
096f    movq    RDI, [R12 + #16 (8-bit)]	# ptr ! Field: jdk/internal/vm/vector/VectorSupport$VectorPayload.payload (constant)
0974    load_vector XMM2,[RDI + #16 (8-bit)]
0979    xorpd   XMM0, XMM0	# double 0.0
097d    xorpd   XMM1, XMM1	# double 0.0
0981    vector_reduction_double XMM1,XMM2 ; using XMM4, XMM5 as TEMP
09a1    vaddsd  XMM4, XMM1, [RSP + #56 (32-bit)]
09a7    cmpl    RBX, narrowklass: precise klass jdk/incubator/vector/Double256Vector: 0x00007f8467be7ba0:Constant:exact *	# compressed klass ptr
09ad    jne,u   B186  P=0.000001 C=-1.000000

09b3    B77: #	out( B213 B78 ) <- in( B76 )  Freq: 0.329967
09b3    movl    RDX, [R11 + #12 (8-bit)]	# range
09b7    NullCheck R11

09b7    B78: #	out( B96 B79 ) <- in( B77 )  Freq: 0.329967
09b7    # checkcastPP of RCX
09b7    movq    RBX, [RCX + #16 (8-bit)]	# ptr ! Field: jdk/internal/vm/vector/VectorSupport$VectorPayload.payload (constant)
09bb    load_vector XMM2,[RBX + #16 (8-bit)]
09c0    movl    RBP, RDX	# spill
09c2    decl    RBP	# int
09c4    movl    R13, #-2147483648	# int
09ca    xorl    RAX, RAX	# int
09cc    vector_reduction_double XMM0,XMM2 ; using XMM5, XMM6 as TEMP
09ec    vaddsd  XMM5, XMM0, [RSP + #64 (32-bit)]
09f2    cmpl    R9, RDX
09f5    jge     B96  P=0.500000 C=-1.000000

09fb    B79: #	out( B189 B80 ) <- in( B78 )  Freq: 0.164983
        nop 	# 5 bytes pad for loops and calls
0a00    cmpl    R9, RDX	# unsigned
0a03    jnb,u   B189  P=0.000001 C=-1.000000

0a09    B80: #	out( B189 B81 ) <- in( B79 )  Freq: 0.164983
0a09    cmpl    RBP, RDX	# unsigned
0a0b    jnb,u   B189  P=0.000001 C=-1.000000

0a11    B81: #	out( B189 B82 ) <- in( B80 )  Freq: 0.164983
0a11    movl    RSI, [R8 + #12 (8-bit)]	# range
0a15    NullCheck R8

0a15    B82: #	out( B189 B83 ) <- in( B81 )  Freq: 0.164983
0a15    cmpl    R9, RSI	# unsigned
0a18    jnb,u   B189  P=0.000001 C=-1.000000

0a1e    B83: #	out( B189 B84 ) <- in( B82 )  Freq: 0.164983
        nop 	# 2 bytes pad for loops and calls
0a20    cmpl    RBP, RSI	# unsigned
0a22    jnb,u   B189  P=0.000001 C=-1.000000

0a28    B84: #	out( B85 ) <- in( B83 )  Freq: 0.164983
0a28    movl    RBX, R9	# spill
0a2b    incl    RBX	# int
        nop 	# 3 bytes pad for loops and calls

0a30    B85: #	out( B85 B86 ) <- in( B84 B85 ) Loop( B85-B85 inner pre of N832) Freq: 1.64983
0a30    vaddsd  XMM4, XMM4, [R11 + #16 + R9 << #3]
0a37    vaddsd  XMM5, XMM5, [R8 + #16 + R9 << #3]
0a3e    incl    R9	# int
0a41    cmpl    R9, RBX
0a44    jl,s   B85	# loop end  P=0.900000 C=-1.000000

0a46    B86: #	out( B130 B87 ) <- in( B85 )  Freq: 0.164983
0a46    movl    RBX, RDX	# spill
0a48    addl    RBX, #-7	# int
0a4b    cmpl    RBP, RBX
0a4d    cmovll RBX, R13	# signed, int
0a51    cmpl    R9, RBX
0a54    jge     B130  P=0.000001 C=-1.000000

0a5a    B87: #	out( B190 B88 ) <- in( B86 )  Freq: 0.164982
0a5a    # castII of R9
        nop 	# 6 bytes pad for loops and calls
0a60    cmpl    R9, RSI	# unsigned
0a63    jnb,u   B190  P=0.000001 C=-1.000000

0a69    B88: #	out( B191 B89 ) <- in( B87 )  Freq: 0.164982
0a69    cmpl    R9, RSI	# unsigned
0a6c    jnb,u   B191  P=0.000001 C=-1.000000

0a72    B89: #	out( B192 B90 ) <- in( B88 )  Freq: 0.164982
0a72    cmpl    R9, RDX	# unsigned
0a75    jnb,u   B192  P=0.000001 C=-1.000000

0a7b    B90: #	out( B193 B91 ) <- in( B89 )  Freq: 0.164982
        nop 	# 5 bytes pad for loops and calls
0a80    cmpl    R9, RDX	# unsigned
0a83    jnb,u   B193  P=0.000001 C=-1.000000

0a89    B91: #	out( B194 B92 ) <- in( B90 )  Freq: 0.164982
0a89    cmpl    R9, RDX	# unsigned
0a8c    jnb,u   B194  P=0.000001 C=-1.000000

0a92    B92: #	out( B195 B93 ) <- in( B91 )  Freq: 0.164982
0a92    movl    RDI, R9	# spill
0a95    addl    RDI, #7	# int
0a98    cmpl    RDI, RDX	# unsigned
        nop 	# 6 bytes pad for loops and calls
0aa0    jnb,u   B195  P=0.000001 C=-1.000000

0aa6    B93: #	out( B196 B94 ) <- in( B92 )  Freq: 0.164981
0aa6    cmpl    R9, RSI	# unsigned
0aa9    jnb,u   B196  P=0.000001 C=-1.000000

0aaf    B94: #	out( B197 B95 ) <- in( B93 )  Freq: 0.164981
0aaf    cmpl    RDI, RSI	# unsigned
0ab1    jnb,u   B197  P=0.000001 C=-1.000000

0ab7    B95: #	out( B128 ) <- in( B94 )  Freq: 0.164981
0ab7    movl    RSI, #8000	# int
        nop 	# 4 bytes pad for loops and calls
0ac0    jmp     B128

0ac5    B96: #	out( B187 B97 ) <- in( B133 B130 B78 )  Freq: 0.329965
0ac5    cvtsi2sdl XMM2, RDX	# i2d
0ac9    vdivsd  XMM4, XMM4, XMM2
0acd    vdivsd  XMM7, XMM5, XMM2
0ad1    movl    RDI, RDX	# spill
0ad3    addl    RDI, #-3	# int
0ad6    replicateD XMM5,XMM7
0adb    replicateD XMM6,XMM4
0ae0    # MachConstantBaseNode (empty encoding)
0ae0    ucomisd XMM3, [constant table base + #0]	# load from constant table: double=#0.000000
0ae8    jbe,u   B187  P=0.000001 C=1030751.000000

0aee    B97: #	out( B188 B98 ) <- in( B96 )  Freq: 0.329964
0aee    replicateD XMM8,#0.000000
0af3    testl   RDI, RDI
0af5    jl     B188  P=0.000001 C=-1.000000

0afb    B98: #	out( B188 B99 ) <- in( B97 )  Freq: 0.329964
        nop 	# 5 bytes pad for loops and calls
0b00    movl    R9, [R8 + #12 (8-bit)]	# range
0b04    NullCheck R8

0b04    B99: #	out( B188 B100 ) <- in( B98 )  Freq: 0.329964
0b04    addl    R9, #-3	# int
0b08    testl   R9, R9
0b0b    jl     B188  P=0.000001 C=-1.000000

0b11    B100: #	out( B101 ) <- in( B99 )  Freq: 0.329963
0b11    vmovdqu XMM9,XMM8	# spill
0b16    xorl    RBX, RBX	# int
        nop 	# 8 bytes pad for loops and calls

0b20    B101: #	out( B134 B102 ) <- in( B100 B103 ) Loop( B101-B103 inner ) Freq: 109023
0b20    cmpl    RBX, RDI	# unsigned
0b22    jnb,u   B134  P=0.000001 C=-1.000000

0b28    B102: #	out( B135 B103 ) <- in( B101 )  Freq: 109023
0b28    # castII of RBX
0b28    load_vector XMM2,[R11 + #16 + RBX << #3]
0b2f    vsubpd  XMM2,XMM2,XMM6	! sub packedD
0b33    cmpl    RBX, R9	# unsigned
0b36    jnb,u   B135  P=0.000001 C=-1.000000

0b3c    B103: #	out( B101 B104 ) <- in( B102 )  Freq: 109023
0b3c    load_vector XMM10,[R8 + #16 + RBX << #3]
0b43    # TLS is in R15
0b43    movq    RSI, [R15 + #304 (32-bit)]	# ptr
0b4a    vsubpd  XMM10,XMM10,XMM5	! sub packedD
0b4e    vmulpd  XMM11,XMM2,XMM2	! mul packedD
0b52    vmulpd  XMM2,XMM10,XMM2	! mul packedD
0b56    vaddpd  XMM8,XMM8,XMM11	! add packedD
0b5b    vaddpd  XMM9,XMM9,XMM2	! add packedD
0b5f    addl    RBX, #4	# int
0b62    testl   rax, [RSI]	# Safepoint: poll for GC        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:272 (line 46) L[0]=R10 L[1]=R11 L[2]=R8 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=RBX L[8]=XMM3 L[9]=_ L[10]=R12 L[11]=RCX L[12]=XMM4 L[13]=_ L[14]=XMM7 L[15]=_ L[16]=#0.000000D L[17]=_ L[18]=#0.000000D L[19]=_ L[20]=#ScObj0 L[21]=#ScObj1 L[22]=_
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=XMM9 }
        # ScObj1 jdk/incubator/vector/Double256Vector={ [payload :0]=XMM8 }
        # OopMap {r10=Oop r11=Oop r8=Oop r12=Oop rcx=Oop off=2914/0xb62}
0b64    cvtsi2sdl XMM2, RBX	# i2d
0b68    ucomisd XMM3, XMM2 test
0b6c    jnbe,us  B101  P=0.999999 C=1030750.000000

0b6e    B104: #	out( B122 B105 ) <- in( B103 B187 )  Freq: 0.109023
0b6e    vaddsd  XMM2, XMM0, [constant table base + #0]	# load from constant table: double=#0.000000
0b76    vaddsd  XMM1, XMM1, [constant table base + #0]	# load from constant table: double=#0.000000
        nop 	# 2 bytes pad for loops and calls
0b80    cmpl    RBX, RDX
0b82    jge     B122  P=0.500000 C=-1.000000

0b88    B105: #	out( B198 B106 ) <- in( B104 )  Freq: 0.0545114
0b88    cmpl    RBX, RDX	# unsigned
0b8a    jnb,u   B198  P=0.000001 C=-1.000000

0b90    B106: #	out( B198 B107 ) <- in( B105 )  Freq: 0.0545114
0b90    cmpl    RBP, RDX	# unsigned
0b92    jnb,u   B198  P=0.000001 C=-1.000000

0b98    B107: #	out( B198 B108 ) <- in( B106 )  Freq: 0.0545113
        nop 	# 8 bytes pad for loops and calls
0ba0    movl    RCX, [R8 + #12 (8-bit)]	# range
0ba4    NullCheck R8

0ba4    B108: #	out( B198 B109 ) <- in( B107 )  Freq: 0.0545113
0ba4    cmpl    RBX, RCX	# unsigned
0ba6    jnb,u   B198  P=0.000001 C=-1.000000

0bac    B109: #	out( B198 B110 ) <- in( B108 )  Freq: 0.0545112
0bac    cmpl    RBP, RCX	# unsigned
0bae    jnb,u   B198  P=0.000001 C=-1.000000

0bb4    B110: #	out( B111 ) <- in( B109 )  Freq: 0.0545111
0bb4    movl    RSI, R8	# ptr -> int
0bb7    shrl    RSI, #3
0bba    andl    RSI, #3	# int
0bbd    addl    RSI, RBX	# int
0bbf    movl    R9, #1	# int
0bc5    subl    R9, RSI	# int
0bc8    andl    R9, #3	# int
0bcc    addl    R9, RBX	# int
0bcf    incl    R9	# int
0bd2    cmpl    R9, RDX
0bd5    cmovlgt R9, RDX	# min
        nop 	# 3 bytes pad for loops and calls

0bdc    B111: #	out( B111 B112 ) <- in( B110 B111 ) Loop( B111-B111 inner pre of N842) Freq: 0.545111
0bdc    movsd   XMM0, [R8 + #16 + RBX << #3]	# double
0be3    movsd   XMM3, [R11 + #16 + RBX << #3]	# double
0bea    vsubsd  XMM8, XMM0, XMM7
0bee    vsubsd  XMM0, XMM3, XMM4
0bf2    vmulsd  XMM3, XMM0, XMM0
0bf6    vmulsd  XMM0, XMM8, XMM0
0bfa    vaddsd  XMM1, XMM1, XMM3
0bfe    vaddsd  XMM2, XMM2, XMM0
0c02    incl    RBX	# int
0c04    cmpl    RBX, R9
0c07    jl,s   B111	# loop end  P=0.900000 C=-1.000000

0c09    B112: #	out( B147 B113 ) <- in( B111 )  Freq: 0.0545111
0c09    movl    R9, RDX	# spill
0c0c    addl    R9, #-15	# int
0c10    cmpl    RBP, R9
0c13    cmovll R9, R13	# signed, int
0c17    cmpl    RBX, R9
        nop 	# 6 bytes pad for loops and calls
0c20    jge     B147  P=0.000001 C=-1.000000

0c26    B113: #	out( B199 B114 ) <- in( B112 )  Freq: 0.0545111
0c26    # castII of RBX
0c26    cmpl    RBX, RCX	# unsigned
0c28    jnb,u   B199  P=0.000001 C=-1.000000

0c2e    B114: #	out( B200 B115 ) <- in( B113 )  Freq: 0.054511
0c2e    cmpl    RBX, RCX	# unsigned
0c30    jnb,u   B200  P=0.000001 C=-1.000000

0c36    B115: #	out( B201 B116 ) <- in( B114 )  Freq: 0.054511
0c36    cmpl    RBX, RDX	# unsigned
0c38    jnb,u   B201  P=0.000001 C=-1.000000

0c3e    B116: #	out( B202 B117 ) <- in( B115 )  Freq: 0.0545109
        nop 	# 2 bytes pad for loops and calls
0c40    cmpl    RBX, RDX	# unsigned
0c42    jnb,u   B202  P=0.000001 C=-1.000000

0c48    B117: #	out( B203 B118 ) <- in( B116 )  Freq: 0.0545109
0c48    cmpl    RBX, RDX	# unsigned
0c4a    jnb,u   B203  P=0.000001 C=-1.000000

0c50    B118: #	out( B204 B119 ) <- in( B117 )  Freq: 0.0545108
0c50    movl    RSI, RBX	# spill
0c52    addl    RSI, #15	# int
0c55    cmpl    RSI, RDX	# unsigned
0c57    jnb,u   B204  P=0.000001 C=-1.000000

0c5d    B119: #	out( B205 B120 ) <- in( B118 )  Freq: 0.0545108
        nop 	# 3 bytes pad for loops and calls
0c60    cmpl    RBX, RCX	# unsigned
0c62    jnb,u   B205  P=0.000001 C=-1.000000

0c68    B120: #	out( B206 B121 ) <- in( B119 )  Freq: 0.0545107
0c68    cmpl    RSI, RCX	# unsigned
0c6a    jnb,u   B206  P=0.000001 C=-1.000000

0c70    B121: #	out( B140 ) <- in( B120 )  Freq: 0.0545107
0c70    movl    RSI, #16000	# int
0c75    jmp     B140

0c7a    B122: #	out( B214 B123 ) <- in( B150 B147 B104 )  Freq: 0.109022
0c7a    vdivsd  XMM0, XMM2, XMM1
        nop 	# 2 bytes pad for loops and calls
0c80    movsd   [R10 + #24 (8-bit)], XMM0	# double ! Field: org/jml/regression/linear/DoubleVectorLinearRegression.slope
0c86    NullCheck R10

0c86    B123: #	out( N3212 ) <- in( B122 )  Freq: 0.109022
0c86    vmulsd  XMM0, XMM4, XMM0
0c8a    vsubsd  XMM0, XMM7, XMM0
0c8e    movsd   [R10 + #16 (8-bit)], XMM0	# double ! Field: org/jml/regression/linear/DoubleVectorLinearRegression.intercept
0c94    vzeroupper
	addq    rsp, 208	# Destroy frame
	popq    rbp
	cmpq     rsp, poll_offset[r15_thread] 
	ja       #safepoint_stub	# Safepoint: poll for GC

0cac    ret
        nop 	# 3 bytes pad for loops and calls

0cb0    B124: #	out( B125 ) <- in( B125 ) top-of-loop Freq: 14.8483
0cb0    movl    R9, R10	# spill

0cb3    B125: #	out( B124 B126 ) <- in( B128 B124 ) Loop( B125-B124 inner main of N988 strip mined) Freq: 16.4981
0cb3    vaddsd  XMM2, XMM5, [R8 + #16 + R9 << #3]
0cba    vaddsd  XMM4, XMM4, [R11 + #16 + R9 << #3]
0cc1    movslq  R10, R9	# i2l
0cc4    vaddsd  XMM4, XMM4, [R11 + #24 + R10 << #3]
0ccb    vaddsd  XMM2, XMM2, [R8 + #24 + R10 << #3]
0cd2    vaddsd  XMM4, XMM4, [R11 + #32 + R10 << #3]
0cd9    vaddsd  XMM2, XMM2, [R8 + #32 + R10 << #3]
0ce0    vaddsd  XMM4, XMM4, [R11 + #40 + R10 << #3]
0ce7    vaddsd  XMM2, XMM2, [R8 + #40 + R10 << #3]
0cee    vaddsd  XMM4, XMM4, [R11 + #48 + R10 << #3]
0cf5    vaddsd  XMM2, XMM2, [R8 + #48 + R10 << #3]
0cfc    vaddsd  XMM4, XMM4, [R11 + #56 + R10 << #3]
0d03    vaddsd  XMM2, XMM2, [R8 + #56 + R10 << #3]
0d0a    vaddsd  XMM4, XMM4, [R11 + #64 + R10 << #3]
0d11    vaddsd  XMM2, XMM2, [R8 + #64 + R10 << #3]
0d18    vaddsd  XMM4, XMM4, [R11 + #72 + R10 << #3]
0d1f    vaddsd  XMM5, XMM2, [R8 + #72 + R10 << #3]
0d26    movl    R10, R9	# spill
0d29    addl    R10, #8	# int
0d2d    cmpl    R10, RDI
0d30    jl     B124	# loop end  P=0.900000 C=-1.000000

0d36    B126: #	out( B129 B127 ) <- in( B125 )  Freq: 1.64981
0d36    # TLS is in R15
0d36    movq    R9, [R15 + #304 (32-bit)]	# ptr
0d3d    testl   rax, [R9]	# Safepoint: poll for GC        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:156 (line 32) L[0]=R14 L[1]=R11 L[2]=R8 L[3]=XMM4 L[4]=_ L[5]=XMM5 L[6]=_ L[7]=R10 L[8]=XMM3 L[9]=_ L[10]=R12 L[11]=RCX L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # OopMap {r11=Oop r8=Oop r12=Oop rcx=Oop r14=Oop off=3389/0xd3d}
0d40    movl    R9, R10	# spill
0d43    cmpl    R10, RBX
0d46    jge,s   B129  P=0.100000 C=-1.000000

0d48    B127: #	out( B128 ) <- in( B126 )  Freq: 1.48483
0d48    movq    R10, R14	# spill

0d4b    B128: #	out( B125 ) <- in( B95 B127 ) Loop( B128-B127 ) Freq: 1.64981
0d4b    movl    RDI, RBX	# spill
0d4d    subl    RDI, R9	# int
0d50    cmpl    RBX, R9
0d53    cmovll RDI, RAX	# signed, int
0d56    cmpl    RDI, #8000	# unsigned
0d5c    cmovlnbe RDI, RSI	# unsigned, int
0d5f    addl    RDI, R9	# int
0d62    movq    R14, R10	# spill
0d65    jmp     B125

0d6a    B129: #	out( B130 ) <- in( B126 )  Freq: 0.164981
0d6a    movq    R10, R14	# spill

0d6d    B130: #	out( B96 B131 ) <- in( B86 B129 )  Freq: 0.164981
0d6d    cmpl    R9, RDX
0d70    jge     B96  P=0.500000 C=-1.000000

0d76    B131: #	out( B132 ) <- in( B130 )  Freq: 0.0824906
0d76    # castII of R9
        nop 	# 2 bytes pad for loops and calls

0d78    B132: #	out( B132 B133 ) <- in( B131 B132 ) Loop( B132-B132 inner post of N832) Freq: 0.824906
0d78    vaddsd  XMM4, XMM4, [R11 + #16 + R9 << #3]
0d7f    vaddsd  XMM5, XMM5, [R8 + #16 + R9 << #3]
0d86    incl    R9	# int
0d89    cmpl    R9, RDX
0d8c    jl,s   B132	# loop end  P=0.900000 C=-1.000000

0d8e    B133: #	out( B96 ) <- in( B132 )  Freq: 0.0824906
0d8e    jmp     B96

0d93    B134: #	out( N3212 ) <- in( B101 )  Freq: 0.11047
0d93    movl    RSI, #-28	# int
0d98    movq    RBP, R10	# spill
0d9b    movq    [rsp + #8], R8	# spill
0da0    movsd   [rsp + #24], XMM3	# spill
0da6    movq    [rsp + #32], R12	# spill
0dab    movq    [rsp + #40], RCX	# spill
0db0    movsd   [rsp + #48], XMM4	# spill
0db6    movsd   [rsp + #56], XMM7	# spill
0dbc    movq    [rsp + #64], R11	# spill
0dc1    movl    [rsp + #20], RBX	# spill
0dc5    movl    [rsp + #72], RDI	# spill
0dc9    vmovdqu [rsp + 96],XMM9	# spill
0dcf    vmovdqu [rsp + 128],XMM8	# spill
0dd8    call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 359) L[0]=_ L[1]=_ STK[0]=rsp + #20 STK[1]=rsp + #72 STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 74) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::fromArray @ bci:9 (line 2562) L[0]=#Ptr0x00007f846c5c22d0 L[1]=rsp + #64 L[2]=_ L[3]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:214 (line 47) L[0]=RBP L[1]=rsp + #64 L[2]=rsp + #8 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #20 L[8]=rsp + #24 L[9]=_ L[10]=rsp + #32 L[11]=rsp + #40 L[12]=rsp + #48 L[13]=_ L[14]=rsp + #56 L[15]=_ L[16]=#0.000000D L[17]=_ L[18]=#0.000000D L[19]=_ L[20]=#ScObj0 L[21]=#ScObj1 L[22]=_
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #96 }
        # ScObj1 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #128 }
        # OopMap {rbp=Oop [8]=Oop [32]=Oop [40]=Oop [64]=Oop off=3552/0xde0}
0de0    stop	# ShouldNotReachHere

0df4    B135: #	out( N3212 ) <- in( B102 )  Freq: 0.11047
0df4    movl    RSI, #-28	# int
0df9    movq    RBP, R10	# spill
0dfc    movq    [rsp + #0], R11	# spill
0e00    movsd   [rsp + #24], XMM3	# spill
0e06    movq    [rsp + #32], R12	# spill
0e0b    movq    [rsp + #40], RCX	# spill
0e10    movsd   [rsp + #48], XMM4	# spill
0e16    movsd   [rsp + #56], XMM7	# spill
0e1c    movq    [rsp + #64], R8	# spill
0e21    movl    [rsp + #20], RBX	# spill
0e25    movl    [rsp + #72], R9	# spill
0e2a    vmovdqu [rsp + 96],XMM9	# spill
0e30    vmovdqu [rsp + 128],XMM8	# spill
0e39    vmovdqu [rsp + 160],XMM2	# spill
        nop 	# 2 bytes pad for loops and calls
0e44    call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 359) L[0]=_ L[1]=_ STK[0]=rsp + #20 STK[1]=rsp + #72 STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 74) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::fromArray @ bci:9 (line 2562) L[0]=#Ptr0x00007f846c5c22d0 L[1]=rsp + #64 L[2]=_ L[3]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:232 (line 48) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #64 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #20 L[8]=rsp + #24 L[9]=_ L[10]=rsp + #32 L[11]=rsp + #40 L[12]=rsp + #48 L[13]=_ L[14]=rsp + #56 L[15]=_ L[16]=#0.000000D L[17]=_ L[18]=#0.000000D L[19]=_ L[20]=_ L[21]=#ScObj0 L[22]=#ScObj1 STK[0]=#ScObj2
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #128 }
        # ScObj1 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #160 }
        # ScObj2 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #96 }
        # OopMap {rbp=Oop [0]=Oop [32]=Oop [40]=Oop [64]=Oop off=3660/0xe4c}
0e4c    stop	# ShouldNotReachHere

0e60    B136: #	out( B137 ) <- in( B137 ) top-of-loop Freq: 0.245298
0e60    movapd  XMM0, XMM2	# spill
0e64    movdq   R14, XMM1	# spill

0e69    B137: #	out( B136 B138 ) <- in( B144 B136 ) Loop( B137-B136 inner post of N2238) Freq: 0.272553
0e69    load_vector XMM1,[R8 + #16 + RBX << #3]
0e70    load_vector XMM2,[R11 + #16 + RBX << #3]
0e77    vsubpd  XMM1,XMM1,XMM5	! sub packedD
0e7b    vsubpd  XMM2,XMM2,XMM6	! sub packedD
0e7f    vmulpd  XMM1,XMM2,XMM1	! mul packedD
0e83    vmulpd  XMM3,XMM2,XMM2	! mul packedD
0e87    movapd  XMM2, XMM0	# spill
0e8b    vector_reduction_double XMM2,XMM1 ; using XMM4, XMM7 as TEMP
0eab    movdq   XMM1, R14	# spill
0eb0    vector_reduction_double XMM1,XMM3 ; using XMM0, XMM4 as TEMP
0ed0    addl    RBX, #4	# int
0ed3    cmpl    RBX, RDI
0ed5    jl,s   B136	# loop end  P=0.900000 C=-1.000000

0ed7    B138: #	out( B146 ) <- in( B137 )  Freq: 0.0272553
0ed7    jmp     B146

0edc    B139: #	out( B140 ) <- in( B142 ) top-of-loop Freq: 0.490596
0edc    movapd  XMM2, XMM0	# spill
0ee0    movsd   XMM4, [rsp + #0]	# spill
0ee5    movsd   XMM7, [rsp + #8]	# spill

0eeb    B140: #	out( B141 ) <- in( B121 B139 ) Loop( B140-B139 ) Freq: 0.545106
0eeb    movl    RCX, R9	# spill
0eee    subl    RCX, RBX	# int
0ef0    cmpl    R9, RBX
0ef3    cmovll RCX, RAX	# signed, int
0ef6    cmpl    RCX, #16000	# unsigned
0efc    cmovlnbe RCX, RSI	# unsigned, int
0eff    addl    RCX, RBX	# int
0f01    movapd  XMM0, XMM2	# spill
0f05    movdq   R14, XMM1	# spill
0f0a    movsd   [rsp + #0], XMM4	# spill
0f0f    movsd   [rsp + #8], XMM7	# spill
        nop 	# 11 bytes pad for loops and calls

0f20    B141: #	out( B141 B142 ) <- in( B140 B141 ) Loop( B141-B141 inner main of N1155 strip mined) Freq: 5.45106
0f20    load_vector XMM1,[R8 + #16 + RBX << #3]
0f27    load_vector XMM2,[R11 + #16 + RBX << #3]
0f2e    vsubpd  XMM1,XMM1,XMM5	! sub packedD
0f32    vsubpd  XMM3,XMM2,XMM6	! sub packedD
0f36    vmulpd  XMM2,XMM3,XMM3	! mul packedD
0f3a    vmulpd  XMM1,XMM3,XMM1	! mul packedD
0f3e    movslq  R12, RBX	# i2l
0f41    load_vector XMM3,[R11 + #48 + R12 << #3]
0f48    load_vector XMM9,[R8 + #112 + R12 << #3]
0f4f    load_vector XMM8,[R11 + #80 + R12 << #3]
0f56    load_vector XMM4,[R11 + #112 + R12 << #3]
0f5d    load_vector XMM7,[R8 + #48 + R12 << #3]
0f64    load_vector XMM10,[R8 + #80 + R12 << #3]
0f6b    vsubpd  XMM11,XMM3,XMM6	! sub packedD
0f6f    vsubpd  XMM12,XMM10,XMM5	! sub packedD
0f73    vmulpd  XMM3,XMM11,XMM11	! mul packedD
0f78    vsubpd  XMM7,XMM7,XMM5	! sub packedD
0f7c    vsubpd  XMM10,XMM4,XMM6	! sub packedD
0f80    vmulpd  XMM4,XMM11,XMM7	! mul packedD
0f84    vmulpd  XMM7,XMM10,XMM10	! mul packedD
0f89    vsubpd  XMM11,XMM8,XMM6	! sub packedD
0f8d    vsubpd  XMM8,XMM9,XMM5	! sub packedD
0f91    vmulpd  XMM9,XMM11,XMM12	! mul packedD
0f96    vmulpd  XMM8,XMM10,XMM8	! mul packedD
0f9b    vmulpd  XMM10,XMM11,XMM11	! mul packedD
0fa0    vector_reduction_double XMM0,XMM1 ; using XMM11, XMM13 as TEMP
0fc4    vector_reduction_double XMM0,XMM4 ; using XMM1, XMM11 as TEMP
0fe7    movdq   R12, XMM0	# spill
0fec    movdq   XMM0, R14	# spill
0ff1    vector_reduction_double XMM0,XMM2 ; using XMM15, XMM12 as TEMP
1015    vector_reduction_double XMM0,XMM3 ; using XMM2, XMM14 as TEMP
1038    vector_reduction_double XMM0,XMM10 ; using XMM13, XMM1 as TEMP
105b    movdq   R14, XMM0	# spill
1060    movdq   XMM0, R12	# spill
1065    vector_reduction_double XMM0,XMM9 ; using XMM1, XMM2 as TEMP
1087    vector_reduction_double XMM0,XMM8 ; using XMM4, XMM11 as TEMP
10ac    movdq   XMM1, R14	# spill
10b1    vector_reduction_double XMM1,XMM7 ; using XMM2, XMM3 as TEMP
10d1    movdq   R14, XMM1	# spill
10d6    addl    RBX, #16	# int
10d9    cmpl    RBX, RCX
        nop 	# 5 bytes pad for loops and calls
10e0    jl     B141	# loop end  P=0.900000 C=-1.000000

10e6    B142: #	out( B139 B143 ) <- in( B141 )  Freq: 0.545106
10e6    # TLS is in R15
10e6    movq    R12, [R15 + #304 (32-bit)]	# ptr
10ed    testl   rax, [R12]	# Safepoint: poll for GC        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:351 (line 55) L[0]=R10 L[1]=R11 L[2]=R8 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=RBX L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=rsp + #0 L[13]=_ L[14]=rsp + #8 L[15]=_ L[16]=XMM1 L[17]=_ L[18]=XMM0 L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # OopMap {r10=Oop r11=Oop r8=Oop off=4333/0x10ed}
10f1    cmpl    RBX, R9
10f4    jl     B139  P=0.900000 C=-1.000000

10fa    B143: #	out( B145 B144 ) <- in( B142 )  Freq: 0.0545107
10fa    cmpl    RBP, RDI
10fc    cmovll RDI, R13	# signed, int
1100    cmpl    RBX, RDI
1102    jge,s   B145  P=0.500000 C=-1.000000

1104    B144: #	out( B137 ) <- in( B143 )  Freq: 0.0272553
1104    # castII of RBX
1104    jmp     B137

1109    B145: #	out( B146 ) <- in( B143 )  Freq: 0.0272553
1109    movapd  XMM2, XMM0	# spill

110d    B146: #	out( B147 ) <- in( B138 B145 )  Freq: 0.0545107
110d    movsd   XMM4, [rsp + #0]	# spill
1112    movsd   XMM7, [rsp + #8]	# spill

1118    B147: #	out( B122 B148 ) <- in( B112 B146 )  Freq: 0.0545107
1118    cmpl    RBX, RDX
        nop 	# 6 bytes pad for loops and calls
1120    jge     B122  P=0.500000 C=-1.000000

1126    B148: #	out( B149 ) <- in( B147 )  Freq: 0.0272554
1126    # castII of RBX
        nop 	# 2 bytes pad for loops and calls

1128    B149: #	out( B149 B150 ) <- in( B148 B149 ) Loop( B149-B149 inner post of N842) Freq: 0.272553
1128    movsd   XMM0, [R11 + #16 + RBX << #3]	# double
112f    movsd   XMM3, [R8 + #16 + RBX << #3]	# double
1136    vsubsd  XMM0, XMM0, XMM4
113a    vsubsd  XMM3, XMM3, XMM7
113e    vmulsd  XMM5, XMM0, XMM0
1142    vmulsd  XMM0, XMM3, XMM0
1146    vaddsd  XMM1, XMM1, XMM5
114a    vaddsd  XMM2, XMM2, XMM0
114e    incl    RBX	# int
1150    cmpl    RBX, RDX
1152    jl,s   B149	# loop end  P=0.900000 C=-1.000000

1154    B150: #	out( B122 ) <- in( B149 )  Freq: 0.0272554
1154    jmp     B122

1159    B151: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
1159    xorl    R10, R10	# ptr
115c    movq    R13, RBX	# spill
        nop 	# 1 bytes pad for loops and calls
1160    jmp     B4

1165    B152: #	out( B7 ) <- in( B4 )  Freq: 0.000999986
1165    xorl    R11, R11	# ptr
1168    jmp     B7

116d    B153: #	out( B10 ) <- in( B7 )  Freq: 0.000999985
116d    xorl    R8, R8	# ptr
1170    jmp     B10

1175    B154: #	out( B13 ) <- in( B10 )  Freq: 0.000999984
1175    xorl    RDI, RDI	# ptr
1177    jmp     B13

117c    B155: #	out( B16 ) <- in( B13 )  Freq: 0.000999983
117c    xorl    R12, R12	# ptr
        nop 	# 1 bytes pad for loops and calls
1180    jmp     B16

1185    B156: #	out( B222 B157 ) <- in( B24 )  Freq: 0.000100015
1185    movq    [rsp + #80], RSI	# spill
118a    vmovdqu [rsp + 96],XMM2	# spill
1190    movl    [rsp + #12], RBX	# spill
1194    movq    [rsp + #32], R8	# spill
1199    movq    [rsp + #24], R11	# spill
119e    movq    [rsp + #16], R10	# spill
11a3    movl    [rsp + #8], R9	# spill
11a8    movq    [rsp + #0], R12	# spill
11ac    movdq   RBP, XMM3	# spill
11b1    movq    RSI, precise klass jdk/incubator/vector/Double256Vector: 0x00007f8467be7ba0:Constant:exact *	# ptr
11bb    movq    [rsp + #72], RDI	# spill
11c0    vmovdqu [rsp + 128],XMM0	# spill
        nop 	# 3 bytes pad for loops and calls
11cc    call,static  wrapper for: _new_instance_Java
        # jdk.incubator.vector.DoubleVector::lanewiseTemplate @ bci:168 (line 651) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x00007f8469580350 STK[2]=#Ptr0x00007f8469581bb0 STK[3]=#4 STK[4]=rsp + #72 STK[5]=#ScObj0 STK[6]=#Ptr0x00007f846a852f10
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #128 }
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 279) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:74 (line 25) L[0]=rsp + #16 L[1]=rsp + #24 L[2]=rsp + #32 L[3]=rsp + #56 L[4]=_ L[5]=rsp + #64 L[6]=_ L[7]=rsp + #8 L[8]=RBP L[9]=_ L[10]=_ L[11]=rsp + #0 L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # OopMap {[0]=Oop [16]=Oop [24]=Oop [32]=Oop [72]=Oop [80]=Oop off=4564/0x11d4}

11d4    B157: #	out( B26 ) <- in( B156 )  Freq: 0.000100013
        # Block is sole successor of call
11d4    movdq   XMM3, RBP	# spill
11d9    movq    R12, [rsp + #0]	# spill
11dd    movl    R9, [rsp + #8]	# spill
11e2    movq    R10, [rsp + #16]	# spill
11e7    movq    R11, [rsp + #24]	# spill
11ec    movq    R8, [rsp + #32]	# spill
11f1    movl    RBX, [rsp + #12]	# spill
11f5    vmovdqu XMM2,[rsp + 96]	# spill
11fb    movq    RCX, RAX	# spill
11fe    movq    RSI, [rsp + #80]	# spill
1203    jmp     B26

1208    B158: #	out( B221 B159 ) <- in( B22 )  Freq: 0.000100015
1208    vmovdqu [rsp + 96],XMM0	# spill
120e    movl    [rsp + #12], RBX	# spill
1212    movq    [rsp + #40], RDI	# spill
1217    movq    [rsp + #32], R8	# spill
121c    movq    [rsp + #24], R11	# spill
1221    movq    [rsp + #16], R10	# spill
1226    movl    [rsp + #8], R9	# spill
122b    movq    [rsp + #0], R12	# spill
122f    movdq   RBP, XMM3	# spill
1234    movq    RSI, precise klass [D: 0x00007f8467f0e730:Constant:exact *	# ptr
123e    movl    RDX, #4	# int
        nop 	# 1 bytes pad for loops and calls
1244    call,static  wrapper for: _new_array_Java
        # jdk.incubator.vector.DoubleVector::lanewiseTemplate @ bci:168 (line 651) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x00007f8469580350 STK[2]=#Ptr0x00007f8469581bb0 STK[3]=#4 STK[4]=rsp + #40 STK[5]=#ScObj0 STK[6]=#Ptr0x00007f846a852f10
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #96 }
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 279) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:74 (line 25) L[0]=rsp + #16 L[1]=rsp + #24 L[2]=rsp + #32 L[3]=rsp + #56 L[4]=_ L[5]=rsp + #64 L[6]=_ L[7]=rsp + #8 L[8]=RBP L[9]=_ L[10]=_ L[11]=rsp + #0 L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # OopMap {[0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop off=4684/0x124c}

124c    B159: #	out( B24 ) <- in( B158 )  Freq: 0.000100013
        # Block is sole successor of call
124c    movdq   XMM3, RBP	# spill
1251    movq    R12, [rsp + #0]	# spill
1255    movl    R9, [rsp + #8]	# spill
125a    movq    R10, [rsp + #16]	# spill
125f    movq    R11, [rsp + #24]	# spill
1264    movq    R8, [rsp + #32]	# spill
1269    movq    RDI, [rsp + #40]	# spill
126e    movl    RBX, [rsp + #12]	# spill
1272    vmovdqu XMM0,[rsp + 96]	# spill
1278    movq    RSI, RAX	# spill
        nop 	# 5 bytes pad for loops and calls
1280    jmp     B24

1285    B160: #	out( B219 B161 ) <- in( B31 )  Freq: 0.000100015
1285    vmovdqu [rsp + 128],XMM0	# spill
128e    movl    [rsp + #48], RBP	# spill
1292    movq    [rsp + #40], RCX	# spill
1297    vmovdqu [rsp + 96],XMM2	# spill
129d    movl    [rsp + #12], RBX	# spill
12a1    movq    [rsp + #32], R8	# spill
12a6    movq    [rsp + #24], R11	# spill
12ab    movq    [rsp + #16], R10	# spill
12b0    movl    [rsp + #8], R9	# spill
12b5    movq    [rsp + #0], R12	# spill
12b9    movdq   RBP, XMM3	# spill
12be    movq    RSI, precise klass [D: 0x00007f8467f0e730:Constant:exact *	# ptr
12c8    movl    RDX, #4	# int
        nop 	# 3 bytes pad for loops and calls
12d0    call,static  wrapper for: _new_array_Java
        # jdk.incubator.vector.DoubleVector::lanewiseTemplate @ bci:168 (line 651) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x00007f8469580350 STK[2]=#Ptr0x00007f8469581bb0 STK[3]=#4 STK[4]=rsp + #0 STK[5]=#ScObj0 STK[6]=#Ptr0x00007f846a852f10
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #128 }
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 279) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:90 (line 26) L[0]=rsp + #16 L[1]=rsp + #24 L[2]=rsp + #32 L[3]=rsp + #56 L[4]=_ L[5]=rsp + #64 L[6]=_ L[7]=rsp + #8 L[8]=RBP L[9]=_ L[10]=#ScObj0 L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #96 }
        # OopMap {[0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop off=4824/0x12d8}

12d8    B161: #	out( B33 ) <- in( B160 )  Freq: 0.000100013
        # Block is sole successor of call
12d8    movdq   XMM3, RBP	# spill
12dd    movq    R12, [rsp + #0]	# spill
12e1    movl    R9, [rsp + #8]	# spill
12e6    movq    R10, [rsp + #16]	# spill
12eb    movq    R11, [rsp + #24]	# spill
12f0    movq    R8, [rsp + #32]	# spill
12f5    movl    RBX, [rsp + #12]	# spill
12f9    vmovdqu XMM2,[rsp + 96]	# spill
12ff    movq    RCX, [rsp + #40]	# spill
1304    movl    RBP, [rsp + #48]	# spill
1308    vmovdqu XMM0,[rsp + 128]	# spill
1311    movq    RSI, RAX	# spill
1314    jmp     B33

1319    B162: #	out( B220 B163 ) <- in( B33 )  Freq: 0.000100015
1319    movq    [rsp + #80], RSI	# spill
131e    vmovdqu [rsp + 128],XMM1	# spill
1327    movl    [rsp + #40], RBP	# spill
132b    movq    [rsp + #32], RCX	# spill
1330    vmovdqu [rsp + 96],XMM2	# spill
1336    movl    [rsp + #4], RBX	# spill
133a    movq    [rsp + #24], R8	# spill
133f    movq    [rsp + #16], R11	# spill
1344    movq    [rsp + #8], R10	# spill
1349    movl    [rsp + #0], R9	# spill
134d    movdq   RBP, XMM3	# spill
1352    movq    RSI, precise klass jdk/incubator/vector/Double256Vector: 0x00007f8467be7ba0:Constant:exact *	# ptr
135c    movq    [rsp + #72], R12	# spill
1361    vmovdqu [rsp + 160],XMM0	# spill
        nop 	# 2 bytes pad for loops and calls
136c    call,static  wrapper for: _new_instance_Java
        # jdk.incubator.vector.DoubleVector::lanewiseTemplate @ bci:168 (line 651) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x00007f8469580350 STK[2]=#Ptr0x00007f8469581bb0 STK[3]=#4 STK[4]=rsp + #72 STK[5]=#ScObj0 STK[6]=#Ptr0x00007f846a852f10
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #160 }
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 279) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:90 (line 26) L[0]=rsp + #8 L[1]=rsp + #16 L[2]=rsp + #24 L[3]=rsp + #56 L[4]=_ L[5]=rsp + #64 L[6]=_ L[7]=rsp + #0 L[8]=RBP L[9]=_ L[10]=#ScObj0 L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #96 }
        # OopMap {[8]=Oop [16]=Oop [24]=Oop [32]=Oop [72]=Oop [80]=Oop off=4980/0x1374}

1374    B163: #	out( B35 ) <- in( B162 )  Freq: 0.000100013
        # Block is sole successor of call
1374    movdq   XMM3, RBP	# spill
1379    movl    R9, [rsp + #0]	# spill
137d    movq    R10, [rsp + #8]	# spill
1382    movq    R11, [rsp + #16]	# spill
1387    movq    R8, [rsp + #24]	# spill
138c    movl    RBX, [rsp + #4]	# spill
1390    vmovdqu XMM2,[rsp + 96]	# spill
1396    movq    RCX, [rsp + #32]	# spill
139b    movl    RBP, [rsp + #40]	# spill
139f    vmovdqu XMM1,[rsp + 128]	# spill
13a8    movq    RDX, RAX	# spill
13ab    movq    RSI, [rsp + #80]	# spill
13b0    jmp     B35

13b5    B164: #	out( B217 B165 ) <- in( B37 )  Freq: 0.000100015
13b5    vmovdqu [rsp + 160],XMM0	# spill
13be    movl    [rsp + #44], RDI	# spill
13c2    movq    [rsp + #48], RDX	# spill
13c7    vmovdqu [rsp + 128],XMM1	# spill
13d0    movl    [rsp + #40], RBP	# spill
13d4    movq    [rsp + #32], RCX	# spill
13d9    vmovdqu [rsp + 96],XMM2	# spill
13df    movl    [rsp + #4], RBX	# spill
13e3    movq    [rsp + #24], R8	# spill
13e8    movq    [rsp + #16], R11	# spill
13ed    movq    [rsp + #8], R10	# spill
13f2    movl    [rsp + #0], R9	# spill
13f6    movdq   RBP, XMM3	# spill
13fb    movq    RSI, precise klass [D: 0x00007f8467f0e730:Constant:exact *	# ptr
1405    movl    RDX, #4	# int
        nop 	# 2 bytes pad for loops and calls
140c    call,static  wrapper for: _new_array_Java
        # jdk.incubator.vector.DoubleVector::lanewiseTemplate @ bci:168 (line 651) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x00007f8469580350 STK[2]=#Ptr0x00007f8469581bb0 STK[3]=#4 STK[4]=rsp + #32 STK[5]=#ScObj0 STK[6]=#Ptr0x00007f846a852f10
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #160 }
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 279) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:74 (line 25) L[0]=rsp + #8 L[1]=rsp + #16 L[2]=rsp + #24 L[3]=rsp + #56 L[4]=_ L[5]=rsp + #64 L[6]=_ L[7]=rsp + #44 L[8]=RBP L[9]=_ L[10]=_ L[11]=rsp + #48 L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # OopMap {[8]=Oop [16]=Oop [24]=Oop [32]=Oop [48]=Oop off=5140/0x1414}

1414    B165: #	out( B39 ) <- in( B164 )  Freq: 0.000100013
        # Block is sole successor of call
1414    movdq   XMM3, RBP	# spill
1419    movl    R9, [rsp + #0]	# spill
141d    movq    R10, [rsp + #8]	# spill
1422    movq    R11, [rsp + #16]	# spill
1427    movq    R8, [rsp + #24]	# spill
142c    movl    RBX, [rsp + #4]	# spill
1430    vmovdqu XMM2,[rsp + 96]	# spill
1436    movq    RCX, [rsp + #32]	# spill
143b    movl    RBP, [rsp + #40]	# spill
143f    vmovdqu XMM1,[rsp + 128]	# spill
1448    movq    RDX, [rsp + #48]	# spill
144d    movl    RDI, [rsp + #44]	# spill
1451    vmovdqu XMM0,[rsp + 160]	# spill
145a    jmp     B39

145f    B166: #	out( B218 B167 ) <- in( B39 )  Freq: 0.000100015
145f    vmovdqu [rsp + 128],XMM4	# spill
1468    movq    [rsp + #48], RAX	# spill
146d    movl    [rsp + #36], RDI	# spill
1471    movq    [rsp + #40], RDX	# spill
1476    vmovdqu [rsp + 96],XMM1	# spill
147c    movl    [rsp + #32], RBP	# spill
1480    movl    [rsp + #4], RBX	# spill
1484    movq    [rsp + #24], R8	# spill
1489    movq    [rsp + #16], R11	# spill
148e    movq    [rsp + #8], R10	# spill
1493    movl    [rsp + #0], R9	# spill
1497    movdq   RBP, XMM3	# spill
149c    movq    RSI, precise klass jdk/incubator/vector/Double256Vector: 0x00007f8467be7ba0:Constant:exact *	# ptr
14a6    movq    [rsp + #72], RCX	# spill
14ab    vmovdqu [rsp + 160],XMM0	# spill
14b4    call,static  wrapper for: _new_instance_Java
        # jdk.incubator.vector.DoubleVector::lanewiseTemplate @ bci:168 (line 651) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x00007f8469580350 STK[2]=#Ptr0x00007f8469581bb0 STK[3]=#4 STK[4]=rsp + #72 STK[5]=#ScObj0 STK[6]=#Ptr0x00007f846a852f10
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #160 }
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 279) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:74 (line 25) L[0]=rsp + #8 L[1]=rsp + #16 L[2]=rsp + #24 L[3]=rsp + #56 L[4]=_ L[5]=rsp + #64 L[6]=_ L[7]=rsp + #36 L[8]=RBP L[9]=_ L[10]=_ L[11]=rsp + #40 L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # OopMap {[8]=Oop [16]=Oop [24]=Oop [40]=Oop [48]=Oop [72]=Oop off=5308/0x14bc}

14bc    B167: #	out( B41 ) <- in( B166 )  Freq: 0.000100013
        # Block is sole successor of call
14bc    movq    R12, RAX	# spill
14bf    movdq   XMM3, RBP	# spill
14c4    movl    R9, [rsp + #0]	# spill
14c8    movq    R10, [rsp + #8]	# spill
14cd    movq    R11, [rsp + #16]	# spill
14d2    movq    R8, [rsp + #24]	# spill
14d7    movl    RBX, [rsp + #4]	# spill
14db    movl    RBP, [rsp + #32]	# spill
14df    vmovdqu XMM1,[rsp + 96]	# spill
14e5    movq    RDX, [rsp + #40]	# spill
14ea    movl    RDI, [rsp + #36]	# spill
14ee    movq    RAX, [rsp + #48]	# spill
14f3    vmovdqu XMM4,[rsp + 128]	# spill
        nop 	# 4 bytes pad for loops and calls
1500    jmp     B41

1505    B168: #	out( B215 B169 ) <- in( B42 )  Freq: 0.000100015
1505    vmovdqu [rsp + 160],XMM2	# spill
150e    movq    [rsp + #48], R12	# spill
1513    vmovdqu [rsp + 128],XMM4	# spill
151c    movl    [rsp + #36], RDI	# spill
1520    movq    [rsp + #40], RDX	# spill
1525    vmovdqu [rsp + 96],XMM1	# spill
152b    movl    [rsp + #32], RBP	# spill
152f    movl    [rsp + #4], RBX	# spill
1533    movq    [rsp + #24], R8	# spill
1538    movq    [rsp + #16], R11	# spill
153d    movq    [rsp + #8], R10	# spill
1542    movl    [rsp + #0], R9	# spill
1546    movdq   RBP, XMM3	# spill
154b    movq    RSI, precise klass [D: 0x00007f8467f0e730:Constant:exact *	# ptr
1555    movl    RDX, #4	# int
        nop 	# 2 bytes pad for loops and calls
155c    call,static  wrapper for: _new_array_Java
        # jdk.incubator.vector.DoubleVector::lanewiseTemplate @ bci:168 (line 651) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x00007f8469580350 STK[2]=#Ptr0x00007f8469581bb0 STK[3]=#4 STK[4]=rsp + #40 STK[5]=#ScObj0 STK[6]=#Ptr0x00007f846a852f10
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #160 }
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 279) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:90 (line 26) L[0]=rsp + #8 L[1]=rsp + #16 L[2]=rsp + #24 L[3]=rsp + #56 L[4]=_ L[5]=rsp + #64 L[6]=_ L[7]=rsp + #36 L[8]=RBP L[9]=_ L[10]=#ScObj0 L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #128 }
        # OopMap {[8]=Oop [16]=Oop [24]=Oop [40]=Oop [48]=Oop off=5476/0x1564}

1564    B169: #	out( B44 ) <- in( B168 )  Freq: 0.000100013
        # Block is sole successor of call
1564    movdq   XMM3, RBP	# spill
1569    movl    R9, [rsp + #0]	# spill
156d    movq    R10, [rsp + #8]	# spill
1572    movq    R11, [rsp + #16]	# spill
1577    movq    R8, [rsp + #24]	# spill
157c    movl    RBX, [rsp + #4]	# spill
1580    movl    RBP, [rsp + #32]	# spill
1584    vmovdqu XMM1,[rsp + 96]	# spill
158a    movq    RDX, [rsp + #40]	# spill
158f    movl    RDI, [rsp + #36]	# spill
1593    vmovdqu XMM4,[rsp + 128]	# spill
159c    movq    R12, [rsp + #48]	# spill
15a1    vmovdqu XMM2,[rsp + 160]	# spill
15aa    jmp     B44

15af    B170: #	out( B216 B171 ) <- in( B44 )  Freq: 0.000100015
15af    movq    [rsp + #96], RAX	# spill
15b4    movq    [rsp + #88], R12	# spill
15b9    movl    [rsp + #80], RBP	# spill
15bd    movl    [rsp + #36], RBX	# spill
15c1    movq    [rsp + #72], R8	# spill
15c6    movq    [rsp + #48], R11	# spill
15cb    movq    [rsp + #40], R10	# spill
15d0    movl    [rsp + #32], R9	# spill
15d5    movdq   RBP, XMM3	# spill
15da    movq    RSI, precise klass jdk/incubator/vector/Double256Vector: 0x00007f8467be7ba0:Constant:exact *	# ptr
15e4    vmovdqu [rsp + 0],XMM4	# spill
15e9    movl    [rsp + #84], RDI	# spill
15ed    movq    [rsp + #104], RDX	# spill
15f2    vmovdqu [rsp + 128],XMM2	# spill
        nop 	# 1 bytes pad for loops and calls
15fc    call,static  wrapper for: _new_instance_Java
        # jdk.incubator.vector.DoubleVector::lanewiseTemplate @ bci:168 (line 651) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x00007f8469580350 STK[2]=#Ptr0x00007f8469581bb0 STK[3]=#4 STK[4]=rsp + #104 STK[5]=#ScObj0 STK[6]=#Ptr0x00007f846a852f10
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #128 }
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 279) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Double256Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:90 (line 26) L[0]=rsp + #40 L[1]=rsp + #48 L[2]=rsp + #72 L[3]=rsp + #56 L[4]=_ L[5]=rsp + #64 L[6]=_ L[7]=rsp + #84 L[8]=RBP L[9]=_ L[10]=#ScObj0 L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #0 }
        # OopMap {[40]=Oop [48]=Oop [72]=Oop [88]=Oop [96]=Oop [104]=Oop off=5636/0x1604}

1604    B171: #	out( B46 ) <- in( B170 )  Freq: 0.000100013
        # Block is sole successor of call
1604    movq    RCX, RAX	# spill
1607    movdq   XMM3, RBP	# spill
160c    movl    R9, [rsp + #32]	# spill
1611    movq    R10, [rsp + #40]	# spill
1616    movq    R11, [rsp + #48]	# spill
161b    movq    R8, [rsp + #72]	# spill
1620    movl    RBX, [rsp + #36]	# spill
1624    movl    RBP, [rsp + #80]	# spill
1628    movq    R12, [rsp + #88]	# spill
162d    movq    RAX, [rsp + #96]	# spill
1632    jmp     B46

1637    B172: #	out( B71 ) <- in( B28 )  Freq: 1.01327e-06
1637    vmovdqu [rsp + 0],XMM2	# spill
163c    movq    [rsp + #88], R12	# spill
1641    jmp     B71

1646    B173: #	out( B68 ) <- in( B36 )  Freq: 1.01326e-06
1646    movq    R12, RCX	# spill
1649    movl    R9, RDI	# spill
164c    movq    RCX, RDX	# spill
164f    jmp     B68

1654    B174: #	out( B70 ) <- in( B41 )  Freq: 1.01326e-06
1654    movq    [rsp + #88], RDX	# spill
1659    movl    [rsp + #80], RDI	# spill
        nop 	# 3 bytes pad for loops and calls
1660    jmp     B70

1665    B175: #	out( N3212 ) <- in( B18 )  Freq: 9.99993e-07
1665    movl    RSI, #-52	# int
166a    movq    RBP, R10	# spill
166d    movq    [rsp + #8], R8	# spill
1672    movsd   XMM0, [rsp + #56]	# spill
1678    movsd   [rsp + #16], XMM0	# spill
167e    movsd   XMM0, [rsp + #64]	# spill
1684    movsd   [rsp + #24], XMM0	# spill
168a    movsd   [rsp + #40], XMM3	# spill
1690    movq    [rsp + #48], R11	# spill
1695    movl    [rsp + #56], RBX	# spill
1699    movq    [rsp + #64], R12	# spill
169e    movq    [rsp + #72], RDI	# spill
        nop 	# 1 bytes pad for loops and calls
16a4    call,static  wrapper for: uncommon_trap(reason='intrinsic_or_type_checked_inlining' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 359) L[0]=_ L[1]=_ STK[0]=rsp + #32 STK[1]=rsp + #56 STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 74) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::fromArray @ bci:9 (line 2562) L[0]=#Ptr0x00007f846c5c22d0 L[1]=rsp + #48 L[2]=_ L[3]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:71 (line 25) L[0]=RBP L[1]=rsp + #48 L[2]=rsp + #8 L[3]=rsp + #16 L[4]=_ L[5]=rsp + #24 L[6]=_ L[7]=rsp + #32 L[8]=rsp + #40 L[9]=_ L[10]=_ L[11]=rsp + #64 L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=rsp + #72
        # OopMap {rbp=Oop [8]=Oop [48]=Oop [64]=Oop [72]=Oop off=5804/0x16ac}
16ac    stop	# ShouldNotReachHere

16c0    B176: #	out( N3212 ) <- in( B21 )  Freq: 9.9999e-07
16c0    movl    RSI, #-34	# int
16c5    movq    RBP, R10	# spill
16c8    movq    [rsp + #0], R11	# spill
16cc    movq    [rsp + #8], R8	# spill
16d1    movsd   XMM1, [rsp + #56]	# spill
16d7    movsd   [rsp + #16], XMM1	# spill
16dd    movsd   XMM1, [rsp + #64]	# spill
16e3    movsd   [rsp + #24], XMM1	# spill
16e9    movl    [rsp + #32], R9	# spill
16ee    movsd   [rsp + #40], XMM3	# spill
16f4    movq    [rsp + #48], R12	# spill
16f9    movq    [rsp + #56], RDI	# spill
16fe    vmovdqu [rsp + 64],XMM0	# spill
1704    call,static  wrapper for: uncommon_trap(reason='class_check' action='maybe_recompile' debug_id='0')
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_ STK[0]=rsp + #56 STK[1]=#Ptr0x00007f8467f39f90 STK[2]=#ScObj0
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #64 }
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:74 (line 25) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=rsp + #16 L[4]=_ L[5]=rsp + #24 L[6]=_ L[7]=rsp + #32 L[8]=rsp + #40 L[9]=_ L[10]=_ L[11]=rsp + #48 L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # OopMap {rbp=Oop [0]=Oop [8]=Oop [48]=Oop [56]=Oop off=5900/0x170c}
170c    stop	# ShouldNotReachHere

1720    B177: #	out( N3212 ) <- in( B27 )  Freq: 9.99988e-07
1720    movl    RSI, #-52	# int
1725    movq    [rsp + #0], R10	# spill
1729    movq    [rsp + #8], R11	# spill
172e    movsd   XMM1, [rsp + #56]	# spill
1734    movsd   [rsp + #24], XMM1	# spill
173a    movsd   XMM1, [rsp + #64]	# spill
1740    movsd   [rsp + #32], XMM1	# spill
1746    movsd   [rsp + #48], XMM3	# spill
174c    movq    [rsp + #56], R8	# spill
1751    movl    [rsp + #44], R9	# spill
1756    movq    [rsp + #64], R12	# spill
175b    vmovdqu [rsp + 96],XMM2	# spill
        nop 	# 3 bytes pad for loops and calls
1764    call,static  wrapper for: uncommon_trap(reason='intrinsic_or_type_checked_inlining' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 359) L[0]=_ L[1]=_ STK[0]=rsp + #44 STK[1]=RBP STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 74) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::fromArray @ bci:9 (line 2562) L[0]=#Ptr0x00007f846c5c22d0 L[1]=rsp + #56 L[2]=_ L[3]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:87 (line 26) L[0]=rsp + #0 L[1]=rsp + #8 L[2]=rsp + #56 L[3]=rsp + #24 L[4]=_ L[5]=rsp + #32 L[6]=_ L[7]=rsp + #44 L[8]=rsp + #48 L[9]=_ L[10]=#ScObj0 L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=rsp + #64
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #96 }
        # OopMap {[0]=Oop [8]=Oop [56]=Oop [64]=Oop off=5996/0x176c}
176c    stop	# ShouldNotReachHere

1780    B178: #	out( N3212 ) <- in( B30 )  Freq: 9.99985e-07
1780    vmovdqu XMM1,XMM0	# spill
1784    vmovdqu XMM0,XMM2	# spill
1788    movl    RSI, #-34	# int
178d    movq    RBP, R10	# spill
1790    movq    [rsp + #0], R11	# spill
1794    movq    [rsp + #8], R8	# spill
1799    movsd   XMM2, [rsp + #64]	# spill
179f    movsd   [rsp + #24], XMM2	# spill
17a5    movl    [rsp + #32], R9	# spill
17aa    movsd   [rsp + #40], XMM3	# spill
17b0    movq    [rsp + #48], R12	# spill
17b5    vmovdqu [rsp + 64],XMM1	# spill
17bb    vmovdqu [rsp + 96],XMM0	# spill
        nop 	# 3 bytes pad for loops and calls
17c4    call,static  wrapper for: uncommon_trap(reason='class_check' action='maybe_recompile' debug_id='0')
        # jdk.incubator.vector.DoubleVector::add @ bci:5 (line 1038) L[0]=_ L[1]=_ STK[0]=rsp + #48 STK[1]=#Ptr0x00007f8467f39f90 STK[2]=#ScObj0
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #64 }
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:90 (line 26) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=rsp + #56 L[4]=_ L[5]=rsp + #24 L[6]=_ L[7]=rsp + #32 L[8]=rsp + #40 L[9]=_ L[10]=#ScObj0 L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #96 }
        # OopMap {rbp=Oop [0]=Oop [8]=Oop [48]=Oop off=6092/0x17cc}
17cc    stop	# ShouldNotReachHere

17e0    B179: #	out( B74 ) <- in( B35 )  Freq: 9.99984e-07
17e0    movl    R9, RDI	# spill
17e3    movq    R12, RCX	# spill
17e6    movq    RCX, RDX	# spill
17e9    jmp     B74

17ee    B180: #	out( B182 ) <- in( B2 )  Freq: 9.99e-07
17ee    movq    R14, RBP	# spill
17f1    movq    RBX, [rsp + #0]	# spill
17f5    movq    RCX, [rsp + #8]	# spill
17fa    movq    R12, [rsp + #24]	# spill
        nop 	# 1 bytes pad for loops and calls
1800    jmp,s   B182

1802    B181: #	out( B182 ) <- in( B5 )  Freq: 9.98999e-07
1802    movq    RBX, [rsp + #0]	# spill
1806    movq    RCX, [rsp + #8]	# spill
180b    movq    R12, [rsp + #24]	# spill

1810    B182: #	out( N3212 ) <- in( B180 B181 B183 B184 B14 )  Freq: 4.99499e-06
1810    movl    RSI, #-115	# int
1815    movq    RBP, [rsp + #56]	# spill
181a    movl    R10, [rsp + #32]	# spill
181f    movl    [rsp + #8], R10	# spill
1824    movq    [rsp + #24], R13	# spill
1829    movq    [rsp + #32], R14	# spill
182e    movq    [rsp + #40], RBX	# spill
1833    movq    [rsp + #48], RCX	# spill
1838    movq    [rsp + #56], R12	# spill
        nop 	# 3 bytes pad for loops and calls
1840    call,static  wrapper for: uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:54 (line 24) L[0]=rsp + #24 L[1]=rsp + #32 L[2]=rsp + #40 L[3]=RBP L[4]=_ L[5]=rsp + #64 L[6]=_ L[7]=rsp + #8 L[8]=rsp + #16 L[9]=_ L[10]=rsp + #48 L[11]=rsp + #56 L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # OopMap {[24]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop off=6216/0x1848}
1848    stop	# ShouldNotReachHere

185c    B183: #	out( B182 ) <- in( B8 )  Freq: 9.98998e-07
185c    movq    RCX, [rsp + #8]	# spill
1861    movq    R12, [rsp + #24]	# spill
1866    jmp,s   B182

1868    B184: #	out( B182 ) <- in( B11 )  Freq: 9.98997e-07
1868    movq    R12, [rsp + #24]	# spill
186d    jmp,s   B182

186f    B185: #	out( N3212 ) <- in( B74 )  Freq: 3.29968e-07
186f    movl    RSI, #-34	# int
1874    movq    RBP, R10	# spill
1877    movq    [rsp + #0], R11	# spill
187b    movq    [rsp + #8], R8	# spill
1880    movsd   XMM0, [rsp + #64]	# spill
1886    movsd   [rsp + #16], XMM0	# spill
188c    movl    [rsp + #24], R9	# spill
1891    movsd   [rsp + #32], XMM3	# spill
1897    movq    [rsp + #48], RCX	# spill
189c    movq    [rsp + #64], R12	# spill
        nop 	# 3 bytes pad for loops and calls
18a4    call,static  wrapper for: uncommon_trap(reason='class_check' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:112 (line 29) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=_ L[4]=_ L[5]=rsp + #16 L[6]=_ L[7]=rsp + #24 L[8]=rsp + #32 L[9]=_ L[10]=rsp + #64 L[11]=rsp + #48 L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=rsp + #56 STK[1]=_ STK[2]=rsp + #64 STK[3]=#Ptr0x00007f8467f39f90
        # OopMap {rbp=Oop [0]=Oop [8]=Oop [48]=Oop [64]=Oop off=6316/0x18ac}
18ac    stop	# ShouldNotReachHere

18c0    B186: #	out( N3212 ) <- in( B76 )  Freq: 3.29967e-07
18c0    movl    RSI, #-34	# int
18c5    movq    RBP, R10	# spill
18c8    movq    [rsp + #0], R11	# spill
18cc    movq    [rsp + #8], R8	# spill
18d1    movl    [rsp + #16], R9	# spill
18d6    movsd   [rsp + #24], XMM3	# spill
18dc    movq    [rsp + #32], R12	# spill
18e1    movsd   XMM0, [rsp + #64]	# spill
18e7    movsd   [rsp + #48], XMM0	# spill
18ed    movq    [rsp + #56], RCX	# spill
18f2    movsd   [rsp + #64], XMM4	# spill
18f8    call,static  wrapper for: uncommon_trap(reason='class_check' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:124 (line 30) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=rsp + #64 L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #16 L[8]=rsp + #24 L[9]=_ L[10]=rsp + #32 L[11]=rsp + #56 L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=rsp + #48 STK[1]=_ STK[2]=rsp + #56 STK[3]=#Ptr0x00007f8467f39f90
        # OopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [56]=Oop off=6400/0x1900}
1900    stop	# ShouldNotReachHere

1914    B187: #	out( B104 ) <- in( B96 )  Freq: 3.29965e-07
1914    xorl    RBX, RBX	# int
1916    jmp     B104

191b    B188: #	out( N3212 ) <- in( B99 B97 B98 )  Freq: 9.94273e-07
191b    ucomisd XMM3, [constant table base + #0]	# load from constant table: double=#0.000000
	movl    RBP, #-1
	jp,s    done
	jb,s    done
	setne   RBP
	movzbl  RBP, RBP
done:
193c    negl    RBP	# int
193e    movl    RSI, #-138	# int
1943    movq    [rsp + #0], R10	# spill
1947    movq    [rsp + #8], R11	# spill
194c    movq    [rsp + #16], R8	# spill
1951    movsd   [rsp + #24], XMM3	# spill
1957    movq    [rsp + #32], R12	# spill
195c    movq    [rsp + #40], RCX	# spill
1961    movsd   [rsp + #48], XMM4	# spill
1967    movsd   [rsp + #56], XMM7	# spill
196d    vmovdqu [rsp + 96],XMM8	# spill
        nop 	# 1 bytes pad for loops and calls
1974    call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:205 (line 46) L[0]=rsp + #0 L[1]=rsp + #8 L[2]=rsp + #16 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=#0 L[8]=rsp + #24 L[9]=_ L[10]=rsp + #32 L[11]=rsp + #40 L[12]=rsp + #48 L[13]=_ L[14]=rsp + #56 L[15]=_ L[16]=#0.000000D L[17]=_ L[18]=#0.000000D L[19]=_ L[20]=#ScObj0 L[21]=#ScObj1 L[22]=_ STK[0]=RBP
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #96 }
        # ScObj1 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #96 }
        # OopMap {[0]=Oop [8]=Oop [16]=Oop [32]=Oop [40]=Oop off=6524/0x197c}
197c    stop	# ShouldNotReachHere

1990    B189: #	out( N3212 ) <- in( B81 B79 B80 B83 B82 )  Freq: 8.35869e-07
1990    movl    RSI, #-138	# int
1995    movq    RBP, R10	# spill
1998    movq    [rsp + #0], R11	# spill
199c    movq    [rsp + #8], R8	# spill
19a1    movsd   [rsp + #24], XMM3	# spill
19a7    movq    [rsp + #32], R12	# spill
19ac    movq    [rsp + #40], RCX	# spill
19b1    movl    [rsp + #20], R9	# spill
19b6    movsd   [rsp + #48], XMM4	# spill
19bc    movsd   [rsp + #56], XMM5	# spill
19c2    movl    [rsp + #64], RDX	# spill
        nop 	# 2 bytes pad for loops and calls
19c8    call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:134 (line 32) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=rsp + #48 L[4]=_ L[5]=rsp + #56 L[6]=_ L[7]=rsp + #20 L[8]=rsp + #24 L[9]=_ L[10]=rsp + #32 L[11]=rsp + #40 L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=rsp + #20 STK[1]=rsp + #64
        # OopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [40]=Oop off=6608/0x19d0}
19d0    stop	# ShouldNotReachHere

19e4    B190: #	out( N3212 ) <- in( B87 )  Freq: 1.67173e-07
19e4    stop	# ShouldNotReachHere

19f8    B191: #	out( N3212 ) <- in( B88 )  Freq: 1.67173e-07
19f8    stop	# ShouldNotReachHere

1a0c    B192: #	out( N3212 ) <- in( B89 )  Freq: 1.67173e-07
1a0c    stop	# ShouldNotReachHere

1a20    B193: #	out( N3212 ) <- in( B90 )  Freq: 1.67173e-07
1a20    stop	# ShouldNotReachHere

1a34    B194: #	out( N3212 ) <- in( B91 )  Freq: 1.67173e-07
1a34    stop	# ShouldNotReachHere

1a48    B195: #	out( N3212 ) <- in( B92 )  Freq: 1.67172e-07
1a48    stop	# ShouldNotReachHere

1a5c    B196: #	out( N3212 ) <- in( B93 )  Freq: 1.67172e-07
1a5c    stop	# ShouldNotReachHere

1a70    B197: #	out( N3212 ) <- in( B94 )  Freq: 1.67172e-07
1a70    stop	# ShouldNotReachHere

1a84    B198: #	out( N3212 ) <- in( B107 B105 B106 B108 B109 )  Freq: 2.76176e-07
1a84    movl    RSI, #-138	# int
1a89    movq    RBP, R10	# spill
1a8c    movq    [rsp + #0], R11	# spill
1a90    movq    [rsp + #8], R8	# spill
1a95    movsd   [rsp + #24], XMM4	# spill
1a9b    movsd   [rsp + #32], XMM7	# spill
1aa1    movl    [rsp + #20], RBX	# spill
1aa5    movsd   [rsp + #40], XMM1	# spill
1aab    movsd   [rsp + #48], XMM2	# spill
1ab1    movl    [rsp + #56], RDX	# spill
        nop 	# 3 bytes pad for loops and calls
1ab8    call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:305 (line 55) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #20 L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=rsp + #24 L[13]=_ L[14]=rsp + #32 L[15]=_ L[16]=rsp + #40 L[17]=_ L[18]=rsp + #48 L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=rsp + #20 STK[1]=rsp + #56
        # OopMap {rbp=Oop [0]=Oop [8]=Oop off=6848/0x1ac0}
1ac0    stop	# ShouldNotReachHere

1ad4    B199: #	out( N3212 ) <- in( B113 )  Freq: 5.52349e-08
1ad4    stop	# ShouldNotReachHere

1ae8    B200: #	out( N3212 ) <- in( B114 )  Freq: 5.52349e-08
1ae8    stop	# ShouldNotReachHere

1afc    B201: #	out( N3212 ) <- in( B115 )  Freq: 5.52348e-08
1afc    stop	# ShouldNotReachHere

1b10    B202: #	out( N3212 ) <- in( B116 )  Freq: 5.52348e-08
1b10    stop	# ShouldNotReachHere

1b24    B203: #	out( N3212 ) <- in( B117 )  Freq: 5.52347e-08
1b24    stop	# ShouldNotReachHere

1b38    B204: #	out( N3212 ) <- in( B118 )  Freq: 5.52347e-08
1b38    stop	# ShouldNotReachHere

1b4c    B205: #	out( N3212 ) <- in( B119 )  Freq: 5.52346e-08
1b4c    stop	# ShouldNotReachHere

1b60    B206: #	out( N3212 ) <- in( B120 )  Freq: 5.52346e-08
1b60    stop	# ShouldNotReachHere

1b74    B207: #	out( N3212 ) <- in( B72 )  Freq: 1.01327e-12
1b74    movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
1b7c    call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:112 (line 29) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=_ STK[1]=_ STK[2]=#NULL STK[3]=#Ptr0x00007f8467f39f90
        # OopMap {off=7044/0x1b84}
1b84    stop	# ShouldNotReachHere

1b98    B208: #	out( N3212 ) <- in( B17 )  Freq: 1.01327e-06
1b98    movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
1ba0    call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # jdk.incubator.vector.DoubleVector::fromArray @ bci:8 (line 2562) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=_ STK[1]=_ STK[2]=#NULL
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:71 (line 25) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=_
        # OopMap {off=7080/0x1ba8}
1ba8    stop	# ShouldNotReachHere

1bbc    B209: #	out( N3212 ) <- in( B20 )  Freq: 1.01327e-06
1bbc    movl    RSI, #-10	# int
1bc1    vmovdqu [rsp + 0],XMM0	# spill
        nop 	# 2 bytes pad for loops and calls
1bc8    call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:74 (line 25) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=#NULL STK[1]=#ScObj0
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #0 }
        # OopMap {off=7120/0x1bd0}
1bd0    stop	# ShouldNotReachHere

1be4    B210: #	out( N3212 ) <- in( B26 )  Freq: 1.01327e-06
1be4    movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
1bec    call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # jdk.incubator.vector.DoubleVector::fromArray @ bci:8 (line 2562) L[0]=_ L[1]=_ L[2]=_ L[3]=_ STK[0]=_ STK[1]=_ STK[2]=#NULL
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:87 (line 26) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=_
        # OopMap {off=7156/0x1bf4}
1bf4    stop	# ShouldNotReachHere

1c08    B211: #	out( N3212 ) <- in( B29 )  Freq: 1.01326e-06
1c08    movl    RSI, #-10	# int
1c0d    vmovdqu [rsp + 0],XMM0	# spill
        nop 	# 2 bytes pad for loops and calls
1c14    call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:90 (line 26) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=#NULL STK[1]=#ScObj0
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #0 }
        # OopMap {off=7196/0x1c1c}
1c1c    stop	# ShouldNotReachHere

1c30    B212: #	out( N3212 ) <- in( B75 )  Freq: 3.34349e-07
1c30    movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
1c38    call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:124 (line 30) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=_ STK[1]=_ STK[2]=#NULL STK[3]=#Ptr0x00007f8467f39f90
        # OopMap {off=7232/0x1c40}
1c40    stop	# ShouldNotReachHere

1c54    B213: #	out( N3212 ) <- in( B77 )  Freq: 3.34349e-07
1c54    movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
1c5c    call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:133 (line 32) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=_ STK[1]=#NULL
        # OopMap {off=7268/0x1c64}
1c64    stop	# ShouldNotReachHere

1c78    B214: #	out( N3212 ) <- in( B122 )  Freq: 1.1047e-07
1c78    movl    RSI, #-10	# int
1c7d    movdq   RBP, XMM0	# spill
        nop 	# 2 bytes pad for loops and calls
1c84    call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:360 (line 60) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=#NULL STK[1]=RBP STK[2]=_
        # OopMap {off=7308/0x1c8c}
1c8c    stop	# ShouldNotReachHere

1ca0    B215: #	out( B228 ) <- in( B168 )  Freq: 1.00015e-09
1ca0    # exception oop is in rax; no code emitted
1ca0    jmp     B228

1ca5    B216: #	out( B228 ) <- in( B170 )  Freq: 1.00015e-09
1ca5    # exception oop is in rax; no code emitted
1ca5    jmp     B228

1caa    B217: #	out( B225 ) <- in( B164 )  Freq: 1.00015e-09
1caa    # exception oop is in rax; no code emitted
1caa    jmp     B225

1caf    B218: #	out( B225 ) <- in( B166 )  Freq: 1.00015e-09
1caf    # exception oop is in rax; no code emitted
1caf    jmp,s   B225

1cb1    B219: #	out( B228 ) <- in( B160 )  Freq: 1.00015e-09
1cb1    # exception oop is in rax; no code emitted
1cb1    jmp     B228

1cb6    B220: #	out( B228 ) <- in( B162 )  Freq: 1.00015e-09
1cb6    # exception oop is in rax; no code emitted
1cb6    jmp,s   B228

1cb8    B221: #	out( B225 ) <- in( B158 )  Freq: 1.00015e-09
1cb8    # exception oop is in rax; no code emitted
1cb8    jmp,s   B225

1cba    B222: #	out( B225 ) <- in( B156 )  Freq: 1.00015e-09
1cba    # exception oop is in rax; no code emitted
1cba    jmp,s   B225

1cbc    B223: #	out( B225 ) <- in( B63 )  Freq: 0.00033002
1cbc    # exception oop is in rax; no code emitted
1cbc    jmp,s   B225

1cbe    B224: #	out( B225 ) <- in( B61 )  Freq: 0.00033002
1cbe    # exception oop is in rax; no code emitted

1cbe    B225: #	out( B229 ) <- in( B221 B217 B224 B222 B218 B223 )  Freq: 0.000660044
1cbe    movq    RSI, RAX	# spill
1cc1    jmp,s   B229

1cc3    B226: #	out( B228 ) <- in( B65 )  Freq: 0.00033002
1cc3    # exception oop is in rax; no code emitted
1cc3    jmp,s   B228

1cc5    B227: #	out( B228 ) <- in( B59 )  Freq: 0.00033002
1cc5    # exception oop is in rax; no code emitted

1cc5    B228: #	out( B229 ) <- in( B219 B215 B227 B220 B216 B226 )  Freq: 0.000660044
1cc5    movq    RSI, RAX	# spill

1cc8    B229: #	out( N3212 ) <- in( B228 B225 )  Freq: 0.00132009
1cc8    vzeroupper
	addq    rsp, 208	# Destroy frame
	popq    rbp

1cd3    jmp     rethrow_stub

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    4150 1182 %     4       org.jml.regression.linear.DoubleVectorLinearRegression::fit @ 54 (378 bytes)
 total in heap  [0x000000011869f790,0x00000001186a3e78] = 18152
 relocation     [0x000000011869f908,0x000000011869fba0] = 664
 constants      [0x000000011869fba0,0x000000011869fbc0] = 32
 main code      [0x000000011869fbc0,0x00000001186a18c0] = 7424
 stub code      [0x00000001186a18c0,0x00000001186a18d8] = 24
 oops           [0x00000001186a18d8,0x00000001186a1910] = 56
 metadata       [0x00000001186a1910,0x00000001186a1a28] = 280
 scopes data    [0x00000001186a1a28,0x00000001186a2a18] = 4080
 scopes pcs     [0x00000001186a2a18,0x00000001186a3ce8] = 4816
 dependencies   [0x00000001186a3ce8,0x00000001186a3d00] = 24
 handler table  [0x00000001186a3d00,0x00000001186a3e20] = 288
 nul chk table  [0x00000001186a3e20,0x00000001186a3e78] = 88


[Constant Pool]
             Address          hex4                    hex8      
  0x000000011869fba0:   0x00000000      0x0000000000000000      
  0x000000011869fba4:   0x00000000                              
  0x000000011869fba8:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x000000011869fbac:   0xf4f4f4f4                              
  0x000000011869fbb0:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x000000011869fbb4:   0xf4f4f4f4                              
  0x000000011869fbb8:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x000000011869fbbc:   0xf4f4f4f4                              

[MachCode]
[Verified Entry Point]
  # {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
 ;; N3212: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x000000011869fbc0: ;   {no_reloc}
  0x000000011869fbc0: e8db 83fd | f090 9090 | 9090 9090 | 9090 9090 
 ;; B1: #	out( B151 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x000000011869fbd0: 8984 2400 | a0fe ff55 | 4881 ecd0 

  0x000000011869fbdc: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869fbdc: 0000 0048 | 8b9e b000 | 0000 488b | aea8 0000 | 00c5 fb10 

  0x000000011869fbf0: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x000000011869fbf0: 4668 c5fb 

  0x000000011869fbf4: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869fbf4: 1144 2410 | 4c8b 96a0 

  0x000000011869fbfc: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x000000011869fbfc: 0000 004c 

  0x000000011869fc00: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869fc00: 8914 244c 

  0x000000011869fc04: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x000000011869fc04: 8b56 604c 

  0x000000011869fc08: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869fc08: 8954 2408 

  0x000000011869fc0c: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x000000011869fc0c: 4c8b 5658 | 4c89 5424 

  0x000000011869fc14: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869fc14: 18c5 fb10 | 8690 0000 

  0x000000011869fc1c: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x000000011869fc1c: 00c5 fb11 

  0x000000011869fc20: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869fc20: 4424 38c5 | fb10 8680 

  0x000000011869fc28: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x000000011869fc28: 0000 00c5 | fb11 4424 

  0x000000011869fc30: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869fc30: 4044 8b66 

  0x000000011869fc34: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x000000011869fc34: 7844 8964 | 2420 488b | fe90 9090 | c5f8 7749 | baa0 1078 | 0901 0000 | 0041 ffd2 | 4885 db0f 
  0x000000011869fc54: 84c0 1000 | 004c 8beb | 448b 5308 

  0x000000011869fc60: ;   {metadata('org/jml/regression/linear/DoubleVectorLinearRegression')}
  0x000000011869fc60: 4181 fa20 | 1dba 440f | 8541 1700 | 004c 8bd3 
 ;; B4: #	out( B152 B5 ) <- in( B3 B151 )  Freq: 0.999999
  0x000000011869fc70: 4c8b f548 | 85ed 0f84 | a910 0000 
 ;; B5: #	out( B181 B6 ) <- in( B4 )  Freq: 0.998999
  0x000000011869fc7c: 448b 4508 

  0x000000011869fc80: ;   {metadata({type array double})}
  0x000000011869fc80: 4181 f8c3 

  0x000000011869fc84: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869fc84: 80b8 440f | 8535 1700 

  0x000000011869fc8c: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x000000011869fc8c: 004c 8bdd 
 ;; B7: #	out( B153 B8 ) <- in( B6 B152 )  Freq: 0.999998
  0x000000011869fc90: 488b 1c24 | 4885 db0f | 8490 1000 | 0044 8b43 

  0x000000011869fca0: ;   {metadata({type array double})}
  0x000000011869fca0: 0841 81f8 

  0x000000011869fca4: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869fca4: c380 b844 | 0f85 6e17 | 0000 4c8b 

  0x000000011869fcb0: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
                      ;   {metadata('jdk/incubator/vector/DoubleVector')}
  0x000000011869fcb0: c348 ba30 | ced4 2502 | 0000 0048 | 8b4c 2408 | 4885 c90f | 846c 1000 | 0044 8b61 | 084d 33c9 
  0x000000011869fcd0: 4f8d 0ce1 | 4d8b 4960 

  0x000000011869fcd8: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869fcd8: 4c3b ca90 | 9090 9090 | 0f85 4217 | 0000 488b 

  0x000000011869fce8: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x000000011869fce8: f94c 8b64 | 2418 4d85 | e40f 8445 | 1000 0045 | 8b4c 2408 | 4833 f64a | 8d34 ce4c | 8b4e 604c 
  0x000000011869fd08: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869fd08: 3bca 0f85 

  0x000000011869fd0c: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x000000011869fd0c: c016 0000 
 ;; B15: #	out( B16 ) <- in( B14 )  Freq: 0.998995
 ;; B16: #	out( B72 B17 ) <- in( B15 B155 )  Freq: 0.999995
  0x000000011869fd10: 448b 4c24 | 20c4 c17b | 2ac1 c5fb | 105c 2410 | c5f9 2ed8 | 0f86 de07 | 0000 418b | 5b0c 83c3 
  0x000000011869fd30: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869fd30: fd85 db0f | 8cec 1400 | 0044 3bcb | 9090 9090 | 0f83 ff06 

  0x000000011869fd44: ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011869fd44: 0000 c481 | 7e6f 44cb 

  0x000000011869fd4c: ;*invokespecial dummyVector {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011869fd4c: 108b 4f08 
 ;; B21: #	out( B176 B22 ) <- in( B20 )  Freq: 0.99999
  0x000000011869fd50: ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x000000011869fd50: 81f9 14a4 

  0x000000011869fd54: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869fd54: ba44 0f85 | 2415 0000 
 ;; B22: #	out( B158 B23 ) <- in( B21 )  Freq: 0.999989
  0x000000011869fd5c: 498b b748 | 0100 0048 | 8bce 4883 

  0x000000011869fd68: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractVector::check@5 (line 124)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x000000011869fd68: c130 493b | 8f58 0100 

  0x000000011869fd70: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869fd70: 000f 8351 

  0x000000011869fd74: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractVector::check@5 (line 124)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x000000011869fd74: 1000 0049 | 898f 4801 | 0000 0f0d | 89c0 0000 | 0048 c706 | 0100 0000 | 0f0d 8900 

  0x000000011869fd90: ;   {metadata({type array double})}
  0x000000011869fd90: 0100 00c7 | 4608 c380 | b844 0f0d | 8940 0100 | 00c7 460c | 0400 0000 | 0f0d 8980 | 0100 0048 
  0x000000011869fdb0: c746 1000 | 0000 0048 | c746 1800 | 0000 0048 | c746 2000 | 0000 0048 | c746 2800 

  0x000000011869fdcc: ;*invokevirtual vectorType {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@6 (line 3120)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011869fdcc: 0000 0048 

  0x000000011869fdd0: ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011869fdd0: 8b4f 10c5 

  0x000000011869fdd4: ;*invokespecial dummyVector {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011869fdd4: fd58 5110 | c5fe 7f56 | 1049 8b8f | 4801 0000 | 488b d148 

  0x000000011869fde8: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractVector::check@5 (line 124)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x000000011869fde8: 83c2 1849 | 3b97 5801 

  0x000000011869fdf0: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869fdf0: 0000 0f83 

  0x000000011869fdf4: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractVector::check@5 (line 124)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x000000011869fdf4: 4d0f 0000 
 ;; B25: #	out( B26 ) <- in( B24 )  Freq: 0.999889
  0x000000011869fdf8: 4989 9748 | 0100 000f | 0d8a c000 | 0000 48c7 | 0101 0000 

  0x000000011869fe0c: ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x000000011869fe0c: 00c7 4108 | 14a4 ba44 | c741 0c00 

  0x000000011869fe18: ;*invokespecial fromArray0Template {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011869fe18: 0000 0048 

  0x000000011869fe1c: ;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011869fe1c: 8971 1090 

  0x000000011869fe20: ; implicit exception: dispatches to 0x00000001186a17a4
  0x000000011869fe20: 418b 680c 
 ;; B27: #	out( B177 B28 ) <- in( B26 )  Freq: 0.999988
  0x000000011869fe24: 83c5 fd85 | ed0f 8cb1 | 1400 0044 | 3bcd 0f83 

  0x000000011869fe34: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869fe34: bf13 0000 
 ;; B29: #	out( B211 B30 ) <- in( B28 )  Freq: 0.999986
  0x000000011869fe38: c481 7e6f 

  0x000000011869fe3c: ;*invokespecial dummyVector {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011869fe3c: 44c8 1090 

  0x000000011869fe40: ; implicit exception: dispatches to 0x00000001186a17c8
  0x000000011869fe40: 418b 5424 

  0x000000011869fe44: ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x000000011869fe44: 0881 fa14 

  0x000000011869fe48: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869fe48: a4ba 440f | 85ef 1400 | 0049 8bb7 | 4801 0000 | 488b fe48 

  0x000000011869fe5c: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractVector::check@5 (line 124)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x000000011869fe5c: 83c7 3090 | 493b bf58 

  0x000000011869fe64: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869fe64: 0100 000f | 83d8 0f00 

  0x000000011869fe6c: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractVector::check@5 (line 124)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x000000011869fe6c: 0049 89bf | 4801 0000 | 0f0d 8fc0 | 0000 0048 | c706 0100 | 0000 0f0d | 8f00 0100 

  0x000000011869fe88: ;   {metadata({type array double})}
  0x000000011869fe88: 00c7 4608 | c380 b844 | 0f0d 8f40 | 0100 00c7 | 460c 0400 | 0000 0f0d | 8f80 0100 | 0048 c746 
  0x000000011869fea8: 1000 0000 | 0048 c746 | 1800 0000 | 0048 c746 | 2000 0000 | 0048 c746 | 2800 0000 

  0x000000011869fec4: ;*invokespecial fromArray0Template {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011869fec4: 0049 8b7c 

  0x000000011869fec8: ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011869fec8: 2410 c5fd 

  0x000000011869fecc: ;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011869fecc: 584f 10c5 | fe7f 4e10 | 498b 9748 | 0100 0048 | 8bfa 4883 

  0x000000011869fee0: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractVector::check@5 (line 124)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x000000011869fee0: c718 493b | bf58 0100 

  0x000000011869fee8: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869fee8: 000f 83ea 

  0x000000011869feec: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractVector::check@5 (line 124)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x000000011869feec: 0f00 0049 | 89bf 4801 | 0000 0f0d | 8fc0 0000 | 0048 c702 | 0100 0000 

  0x000000011869ff04: ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x000000011869ff04: c742 0814 | a4ba 44c7 | 420c 0000 

  0x000000011869ff10: ;*invokespecial fromArray0Template {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011869ff10: 0000 4889 

  0x000000011869ff14: ;*invokevirtual vspecies {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x000000011869ff14: 7210 418b | f983 c704 | c5fb 2ac7 | c5f9 2ed8 | 0f86 7614 | 0000 3bfb | 0f83 d412 

  0x000000011869ff30: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869ff30: 0000 c481 | 7e6f 44cb | 3049 8b87 | 4801 0000 | 4c8b e049 

  0x000000011869ff44: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractVector::check@5 (line 124)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x000000011869ff44: 83c4 304d | 3ba7 5801 

  0x000000011869ff4c: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869ff4c: 0000 0f83 

  0x000000011869ff50: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractVector::check@5 (line 124)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x000000011869ff50: 2110 0000 
 ;; B38: #	out( B39 ) <- in( B37 )  Freq: 0.999882
  0x000000011869ff54: 4d89 a748 | 0100 0041 | 0f0d 8c24 | c000 0000 | 48c7 0001 | 0000 0041 | 0f0d 8c24 | 0001 0000 
  0x000000011869ff74: ;   {metadata({type array double})}
  0x000000011869ff74: c740 08c3 | 80b8 4441 | 0f0d 8c24 | 4001 0000 | c740 0c04 | 0000 0041 | 0f0d 8c24 | 8001 0000 
  0x000000011869ff94: 48c7 4010 | 0000 0000 | 48c7 4018 | 0000 0000 | 48c7 4020 | 0000 0000 | 48c7 4028 

  0x000000011869ffb0: ;*invokestatic opCode {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@29 (line 2306)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
  0x000000011869ffb0: 0000 0000 
 ;; B39: #	out( B166 B40 ) <- in( B165 B38 )  Freq: 0.999982
  0x000000011869ffb4: c5ed 58e0 | c5fe 7f60 | 104d 8ba7 | 4801 0000 | 498b f448 

  0x000000011869ffc8: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractVector::check@5 (line 124)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x000000011869ffc8: 83c6 1849 | 3bb7 5801 

  0x000000011869ffd0: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x000000011869ffd0: 0000 0f83 

  0x000000011869ffd4: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractVector::check@5 (line 124)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x000000011869ffd4: 4710 0000 
 ;; B40: #	out( B41 ) <- in( B39 )  Freq: 0.999882
  0x000000011869ffd8: 4989 b748 | 0100 000f | 0d8e c000 | 0000 49c7 | 0424 0100 

  0x000000011869ffec: ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x000000011869ffec: 0000 41c7 | 4424 0814 | a4ba 4441 | c744 240c 

  0x000000011869fffc: ;*invokevirtual opCode {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
                      ; - jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@29 (line 2306)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
  0x000000011869fffc: 0000 0000 
 ;; B41: #	out( B174 B42 ) <- in( B167 B40 )  Freq: 0.999982
  0x00000001186a0000: 4989 4424 

  0x00000001186a0004: ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
  0x00000001186a0004: 103b fd0f | 8307 1200 

  0x00000001186a000c: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a000c: 00c4 817e | 6f54 c830 | 498b 8748 | 0100 0048 | 8bc8 4883 

  0x00000001186a0020: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractVector::check@5 (line 124)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a0020: c130 493b | 8f58 0100 

  0x00000001186a0028: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a0028: 000f 8396 

  0x00000001186a002c: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractVector::check@5 (line 124)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a002c: 1000 0049 | 898f 4801 | 0000 0f0d | 89c0 0000 | 0048 c700 | 0100 0000 | 0f0d 8900 

  0x00000001186a0048: ;   {metadata({type array double})}
  0x00000001186a0048: 0100 00c7 | 4008 c380 | b844 0f0d | 8940 0100 | 00c7 400c | 0400 0000 | 0f0d 8980 | 0100 0048 
  0x00000001186a0068: c740 1000 | 0000 0048 | c740 1800 | 0000 0048 | c740 2000 | 0000 0048 | c740 2800 

  0x00000001186a0084: ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorOperators$OperatorImpl::opCode@26 (line 775)
                      ; - jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
                      ; - jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@29 (line 2306)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
  0x00000001186a0084: 0000 00c5 

  0x00000001186a0088: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a0088: f558 c2c5 | fe7f 4010 | 498b 8f48 | 0100 0048 | 8bf1 4883 

  0x00000001186a009c: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractVector::check@5 (line 124)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a009c: c618 9090 | 493b b758 

  0x00000001186a00a4: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a00a4: 0100 000f | 83c2 1000 

  0x00000001186a00ac: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractVector::check@5 (line 124)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a00ac: 0049 89b7 | 4801 0000 | 0f0d 8ec0 | 0000 0048 | c701 0100 

  0x00000001186a00c0: ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x00000001186a00c0: 0000 c741 | 0814 a4ba | 44c7 410c 

  0x00000001186a00cc: ;*invokevirtual opCodeRaw {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorOperators$OperatorImpl::opCode@1 (line 774)
                      ; - jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
                      ; - jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@29 (line 2306)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
  0x00000001186a00cc: 0000 0000 
 ;; B46: #	out( B51 ) <- in( B171 B45 )  Freq: 0.999981
  0x00000001186a00d0: ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorOperators$OperatorImpl::opCode@12 (line 775)
                      ; - jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
                      ; - jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@29 (line 2306)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
  0x00000001186a00d0: 4889 4110 

  0x00000001186a00d4: ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x00000001186a00d4: 4183 c108 | e9f3 0000 

  0x00000001186a00dc: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractVector::check@5 (line 124)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a00dc: 0090 9090 
 ;; B47: #	out( B48 ) <- in( B58 ) top-of-loop Freq: 329932
  0x00000001186a00e0: 4d89 9748 | 0100 0041 | 0f0d 8ac0 | 0000 0048 | c700 0100 | 0000 410f | 0d8a 0001 

  0x00000001186a00fc: ;   {metadata({type array double})}
  0x00000001186a00fc: 0000 c740 | 08c3 80b8 | 4441 0f0d | 8a40 0100 | 00c7 400c | 0400 0000 | 410f 0d8a | 8001 0000 
  0x00000001186a011c: 48c7 4010 | 0000 0000 | 48c7 4018 | 0000 0000 | 48c7 4020 | 0000 0000 | 48c7 4028 

  0x00000001186a0138: ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a0138: 0000 0000 
 ;; B48: #	out( B65 B49 ) <- in( B60 B47 ) top-of-loop Freq: 329965
  0x00000001186a013c: 4889 4424 | 684c 8b54 

  0x00000001186a0144: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a0144: 2458 4d8b 

  0x00000001186a0148: ;*invokevirtual opCode {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
                      ; - jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a0148: 5210 c4c1 

  0x00000001186a014c: ;*invokevirtual elementType {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x00000001186a014c: 7558 4210 | c5fe 7f40 | 1049 8b87 | 4801 0000 | 4c8b d049 

  0x00000001186a0160: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractVector::check@5 (line 124)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a0160: 83c2 184d | 3b97 5801 

  0x00000001186a0168: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a0168: 0000 0f83 

  0x00000001186a016c: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractVector::check@5 (line 124)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a016c: 8002 0000 
 ;; B49: #	out( B50 ) <- in( B48 )  Freq: 329932
  0x00000001186a0170: 4d89 9748 | 0100 0041 | 0f0d 8ac0 | 0000 0048 | c700 0100 

  0x00000001186a0184: ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x00000001186a0184: 0000 c740 | 0814 a4ba | 44c7 400c 

  0x00000001186a0190: ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a0190: 0000 0000 
 ;; B50: #	out( B51 ) <- in( B66 B49 )  Freq: 329965
  0x00000001186a0194: 4c8b 5424 

  0x00000001186a0198: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a0198: 684c 8950 

  0x00000001186a019c: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractVector::check@5 (line 124)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a019c: 104d 8b97 | 3001 0000 

  0x00000001186a01a4: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a01a4: 8b6c 2450 

  0x00000001186a01a8: ; ImmutableOopMap {rax=Oop [32]=Oop [40]=Oop [48]=Oop [96]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
                      ;   {poll}
  0x00000001186a01a8: 83c5 0441 | 8502 448b | cd4c 8b54 | 2420 4c8b | 5c24 284c | 8b44 2430 | 8b5c 2448 | 8b6c 244c 
  0x00000001186a01c8: 4c8b 6424 | 6048 8bc8 
 ;; B51: #	out( B74 B52 ) <- in( B46 B50 ) Loop( B51-B50 inner ) Freq: 329966
  0x00000001186a01d0: c4c1 7b2a | c1c5 f92e 

  0x00000001186a01d8: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a01d8: d80f 8638 | 0300 0090 | 443b cb0f | 8368 0200 | 0048 894c | 2458 4c89 | 2424 896c | 244c 895c 
  0x00000001186a01f8: 2448 4c89 | 4424 304c | 895c 2428 | 4c89 5424 

  0x00000001186a0208: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractVector::check@5 (line 124)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a0208: 2049 8b87 | 4801 0000 | 4c8b d049 

  0x00000001186a0214: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x00000001186a0214: 83c2 3044 

  0x00000001186a0218: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a0218: 894c 2450 | c481 7e6f 

  0x00000001186a0220: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractVector::check@5 (line 124)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a0220: 44cb 104d | 3b97 5801 

  0x00000001186a0228: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a0228: 0000 0f83 

  0x00000001186a022c: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractVector::check@5 (line 124)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a022c: 4c01 0000 
 ;; B54: #	out( B55 ) <- in( B53 )  Freq: 329932
  0x00000001186a0230: 4d89 9748 | 0100 0041 | 0f0d 8ac0 | 0000 0048 | c700 0100 | 0000 410f | 0d8a 0001 

  0x00000001186a024c: ;   {metadata({type array double})}
  0x00000001186a024c: 0000 c740 | 08c3 80b8 | 4441 0f0d | 8a40 0100 | 00c7 400c | 0400 0000 | 410f 0d8a | 8001 0000 
  0x00000001186a026c: 48c7 4010 | 0000 0000 | 48c7 4018 | 0000 0000 | 48c7 4020 | 0000 0000 | 48c7 4028 

  0x00000001186a0288: ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 133)
                      ; - jdk.incubator.vector.AbstractVector::check@2 (line 124)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a0288: 0000 0000 
 ;; B55: #	out( B63 B56 ) <- in( B62 B54 )  Freq: 329965
  0x00000001186a028c: 4889 4424 | 604c 8b14 

  0x00000001186a0294: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a0294: 244d 8b52 

  0x00000001186a0298: ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@18 (line 630)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a0298: 10c4 c17d 

  0x00000001186a029c: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a029c: 5862 10c5 | fe7f 6010 | 498b 8748 | 0100 004c | 8bd0 4983 

  0x00000001186a02b0: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractVector::check@5 (line 124)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a02b0: c218 9090 | 9090 9090 | 9090 9090 | 9090 9090 | 4d3b 9758 

  0x00000001186a02c4: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a02c4: 0100 000f | 83e3 0000 

  0x00000001186a02cc: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractVector::check@5 (line 124)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a02cc: 004d 8997 | 4801 0000 | 410f 0d8a | c000 0000 | 48c7 0001 

  0x00000001186a02e0: ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x00000001186a02e0: 0000 00c7 | 4008 14a4 | ba44 c740 | 0c00 0000 | 004c 8b54 

  0x00000001186a02f4: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a02f4: 2460 4c89 

  0x00000001186a02f8: ;*invokespecial dummyVector {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x00000001186a02f8: 5010 4889 

  0x00000001186a02fc: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x00000001186a02fc: 4424 6044 | 8b54 2450 | 443b 5424 | 4c0f 83a1 | 0100 004c | 8b54 2430 

  0x00000001186a0314: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a0314: 8b6c 2450 | c4c1 7e6f | 4cea 1049 | 8b87 4801 | 0000 4c8b | d049 83c2 

  0x00000001186a032c: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractVector::check@5 (line 124)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a032c: 304d 3b97 | 5801 0000 | 0f82 a6fd | ffff c5fe | 7f8c 2480 | 0000 00c5 | fe7f 2424 | c4e1 f97e 
  0x00000001186a034c: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
                      ;   {metadata({type array double})}
  0x00000001186a034c: dd48 be18 | 06c4 2502 | 0000 00ba | 0400 0000 

  0x00000001186a035c: ;   {runtime_call _new_array_Java}
  0x00000001186a035c: c5f8 77e8 

  0x00000001186a0360: ; ImmutableOopMap {[32]=Oop [40]=Oop [48]=Oop [88]=Oop [96]=Oop }
                      ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                      ; - (reexecute) jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x00000001186a0360: 3c8e 49f8 
 ;; B60: #	out( B48 ) <- in( B59 )  Freq: 33.0013
  0x00000001186a0364: c4e1 f96e | ddc5 fe6f | 2424 c5fe | 6f8c 2480 | 0000 00e9 | c0fd ffff 
 ;; B61: #	out( B224 B62 ) <- in( B53 )  Freq: 33.002
  0x00000001186a037c: c5fe 7f44 | 2460 c4e1 

  0x00000001186a0384: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
                      ;   {metadata({type array double})}
  0x00000001186a0384: f97e dd48 | be18 06c4 | 2502 0000 | 00ba 0400 | 0000 9090 

  0x00000001186a0398: ;   {runtime_call _new_array_Java}
  0x00000001186a0398: c5f8 77e8 

  0x00000001186a039c: ; ImmutableOopMap {[0]=Oop [32]=Oop [40]=Oop [48]=Oop [88]=Oop }
                      ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                      ; - (reexecute) jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a039c: 008e 49f8 
 ;; B62: #	out( B55 ) <- in( B61 )  Freq: 33.0014
  0x00000001186a03a0: c4e1 f96e | ddc5 fe6f | 4424 60e9 | dcfe ffff 
 ;; B63: #	out( B223 B64 ) <- in( B55 )  Freq: 33.002
  0x00000001186a03b0: c5fe 7fa4 | 2480 0000 | 00c5 fb11 

  0x00000001186a03bc: ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a03bc: 5c24 6848 | 8b2c 24c5 

  0x00000001186a03c4: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a03c4: fe7f 0424 

  0x00000001186a03c8: ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x00000001186a03c8: 48be a020 | d525 0200 | 0000 9090 

  0x00000001186a03d4: ;   {runtime_call _new_instance_Java}
  0x00000001186a03d4: c5f8 77e8 

  0x00000001186a03d8: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [48]=Oop [88]=Oop [96]=Oop }
                      ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                      ; - (reexecute) jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a03d8: c490 49f8 
 ;; B64: #	out( B57 ) <- in( B63 )  Freq: 33.0014
  0x00000001186a03dc: c5fb 105c | 2468 c5fe | 6fa4 2480 | 0000 00e9 | 01ff ffff 
 ;; B65: #	out( B226 B66 ) <- in( B48 )  Freq: 33.002
  0x00000001186a03f0: c5fe 7f84 | 24a0 0000 | 00c5 fe7f | a424 8000 | 0000 c5fb 

  0x00000001186a0404: ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@42 (line 2308)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
  0x00000001186a0404: 115c 2470 | 488b 6c24 | 58c5 fe7f 

  0x00000001186a0410: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
                      ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x00000001186a0410: 0c24 48be | a020 d525 | 0200 0000 

  0x00000001186a041c: ;   {runtime_call _new_instance_Java}
  0x00000001186a041c: c5f8 77e8 

  0x00000001186a0420: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [48]=Oop [96]=Oop [104]=Oop }
                      ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                      ; - (reexecute) jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x00000001186a0420: 7c90 49f8 
 ;; B66: #	out( B50 ) <- in( B65 )  Freq: 33.0013
  0x00000001186a0424: c5fb 105c | 2470 c5fe | 6fa4 2480 | 0000 00c5 | fe6f 8424 | a000 0000 | 9090 9090 | e94f fdff 
  0x00000001186a0444: ff48 8bcf | 498b fc4c | 8be1 488b 

  0x00000001186a0450: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x00000001186a0450: cfbe e4ff 

  0x00000001186a0454: ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::sub@0 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x00000001186a0454: ffff 498b | ea4c 8944 | 2408 c5fb | 1044 2438 | c5fb 1144 | 2410 c5fb | 1044 2440 | c5fb 1144 
  0x00000001186a0474: 2418 c5fb | 115c 2428 | 4889 4c24 | 304c 8964 | 2438 4c89 | 5c24 4044 | 894c 2424 | 895c 2448 
  0x00000001186a0494: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a0494: c5f8 77e8 

  0x00000001186a0498: ; ImmutableOopMap {rbp=Oop [8]=Oop [48]=Oop [56]=Oop [64]=Oop }
                      ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x00000001186a0498: a4a0 55f8 

  0x00000001186a049c: ;   {external_word}
  0x00000001186a049c: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a04a8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a04a8: e4f0 e8a1 | 0ae4 f0f4 
 ;; B69: #	out( B70 ) <- in( B57 )  Freq: 0.334347
  0x00000001186a04b0: 4c8b 5424 | 204c 8b5c | 2428 4c8b | 4424 308b | 6c24 4cc5 | fe7f 2424 | 448b 4c24 

  0x00000001186a04cc: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a04cc: 50be e4ff 

  0x00000001186a04d0: ;*dcmpg {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@59 (line 24)
  0x00000001186a04d0: ffff 4c89 | 5424 204c | 895c 2428 | c5fb 115c | 2450 4c89 | 4424 6044 | 894c 244c 

  0x00000001186a04ec: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a04ec: c5f8 77e8 

  0x00000001186a04f0: ; ImmutableOopMap {[32]=Oop [40]=Oop [88]=Oop [96]=Oop }
                      ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x00000001186a04f0: 4ca0 55f8 

  0x00000001186a04f4: ;   {external_word}
  0x00000001186a04f4: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a0500: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a0500: e4f0 e849 | 0ae4 f0f4 
 ;; B72: #	out( B207 B73 ) <- in( B16 )  Freq: 9.99995e-07
  0x00000001186a0508: 4885 ff0f | 8423 1200 | 0049 8bcc | 4c8b e741 | 8b5c 2408 | 9090 9090 

  0x00000001186a0520: ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x00000001186a0520: 81fb 14a4 

  0x00000001186a0524: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a0524: ba44 0f85 | 030f 0000 
 ;; B75: #	out( B212 B76 ) <- in( B74 )  Freq: 0.329968
  0x00000001186a052c: ; implicit exception: dispatches to 0x00000001186a17f0
                      ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x00000001186a052c: 8b59 0849 

  0x00000001186a0530: ;*invokevirtual opCode {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
                      ; - jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a0530: 8b7c 2410 | c5fe 6f57 | 10c5 f957 

  0x00000001186a053c: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a053c: c0c5 f157 | c9c5 f358 | cac5 f970 | ea0e c5f3 | 58cd c4e3 | 7d19 d501 | c5f3 58cd | c5f9 70e5 
  0x00000001186a055c: 0ec5 f358 

  0x00000001186a0560: ;*invokevirtual fromArray0 {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x00000001186a0560: ccc5 f358 

  0x00000001186a0564: ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
                      ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x00000001186a0564: 6424 3881 | fb14 a4ba | 440f 850d 

  0x00000001186a0570: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a0570: 0f00 0041 

  0x00000001186a0574: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x00000001186a0574: 8b53 0c48 

  0x00000001186a0578: ;*invokestatic opCode {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a0578: 8b59 10c5 | fe6f 5310 | 8bea ffcd | 41bd 0000 

  0x00000001186a0588: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a0588: 0080 33c0 | c5fb 58c2 | c5f9 70f2 | 0ec5 fb58 | c6c4 e37d | 19d6 01c5 | fb58 c6c5 | f970 ee0e 
  0x00000001186a05a8: ;*invokevirtual fromArray0 {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x00000001186a05a8: c5fb 58c5 | c5fb 586c 

  0x00000001186a05b0: ;*invokestatic checkFromIndexSize {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x00000001186a05b0: 2440 443b | ca0f 8dca | 0000 0090 | 9090 9090 | 443b ca0f | 8387 0f00 | 003b ea0f | 837f 0f00 
  0x00000001186a05d0: 0041 8b70 | 0c44 3bce | 0f83 720f | 0000 9090 | 3bee 0f83 | 680f 0000 
 ;; B84: #	out( B85 ) <- in( B83 )  Freq: 0.164983
  0x00000001186a05e8: 418b d9ff 

  0x00000001186a05ec: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a05ec: c390 9090 
 ;; B85: #	out( B85 B86 ) <- in( B84 B85 ) Loop( B85-B85 inner pre of N832) Freq: 1.64983
  0x00000001186a05f0: c481 5b58 

  0x00000001186a05f4: ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorOperators::opCode@0 (line 403)
                      ; - jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x00000001186a05f4: 64cb 10c4 | 8153 586c 

  0x00000001186a05fc: ;*invokevirtual opCode {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
                      ; - jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x00000001186a05fc: c810 41ff | c144 3bcb | 7cea 8bda | 83c3 f93b | eb41 0f4c | dd44 3bcb | 0f8d 1303 | 0000 9090 
  0x00000001186a061c: 9090 9090 | 443b ce0f | 837b 0f00 | 0044 3bce | 0f83 860f | 0000 443b | ca0f 8391 | 0f00 0090 
  0x00000001186a063c: 9090 9090 | 443b ca0f | 8397 0f00 | 0044 3bca | 0f83 a20f | 0000 418b | f983 c707 | 3bfa 9090 
  0x00000001186a065c: 9090 9090 | 0f83 a20f | 0000 443b | ce0f 83ad | 0f00 003b | fe0f 83b9 | 0f00 00be | 401f 0000 
  0x00000001186a067c: 9090 9090 | e986 0200 

  0x00000001186a0684: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a0684: 00c5 eb2a 

  0x00000001186a0688: ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x00000001186a0688: d2c5 db5e | e2c5 d35e | fa8b fa83 

  0x00000001186a0694: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a0694: c7fd c4e2 

  0x00000001186a0698: ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::opKind@-1 (line 71)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@15 (line 630)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a0698: 7d19 efc4 | e27d 19f4 

  0x00000001186a06a0: ;   {section_word}
  0x00000001186a06a0: c5f9 2e1d | f8f4 ffff | 0f86 260e 

  0x00000001186a06ac: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a06ac: 0000 c441 

  0x00000001186a06b0: ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x00000001186a06b0: 3def c085 | ff0f 8c20 | 0e00 0090 | 9090 9090 

  0x00000001186a06c0: ; implicit exception: dispatches to 0x00000001186a14db
  0x00000001186a06c0: 458b 480c 
 ;; B99: #	out( B188 B100 ) <- in( B98 )  Freq: 0.329964
  0x00000001186a06c4: 4183 c1fd 

  0x00000001186a06c8: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a06c8: 4585 c90f | 8c0a 0e00 

  0x00000001186a06d0: ;*invokestatic opCode {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a06d0: 00c4 417e | 6fc8 33db | 9090 9090 | 9090 9090 
 ;; B101: #	out( B134 B102 ) <- in( B100 B103 ) Loop( B101-B103 inner ) Freq: 109023
  0x00000001186a06e0: 3bdf 0f83 

  0x00000001186a06e4: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x00000001186a06e4: 6b02 0000 
 ;; B102: #	out( B135 B103 ) <- in( B101 )  Freq: 109023
  0x00000001186a06e8: c4c1 7e6f 

  0x00000001186a06ec: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a06ec: 54db 10c5 

  0x00000001186a06f0: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x00000001186a06f0: ed5c d641 | 3bd9 0f83 | b802 0000 
 ;; B103: #	out( B101 B104 ) <- in( B102 )  Freq: 109023
  0x00000001186a06fc: c441 7e6f 

  0x00000001186a0700: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractVector::check@5 (line 124)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a0700: 54d8 1049 | 8bb7 3001 | 0000 c52d | 5cd5 c56d | 59da c5ad 

  0x00000001186a0714: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a0714: 59d2 c441 | 3d58 c3c5 

  0x00000001186a071c: ;*invokespecial fromArray0Template {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x00000001186a071c: 3558 ca83 

  0x00000001186a0720: ; ImmutableOopMap {r10=Oop r11=Oop r8=Oop r12=Oop rcx=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)
                      ;   {poll}
  0x00000001186a0720: c304 8506 | c5eb 2ad3 | c5f9 2eda 

  0x00000001186a072c: ;   {section_word}
  0x00000001186a072c: 77b2 c5fb | 5815 6af4 

  0x00000001186a0734: ;   {section_word}
  0x00000001186a0734: ffff c5f3 | 580d 62f4 

  0x00000001186a073c: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x00000001186a073c: ffff 9090 | 3bda 0f8d | f200 0000 
 ;; B105: #	out( B198 B106 ) <- in( B104 )  Freq: 0.0545114
  0x00000001186a0748: 3bda 0f83 | f40e 0000 
 ;; B106: #	out( B198 B107 ) <- in( B105 )  Freq: 0.0545114
  0x00000001186a0750: 3bea 0f83 | ec0e 0000 
 ;; B107: #	out( B198 B108 ) <- in( B106 )  Freq: 0.0545113
  0x00000001186a0758: 9090 9090 | 9090 9090 

  0x00000001186a0760: ; implicit exception: dispatches to 0x00000001186a1644
  0x00000001186a0760: 418b 480c 
 ;; B108: #	out( B198 B109 ) <- in( B107 )  Freq: 0.0545113
  0x00000001186a0764: 3bd9 0f83 | d80e 0000 
 ;; B109: #	out( B198 B110 ) <- in( B108 )  Freq: 0.0545112
  0x00000001186a076c: 3be9 0f83 | d00e 0000 
 ;; B110: #	out( B111 ) <- in( B109 )  Freq: 0.0545111
  0x00000001186a0774: 418b f0c1 | ee03 83e6 | 0303 f341 | b901 0000 | 0044 2bce | 4183 e103 | 4403 cb41 | ffc1 443b 
  0x00000001186a0794: ca44 0f4f 

  0x00000001186a0798: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a0798: ca90 9090 
 ;; B111: #	out( B111 B112 ) <- in( B110 B111 ) Loop( B111-B111 inner pre of N842) Freq: 0.545111
  0x00000001186a079c: c4c1 7b10 | 44d8 10c4 | c17b 105c | db10 c57b 

  0x00000001186a07ac: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a07ac: 5cc7 c5e3 

  0x00000001186a07b0: ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@4 (line 2300)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
  0x00000001186a07b0: 5cc4 c5fb | 59d8 c5bb 

  0x00000001186a07b8: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a07b8: 59c0 c5f3 | 58cb c5eb 

  0x00000001186a07c0: ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@4 (line 2300)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
  0x00000001186a07c0: 58d0 ffc3 | 413b d97c | d344 8bca | 4183 c1f1 | 413b e945 | 0f4c cd41 | 3bd9 9090 | 9090 9090 
  0x00000001186a07e0: 0f8d f204 | 0000 3bd9 | 0f83 a60e | 0000 3bd9 | 0f83 b20e | 0000 3bda | 0f83 be0e | 0000 9090 
  0x00000001186a0800: 3bda 0f83 | c80e 0000 
 ;; B117: #	out( B203 B118 ) <- in( B116 )  Freq: 0.0545109
  0x00000001186a0808: 3bda 0f83 | d40e 0000 
 ;; B118: #	out( B204 B119 ) <- in( B117 )  Freq: 0.0545108
  0x00000001186a0810: 8bf3 83c6 | 0f3b f20f | 83db 0e00 | 0090 9090 | 3bd9 0f83 | e40e 0000 
 ;; B120: #	out( B206 B121 ) <- in( B119 )  Freq: 0.0545107
  0x00000001186a0828: 3bf1 0f83 | f00e 0000 
 ;; B121: #	out( B140 ) <- in( B120 )  Freq: 0.0545107
  0x00000001186a0830: be80 3e00 | 00e9 7102 | 0000 c5eb | 5ec1 9090 

  0x00000001186a0840: ; implicit exception: dispatches to 0x00000001186a1838
  0x00000001186a0840: c4c1 7b11 | 4218 c5db | 59c0 c5c3 

  0x00000001186a084c: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a084c: 5cc0 c4c1 

  0x00000001186a0850: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x00000001186a0850: 7b11 4210 | c5f8 7748 | 81c4 d000 

  0x00000001186a085c: ;   {poll_return}
  0x00000001186a085c: 0000 5d49 | 3ba7 2801 | 0000 0f87 

  0x00000001186a0868: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a0868: 2c10 0000 

  0x00000001186a086c: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x00000001186a086c: c390 9090 
 ;; B124: #	out( B125 ) <- in( B125 ) top-of-loop Freq: 14.8483
  0x00000001186a0870: ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@2 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x00000001186a0870: 458b cac4 | 8153 5854 | c810 c481 | 5b58 64cb | 104d 63d1 | c481 5b58 | 64d3 18c4 | 816b 5854 
  0x00000001186a0890: d018 c481 | 5b58 64d3 | 20c4 816b | 5854 d020 | c481 5b58 | 64d3 28c4 | 816b 5854 | d028 c481 
  0x00000001186a08b0: 5b58 64d3 | 30c4 816b | 5854 d030 | c481 5b58 | 64d3 38c4 | 816b 5854 | d038 c481 | 5b58 64d3 
  0x00000001186a08d0: 40c4 816b | 5854 d040 | c481 5b58 

  0x00000001186a08dc: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a08dc: 64d3 48c4 | 816b 586c 

  0x00000001186a08e4: ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::arrayAddress@9 (line 3259)
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x00000001186a08e4: d048 458b 

  0x00000001186a08e8: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a08e8: d141 83c2 | 0844 3bd7 | 0f8c 7aff 

  0x00000001186a08f4: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractVector::check@5 (line 124)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a08f4: ffff 4d8b | 8f30 0100 

  0x00000001186a08fc: ; ImmutableOopMap {r11=Oop r8=Oop r12=Oop rcx=Oop r14=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)
                      ;   {poll}
  0x00000001186a08fc: 0041 8501 | 458b ca44 | 3bd3 7d22 
 ;; B127: #	out( B128 ) <- in( B126 )  Freq: 1.48483
  0x00000001186a0908: 4d8b d68b | fb41 2bf9 | 413b d90f | 4cf8 81ff | 401f 0000 | 0f47 fe41 | 03f9 4d8b | f2e9 49ff 
  0x00000001186a0928: ffff 4d8b | d644 3bca | 0f8d 4ffd 

  0x00000001186a0934: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a0934: ffff 9090 
 ;; B132: #	out( B132 B133 ) <- in( B131 B132 ) Loop( B132-B132 inner post of N832) Freq: 0.824906
  0x00000001186a0938: c481 5b58 

  0x00000001186a093c: ;*invokevirtual opKind {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorOperators::opKind@5 (line 409)
                      ; - jdk.incubator.vector.DoubleVector::opKind@2 (line 71)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@15 (line 630)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x00000001186a093c: 64cb 10c4 | 8153 586c 

  0x00000001186a0944: ;*synchronization entry
                      ; - jdk.incubator.vector.VectorOperators::opKind@-1 (line 409)
                      ; - jdk.incubator.vector.DoubleVector::opKind@2 (line 71)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@15 (line 630)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x00000001186a0944: c810 41ff | c144 3bca | 7cea e932 

  0x00000001186a0950: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a0950: fdff ffbe 

  0x00000001186a0954: ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x00000001186a0954: e4ff ffff | 498b ea4c | 8944 2408 | c5fb 115c | 2418 4c89 | 6424 2048 | 894c 2428 | c5fb 1164 
  0x00000001186a0974: 2430 c5fb | 117c 2438 | 4c89 5c24 | 4089 5c24 | 1489 7c24 | 48c5 7e7f | 4c24 60c5 | 7e7f 8424 
  0x00000001186a0994: 8000 0000 

  0x00000001186a0998: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a0998: c5f8 77e8 

  0x00000001186a099c: ; ImmutableOopMap {rbp=Oop [8]=Oop [32]=Oop [40]=Oop [64]=Oop }
                      ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x00000001186a099c: a09b 55f8 

  0x00000001186a09a0: ;   {external_word}
  0x00000001186a09a0: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a09ac: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a09ac: e4f0 e89d 

  0x00000001186a09b0: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a09b0: 05e4 f0f4 
 ;; B135: #	out( N3212 ) <- in( B102 )  Freq: 0.11047
  0x00000001186a09b4: bee4 ffff 

  0x00000001186a09b8: ;*isub {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@42 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x00000001186a09b8: ff49 8bea | 4c89 1c24 | c5fb 115c | 2418 4c89 | 6424 2048 | 894c 2428 | c5fb 1164 | 2430 c5fb 
  0x00000001186a09d8: 117c 2438 | 4c89 4424 | 4089 5c24 | 1444 894c | 2448 c57e | 7f4c 2460 | c57e 7f84 | 2480 0000 
  0x00000001186a09f8: 00c5 fe7f | 9424 a000 

  0x00000001186a0a00: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a0a00: 0000 9090 

  0x00000001186a0a04: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a0a04: c5f8 77e8 

  0x00000001186a0a08: ; ImmutableOopMap {rbp=Oop [0]=Oop [32]=Oop [40]=Oop [64]=Oop }
                      ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x00000001186a0a08: 349b 55f8 

  0x00000001186a0a0c: ;   {external_word}
  0x00000001186a0a0c: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a0a18: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a0a18: e4f0 e831 | 05e4 f0f4 
 ;; B136: #	out( B137 ) <- in( B137 ) top-of-loop Freq: 0.245298
  0x00000001186a0a20: c5f9 28c2 | c4c1 f97e 

  0x00000001186a0a28: ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x00000001186a0a28: cec4 c17e | 6f4c d810 | c4c1 7e6f | 54db 10c5 

  0x00000001186a0a38: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a0a38: f55c cdc5 

  0x00000001186a0a3c: ;*invokestatic checkFromIndexSize {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x00000001186a0a3c: ed5c d6c5 | ed59 c9c5 | ed59 dac5 | f928 d0c5 | eb58 d1c5 | f970 f90e | c5eb 58d7 | c4e3 7d19 
  0x00000001186a0a5c: cf01 c5eb | 58d7 c5f9 | 70e7 0ec5 | eb58 d4c4 | c1f9 6ece | c5f3 58cb | c5f9 70e3 | 0ec5 f358 
  0x00000001186a0a7c: ccc4 e37d | 19dc 01c5 | f358 ccc5 | f970 c40e | c5f3 58c8 | 83c3 043b | df7c 89e9 | 3102 0000 
 ;; B139: #	out( B140 ) <- in( B142 ) top-of-loop Freq: 0.490596
  0x00000001186a0a9c: c5f9 28d0 | c5fb 1024 | 24c5 fb10 | 7c24 0841 | 8bc9 2bcb | 443b cb0f | 4cc8 81f9 | 803e 0000 
  0x00000001186a0abc: 0f47 ce03 | cbc5 f928 | c2c4 c1f9 | 7ece c5fb | 1124 24c5 | fb11 7c24 

  0x00000001186a0ad4: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a0ad4: 0890 9090 | 9090 9090 

  0x00000001186a0adc: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x00000001186a0adc: 9090 9090 
 ;; B141: #	out( B141 B142 ) <- in( B140 B141 ) Loop( B141-B141 inner main of N1155 strip mined) Freq: 5.45106
  0x00000001186a0ae0: c4c1 7e6f | 4cd8 10c4 | c17e 6f54 | db10 c5f5 

  0x00000001186a0af0: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a0af0: 5ccd c5ed 

  0x00000001186a0af4: ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x00000001186a0af4: 5cde c5e5 | 59d3 c5e5 | 59c9 4c63 | e3c4 817e | 6f5c e330 | c401 7e6f | 4ce0 70c4 | 017e 6f44 
  0x00000001186a0b14: e350 c481 | 7e6f 64e3 | 70c4 817e | 6f7c e030 | c401 7e6f 

  0x00000001186a0b28: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a0b28: 54e0 50c5 

  0x00000001186a0b2c: ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x00000001186a0b2c: 655c dec5 | 2d5c e5c4 | c125 59db | c5c5 5cfd | c55d 5cd6 | c5a5 59e7 | c4c1 2d59 

  0x00000001186a0b48: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a0b48: fac5 3d5c 

  0x00000001186a0b4c: ;*invokevirtual fromArray0 {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x00000001186a0b4c: dec5 355c | c5c4 4125 | 59cc c441 | 2d59 c0c4 | 4125 59d3 | c5fb 58c1 | c579 70e9 | 0ec4 c17b 
  0x00000001186a0b6c: 58c5 c4c3 | 7d19 cd01 | c4c1 7b58 | c5c4 4179 | 70dd 0ec4 | c17b 58c3 | c5fb 58c4 | c579 70dc 
  0x00000001186a0b8c: 0ec4 c17b | 58c3 c4c3 | 7d19 e301 | c4c1 7b58 | c3c4 c179 | 70cb 0ec5 | fb58 c1c4 | c1f9 7ec4 
  0x00000001186a0bac: c4c1 f96e | c6c5 fb58 | c2c5 7970 | e20e c4c1 | 7b58 c4c4 | c37d 19d4 | 01c4 c17b | 58c4 c441 
  0x00000001186a0bcc: 7970 fc0e | c4c1 7b58 | c7c5 fb58 | c3c5 7970 | f30e c4c1 | 7b58 c6c4 | c37d 19de | 01c4 c17b 
  0x00000001186a0bec: 58c6 c4c1 | 7970 d60e | c5fb 58c2 | c4c1 7b58 | c2c4 c179 | 70ca 0ec5 | fb58 c1c4 | 637d 19d1 
  0x00000001186a0c0c: 01c5 fb58 | c1c5 7970 | e90e c4c1 | 7b58 c5c4 | c1f9 7ec6 | c4c1 f96e | c4c4 c17b | 58c1 c4c1 
  0x00000001186a0c2c: 7970 d10e | c5fb 58c2 | c463 7d19 | ca01 c5fb | 58c2 c5f9 | 70ca 0ec5 | fb58 c1c4 | c17b 58c0 
  0x00000001186a0c4c: c441 7970 | d80e c4c1 | 7b58 c3c4 | 437d 19c3 | 01c4 c17b | 58c3 c4c1 | 7970 e30e | c5fb 58c4 
  0x00000001186a0c6c: c4c1 f96e | cec5 f358 | cfc5 f970 | df0e c5f3 | 58cb c4e3 | 7d19 fb01 | c5f3 58cb | c5f9 70d3 
  0x00000001186a0c8c: 0ec5 f358 | cac4 c1f9 

  0x00000001186a0c94: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a0c94: 7ece 83c3 | 103b d990 | 9090 9090 | 0f8c 3afe 

  0x00000001186a0ca4: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractVector::check@5 (line 124)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a0ca4: ffff 4d8b | a730 0100 

  0x00000001186a0cac: ; ImmutableOopMap {r10=Oop r11=Oop r8=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)
                      ;   {poll}
  0x00000001186a0cac: 0041 8504 | 2441 3bd9 | 0f8c e2fd | ffff 3bef | 410f 4cfd | 3bdf 7d05 
 ;; B144: #	out( B137 ) <- in( B143 )  Freq: 0.0272553
  0x00000001186a0cc4: e960 fdff | ffc5 f928 | d0c5 fb10 | 2424 c5fb | 107c 2408 
 ;; B147: #	out( B122 B148 ) <- in( B112 B146 )  Freq: 0.0545107
  0x00000001186a0cd8: 3bda 9090 | 9090 9090 | 0f8d 54fb 

  0x00000001186a0ce4: ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
  0x00000001186a0ce4: ffff 9090 
 ;; B149: #	out( B149 B150 ) <- in( B148 B149 ) Loop( B149-B149 inner post of N842) Freq: 0.272553
  0x00000001186a0ce8: c4c1 7b10 | 44db 10c4 | c17b 105c 

  0x00000001186a0cf4: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a0cf4: d810 c5fb 

  0x00000001186a0cf8: ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
  0x00000001186a0cf8: 5cc4 c5e3 | 5cdf c5fb | 59e8 c5e3 | 59c0 c5f3 | 58cd c5eb | 58d0 ffc3 

  0x00000001186a0d10: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a0d10: 3bda 7cd4 
 ;; B150: #	out( B122 ) <- in( B149 )  Freq: 0.0272554
  0x00000001186a0d14: e921 fbff | ff45 33d2 | 4c8b eb90 | e94b efff | ff45 33db | e963 efff | ff45 33c0 | e97c efff 
  0x00000001186a0d34: ff33 ffe9 | adef ffff 
 ;; B155: #	out( B16 ) <- in( B13 )  Freq: 0.000999983
  0x00000001186a0d3c: 4533 e490 | e9cb efff | ff48 8974 | 2450 c5fe | 7f54 2460 | 895c 240c | 4c89 4424 | 204c 895c 
  0x00000001186a0d5c: 2418 4c89 | 5424 1044 | 894c 2408 | 4c89 2424 | c4e1 f97e 

  0x00000001186a0d70: ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@157 (line 652)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
                      ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x00000001186a0d70: dd48 bea0 | 20d5 2502 

  0x00000001186a0d78: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
                      ; - jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x00000001186a0d78: 0000 0048 | 897c 2448 | c5fe 7f84 | 2480 0000 

  0x00000001186a0d88: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a0d88: 0090 9090 

  0x00000001186a0d8c: ;   {runtime_call _new_instance_Java}
  0x00000001186a0d8c: c5f8 77e8 

  0x00000001186a0d90: ; ImmutableOopMap {[0]=Oop [16]=Oop [24]=Oop [32]=Oop [72]=Oop [80]=Oop }
                      ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                      ; - (reexecute) jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a0d90: 0c87 49f8 
 ;; B157: #	out( B26 ) <- in( B156 )  Freq: 0.000100013
  0x00000001186a0d94: c4e1 f96e | dd4c 8b24 | 2444 8b4c | 2408 4c8b | 5424 104c | 8b5c 2418 | 4c8b 4424 | 208b 5c24 
  0x00000001186a0db4: 0cc5 fe6f | 5424 6048 | 8bc8 488b | 7424 50e9 | 53f0 ffff 
 ;; B158: #	out( B221 B159 ) <- in( B22 )  Freq: 0.000100015
  0x00000001186a0dc8: c5fe 7f44 | 2460 895c | 240c 4889 | 7c24 284c | 8944 2420 | 4c89 5c24 | 184c 8954 | 2410 4489 
  0x00000001186a0de8: 4c24 084c | 8924 24c4 

  0x00000001186a0df0: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a0df0: e1f9 7edd 

  0x00000001186a0df4: ;   {metadata({type array double})}
  0x00000001186a0df4: 48be 1806 | c425 0200 

  0x00000001186a0dfc: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@171 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x00000001186a0dfc: 0000 ba04 | 0000 0090 

  0x00000001186a0e04: ;   {runtime_call _new_array_Java}
  0x00000001186a0e04: c5f8 77e8 

  0x00000001186a0e08: ; ImmutableOopMap {[0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop }
                      ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                      ; - (reexecute) jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a0e08: 9483 49f8 
 ;; B159: #	out( B24 ) <- in( B158 )  Freq: 0.000100013
  0x00000001186a0e0c: c4e1 f96e | dd4c 8b24 | 2444 8b4c | 2408 4c8b | 5424 104c | 8b5c 2418 | 4c8b 4424 | 2048 8b7c 
  0x00000001186a0e2c: 2428 8b5c | 240c c5fe | 6f44 2460 | 488b f090 | 9090 9090 | e98a efff | ffc5 fe7f | 8424 8000 
  0x00000001186a0e4c: 0000 896c | 2430 4889 | 4c24 28c5 | fe7f 5424 | 6089 5c24 | 0c4c 8944 | 2420 4c89 | 5c24 184c 
  0x00000001186a0e6c: 8954 2410 | 4489 4c24 | 084c 8924 | 24c4 e1f9 

  0x00000001186a0e7c: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
                      ;   {metadata({type array double})}
  0x00000001186a0e7c: 7edd 48be | 1806 c425 

  0x00000001186a0e84: ;*isub {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@41 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x00000001186a0e84: 0200 0000 | ba04 0000 | 0090 9090 

  0x00000001186a0e90: ;   {runtime_call _new_array_Java}
  0x00000001186a0e90: c5f8 77e8 

  0x00000001186a0e94: ; ImmutableOopMap {[0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop }
                      ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                      ; - (reexecute) jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x00000001186a0e94: 0883 49f8 
 ;; B161: #	out( B33 ) <- in( B160 )  Freq: 0.000100013
  0x00000001186a0e98: c4e1 f96e | dd4c 8b24 | 2444 8b4c | 2408 4c8b | 5424 104c | 8b5c 2418 | 4c8b 4424 | 208b 5c24 
  0x00000001186a0eb8: 0cc5 fe6f | 5424 6048 | 8b4c 2428 | 8b6c 2430 | c5fe 6f84 | 2480 0000 | 0048 8bf0 | e9ec efff 
  0x00000001186a0ed8: ff48 8974 | 2450 c5fe | 7f8c 2480 | 0000 0089 | 6c24 2848 | 894c 2420 | c5fe 7f54 | 2460 895c 
  0x00000001186a0ef8: 2404 4c89 | 4424 184c | 895c 2410 | 4c89 5424 | 0844 890c | 24c4 e1f9 

  0x00000001186a0f10: ;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
                      ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x00000001186a0f10: 7edd 48be | a020 d525 

  0x00000001186a0f18: ;*synchronization entry
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@-1 (line 15)
  0x00000001186a0f18: 0200 0000 | 4c89 6424 | 48c5 fe7f | 8424 a000 

  0x00000001186a0f28: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a0f28: 0000 9090 

  0x00000001186a0f2c: ;   {runtime_call _new_instance_Java}
  0x00000001186a0f2c: c5f8 77e8 

  0x00000001186a0f30: ; ImmutableOopMap {[8]=Oop [16]=Oop [24]=Oop [32]=Oop [72]=Oop [80]=Oop }
                      ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                      ; - (reexecute) jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x00000001186a0f30: 6c85 49f8 
 ;; B163: #	out( B35 ) <- in( B162 )  Freq: 0.000100013
  0x00000001186a0f34: c4e1 f96e | dd44 8b0c | 244c 8b54 | 2408 4c8b | 5c24 104c | 8b44 2418 | 8b5c 2404 | c5fe 6f54 
  0x00000001186a0f54: 2460 488b | 4c24 208b | 6c24 28c5 | fe6f 8c24 | 8000 0000 | 488b d048 | 8b74 2450 | e99d efff 
  0x00000001186a0f74: ffc5 fe7f | 8424 a000 | 0000 897c | 242c 4889 | 5424 30c5 | fe7f 8c24 | 8000 0000 | 896c 2428 
  0x00000001186a0f94: 4889 4c24 | 20c5 fe7f | 5424 6089 | 5c24 044c | 8944 2418 | 4c89 5c24 | 104c 8954 | 2408 4489 
  0x00000001186a0fb4: 0c24 c4e1 

  0x00000001186a0fb8: ;*invokevirtual opCodeRaw {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorOperators$OperatorImpl::opCode@1 (line 774)
                      ; - jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
                      ; - jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@29 (line 2306)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
                      ;   {metadata({type array double})}
  0x00000001186a0fb8: f97e dd48 | be18 06c4 | 2502 0000 

  0x00000001186a0fc4: ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorOperators$OperatorImpl::opCode@26 (line 775)
                      ; - jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
                      ; - jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x00000001186a0fc4: 00ba 0400 | 0000 9090 

  0x00000001186a0fcc: ;   {runtime_call _new_array_Java}
  0x00000001186a0fcc: c5f8 77e8 

  0x00000001186a0fd0: ; ImmutableOopMap {[8]=Oop [16]=Oop [24]=Oop [32]=Oop [48]=Oop }
                      ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                      ; - (reexecute) jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a0fd0: cc81 49f8 
 ;; B165: #	out( B39 ) <- in( B164 )  Freq: 0.000100013
  0x00000001186a0fd4: c4e1 f96e | dd44 8b0c | 244c 8b54 | 2408 4c8b | 5c24 104c | 8b44 2418 | 8b5c 2404 | c5fe 6f54 
  0x00000001186a0ff4: 2460 488b | 4c24 208b | 6c24 28c5 | fe6f 8c24 | 8000 0000 | 488b 5424 | 308b 7c24 | 2cc5 fe6f 
  0x00000001186a1014: 8424 a000 | 0000 e995 | efff ffc5 | fe7f a424 | 8000 0000 | 4889 4424 | 3089 7c24 | 2448 8954 
  0x00000001186a1034: 2428 c5fe | 7f4c 2460 | 896c 2420 | 895c 2404 | 4c89 4424 | 184c 895c | 2410 4c89 | 5424 0844 
  0x00000001186a1054: 890c 24c4 

  0x00000001186a1058: ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a1058: e1f9 7edd 

  0x00000001186a105c: ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x00000001186a105c: 48be a020 | d525 0200 

  0x00000001186a1064: ;*synchronization entry
                      ; - jdk.incubator.vector.VectorOperators::opCode@-1 (line 403)
                      ; - jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x00000001186a1064: 0000 4889 | 4c24 48c5 | fe7f 8424 | a000 0000 

  0x00000001186a1074: ;   {runtime_call _new_instance_Java}
  0x00000001186a1074: c5f8 77e8 

  0x00000001186a1078: ; ImmutableOopMap {[8]=Oop [16]=Oop [24]=Oop [40]=Oop [48]=Oop [72]=Oop }
                      ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                      ; - (reexecute) jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a1078: 2484 49f8 
 ;; B167: #	out( B41 ) <- in( B166 )  Freq: 0.000100013
  0x00000001186a107c: 4c8b e0c4 | e1f9 6edd | 448b 0c24 | 4c8b 5424 | 084c 8b5c | 2410 4c8b | 4424 188b | 5c24 048b 
  0x00000001186a109c: 6c24 20c5 | fe6f 4c24 | 6048 8b54 | 2428 8b7c | 2424 488b | 4424 30c5 | fe6f a424 | 8000 0000 
  0x00000001186a10bc: 9090 9090 | e93b efff | ffc5 fe7f | 9424 a000 | 0000 4c89 | 6424 30c5 | fe7f a424 | 8000 0000 
  0x00000001186a10dc: 897c 2424 | 4889 5424 | 28c5 fe7f | 4c24 6089 | 6c24 2089 | 5c24 044c | 8944 2418 | 4c89 5c24 
  0x00000001186a10fc: 104c 8954 | 2408 4489 | 0c24 c4e1 

  0x00000001186a1108: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
                      ;   {metadata({type array double})}
  0x00000001186a1108: f97e dd48 | be18 06c4 | 2502 0000 

  0x00000001186a1114: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractVector::check@5 (line 124)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x00000001186a1114: 00ba 0400 | 0000 9090 

  0x00000001186a111c: ;   {runtime_call _new_array_Java}
  0x00000001186a111c: c5f8 77e8 

  0x00000001186a1120: ; ImmutableOopMap {[8]=Oop [16]=Oop [24]=Oop [40]=Oop [48]=Oop }
                      ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                      ; - (reexecute) jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x00000001186a1120: 7c80 49f8 
 ;; B169: #	out( B44 ) <- in( B168 )  Freq: 0.000100013
  0x00000001186a1124: c4e1 f96e | dd44 8b0c | 244c 8b54 | 2408 4c8b | 5c24 104c | 8b44 2418 | 8b5c 2404 | 8b6c 2420 
  0x00000001186a1144: c5fe 6f4c | 2460 488b | 5424 288b | 7c24 24c5 | fe6f a424 | 8000 0000 | 4c8b 6424 | 30c5 fe6f 
  0x00000001186a1164: 9424 a000 | 0000 e918 | efff ff48 | 8944 2460 | 4c89 6424 | 5889 6c24 | 5089 5c24 | 244c 8944 
  0x00000001186a1184: 2448 4c89 | 5c24 304c | 8954 2428 | 4489 4c24 | 20c4 e1f9 

  0x00000001186a1198: ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
                      ;   {metadata('jdk/incubator/vector/Double256Vector')}
  0x00000001186a1198: 7edd 48be | a020 d525 

  0x00000001186a11a0: ;*invokevirtual opKind {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorOperators::opKind@5 (line 409)
                      ; - jdk.incubator.vector.DoubleVector::opKind@2 (line 71)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@15 (line 630)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
  0x00000001186a11a0: 0200 0000 | c5fe 7f24 | 2489 7c24 | 5448 8954 | 2468 c5fe | 7f94 2480 

  0x00000001186a11b8: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a11b8: 0000 0090 

  0x00000001186a11bc: ;   {runtime_call _new_instance_Java}
  0x00000001186a11bc: c5f8 77e8 

  0x00000001186a11c0: ; ImmutableOopMap {[40]=Oop [48]=Oop [72]=Oop [88]=Oop [96]=Oop [104]=Oop }
                      ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                      ; - (reexecute) jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x00000001186a11c0: dc82 49f8 
 ;; B171: #	out( B46 ) <- in( B170 )  Freq: 0.000100013
  0x00000001186a11c4: 488b c8c4 | e1f9 6edd | 448b 4c24 | 204c 8b54 | 2428 4c8b | 5c24 304c | 8b44 2448 | 8b5c 2424 
  0x00000001186a11e4: 8b6c 2450 | 4c8b 6424 | 5848 8b44 | 2460 e9d9 | eeff ffc5 | fe7f 1424 | 4c89 6424 | 58e9 c7f2 
  0x00000001186a1204: ffff 4c8b | e144 8bcf | 488b cae9 | 3df2 ffff 
 ;; B174: #	out( B70 ) <- in( B41 )  Freq: 1.01326e-06
  0x00000001186a1214: 4889 5424 | 5889 7c24 | 5090 9090 | e99e f2ff 

  0x00000001186a1224: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x00000001186a1224: ffbe ccff 

  0x00000001186a1228: ;*invokevirtual sub {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x00000001186a1228: ffff 498b | ea4c 8944 | 2408 c5fb | 1044 2438 | c5fb 1144 | 2410 c5fb | 1044 2440 | c5fb 1144 
  0x00000001186a1248: 2418 c5fb | 115c 2428 | 4c89 5c24 | 3089 5c24 | 384c 8964 | 2440 4889 

  0x00000001186a1260: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a1260: 7c24 4890 

  0x00000001186a1264: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a1264: c5f8 77e8 

  0x00000001186a1268: ; ImmutableOopMap {rbp=Oop [8]=Oop [48]=Oop [64]=Oop [72]=Oop }
                      ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x00000001186a1268: d492 55f8 

  0x00000001186a126c: ;   {external_word}
  0x00000001186a126c: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a1278: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a1278: e4f0 e8d1 

  0x00000001186a127c: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a127c: fce3 f0f4 
 ;; B176: #	out( N3212 ) <- in( B21 )  Freq: 9.9999e-07
  0x00000001186a1280: bede ffff 

  0x00000001186a1284: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x00000001186a1284: ff49 8bea | 4c89 1c24 | 4c89 4424 | 08c5 fb10 | 4c24 38c5 | fb11 4c24 | 10c5 fb10 | 4c24 40c5 
  0x00000001186a12a4: fb11 4c24 | 1844 894c | 2420 c5fb | 115c 2428 | 4c89 6424 | 3048 897c | 2438 c5fe | 7f44 2440 
  0x00000001186a12c4: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a12c4: c5f8 77e8 

  0x00000001186a12c8: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [48]=Oop [56]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a12c8: 7492 55f8 

  0x00000001186a12cc: ;   {external_word}
  0x00000001186a12cc: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a12d8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a12d8: e4f0 e871 

  0x00000001186a12dc: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a12dc: fce3 f0f4 
 ;; B177: #	out( N3212 ) <- in( B27 )  Freq: 9.99988e-07
  0x00000001186a12e0: becc ffff 

  0x00000001186a12e4: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x00000001186a12e4: ff4c 8914 | 244c 895c | 2408 c5fb | 104c 2438 | c5fb 114c | 2418 c5fb | 104c 2440 | c5fb 114c 
  0x00000001186a1304: 2420 c5fb | 115c 2430 | 4c89 4424 | 3844 894c | 242c 4c89 | 6424 40c5 | fe7f 5424 

  0x00000001186a1320: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a1320: 6090 9090 

  0x00000001186a1324: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a1324: c5f8 77e8 

  0x00000001186a1328: ; ImmutableOopMap {[0]=Oop [8]=Oop [56]=Oop [64]=Oop }
                      ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x00000001186a1328: 1492 55f8 

  0x00000001186a132c: ;   {external_word}
  0x00000001186a132c: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a1338: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a1338: e4f0 e811 | fce3 f0f4 
 ;; B178: #	out( N3212 ) <- in( B30 )  Freq: 9.99985e-07
  0x00000001186a1340: c5fe 6fc8 

  0x00000001186a1344: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a1344: c5fe 6fc2 | bede ffff 

  0x00000001186a134c: ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@2 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x00000001186a134c: ff49 8bea | 4c89 1c24 | 4c89 4424 | 08c5 fb10 | 5424 40c5 | fb11 5424 | 1844 894c | 2420 c5fb 
  0x00000001186a136c: 115c 2428 | 4c89 6424 | 30c5 fe7f | 4c24 40c5 | fe7f 4424 

  0x00000001186a1380: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a1380: 6090 9090 

  0x00000001186a1384: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a1384: c5f8 77e8 

  0x00000001186a1388: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [48]=Oop }
                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x00000001186a1388: b491 55f8 

  0x00000001186a138c: ;   {external_word}
  0x00000001186a138c: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a1398: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a1398: e4f0 e8b1 | fbe3 f0f4 
 ;; B179: #	out( B74 ) <- in( B35 )  Freq: 9.99984e-07
  0x00000001186a13a0: 448b cf4c | 8be1 488b | cae9 69f1 | ffff 4c8b | f548 8b1c | 2448 8b4c | 2408 4c8b | 6424 1890 
  0x00000001186a13c0: eb0e 488b | 1c24 488b | 4c24 084c | 8b64 2418 
 ;; B182: #	out( N3212 ) <- in( B180 B181 B183 B184 B14 )  Freq: 4.99499e-06
  0x00000001186a13d0: be8d ffff 

  0x00000001186a13d4: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x00000001186a13d4: ff48 8b6c | 2438 448b | 5424 2044 | 8954 2408 | 4c89 6c24 | 184c 8974 | 2420 4889 | 5c24 2848 
  0x00000001186a13f4: 894c 2430 | 4c89 6424 

  0x00000001186a13fc: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a13fc: 3890 9090 

  0x00000001186a1400: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a1400: c5f8 77e8 

  0x00000001186a1404: ; ImmutableOopMap {[24]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop }
                      ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x00000001186a1404: 3891 55f8 

  0x00000001186a1408: ;   {external_word}
  0x00000001186a1408: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a1414: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a1414: e4f0 e835 | fbe3 f0f4 
 ;; B183: #	out( B182 ) <- in( B8 )  Freq: 9.98998e-07
  0x00000001186a141c: 488b 4c24 | 084c 8b64 | 2418 eba8 
 ;; B184: #	out( B182 ) <- in( B11 )  Freq: 9.98997e-07
  0x00000001186a1428: 4c8b 6424 

  0x00000001186a142c: ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x00000001186a142c: 18eb a1be 

  0x00000001186a1430: ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x00000001186a1430: deff ffff | 498b ea4c | 891c 244c | 8944 2408 | c5fb 1044 | 2440 c5fb | 1144 2410 | 4489 4c24 
  0x00000001186a1450: 18c5 fb11 | 5c24 2048 | 894c 2430 | 4c89 6424 

  0x00000001186a1460: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a1460: 4090 9090 

  0x00000001186a1464: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a1464: c5f8 77e8 

  0x00000001186a1468: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [48]=Oop [64]=Oop }
                      ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
  0x00000001186a1468: d490 55f8 

  0x00000001186a146c: ;   {external_word}
  0x00000001186a146c: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a1478: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a1478: e4f0 e8d1 

  0x00000001186a147c: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a147c: fae3 f0f4 
 ;; B186: #	out( N3212 ) <- in( B76 )  Freq: 3.29967e-07
  0x00000001186a1480: bede ffff 

  0x00000001186a1484: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x00000001186a1484: ff49 8bea | 4c89 1c24 | 4c89 4424 | 0844 894c | 2410 c5fb | 115c 2418 | 4c89 6424 | 20c5 fb10 
  0x00000001186a14a4: 4424 40c5 | fb11 4424 | 3048 894c | 2438 c5fb | 1164 2440 

  0x00000001186a14b8: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a14b8: c5f8 77e8 

  0x00000001186a14bc: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [56]=Oop }
                      ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
  0x00000001186a14bc: 8090 55f8 

  0x00000001186a14c0: ;   {external_word}
  0x00000001186a14c0: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a14cc: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a14cc: e4f0 e87d | fae3 f0f4 
 ;; B187: #	out( B104 ) <- in( B96 )  Freq: 3.29965e-07
  0x00000001186a14d4: 33db e953 

  0x00000001186a14d8: ;   {section_word}
  0x00000001186a14d8: f2ff ffc5 | f92e 1dbd | e6ff ffbd | ffff ffff | 0f8a 0e00 | 0000 0f82 | 0800 0000 | 400f 95c5 
  0x00000001186a14f8: 400f b6ed 

  0x00000001186a14fc: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a14fc: f7dd be76 

  0x00000001186a1500: ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x00000001186a1500: ffff ff4c | 8914 244c | 895c 2408 | 4c89 4424 | 10c5 fb11 | 5c24 184c | 8964 2420 | 4889 4c24 
  0x00000001186a1520: 28c5 fb11 | 6424 30c5 | fb11 7c24 | 38c5 7e7f 

  0x00000001186a1530: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a1530: 4424 6090 

  0x00000001186a1534: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a1534: c5f8 77e8 

  0x00000001186a1538: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [32]=Oop [40]=Oop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@205 (line 46)
  0x00000001186a1538: 0490 55f8 

  0x00000001186a153c: ;   {external_word}
  0x00000001186a153c: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a1548: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a1548: e4f0 e801 

  0x00000001186a154c: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a154c: fae3 f0f4 
 ;; B189: #	out( N3212 ) <- in( B81 B79 B80 B83 B82 )  Freq: 8.35869e-07
  0x00000001186a1550: be76 ffff 

  0x00000001186a1554: ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x00000001186a1554: ff49 8bea | 4c89 1c24 | 4c89 4424 | 08c5 fb11 | 5c24 184c | 8964 2420 | 4889 4c24 | 2844 894c 
  0x00000001186a1574: 2414 c5fb | 1164 2430 | c5fb 116c | 2438 8954 

  0x00000001186a1584: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a1584: 2440 9090 

  0x00000001186a1588: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a1588: c5f8 77e8 

  0x00000001186a158c: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [40]=Oop }
                      ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@134 (line 32)
  0x00000001186a158c: b08f 55f8 

  0x00000001186a1590: ;   {external_word}
  0x00000001186a1590: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a159c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a159c: e4f0 e8ad | f9e3 f0f4 
 ;; B190: #	out( N3212 ) <- in( B87 )  Freq: 1.67173e-07
  0x00000001186a15a4: ;   {external_word}
  0x00000001186a15a4: 48bf 3125 | c209 0100 | 0000 4883 

  0x00000001186a15b0: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a15b0: e4f0 e899 | f9e3 f0f4 
 ;; B191: #	out( N3212 ) <- in( B88 )  Freq: 1.67173e-07
  0x00000001186a15b8: ;   {external_word}
  0x00000001186a15b8: 48bf 3125 | c209 0100 | 0000 4883 

  0x00000001186a15c4: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a15c4: e4f0 e885 | f9e3 f0f4 
 ;; B192: #	out( N3212 ) <- in( B89 )  Freq: 1.67173e-07
  0x00000001186a15cc: ;   {external_word}
  0x00000001186a15cc: 48bf 3125 | c209 0100 | 0000 4883 

  0x00000001186a15d8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a15d8: e4f0 e871 | f9e3 f0f4 
 ;; B193: #	out( N3212 ) <- in( B90 )  Freq: 1.67173e-07
  0x00000001186a15e0: ;   {external_word}
  0x00000001186a15e0: 48bf 3125 | c209 0100 | 0000 4883 

  0x00000001186a15ec: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a15ec: e4f0 e85d | f9e3 f0f4 
 ;; B194: #	out( N3212 ) <- in( B91 )  Freq: 1.67173e-07
  0x00000001186a15f4: ;   {external_word}
  0x00000001186a15f4: 48bf 3125 | c209 0100 | 0000 4883 

  0x00000001186a1600: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a1600: e4f0 e849 | f9e3 f0f4 
 ;; B195: #	out( N3212 ) <- in( B92 )  Freq: 1.67172e-07
  0x00000001186a1608: ;   {external_word}
  0x00000001186a1608: 48bf 3125 | c209 0100 | 0000 4883 

  0x00000001186a1614: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a1614: e4f0 e835 | f9e3 f0f4 
 ;; B196: #	out( N3212 ) <- in( B93 )  Freq: 1.67172e-07
  0x00000001186a161c: ;   {external_word}
  0x00000001186a161c: 48bf 3125 | c209 0100 | 0000 4883 

  0x00000001186a1628: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a1628: e4f0 e821 | f9e3 f0f4 
 ;; B197: #	out( N3212 ) <- in( B94 )  Freq: 1.67172e-07
  0x00000001186a1630: ;   {external_word}
  0x00000001186a1630: 48bf 3125 | c209 0100 | 0000 4883 

  0x00000001186a163c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a163c: e4f0 e80d 

  0x00000001186a1640: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a1640: f9e3 f0f4 
 ;; B198: #	out( N3212 ) <- in( B107 B105 B106 B108 B109 )  Freq: 2.76176e-07
  0x00000001186a1644: be76 ffff 

  0x00000001186a1648: ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x00000001186a1648: ff49 8bea | 4c89 1c24 | 4c89 4424 | 08c5 fb11 | 6424 18c5 | fb11 7c24 | 2089 5c24 | 14c5 fb11 
  0x00000001186a1668: 4c24 28c5 | fb11 5424 | 3089 5424 

  0x00000001186a1674: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a1674: 3890 9090 

  0x00000001186a1678: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a1678: c5f8 77e8 

  0x00000001186a167c: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop }
                      ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@305 (line 55)
  0x00000001186a167c: c08e 55f8 

  0x00000001186a1680: ;   {external_word}
  0x00000001186a1680: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a168c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a168c: e4f0 e8bd | f8e3 f0f4 
 ;; B199: #	out( N3212 ) <- in( B113 )  Freq: 5.52349e-08
  0x00000001186a1694: ;   {external_word}
  0x00000001186a1694: 48bf 3125 | c209 0100 | 0000 4883 

  0x00000001186a16a0: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a16a0: e4f0 e8a9 | f8e3 f0f4 
 ;; B200: #	out( N3212 ) <- in( B114 )  Freq: 5.52349e-08
  0x00000001186a16a8: ;   {external_word}
  0x00000001186a16a8: 48bf 3125 | c209 0100 | 0000 4883 

  0x00000001186a16b4: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a16b4: e4f0 e895 | f8e3 f0f4 
 ;; B201: #	out( N3212 ) <- in( B115 )  Freq: 5.52348e-08
  0x00000001186a16bc: ;   {external_word}
  0x00000001186a16bc: 48bf 3125 | c209 0100 | 0000 4883 

  0x00000001186a16c8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a16c8: e4f0 e881 | f8e3 f0f4 
 ;; B202: #	out( N3212 ) <- in( B116 )  Freq: 5.52348e-08
  0x00000001186a16d0: ;   {external_word}
  0x00000001186a16d0: 48bf 3125 | c209 0100 | 0000 4883 

  0x00000001186a16dc: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a16dc: e4f0 e86d | f8e3 f0f4 
 ;; B203: #	out( N3212 ) <- in( B117 )  Freq: 5.52347e-08
  0x00000001186a16e4: ;   {external_word}
  0x00000001186a16e4: 48bf 3125 | c209 0100 | 0000 4883 

  0x00000001186a16f0: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a16f0: e4f0 e859 | f8e3 f0f4 
 ;; B204: #	out( N3212 ) <- in( B118 )  Freq: 5.52347e-08
  0x00000001186a16f8: ;   {external_word}
  0x00000001186a16f8: 48bf 3125 | c209 0100 | 0000 4883 

  0x00000001186a1704: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a1704: e4f0 e845 | f8e3 f0f4 
 ;; B205: #	out( N3212 ) <- in( B119 )  Freq: 5.52346e-08
  0x00000001186a170c: ;   {external_word}
  0x00000001186a170c: 48bf 3125 | c209 0100 | 0000 4883 142.467 ms/op


  0x00000001186a1718: # Warmup Iteration   4: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a1718: e4f0 e831 | f8e3 f0f4 
 ;; B206: #	out( N3212 ) <- in( B120 )  Freq: 5.52346e-08
  0x00000001186a1720: ;   {external_word}
  0x00000001186a1720: 48bf 3125 | c209 0100 | 0000 4883 

  0x00000001186a172c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a172c: e4f0 e81d 

  0x00000001186a1730: ;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x00000001186a1730: f8e3 f0f4 
 ;; B207: #	out( N3212 ) <- in( B72 )  Freq: 1.01327e-12
  0x00000001186a1734: bef6 ffff 

  0x00000001186a1738: ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x00000001186a1738: ff90 9090 

  0x00000001186a173c: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a173c: c5f8 77e8 

  0x00000001186a1740: ; ImmutableOopMap {}
                      ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
  0x00000001186a1740: fc8d 55f8 

  0x00000001186a1744: ;   {external_word}
  0x00000001186a1744: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a1750: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a1750: e4f0 e8f9 

  0x00000001186a1754: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a1754: f7e3 f0f4 
 ;; B208: #	out( N3212 ) <- in( B17 )  Freq: 1.01327e-06
  0x00000001186a1758: bef6 ffff 

  0x00000001186a175c: ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::sub@-1 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x00000001186a175c: ff90 9090 

  0x00000001186a1760: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a1760: c5f8 77e8 

  0x00000001186a1764: ; ImmutableOopMap {}
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x00000001186a1764: d88d 55f8 

  0x00000001186a1768: ;   {external_word}
  0x00000001186a1768: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a1774: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a1774: e4f0 e8d5 

  0x00000001186a1778: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a1778: f7e3 f0f4 
 ;; B209: #	out( N3212 ) <- in( B20 )  Freq: 1.01327e-06
  0x00000001186a177c: bef6 ffff 

  0x00000001186a1780: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x00000001186a1780: ffc5 fe7f 

  0x00000001186a1784: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a1784: 0424 9090 

  0x00000001186a1788: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a1788: c5f8 77e8 

  0x00000001186a178c: ; ImmutableOopMap {}
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a178c: b08d 55f8 

  0x00000001186a1790: ;   {external_word}
  0x00000001186a1790: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a179c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a179c: e4f0 e8ad 

  0x00000001186a17a0: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a17a0: f7e3 f0f4 
 ;; B210: #	out( N3212 ) <- in( B26 )  Freq: 1.01327e-06
  0x00000001186a17a4: bef6 ffff 

  0x00000001186a17a8: ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x00000001186a17a8: ff90 9090 

  0x00000001186a17ac: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a17ac: c5f8 77e8 

  0x00000001186a17b0: ; ImmutableOopMap {}
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x00000001186a17b0: 8c8d 55f8 

  0x00000001186a17b4: ;   {external_word}
  0x00000001186a17b4: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a17c0: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a17c0: e4f0 e889 

  0x00000001186a17c4: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a17c4: f7e3 f0f4 
 ;; B211: #	out( N3212 ) <- in( B29 )  Freq: 1.01326e-06
  0x00000001186a17c8: bef6 ffff 

  0x00000001186a17cc: ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::fromArray@2 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x00000001186a17cc: ffc5 fe7f 

  0x00000001186a17d0: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a17d0: 0424 9090 

  0x00000001186a17d4: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a17d4: c5f8 77e8 

  0x00000001186a17d8: ; ImmutableOopMap {}
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x00000001186a17d8: 648d 55f8 

  0x00000001186a17dc: ;   {external_word}
  0x00000001186a17dc: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a17e8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a17e8: e4f0 e861 

  0x00000001186a17ec: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a17ec: f7e3 f0f4 
 ;; B212: #	out( N3212 ) <- in( B75 )  Freq: 3.34349e-07
  0x00000001186a17f0: bef6 ffff 

  0x00000001186a17f4: ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x00000001186a17f4: ff90 9090 

  0x00000001186a17f8: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a17f8: c5f8 77e8 

  0x00000001186a17fc: ; ImmutableOopMap {}
                      ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
  0x00000001186a17fc: 408d 55f8 

  0x00000001186a1800: ;   {external_word}
  0x00000001186a1800: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a180c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a180c: e4f0 e83d 

  0x00000001186a1810: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a1810: f7e3 f0f4 
 ;; B213: #	out( N3212 ) <- in( B77 )  Freq: 3.34349e-07
  0x00000001186a1814: bef6 ffff 

  0x00000001186a1818: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x00000001186a1818: ff90 9090 

  0x00000001186a181c: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a181c: c5f8 77e8 

  0x00000001186a1820: ; ImmutableOopMap {}
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@133 (line 32)
  0x00000001186a1820: 1c8d 55f8 

  0x00000001186a1824: ;   {external_word}
  0x00000001186a1824: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a1830: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a1830: e4f0 e819 

  0x00000001186a1834: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a1834: f7e3 f0f4 
 ;; B214: #	out( N3212 ) <- in( B122 )  Freq: 1.1047e-07
  0x00000001186a1838: bef6 ffff 

  0x00000001186a183c: ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
                      ; - jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
  0x00000001186a183c: ffc4 e1f9 

  0x00000001186a1840: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a1840: 7ec5 9090 

  0x00000001186a1844: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a1844: c5f8 77e8 

  0x00000001186a1848: ; ImmutableOopMap {}
                      ;*putfield slope {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@360 (line 60)
  0x00000001186a1848: f48c 55f8 

  0x00000001186a184c: ;   {external_word}
  0x00000001186a184c: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a1858: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a1858: e4f0 e8f1 

  0x00000001186a185c: ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorOperators$OperatorImpl::opKind@6 (line 828)
                      ; - jdk.incubator.vector.VectorOperators::opKind@5 (line 409)
                      ; - jdk.incubator.vector.DoubleVector::opKind@2 (line 71)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@15 (line 630)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x00000001186a185c: f6e3 f0f4 
 ;; B215: #	out( B228 ) <- in( B168 )  Freq: 1.00015e-09
  0x00000001186a1860: e920 0000 | 00e9 1b00 | 0000 e90f 

  0x00000001186a186c: ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@133 (line 32)
  0x00000001186a186c: 0000 00eb 

  0x00000001186a1870: ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorOperators$OperatorImpl::opKind@6 (line 828)
                      ; - jdk.incubator.vector.VectorOperators::opKind@5 (line 409)
                      ; - jdk.incubator.vector.DoubleVector::opKind@2 (line 71)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@15 (line 630)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x00000001186a1870: 0de9 0f00 

  0x00000001186a1874: ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorOperators$OperatorImpl::opKind@0 (line 828)
                      ; - jdk.incubator.vector.VectorOperators::opKind@5 (line 409)
                      ; - jdk.incubator.vector.DoubleVector::opKind@2 (line 71)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@15 (line 630)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x00000001186a1874: 0000 eb0d 
 ;; B221: #	out( B225 ) <- in( B158 )  Freq: 1.00015e-09
  0x00000001186a1878: ;*invokevirtual opKind {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorOperators::opKind@5 (line 409)
                      ; - jdk.incubator.vector.DoubleVector::opKind@2 (line 71)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@15 (line 630)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x00000001186a1878: eb04 eb02 
 ;; B223: #	out( B225 ) <- in( B63 )  Freq: 0.00033002
  0x00000001186a187c: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x00000001186a187c: eb00 488b 

  0x00000001186a1880: ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@133 (line 32)
  0x00000001186a1880: f0eb 05eb 

  0x00000001186a1884: ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
  0x00000001186a1884: 0048 8bf0 
 ;; B229: #	out( N3212 ) <- in( B228 B225 )  Freq: 0.00132009
  0x00000001186a1888: c5f8 7748 | 81c4 d000 

  0x00000001186a1890: ;   {runtime_call _rethrow_Java}
  0x00000001186a1890: 0000 5de9 

  0x00000001186a1894: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a1894: 0876 49f8 

  0x00000001186a1898: ;   {internal_word}
  0x00000001186a1898: 49ba 5f08 | 6a18 0100 | 0000 4d89 | 97e8 0300 

  0x00000001186a18a8: ;   {runtime_call SafepointBlob}
  0x00000001186a18a8: 00e9 7299 | 55f8 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 
[Exception Handler]
  0x00000001186a18c0: ;   {no_reloc}
  0x00000001186a18c0: e95b 384a | f8e8 0000 | 0000 4883 

  0x00000001186a18cc: ;   {runtime_call DeoptimizationBlob}
  0x00000001186a18cc: 2c24 05e9 | 8c8f 55f8 | f4f4 f4f4 
[/MachCode]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00000001186a18d8:   0x000000014e800fe8 a 'java/lang/Class'{0x000000014e800fe8} = 'jdk/incubator/vector/Double256Vector'
  0x00000001186a18e0:   0x000000011ff8c550 a 'java/lang/Class'{0x000000011ff8c550} = double
  0x00000001186a18e8:   0x000000014e8010d0 a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000014e8010d0}
  0x00000001186a18f0:   0x000000014e8010e0 a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000014e8010e0}
  0x00000001186a18f8:   0x000000014e801150 a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000014e801150}
  0x00000001186a1900:   0x000000011ff58b48 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011ff58b48}
  0x00000001186a1908:   0x00000001200a7938 a 'java/lang/Class'{0x00000001200a7938} = 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00000001186a1910:   0x000000026788fe18 {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
  0x00000001186a1918:   0x0000000267b6f330 {method} {0x0000000267b6f330} 'reduceLanes' '(Ljdk/incubator/vector/VectorOperators$Associative;)D' in 'jdk/incubator/vector/Double256Vector'
  0x00000001186a1920:   0x0000000267b1d348 {method} {0x0000000267b1d348} 'reduceLanesTemplate' '(Ljdk/incubator/vector/VectorOperators$Associative;)D' in 'jdk/incubator/vector/DoubleVector'
  0x00000001186a1928:   0x0000000225d0e900 'org/jml/regression/linear/DoubleVectorLinearRegression'
  0x00000001186a1930:   0x0000000225c40618 {type array double}
  0x00000001186a1938:   0x0000000267b1ded0 {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x00000001186a1940:   0x0000000267b710c0 {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
  0x00000001186a1948:   0x0000000267b1f228 {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x00000001186a1950:   0x000000011040aa78 {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
  0x00000001186a1958:   0x0000000267b39e30 {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
  0x00000001186a1960:   0x0000000225d520a0 'jdk/incubator/vector/Double256Vector'
  0x00000001186a1968:   0x0000000267b18ef0 {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x00000001186a1970:   0x0000000267b72458 {method} {0x0000000267b72458} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
  0x00000001186a1978:   0x0000000267b6f070 {method} {0x0000000267b6f070} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/Double256Vector;' in 'jdk/incubator/vector/Double256Vector'
  0x00000001186a1980:   0x0000000267b17fb0 {method} {0x0000000267b17fb0} 'lanewiseTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x00000001186a1988:   0x0000000267b2a790 {method} {0x0000000267b2a790} 'check' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
  0x00000001186a1990:   0x0000000267b40508 {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
  0x00000001186a1998:   0x0000000267b153c0 {method} {0x0000000267b153c0} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;)I' in 'jdk/incubator/vector/DoubleVector'
  0x00000001186a19a0:   0x0000000267b36008 {method} {0x0000000267b36008} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;II)I' in 'jdk/incubator/vector/VectorOperators'
  0x00000001186a19a8:   0x0000000267a85e38 {method} {0x0000000267a85e38} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00000001186a19b0:   0x0000000267b2a8b0 {method} {0x0000000267b2a8b0} 'sameSpecies' '(Ljdk/incubator/vector/Vector;)Z' in 'jdk/incubator/vector/AbstractVector'
  0x00000001186a19b8:   0x0000000267b19378 {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x00000001186a19c0:   0x0000000267b96280 {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x00000001186a19c8:   0x000000011015f0e0 {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
  0x00000001186a19d0:   0x0000000267b15588 {method} {0x0000000267b15588} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/DoubleVector'
  0x00000001186a19d8:   0x0000000267b1fe80 {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
  0x00000001186a19e0:   0x0000000267b360e8 {method} {0x0000000267b360e8} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/VectorOperators'
  0x00000001186a19e8:   0x0000000267b181a0 {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x00000001186a19f0:   0x0000000267b726c8 {method} {0x0000000267b726c8} 'broadcast' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
  0x00000001186a19f8:   0x0000000267a862a0 {method} {0x0000000267a862a0} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00000001186a1a00:   0x0000000225d4eb10 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
  0x00000001186a1a08:   0x0000000267b3ef30 {method} {0x0000000267b3ef30} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00000001186a1a10:   0x0000000267b33200 {method} {0x0000000267b33200} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
  0x00000001186a1a18:   0x0000000225d5a3b0 'jdk/incubator/vector/VectorOperators$BinaryImpl'
  0x00000001186a1a20:   0x0000000267a85f10 {method} {0x0000000267a85f10} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x000000011869fbbf offset=ffffffff bits=0):
PcDesc(pc=0x000000011869fbdf offset=1f bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869fbf2 offset=32 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x000000011869fbf8 offset=38 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869fbff offset=3f bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x000000011869fc03 offset=43 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869fc07 offset=47 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x000000011869fc0c offset=4c bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869fc10 offset=50 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x000000011869fc15 offset=55 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869fc1d offset=5d bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x000000011869fc23 offset=63 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869fc2b offset=6b bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x000000011869fc31 offset=71 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869fc35 offset=75 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x000000011869fc87 offset=c7 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869fc90 offset=d0 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x000000011869fca8 offset=e8 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869fcb1 offset=f1 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x000000011869fcdb offset=11b bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869fce9 offset=129 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x000000011869fd0a offset=14a bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869fd10 offset=150 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x000000011869fd33 offset=173 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869fd46 offset=186 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x000000011869fd4d offset=18d bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x000000011869fd56 offset=196 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869fd6a offset=1aa bits=0):   jdk.incubator.vector.AbstractVector::check@5 (line 124)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x000000011869fd71 offset=1b1 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869fd77 offset=1b7 bits=0):   jdk.incubator.vector.AbstractVector::check@5 (line 124)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x000000011869fdcf offset=20f bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@6 (line 3120)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x000000011869fdd3 offset=213 bits=0):   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x000000011869fdd8 offset=218 bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x000000011869fdeb offset=22b bits=0):   jdk.incubator.vector.AbstractVector::check@5 (line 124)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x000000011869fdf2 offset=232 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869fdf8 offset=238 bits=0):   jdk.incubator.vector.AbstractVector::check@5 (line 124)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x000000011869fe1b offset=25b bits=0):   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x000000011869fe1f offset=25f bits=0):   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x000000011869fe38 offset=278 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869fe3f offset=27f bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x000000011869fe4b offset=28b bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869fe5f offset=29f bits=0):   jdk.incubator.vector.AbstractVector::check@5 (line 124)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x000000011869fe67 offset=2a7 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869fe6d offset=2ad bits=0):   jdk.incubator.vector.AbstractVector::check@5 (line 124)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x000000011869fec5 offset=305 bits=0):   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x000000011869feca offset=30a bits=0):   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x000000011869fecf offset=30f bits=0):   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x000000011869fee2 offset=322 bits=0):   jdk.incubator.vector.AbstractVector::check@5 (line 124)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x000000011869fee9 offset=329 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869feef offset=32f bits=0):   jdk.incubator.vector.AbstractVector::check@5 (line 124)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x000000011869ff12 offset=352 bits=0):   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x000000011869ff16 offset=356 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x000000011869ff32 offset=372 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869ff47 offset=387 bits=0):   jdk.incubator.vector.AbstractVector::check@5 (line 124)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x000000011869ff4e offset=38e bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869ff54 offset=394 bits=0):   jdk.incubator.vector.AbstractVector::check@5 (line 124)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x000000011869ffb4 offset=3f4 bits=0):   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@29 (line 2306)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
PcDesc(pc=0x000000011869ffcb offset=40b bits=0):   jdk.incubator.vector.AbstractVector::check@5 (line 124)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x000000011869ffd2 offset=412 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x000000011869ffd8 offset=418 bits=0):   jdk.incubator.vector.AbstractVector::check@5 (line 124)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a0000 offset=440 bits=0):   jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@29 (line 2306)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
PcDesc(pc=0x00000001186a0005 offset=445 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
PcDesc(pc=0x00000001186a000d offset=44d bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a0022 offset=462 bits=0):   jdk.incubator.vector.AbstractVector::check@5 (line 124)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a0029 offset=469 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a002f offset=46f bits=0):   jdk.incubator.vector.AbstractVector::check@5 (line 124)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a0087 offset=4c7 bits=0):   jdk.incubator.vector.VectorOperators$OperatorImpl::opCode@26 (line 775)
   jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@29 (line 2306)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
PcDesc(pc=0x00000001186a008b offset=4cb bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a009e offset=4de bits=0):   jdk.incubator.vector.AbstractVector::check@5 (line 124)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a00a7 offset=4e7 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a00ad offset=4ed bits=0):   jdk.incubator.vector.AbstractVector::check@5 (line 124)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a00d0 offset=510 bits=0):   jdk.incubator.vector.VectorOperators$OperatorImpl::opCode@1 (line 774)
   jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@29 (line 2306)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
PcDesc(pc=0x00000001186a00d4 offset=514 bits=0):   jdk.incubator.vector.VectorOperators$OperatorImpl::opCode@12 (line 775)
   jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@29 (line 2306)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
PcDesc(pc=0x00000001186a00d8 offset=518 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x00000001186a00e0 offset=520 bits=0):   jdk.incubator.vector.AbstractVector::check@5 (line 124)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a013c offset=57c bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a0146 offset=586 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a014a offset=58a bits=0):   jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a0150 offset=590 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x00000001186a0163 offset=5a3 bits=0):   jdk.incubator.vector.AbstractVector::check@5 (line 124)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a016a offset=5aa bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a0170 offset=5b0 bits=0):   jdk.incubator.vector.AbstractVector::check@5 (line 124)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a0194 offset=5d4 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a0199 offset=5d9 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a019d offset=5dd bits=0):   jdk.incubator.vector.AbstractVector::check@5 (line 124)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a01a8 offset=5e8 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a01ab offset=5eb bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)  reexecute=true
   Locals
    - l0: stack[32],oop
    - l1: stack[40],oop
    - l2: stack[48],oop
    - l3: 0
    - l4: stack[56],double
    - l5: 0
    - l6: stack[64],double
    - l7: reg rbp [10],int
    - l8: 0
    - l9: reg xmm3 [96],double
    - l10: obj[757]
    - l11: obj[758]
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 757: jdk.incubator.vector.Double256Vector reg xmm4 [112]Wrong location type 7
    - 758: jdk.incubator.vector.Double256Vector reg xmm0 [48]Wrong location type 7
PcDesc(pc=0x00000001186a01d9 offset=619 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a0209 offset=649 bits=0):   jdk.incubator.vector.AbstractVector::check@5 (line 124)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a0217 offset=657 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x00000001186a021c offset=65c bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a0223 offset=663 bits=0):   jdk.incubator.vector.AbstractVector::check@5 (line 124)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a022a offset=66a bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a0230 offset=670 bits=0):   jdk.incubator.vector.AbstractVector::check@5 (line 124)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a028c offset=6cc bits=0):   jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 133)
   jdk.incubator.vector.AbstractVector::check@2 (line 124)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a0295 offset=6d5 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a0299 offset=6d9 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@18 (line 630)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a029f offset=6df bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a02b2 offset=6f2 bits=0):   jdk.incubator.vector.AbstractVector::check@5 (line 124)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a02c7 offset=707 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a02cd offset=70d bits=0):   jdk.incubator.vector.AbstractVector::check@5 (line 124)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a02f6 offset=736 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a02fa offset=73a bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x00000001186a02ff offset=73f bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x00000001186a0318 offset=758 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a032d offset=76d bits=0):   jdk.incubator.vector.AbstractVector::check@5 (line 124)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a034d offset=78d bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a0364 offset=7a4 bits=5):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000014e800fe8} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: stack[88],oop
    - @5: obj[725]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000014e8010d0}
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: stack[32],oop
    - l1: stack[40],oop
    - l2: stack[48],oop
    - l3: 0
    - l4: stack[56],double
    - l5: 0
    - l6: stack[64],double
    - l7: stack[80]
    - l8: 0
    - l9: reg rbp [10],double
    - l10: obj[724]
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 724: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
    - 725: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
PcDesc(pc=0x00000001186a0387 offset=7c7 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x00000001186a03a0 offset=7e0 bits=5):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000014e800fe8} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: stack[0],oop
    - @5: obj[690]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000014e8010d0}
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: stack[32],oop
    - l1: stack[40],oop
    - l2: stack[48],oop
    - l3: 0
    - l4: stack[56],double
    - l5: 0
    - l6: stack[64],double
    - l7: stack[80]
    - l8: 0
    - l9: reg rbp [10],double
    - l10: empty
    - l11: stack[88],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 690: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
PcDesc(pc=0x00000001186a03bf offset=7ff bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a03c8 offset=808 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a03dc offset=81c bits=5):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000014e800fe8} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: reg rbp [10],oop
    - @5: obj[709]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000014e8010d0}
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: stack[32],oop
    - l1: stack[40],oop
    - l2: stack[48],oop
    - l3: 0
    - l4: stack[56],double
    - l5: 0
    - l6: stack[64],double
    - l7: stack[80]
    - l8: 0
    - l9: stack[104],double
    - l10: empty
    - l11: stack[88],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 709: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
PcDesc(pc=0x00000001186a0408 offset=848 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@42 (line 2308)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
PcDesc(pc=0x00000001186a0412 offset=852 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a0424 offset=864 bits=5):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000014e800fe8} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: reg rbp [10],oop
    - @5: obj[745]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000014e8010d0}
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: stack[32],oop
    - l1: stack[40],oop
    - l2: stack[48],oop
    - l3: 0
    - l4: stack[56],double
    - l5: 0
    - l6: stack[64],double
    - l7: stack[80]
    - l8: 0
    - l9: stack[112],double
    - l10: obj[744]
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 744: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
    - 745: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
PcDesc(pc=0x00000001186a0451 offset=891 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x00000001186a0456 offset=896 bits=0):   jdk.incubator.vector.DoubleVector::sub@0 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
PcDesc(pc=0x00000001186a049c offset=8dc bits=0):   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[36]
    - @1: stack[72]
    - @2: NULL
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000014e8010e0}
    - l1: stack[64],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[64],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[16],double
    - l5: 0
    - l6: stack[24],double
    - l7: stack[36]
    - l8: 0
    - l9: stack[40],double
    - l10: empty
    - l11: stack[48],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[56],oop
PcDesc(pc=0x00000001186a04cd offset=90d bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a04d2 offset=912 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@59 (line 24)
PcDesc(pc=0x00000001186a04f4 offset=934 bits=0):   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[76]
    - @1: reg rbp [10],int
    - @2: NULL
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000014e8010e0}
    - l1: stack[96],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[32],oop
    - l1: stack[40],oop
    - l2: stack[96],oop
    - l3: 0
    - l4: stack[56],double
    - l5: 0
    - l6: stack[64],double
    - l7: stack[76]
    - l8: 0
    - l9: stack[80],double
    - l10: obj[1375]
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[88],oop
   Objects
    - 1375: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
PcDesc(pc=0x00000001186a0526 offset=966 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a052f offset=96f bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x00000001186a0534 offset=974 bits=0):   jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a053d offset=97d bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a0561 offset=9a1 bits=0):   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x00000001186a0567 offset=9a7 bits=0):   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x00000001186a0573 offset=9b3 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a0577 offset=9b7 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x00000001186a057b offset=9bb bits=0):   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a058c offset=9cc bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a05ac offset=9ec bits=0):   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x00000001186a05b2 offset=9f2 bits=0):   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x00000001186a05ed offset=a2d bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a05f0 offset=a30 bits=0):   jdk.incubator.vector.VectorOperators$OperatorImpl::opCode@1 (line 774)
   jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x00000001186a05f7 offset=a37 bits=0):   jdk.incubator.vector.VectorOperators::opCode@0 (line 403)
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x00000001186a05fe offset=a3e bits=0):   jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x00000001186a0685 offset=ac5 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a0689 offset=ac9 bits=0):   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x00000001186a0696 offset=ad6 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a069b offset=adb bits=0):   jdk.incubator.vector.DoubleVector::opKind@-1 (line 71)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@15 (line 630)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a06ae offset=aee bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a06b3 offset=af3 bits=0):   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x00000001186a06cb offset=b0b bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a06d1 offset=b11 bits=0):   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a06e8 offset=b28 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x00000001186a06ef offset=b2f bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a06f3 offset=b33 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x00000001186a0703 offset=b43 bits=0):   jdk.incubator.vector.AbstractVector::check@5 (line 124)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a0716 offset=b56 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a071f offset=b5f bits=0):   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x00000001186a0722 offset=b62 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)  reexecute=true
   Locals
    - l0: reg r10 [20],oop
    - l1: reg r11 [22],oop
    - l2: reg r8 [16],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: reg xmm3 [96],double
    - l10: reg r12 [24],oop
    - l11: reg rcx [2],oop
    - l12: 0
    - l13: reg xmm4 [112],double
    - l14: 0
    - l15: reg xmm7 [160],double
    - l16: 0
    - l17: 0.000000
    - l18: 0
    - l19: 0.000000
    - l20: obj[1087]
    - l21: obj[1088]
    - l22: empty
   Objects
    - 1087: jdk.incubator.vector.Double256Vector reg xmm9 [192]Wrong location type 7
    - 1088: jdk.incubator.vector.Double256Vector reg xmm8 [176]Wrong location type 7
PcDesc(pc=0x00000001186a073e offset=b7e bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x00000001186a0799 offset=bd9 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a079c offset=bdc bits=0):   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@29 (line 2306)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
PcDesc(pc=0x00000001186a07ae offset=bee bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a07b2 offset=bf2 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@4 (line 2300)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
PcDesc(pc=0x00000001186a07ba offset=bfa bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a07c2 offset=c02 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@4 (line 2300)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
PcDesc(pc=0x00000001186a084e offset=c8e bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a0854 offset=c94 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x00000001186a086c offset=cac bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a086d offset=cad bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x00000001186a0873 offset=cb3 bits=0):   jdk.incubator.vector.DoubleVector::fromArray@2 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x00000001186a08df offset=d1f bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a08e6 offset=d26 bits=0):   jdk.incubator.vector.DoubleVector::arrayAddress@9 (line 3259)
   jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x00000001186a08e9 offset=d29 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a08f6 offset=d36 bits=0):   jdk.incubator.vector.AbstractVector::check@5 (line 124)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a08fd offset=d3d bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)  reexecute=true
   Locals
    - l0: reg r14 [28],oop
    - l1: reg r11 [22],oop
    - l2: reg r8 [16],oop
    - l3: 0
    - l4: reg xmm4 [112],double
    - l5: 0
    - l6: reg xmm5 [128],double
    - l7: reg r10 [20],int
    - l8: 0
    - l9: reg xmm3 [96],double
    - l10: reg r12 [24],oop
    - l11: reg rcx [2],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x00000001186a0936 offset=d76 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a0938 offset=d78 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x00000001186a093f offset=d7f bits=0):   jdk.incubator.vector.VectorOperators::opKind@5 (line 409)
   jdk.incubator.vector.DoubleVector::opKind@2 (line 71)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@15 (line 630)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x00000001186a0946 offset=d86 bits=0):   jdk.incubator.vector.VectorOperators::opKind@-1 (line 409)
   jdk.incubator.vector.DoubleVector::opKind@2 (line 71)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@15 (line 630)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x00000001186a0953 offset=d93 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a0958 offset=d98 bits=0):   java.util.Objects::checkIndex@3 (line 359)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x00000001186a09a0 offset=de0 bits=0):   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[20]
    - @1: stack[72]
    - @2: NULL
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000014e8010e0}
    - l1: stack[64],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[64],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[20]
    - l8: 0
    - l9: stack[24],double
    - l10: stack[32],oop
    - l11: stack[40],oop
    - l12: 0
    - l13: stack[48],double
    - l14: 0
    - l15: stack[56],double
    - l16: 0
    - l17: 0.000000
    - l18: 0
    - l19: 0.000000
    - l20: obj[1584]
    - l21: obj[1585]
    - l22: empty
   Objects
    - 1584: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
    - 1585: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
PcDesc(pc=0x00000001186a09b4 offset=df4 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a09b9 offset=df9 bits=0):   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@42 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x00000001186a0a02 offset=e42 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a0a0c offset=e4c bits=0):   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[20]
    - @1: stack[72]
    - @2: NULL
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000014e8010e0}
    - l1: stack[64],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[64],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[20]
    - l8: 0
    - l9: stack[24],double
    - l10: stack[32],oop
    - l11: stack[40],oop
    - l12: 0
    - l13: stack[48],double
    - l14: 0
    - l15: stack[56],double
    - l16: 0
    - l17: 0.000000
    - l18: 0
    - l19: 0.000000
    - l20: empty
    - l21: obj[1338]
    - l22: obj[1339]
   Expression stack
    - @0: obj[1340]
   Objects
    - 1338: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
    - 1339: jdk.incubator.vector.Double256Vector stack[160]Wrong location type 7
    - 1340: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
PcDesc(pc=0x00000001186a0a29 offset=e69 bits=0):   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x00000001186a0a3b offset=e7b bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a0a3f offset=e7f bits=0):   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x00000001186a0ad5 offset=f15 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a0ae0 offset=f20 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x00000001186a0af2 offset=f32 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a0af6 offset=f36 bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x00000001186a0b2b offset=f6b bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a0b2f offset=f6f bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x00000001186a0b49 offset=f89 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a0b4d offset=f8d bits=0):   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
PcDesc(pc=0x00000001186a0c96 offset=10d6 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a0ca6 offset=10e6 bits=0):   jdk.incubator.vector.AbstractVector::check@5 (line 124)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a0cad offset=10ed bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)  reexecute=true
   Locals
    - l0: reg r10 [20],oop
    - l1: reg r11 [22],oop
    - l2: reg r8 [16],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[0],double
    - l14: 0
    - l15: stack[8],double
    - l16: 0
    - l17: reg xmm1 [64],double
    - l18: 0
    - l19: reg xmm0 [48],double
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x00000001186a0ce8 offset=1128 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
PcDesc(pc=0x00000001186a0cf6 offset=1136 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a0cfa offset=113a bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
PcDesc(pc=0x00000001186a0d12 offset=1152 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a0d71 offset=11b1 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@157 (line 652)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
PcDesc(pc=0x00000001186a0d7b offset=11bb bits=0):   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x00000001186a0d89 offset=11c9 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a0d94 offset=11d4 bits=5):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000014e800fe8} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: stack[72],oop
    - @5: obj[320]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000014e8010d0}
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: stack[16],oop
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: 0
    - l4: stack[56],double
    - l5: 0
    - l6: stack[64],double
    - l7: stack[8]
    - l8: 0
    - l9: reg rbp [10],double
    - l10: empty
    - l11: stack[0],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 320: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
PcDesc(pc=0x00000001186a0df4 offset=1234 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a0dfe offset=123e bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@171 (line 651)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
PcDesc(pc=0x00000001186a0e0c offset=124c bits=5):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000014e800fe8} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: stack[40],oop
    - @5: obj[292]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000014e8010d0}
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: stack[16],oop
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: 0
    - l4: stack[56],double
    - l5: 0
    - l6: stack[64],double
    - l7: stack[8]
    - l8: 0
    - l9: reg rbp [10],double
    - l10: empty
    - l11: stack[0],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 292: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
PcDesc(pc=0x00000001186a0e7e offset=12be bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a0e88 offset=12c8 bits=0):   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@41 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
PcDesc(pc=0x00000001186a0e98 offset=12d8 bits=5):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000014e800fe8} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: stack[0],oop
    - @5: obj[344]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000014e8010d0}
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: stack[16],oop
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: 0
    - l4: stack[56],double
    - l5: 0
    - l6: stack[64],double
    - l7: stack[8]
    - l8: 0
    - l9: reg rbp [10],double
    - l10: obj[342]
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 342: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
    - 344: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
PcDesc(pc=0x00000001186a0f12 offset=1352 bits=0):   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
PcDesc(pc=0x00000001186a0f1c offset=135c bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@-1 (line 15)
PcDesc(pc=0x00000001186a0f2a offset=136a bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a0f34 offset=1374 bits=5):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000014e800fe8} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: stack[72],oop
    - @5: obj[373]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000014e8010d0}
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: stack[8],oop
    - l1: stack[16],oop
    - l2: stack[24],oop
    - l3: 0
    - l4: stack[56],double
    - l5: 0
    - l6: stack[64],double
    - l7: stack[0]
    - l8: 0
    - l9: reg rbp [10],double
    - l10: obj[372]
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 372: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
    - 373: jdk.incubator.vector.Double256Vector stack[160]Wrong location type 7
PcDesc(pc=0x00000001186a0fbb offset=13fb bits=0):   jdk.incubator.vector.VectorOperators$OperatorImpl::opCode@1 (line 774)
   jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@29 (line 2306)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
PcDesc(pc=0x00000001186a0fc5 offset=1405 bits=0):   jdk.incubator.vector.VectorOperators$OperatorImpl::opCode@26 (line 775)
   jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
PcDesc(pc=0x00000001186a0fd4 offset=1414 bits=5):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000014e800fe8} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: stack[32],oop
    - @5: obj[476]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000014e8010d0}
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: stack[8],oop
    - l1: stack[16],oop
    - l2: stack[24],oop
    - l3: 0
    - l4: stack[56],double
    - l5: 0
    - l6: stack[64],double
    - l7: stack[44]
    - l8: 0
    - l9: reg rbp [10],double
    - l10: empty
    - l11: stack[48],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 476: jdk.incubator.vector.Double256Vector stack[160]Wrong location type 7
PcDesc(pc=0x00000001186a105c offset=149c bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a1066 offset=14a6 bits=0):   jdk.incubator.vector.VectorOperators::opCode@-1 (line 403)
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
PcDesc(pc=0x00000001186a107c offset=14bc bits=5):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000014e800fe8} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: stack[72],oop
    - @5: obj[503]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000014e8010d0}
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: stack[8],oop
    - l1: stack[16],oop
    - l2: stack[24],oop
    - l3: 0
    - l4: stack[56],double
    - l5: 0
    - l6: stack[64],double
    - l7: stack[36]
    - l8: 0
    - l9: reg rbp [10],double
    - l10: empty
    - l11: stack[40],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 503: jdk.incubator.vector.Double256Vector stack[160]Wrong location type 7
PcDesc(pc=0x00000001186a110b offset=154b bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a1115 offset=1555 bits=0):   jdk.incubator.vector.AbstractVector::check@5 (line 124)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
PcDesc(pc=0x00000001186a1124 offset=1564 bits=5):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000014e800fe8} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: stack[40],oop
    - @5: obj[523]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000014e8010d0}
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: stack[8],oop
    - l1: stack[16],oop
    - l2: stack[24],oop
    - l3: 0
    - l4: stack[56],double
    - l5: 0
    - l6: stack[64],double
    - l7: stack[36]
    - l8: 0
    - l9: reg rbp [10],double
    - l10: obj[522]
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 522: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
    - 523: jdk.incubator.vector.Double256Vector stack[160]Wrong location type 7
PcDesc(pc=0x00000001186a119a offset=15da bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
PcDesc(pc=0x00000001186a11a4 offset=15e4 bits=0):   jdk.incubator.vector.VectorOperators::opKind@5 (line 409)
   jdk.incubator.vector.DoubleVector::opKind@2 (line 71)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@15 (line 630)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
PcDesc(pc=0x00000001186a11bb offset=15fb bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a11c4 offset=1604 bits=5):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000014e800fe8} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: stack[104],oop
    - @5: obj[551]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000014e8010d0}
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: stack[40],oop
    - l1: stack[48],oop
    - l2: stack[72],oop
    - l3: 0
    - l4: stack[56],double
    - l5: 0
    - l6: stack[64],double
    - l7: stack[84]
    - l8: 0
    - l9: reg rbp [10],double
    - l10: obj[550]
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 550: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
    - 551: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
PcDesc(pc=0x00000001186a1225 offset=1665 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x00000001186a122a offset=166a bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
PcDesc(pc=0x00000001186a1263 offset=16a3 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a126c offset=16ac bits=0):   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[32]
    - @1: stack[56]
    - @2: NULL
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000014e8010e0}
    - l1: stack[48],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[48],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[16],double
    - l5: 0
    - l6: stack[24],double
    - l7: stack[32]
    - l8: 0
    - l9: stack[40],double
    - l10: empty
    - l11: stack[64],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[72],oop
PcDesc(pc=0x00000001186a1280 offset=16c0 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a1285 offset=16c5 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x00000001186a12cc offset=170c bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[56],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000014e801150}
    - @2: obj[1325]
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[16],double
    - l5: 0
    - l6: stack[24],double
    - l7: stack[32]
    - l8: 0
    - l9: stack[40],double
    - l10: empty
    - l11: stack[48],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 1325: jdk.incubator.vector.Double256Vector stack[64]Wrong location type 7
PcDesc(pc=0x00000001186a12e0 offset=1720 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a12e5 offset=1725 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x00000001186a1321 offset=1761 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a132c offset=176c bits=0):   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[44]
    - @1: reg rbp [10],int
    - @2: NULL
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000014e8010e0}
    - l1: stack[56],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[0],oop
    - l1: stack[8],oop
    - l2: stack[56],oop
    - l3: 0
    - l4: stack[24],double
    - l5: 0
    - l6: stack[32],double
    - l7: stack[44]
    - l8: 0
    - l9: stack[48],double
    - l10: obj[1356]
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[64],oop
   Objects
    - 1356: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
PcDesc(pc=0x00000001186a1348 offset=1788 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a134d offset=178d bits=0):   jdk.incubator.vector.DoubleVector::fromArray@2 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x00000001186a1381 offset=17c1 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a138c offset=17cc bits=0):   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[48],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000014e801150}
    - @2: obj[1501]
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[56],double
    - l5: 0
    - l6: stack[24],double
    - l7: stack[32]
    - l8: 0
    - l9: stack[40],double
    - l10: obj[1500]
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 1500: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
    - 1501: jdk.incubator.vector.Double256Vector stack[64]Wrong location type 7
PcDesc(pc=0x00000001186a13d5 offset=1815 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x00000001186a13fd offset=183d bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a1408 offset=1848 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
   Locals
    - l0: stack[24],oop
    - l1: stack[32],oop
    - l2: stack[40],oop
    - l3: 0
    - l4: reg rbp [10],double
    - l5: 0
    - l6: stack[64],double
    - l7: stack[8]
    - l8: 0
    - l9: stack[16],double
    - l10: stack[48],oop
    - l11: stack[56],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x00000001186a142f offset=186f bits=0):   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x00000001186a1434 offset=1874 bits=0):   jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
PcDesc(pc=0x00000001186a1461 offset=18a1 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a146c offset=18ac bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: 0
    - l6: stack[16],double
    - l7: stack[24]
    - l8: 0
    - l9: stack[32],double
    - l10: stack[64],oop
    - l11: stack[48],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[56],double
    - @2: stack[64],oop
    - @3: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000014e801150}
PcDesc(pc=0x00000001186a1480 offset=18c0 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a1485 offset=18c5 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x00000001186a14c0 offset=1900 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[64],double
    - l5: empty
    - l6: empty
    - l7: stack[16]
    - l8: 0
    - l9: stack[24],double
    - l10: stack[32],oop
    - l11: stack[56],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[48],double
    - @2: stack[56],oop
    - @3: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000014e801150}
PcDesc(pc=0x00000001186a14fe offset=193e bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a1503 offset=1943 bits=0):   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x00000001186a1533 offset=1973 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a153c offset=197c bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@205 (line 46)  reexecute=true
   Locals
    - l0: stack[0],oop
    - l1: stack[8],oop
    - l2: stack[16],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[24],double
    - l10: stack[32],oop
    - l11: stack[40],oop
    - l12: 0
    - l13: stack[48],double
    - l14: 0
    - l15: stack[56],double
    - l16: 0
    - l17: 0.000000
    - l18: 0
    - l19: 0.000000
    - l20: obj[1600]
    - l21: obj[1601]
    - l22: empty
   Expression stack
    - @0: reg rbp [10],int
   Objects
    - 1600: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
    - 1601: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
PcDesc(pc=0x00000001186a1550 offset=1990 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a1555 offset=1995 bits=0):   jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
PcDesc(pc=0x00000001186a1586 offset=19c6 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a1590 offset=19d0 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@134 (line 32)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[48],double
    - l5: 0
    - l6: stack[56],double
    - l7: stack[20]
    - l8: 0
    - l9: stack[24],double
    - l10: stack[32],oop
    - l11: stack[40],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[20]
    - @1: stack[64]
PcDesc(pc=0x00000001186a1644 offset=1a84 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a1649 offset=1a89 bits=0):   jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
PcDesc(pc=0x00000001186a1675 offset=1ab5 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a1680 offset=1ac0 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@305 (line 55)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[20]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[24],double
    - l14: 0
    - l15: stack[32],double
    - l16: 0
    - l17: stack[40],double
    - l18: 0
    - l19: stack[48],double
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[20]
    - @1: stack[56]
PcDesc(pc=0x00000001186a1734 offset=1b74 bits=0):   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x00000001186a1739 offset=1b79 bits=0):   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
PcDesc(pc=0x00000001186a1744 offset=1b84 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: NULL
    - @3: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000014e801150}
PcDesc(pc=0x00000001186a1758 offset=1b98 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a175d offset=1b9d bits=0):   jdk.incubator.vector.DoubleVector::sub@-1 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
PcDesc(pc=0x00000001186a1768 offset=1ba8 bits=0):   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: NULL
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: empty
PcDesc(pc=0x00000001186a177c offset=1bbc bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a1781 offset=1bc1 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x00000001186a1786 offset=1bc6 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a1790 offset=1bd0 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: NULL
    - @1: obj[1317]
   Objects
    - 1317: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
PcDesc(pc=0x00000001186a17a4 offset=1be4 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a17a9 offset=1be9 bits=0):   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
PcDesc(pc=0x00000001186a17b4 offset=1bf4 bits=0):   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: NULL
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: empty
PcDesc(pc=0x00000001186a17c8 offset=1c08 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a17cd offset=1c0d bits=0):   jdk.incubator.vector.DoubleVector::fromArray@2 (line 2562)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x00000001186a17d2 offset=1c12 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a17dc offset=1c1c bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: NULL
    - @1: obj[1492]
   Objects
    - 1492: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
PcDesc(pc=0x00000001186a17f0 offset=1c30 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a17f5 offset=1c35 bits=0):   jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
PcDesc(pc=0x00000001186a1800 offset=1c40 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: NULL
    - @3: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000014e801150}
PcDesc(pc=0x00000001186a1814 offset=1c54 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a1819 offset=1c59 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x00000001186a1824 offset=1c64 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@133 (line 32)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: empty
    - @1: NULL
PcDesc(pc=0x00000001186a1838 offset=1c78 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a183d offset=1c7d bits=0):   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
PcDesc(pc=0x00000001186a1842 offset=1c82 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a184c offset=1c8c bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@360 (line 60)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: NULL
    - @1: 0
    - @2: reg rbp [10],double
PcDesc(pc=0x00000001186a1860 offset=1ca0 bits=0):   jdk.incubator.vector.VectorOperators$OperatorImpl::opKind@6 (line 828)
   jdk.incubator.vector.VectorOperators::opKind@5 (line 409)
   jdk.incubator.vector.DoubleVector::opKind@2 (line 71)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@15 (line 630)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x00000001186a186f offset=1caf bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@133 (line 32)
PcDesc(pc=0x00000001186a1871 offset=1cb1 bits=0):   jdk.incubator.vector.VectorOperators$OperatorImpl::opKind@6 (line 828)
   jdk.incubator.vector.VectorOperators::opKind@5 (line 409)
   jdk.incubator.vector.DoubleVector::opKind@2 (line 71)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@15 (line 630)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x00000001186a1876 offset=1cb6 bits=0):   jdk.incubator.vector.VectorOperators$OperatorImpl::opKind@0 (line 828)
   jdk.incubator.vector.VectorOperators::opKind@5 (line 409)
   jdk.incubator.vector.DoubleVector::opKind@2 (line 71)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@15 (line 630)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x00000001186a187a offset=1cba bits=0):   jdk.incubator.vector.VectorOperators::opKind@5 (line 409)
   jdk.incubator.vector.DoubleVector::opKind@2 (line 71)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@15 (line 630)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x00000001186a187c offset=1cbc bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@133 (line 32)
PcDesc(pc=0x00000001186a187e offset=1cbe bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x00000001186a1883 offset=1cc3 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@133 (line 32)
PcDesc(pc=0x00000001186a1888 offset=1cc8 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
PcDesc(pc=0x00000001186a1898 offset=1cd8 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a18f9 offset=1d39 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 38 OopMaps

ImmutableOopMap {rax=Oop [32]=Oop [40]=Oop [48]=Oop [96]=Oop } pc offsets: 1515 
ImmutableOopMap {[32]=Oop [40]=Oop [48]=Oop [88]=Oop [96]=Oop } pc offsets: 1956 
ImmutableOopMap {[0]=Oop [32]=Oop [40]=Oop [48]=Oop [88]=Oop } pc offsets: 2016 
ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [48]=Oop [88]=Oop [96]=Oop } pc offsets: 2076 
ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [48]=Oop [96]=Oop [104]=Oop } pc offsets: 2148 
ImmutableOopMap {rbp=Oop [8]=Oop [48]=Oop [56]=Oop [64]=Oop } pc offsets: 2268 
ImmutableOopMap {[32]=Oop [40]=Oop [88]=Oop [96]=Oop } pc offsets: 2356 
ImmutableOopMap {r10=Oop r11=Oop r8=Oop r12=Oop rcx=Oop } pc offsets: 2914 
ImmutableOopMap {r11=Oop r8=Oop r12=Oop rcx=Oop r14=Oop } pc offsets: 3389 
ImmutableOopMap {rbp=Oop [8]=Oop [32]=Oop [40]=Oop [64]=Oop } pc offsets: 3552 
ImmutableOopMap {rbp=Oop [0]=Oop [32]=Oop [40]=Oop [64]=Oop } pc offsets: 3660 
ImmutableOopMap {r10=Oop r11=Oop r8=Oop } pc offsets: 4333 
ImmutableOopMap {[0]=Oop [16]=Oop [24]=Oop [32]=Oop [72]=Oop [80]=Oop } pc offsets: 4564 
ImmutableOopMap {[0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop } pc offsets: 4684 4824 
ImmutableOopMap {[8]=Oop [16]=Oop [24]=Oop [32]=Oop [72]=Oop [80]=Oop } pc offsets: 4980 
ImmutableOopMap {[8]=Oop [16]=Oop [24]=Oop [32]=Oop [48]=Oop } pc offsets: 5140 
ImmutableOopMap {[8]=Oop [16]=Oop [24]=Oop [40]=Oop [48]=Oop [72]=Oop } pc offsets: 5308 
ImmutableOopMap {[8]=Oop [16]=Oop [24]=Oop [40]=Oop [48]=Oop } pc offsets: 5476 
ImmutableOopMap {[40]=Oop [48]=Oop [72]=Oop [88]=Oop [96]=Oop [104]=Oop } pc offsets: 5636 
ImmutableOopMap {rbp=Oop [8]=Oop [48]=Oop [64]=Oop [72]=Oop } pc offsets: 5804 
ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [48]=Oop [56]=Oop } pc offsets: 5900 
ImmutableOopMap {[0]=Oop [8]=Oop [56]=Oop [64]=Oop } pc offsets: 5996 
ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [48]=Oop } pc offsets: 6092 
ImmutableOopMap {[24]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop } pc offsets: 6216 
ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [48]=Oop [64]=Oop } pc offsets: 6316 
ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [56]=Oop } pc offsets: 6400 
ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [32]=Oop [40]=Oop } pc offsets: 6524 
ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [40]=Oop } pc offsets: 6608 
ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop } pc offsets: 6848 
ImmutableOopMap {} pc offsets: 7044 7080 7120 7156 7196 7232 7268 7308 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x000000011869fbdf offset=1f):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869fbdf offset=1f):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869fbdf offset=1f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869fbf2 offset=32):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x000000011869fbf8 offset=38):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869fbf8 offset=38):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869fbf8 offset=38):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869fbff offset=3f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x000000011869fc03 offset=43):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869fc03 offset=43):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869fc03 offset=43):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869fc07 offset=47):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x000000011869fc0c offset=4c):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869fc0c offset=4c):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869fc0c offset=4c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869fc10 offset=50):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x000000011869fc15 offset=55):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869fc15 offset=55):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869fc15 offset=55):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869fc1d offset=5d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x000000011869fc23 offset=63):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869fc23 offset=63):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869fc23 offset=63):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869fc2b offset=6b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x000000011869fc31 offset=71):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869fc31 offset=71):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869fc31 offset=71):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869fc35 offset=75):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x000000011869fc87 offset=c7):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869fc87 offset=c7):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869fc87 offset=c7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869fc90 offset=d0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x000000011869fca8 offset=e8):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869fca8 offset=e8):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869fca8 offset=e8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869fcb1 offset=f1):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x000000011869fcdb offset=11b):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869fcdb offset=11b):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869fcdb offset=11b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869fce9 offset=129):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x000000011869fd0a offset=14a):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869fd0a offset=14a):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869fd0a offset=14a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869fd10 offset=150):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x000000011869fd33 offset=173):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869fd33 offset=173):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869fd33 offset=173):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869fd46 offset=186):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
ScopeDesc(pc=0x000000011869fd46 offset=186):
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
ScopeDesc(pc=0x000000011869fd46 offset=186):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011869fd46 offset=186):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011869fd46 offset=186):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x000000011869fd4d offset=18d):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
ScopeDesc(pc=0x000000011869fd4d offset=18d):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
ScopeDesc(pc=0x000000011869fd4d offset=18d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x000000011869fd56 offset=196):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869fd56 offset=196):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869fd56 offset=196):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869fd6a offset=1aa):
   jdk.incubator.vector.AbstractVector::check@5 (line 124)
ScopeDesc(pc=0x000000011869fd6a offset=1aa):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
ScopeDesc(pc=0x000000011869fd6a offset=1aa):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869fd6a offset=1aa):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869fd6a offset=1aa):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869fd6a offset=1aa):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x000000011869fd71 offset=1b1):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869fd71 offset=1b1):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869fd71 offset=1b1):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869fd77 offset=1b7):
   jdk.incubator.vector.AbstractVector::check@5 (line 124)
ScopeDesc(pc=0x000000011869fd77 offset=1b7):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
ScopeDesc(pc=0x000000011869fd77 offset=1b7):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869fd77 offset=1b7):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869fd77 offset=1b7):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869fd77 offset=1b7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x000000011869fdcf offset=20f):
   jdk.incubator.vector.DoubleVector::fromArray0Template@6 (line 3120)
ScopeDesc(pc=0x000000011869fdcf offset=20f):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011869fdcf offset=20f):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011869fdcf offset=20f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x000000011869fdd3 offset=213):
   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
ScopeDesc(pc=0x000000011869fdd3 offset=213):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
ScopeDesc(pc=0x000000011869fdd3 offset=213):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
ScopeDesc(pc=0x000000011869fdd3 offset=213):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x000000011869fdd8 offset=218):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
ScopeDesc(pc=0x000000011869fdd8 offset=218):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
ScopeDesc(pc=0x000000011869fdd8 offset=218):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x000000011869fdeb offset=22b):
   jdk.incubator.vector.AbstractVector::check@5 (line 124)
ScopeDesc(pc=0x000000011869fdeb offset=22b):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
ScopeDesc(pc=0x000000011869fdeb offset=22b):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869fdeb offset=22b):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869fdeb offset=22b):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869fdeb offset=22b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x000000011869fdf2 offset=232):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869fdf2 offset=232):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869fdf2 offset=232):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869fdf8 offset=238):
   jdk.incubator.vector.AbstractVector::check@5 (line 124)
ScopeDesc(pc=0x000000011869fdf8 offset=238):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
ScopeDesc(pc=0x000000011869fdf8 offset=238):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869fdf8 offset=238):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869fdf8 offset=238):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869fdf8 offset=238):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x000000011869fe1b offset=25b):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011869fe1b offset=25b):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011869fe1b offset=25b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x000000011869fe1f offset=25f):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
ScopeDesc(pc=0x000000011869fe1f offset=25f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x000000011869fe38 offset=278):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869fe38 offset=278):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869fe38 offset=278):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869fe3f offset=27f):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
ScopeDesc(pc=0x000000011869fe3f offset=27f):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
ScopeDesc(pc=0x000000011869fe3f offset=27f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x000000011869fe4b offset=28b):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869fe4b offset=28b):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869fe4b offset=28b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869fe5f offset=29f):
   jdk.incubator.vector.AbstractVector::check@5 (line 124)
ScopeDesc(pc=0x000000011869fe5f offset=29f):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
ScopeDesc(pc=0x000000011869fe5f offset=29f):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869fe5f offset=29f):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869fe5f offset=29f):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869fe5f offset=29f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x000000011869fe67 offset=2a7):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869fe67 offset=2a7):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869fe67 offset=2a7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869fe6d offset=2ad):
   jdk.incubator.vector.AbstractVector::check@5 (line 124)
ScopeDesc(pc=0x000000011869fe6d offset=2ad):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
ScopeDesc(pc=0x000000011869fe6d offset=2ad):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869fe6d offset=2ad):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869fe6d offset=2ad):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869fe6d offset=2ad):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x000000011869fec5 offset=305):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011869fec5 offset=305):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011869fec5 offset=305):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x000000011869feca offset=30a):
   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
ScopeDesc(pc=0x000000011869feca offset=30a):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
ScopeDesc(pc=0x000000011869feca offset=30a):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
ScopeDesc(pc=0x000000011869feca offset=30a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x000000011869fecf offset=30f):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
ScopeDesc(pc=0x000000011869fecf offset=30f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x000000011869fee2 offset=322):
   jdk.incubator.vector.AbstractVector::check@5 (line 124)
ScopeDesc(pc=0x000000011869fee2 offset=322):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
ScopeDesc(pc=0x000000011869fee2 offset=322):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869fee2 offset=322):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869fee2 offset=322):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869fee2 offset=322):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x000000011869fee9 offset=329):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869fee9 offset=329):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869fee9 offset=329):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869feef offset=32f):
   jdk.incubator.vector.AbstractVector::check@5 (line 124)
ScopeDesc(pc=0x000000011869feef offset=32f):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
ScopeDesc(pc=0x000000011869feef offset=32f):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869feef offset=32f):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869feef offset=32f):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869feef offset=32f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x000000011869ff12 offset=352):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011869ff12 offset=352):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011869ff12 offset=352):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x000000011869ff16 offset=356):
   jdk.incubator.vector.DoubleVector::fromArray0Template@1 (line 3118)
ScopeDesc(pc=0x000000011869ff16 offset=356):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x000000011869ff16 offset=356):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x000000011869ff16 offset=356):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x000000011869ff32 offset=372):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869ff32 offset=372):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869ff32 offset=372):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869ff47 offset=387):
   jdk.incubator.vector.AbstractVector::check@5 (line 124)
ScopeDesc(pc=0x000000011869ff47 offset=387):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
ScopeDesc(pc=0x000000011869ff47 offset=387):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869ff47 offset=387):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869ff47 offset=387):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869ff47 offset=387):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x000000011869ff4e offset=38e):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869ff4e offset=38e):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869ff4e offset=38e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869ff54 offset=394):
   jdk.incubator.vector.AbstractVector::check@5 (line 124)
ScopeDesc(pc=0x000000011869ff54 offset=394):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
ScopeDesc(pc=0x000000011869ff54 offset=394):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869ff54 offset=394):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869ff54 offset=394):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869ff54 offset=394):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x000000011869ffb4 offset=3f4):
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
ScopeDesc(pc=0x000000011869ffb4 offset=3f4):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@29 (line 2306)
ScopeDesc(pc=0x000000011869ffb4 offset=3f4):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869ffb4 offset=3f4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
ScopeDesc(pc=0x000000011869ffcb offset=40b):
   jdk.incubator.vector.AbstractVector::check@5 (line 124)
ScopeDesc(pc=0x000000011869ffcb offset=40b):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
ScopeDesc(pc=0x000000011869ffcb offset=40b):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869ffcb offset=40b):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869ffcb offset=40b):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869ffcb offset=40b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x000000011869ffd2 offset=412):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x000000011869ffd2 offset=412):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x000000011869ffd2 offset=412):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x000000011869ffd8 offset=418):
   jdk.incubator.vector.AbstractVector::check@5 (line 124)
ScopeDesc(pc=0x000000011869ffd8 offset=418):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
ScopeDesc(pc=0x000000011869ffd8 offset=418):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x000000011869ffd8 offset=418):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x000000011869ffd8 offset=418):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x000000011869ffd8 offset=418):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a0000 offset=440):
   jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
ScopeDesc(pc=0x00000001186a0000 offset=440):
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
ScopeDesc(pc=0x00000001186a0000 offset=440):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@29 (line 2306)
ScopeDesc(pc=0x00000001186a0000 offset=440):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a0000 offset=440):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
ScopeDesc(pc=0x00000001186a0005 offset=445):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
ScopeDesc(pc=0x00000001186a000d offset=44d):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a000d offset=44d):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a000d offset=44d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a0022 offset=462):
   jdk.incubator.vector.AbstractVector::check@5 (line 124)
ScopeDesc(pc=0x00000001186a0022 offset=462):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
ScopeDesc(pc=0x00000001186a0022 offset=462):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a0022 offset=462):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a0022 offset=462):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a0022 offset=462):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a0029 offset=469):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a0029 offset=469):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a0029 offset=469):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a002f offset=46f):
   jdk.incubator.vector.AbstractVector::check@5 (line 124)
ScopeDesc(pc=0x00000001186a002f offset=46f):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
ScopeDesc(pc=0x00000001186a002f offset=46f):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a002f offset=46f):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a002f offset=46f):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a002f offset=46f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a0087 offset=4c7):
   jdk.incubator.vector.VectorOperators$OperatorImpl::opCode@26 (line 775)
ScopeDesc(pc=0x00000001186a0087 offset=4c7):
   jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
ScopeDesc(pc=0x00000001186a0087 offset=4c7):
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
ScopeDesc(pc=0x00000001186a0087 offset=4c7):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@29 (line 2306)
ScopeDesc(pc=0x00000001186a0087 offset=4c7):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a0087 offset=4c7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
ScopeDesc(pc=0x00000001186a008b offset=4cb):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a008b offset=4cb):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a008b offset=4cb):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a009e offset=4de):
   jdk.incubator.vector.AbstractVector::check@5 (line 124)
ScopeDesc(pc=0x00000001186a009e offset=4de):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
ScopeDesc(pc=0x00000001186a009e offset=4de):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a009e offset=4de):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a009e offset=4de):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a009e offset=4de):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a00a7 offset=4e7):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a00a7 offset=4e7):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a00a7 offset=4e7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a00ad offset=4ed):
   jdk.incubator.vector.AbstractVector::check@5 (line 124)
ScopeDesc(pc=0x00000001186a00ad offset=4ed):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
ScopeDesc(pc=0x00000001186a00ad offset=4ed):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a00ad offset=4ed):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a00ad offset=4ed):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a00ad offset=4ed):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a00d0 offset=510):
   jdk.incubator.vector.VectorOperators$OperatorImpl::opCode@1 (line 774)
ScopeDesc(pc=0x00000001186a00d0 offset=510):
   jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
ScopeDesc(pc=0x00000001186a00d0 offset=510):
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
ScopeDesc(pc=0x00000001186a00d0 offset=510):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@29 (line 2306)
ScopeDesc(pc=0x00000001186a00d0 offset=510):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a00d0 offset=510):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
ScopeDesc(pc=0x00000001186a00d4 offset=514):
   jdk.incubator.vector.VectorOperators$OperatorImpl::opCode@12 (line 775)
ScopeDesc(pc=0x00000001186a00d4 offset=514):
   jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
ScopeDesc(pc=0x00000001186a00d4 offset=514):
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
ScopeDesc(pc=0x00000001186a00d4 offset=514):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@29 (line 2306)
ScopeDesc(pc=0x00000001186a00d4 offset=514):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a00d4 offset=514):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
ScopeDesc(pc=0x00000001186a00d8 offset=518):
   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
ScopeDesc(pc=0x00000001186a00d8 offset=518):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x00000001186a00d8 offset=518):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x00000001186a00d8 offset=518):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x00000001186a00e0 offset=520):
   jdk.incubator.vector.AbstractVector::check@5 (line 124)
ScopeDesc(pc=0x00000001186a00e0 offset=520):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
ScopeDesc(pc=0x00000001186a00e0 offset=520):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a00e0 offset=520):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a00e0 offset=520):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a00e0 offset=520):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a013c offset=57c):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a013c offset=57c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a0146 offset=586):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a0146 offset=586):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a0146 offset=586):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a014a offset=58a):
   jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
ScopeDesc(pc=0x00000001186a014a offset=58a):
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
ScopeDesc(pc=0x00000001186a014a offset=58a):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
ScopeDesc(pc=0x00000001186a014a offset=58a):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a014a offset=58a):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a014a offset=58a):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a014a offset=58a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a0150 offset=590):
   jdk.incubator.vector.DoubleVector::fromArray0Template@10 (line 3120)
ScopeDesc(pc=0x00000001186a0150 offset=590):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x00000001186a0150 offset=590):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x00000001186a0150 offset=590):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x00000001186a0163 offset=5a3):
   jdk.incubator.vector.AbstractVector::check@5 (line 124)
ScopeDesc(pc=0x00000001186a0163 offset=5a3):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
ScopeDesc(pc=0x00000001186a0163 offset=5a3):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a0163 offset=5a3):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a0163 offset=5a3):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a0163 offset=5a3):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a016a offset=5aa):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a016a offset=5aa):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a016a offset=5aa):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a0170 offset=5b0):
   jdk.incubator.vector.AbstractVector::check@5 (line 124)
ScopeDesc(pc=0x00000001186a0170 offset=5b0):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
ScopeDesc(pc=0x00000001186a0170 offset=5b0):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a0170 offset=5b0):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a0170 offset=5b0):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a0170 offset=5b0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a0194 offset=5d4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a0199 offset=5d9):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a0199 offset=5d9):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a0199 offset=5d9):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a019d offset=5dd):
   jdk.incubator.vector.AbstractVector::check@5 (line 124)
ScopeDesc(pc=0x00000001186a019d offset=5dd):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
ScopeDesc(pc=0x00000001186a019d offset=5dd):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a019d offset=5dd):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a019d offset=5dd):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a019d offset=5dd):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a01a8 offset=5e8):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a01a8 offset=5e8):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a01a8 offset=5e8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a01ab offset=5eb):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)  reexecute=true
   Locals
    - l0: stack[32],oop
    - l1: stack[40],oop
    - l2: stack[48],oop
    - l3: 0
    - l4: stack[56],double
    - l5: 0
    - l6: stack[64],double
    - l7: reg rbp [10],int
    - l8: 0
    - l9: reg xmm3 [96],double
    - l10: obj[757]
    - l11: obj[758]
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 757: jdk.incubator.vector.Double256Vector reg xmm4 [112]Wrong location type 7
    - 758: jdk.incubator.vector.Double256Vector reg xmm0 [48]Wrong location type 7
ScopeDesc(pc=0x00000001186a01d9 offset=619):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a01d9 offset=619):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a01d9 offset=619):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a0209 offset=649):
   jdk.incubator.vector.AbstractVector::check@5 (line 124)
ScopeDesc(pc=0x00000001186a0209 offset=649):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
ScopeDesc(pc=0x00000001186a0209 offset=649):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a0209 offset=649):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a0209 offset=649):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a0209 offset=649):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a0217 offset=657):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x00000001186a021c offset=65c):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a021c offset=65c):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a021c offset=65c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a0223 offset=663):
   jdk.incubator.vector.AbstractVector::check@5 (line 124)
ScopeDesc(pc=0x00000001186a0223 offset=663):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
ScopeDesc(pc=0x00000001186a0223 offset=663):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a0223 offset=663):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a0223 offset=663):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a0223 offset=663):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a022a offset=66a):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a022a offset=66a):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a022a offset=66a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a0230 offset=670):
   jdk.incubator.vector.AbstractVector::check@5 (line 124)
ScopeDesc(pc=0x00000001186a0230 offset=670):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
ScopeDesc(pc=0x00000001186a0230 offset=670):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a0230 offset=670):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a0230 offset=670):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a0230 offset=670):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a028c offset=6cc):
   jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 133)
ScopeDesc(pc=0x00000001186a028c offset=6cc):
   jdk.incubator.vector.AbstractVector::check@2 (line 124)
ScopeDesc(pc=0x00000001186a028c offset=6cc):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
ScopeDesc(pc=0x00000001186a028c offset=6cc):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a028c offset=6cc):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a028c offset=6cc):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a028c offset=6cc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a0295 offset=6d5):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a0295 offset=6d5):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a0295 offset=6d5):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a0299 offset=6d9):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@18 (line 630)
ScopeDesc(pc=0x00000001186a0299 offset=6d9):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a0299 offset=6d9):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a0299 offset=6d9):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a0299 offset=6d9):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a029f offset=6df):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a029f offset=6df):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a029f offset=6df):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a02b2 offset=6f2):
   jdk.incubator.vector.AbstractVector::check@5 (line 124)
ScopeDesc(pc=0x00000001186a02b2 offset=6f2):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
ScopeDesc(pc=0x00000001186a02b2 offset=6f2):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a02b2 offset=6f2):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a02b2 offset=6f2):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a02b2 offset=6f2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a02c7 offset=707):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a02c7 offset=707):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a02c7 offset=707):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a02cd offset=70d):
   jdk.incubator.vector.AbstractVector::check@5 (line 124)
ScopeDesc(pc=0x00000001186a02cd offset=70d):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
ScopeDesc(pc=0x00000001186a02cd offset=70d):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a02cd offset=70d):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a02cd offset=70d):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a02cd offset=70d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a02f6 offset=736):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a02f6 offset=736):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a02f6 offset=736):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a02fa offset=73a):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
ScopeDesc(pc=0x00000001186a02fa offset=73a):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
ScopeDesc(pc=0x00000001186a02fa offset=73a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x00000001186a02ff offset=73f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x00000001186a0318 offset=758):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a0318 offset=758):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a0318 offset=758):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a032d offset=76d):
   jdk.incubator.vector.AbstractVector::check@5 (line 124)
ScopeDesc(pc=0x00000001186a032d offset=76d):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
ScopeDesc(pc=0x00000001186a032d offset=76d):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a032d offset=76d):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a032d offset=76d):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a032d offset=76d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a034d offset=78d):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a034d offset=78d):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a034d offset=78d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a0364 offset=7a4):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000014e800fe8} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: stack[88],oop
    - @5: obj[725]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000014e8010d0}
ScopeDesc(pc=0x00000001186a0364 offset=7a4):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a0364 offset=7a4):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a0364 offset=7a4):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00000001186a0364 offset=7a4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: stack[32],oop
    - l1: stack[40],oop
    - l2: stack[48],oop
    - l3: 0
    - l4: stack[56],double
    - l5: 0
    - l6: stack[64],double
    - l7: stack[80]
    - l8: 0
    - l9: reg rbp [10],double
    - l10: obj[724]
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 724: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
    - 725: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
ScopeDesc(pc=0x00000001186a0387 offset=7c7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x00000001186a03a0 offset=7e0):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000014e800fe8} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: stack[0],oop
    - @5: obj[690]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000014e8010d0}
ScopeDesc(pc=0x00000001186a03a0 offset=7e0):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a03a0 offset=7e0):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a03a0 offset=7e0):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00000001186a03a0 offset=7e0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: stack[32],oop
    - l1: stack[40],oop
    - l2: stack[48],oop
    - l3: 0
    - l4: stack[56],double
    - l5: 0
    - l6: stack[64],double
    - l7: stack[80]
    - l8: 0
    - l9: reg rbp [10],double
    - l10: empty
    - l11: stack[88],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 690: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
ScopeDesc(pc=0x00000001186a03bf offset=7ff):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a03c8 offset=808):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a03c8 offset=808):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a03c8 offset=808):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a03dc offset=81c):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000014e800fe8} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: reg rbp [10],oop
    - @5: obj[709]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000014e8010d0}
ScopeDesc(pc=0x00000001186a03dc offset=81c):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a03dc offset=81c):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a03dc offset=81c):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00000001186a03dc offset=81c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: stack[32],oop
    - l1: stack[40],oop
    - l2: stack[48],oop
    - l3: 0
    - l4: stack[56],double
    - l5: 0
    - l6: stack[64],double
    - l7: stack[80]
    - l8: 0
    - l9: stack[104],double
    - l10: empty
    - l11: stack[88],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 709: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
ScopeDesc(pc=0x00000001186a0408 offset=848):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@42 (line 2308)
ScopeDesc(pc=0x00000001186a0408 offset=848):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a0408 offset=848):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
ScopeDesc(pc=0x00000001186a0412 offset=852):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a0412 offset=852):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a0412 offset=852):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a0424 offset=864):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000014e800fe8} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: reg rbp [10],oop
    - @5: obj[745]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000014e8010d0}
ScopeDesc(pc=0x00000001186a0424 offset=864):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a0424 offset=864):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a0424 offset=864):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00000001186a0424 offset=864):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: stack[32],oop
    - l1: stack[40],oop
    - l2: stack[48],oop
    - l3: 0
    - l4: stack[56],double
    - l5: 0
    - l6: stack[64],double
    - l7: stack[80]
    - l8: 0
    - l9: stack[112],double
    - l10: obj[744]
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 744: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
    - 745: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
ScopeDesc(pc=0x00000001186a0451 offset=891):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x00000001186a0456 offset=896):
   jdk.incubator.vector.DoubleVector::sub@0 (line 1138)
ScopeDesc(pc=0x00000001186a0456 offset=896):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
ScopeDesc(pc=0x00000001186a049c offset=8dc):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[36]
    - @1: stack[72]
    - @2: NULL
ScopeDesc(pc=0x00000001186a049c offset=8dc):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a049c offset=8dc):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000014e8010e0}
    - l1: stack[64],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00000001186a049c offset=8dc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[64],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[16],double
    - l5: 0
    - l6: stack[24],double
    - l7: stack[36]
    - l8: 0
    - l9: stack[40],double
    - l10: empty
    - l11: stack[48],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[56],oop
ScopeDesc(pc=0x00000001186a04cd offset=90d):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a04cd offset=90d):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a04cd offset=90d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a04d2 offset=912):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@59 (line 24)
ScopeDesc(pc=0x00000001186a04f4 offset=934):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[76]
    - @1: reg rbp [10],int
    - @2: NULL
ScopeDesc(pc=0x00000001186a04f4 offset=934):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a04f4 offset=934):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000014e8010e0}
    - l1: stack[96],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00000001186a04f4 offset=934):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[32],oop
    - l1: stack[40],oop
    - l2: stack[96],oop
    - l3: 0
    - l4: stack[56],double
    - l5: 0
    - l6: stack[64],double
    - l7: stack[76]
    - l8: 0
    - l9: stack[80],double
    - l10: obj[1375]
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[88],oop
   Objects
    - 1375: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
ScopeDesc(pc=0x00000001186a0526 offset=966):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a0526 offset=966):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a0526 offset=966):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a052f offset=96f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x00000001186a0534 offset=974):
   jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
ScopeDesc(pc=0x00000001186a0534 offset=974):
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
ScopeDesc(pc=0x00000001186a0534 offset=974):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
ScopeDesc(pc=0x00000001186a0534 offset=974):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a0534 offset=974):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a0534 offset=974):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a0534 offset=974):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a053d offset=97d):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a053d offset=97d):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a053d offset=97d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a0561 offset=9a1):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x00000001186a0561 offset=9a1):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x00000001186a0567 offset=9a7):
   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
ScopeDesc(pc=0x00000001186a0567 offset=9a7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x00000001186a0573 offset=9b3):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a0573 offset=9b3):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a0573 offset=9b3):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a0577 offset=9b7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x00000001186a057b offset=9bb):
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
ScopeDesc(pc=0x00000001186a057b offset=9bb):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
ScopeDesc(pc=0x00000001186a057b offset=9bb):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a057b offset=9bb):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a057b offset=9bb):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a057b offset=9bb):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a058c offset=9cc):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a058c offset=9cc):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a058c offset=9cc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a05ac offset=9ec):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x00000001186a05ac offset=9ec):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x00000001186a05b2 offset=9f2):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x00000001186a05b2 offset=9f2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x00000001186a05ed offset=a2d):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a05ed offset=a2d):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a05ed offset=a2d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a05f0 offset=a30):
   jdk.incubator.vector.VectorOperators$OperatorImpl::opCode@1 (line 774)
ScopeDesc(pc=0x00000001186a05f0 offset=a30):
   jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
ScopeDesc(pc=0x00000001186a05f0 offset=a30):
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
ScopeDesc(pc=0x00000001186a05f0 offset=a30):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
ScopeDesc(pc=0x00000001186a05f0 offset=a30):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a05f0 offset=a30):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a05f0 offset=a30):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a05f0 offset=a30):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x00000001186a05f7 offset=a37):
   jdk.incubator.vector.VectorOperators::opCode@0 (line 403)
ScopeDesc(pc=0x00000001186a05f7 offset=a37):
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
ScopeDesc(pc=0x00000001186a05f7 offset=a37):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
ScopeDesc(pc=0x00000001186a05f7 offset=a37):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a05f7 offset=a37):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a05f7 offset=a37):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a05f7 offset=a37):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x00000001186a05fe offset=a3e):
   jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
ScopeDesc(pc=0x00000001186a05fe offset=a3e):
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
ScopeDesc(pc=0x00000001186a05fe offset=a3e):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
ScopeDesc(pc=0x00000001186a05fe offset=a3e):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a05fe offset=a3e):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a05fe offset=a3e):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a05fe offset=a3e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x00000001186a0685 offset=ac5):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a0685 offset=ac5):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a0685 offset=ac5):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a0689 offset=ac9):
   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
ScopeDesc(pc=0x00000001186a0689 offset=ac9):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::dummyVector@1 (line 3484)
ScopeDesc(pc=0x00000001186a0689 offset=ac9):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
ScopeDesc(pc=0x00000001186a0689 offset=ac9):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x00000001186a0696 offset=ad6):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a0696 offset=ad6):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a0696 offset=ad6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a069b offset=adb):
   jdk.incubator.vector.DoubleVector::opKind@-1 (line 71)
ScopeDesc(pc=0x00000001186a069b offset=adb):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@15 (line 630)
ScopeDesc(pc=0x00000001186a069b offset=adb):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a069b offset=adb):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a069b offset=adb):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a069b offset=adb):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a06ae offset=aee):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a06ae offset=aee):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a06ae offset=aee):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a06b3 offset=af3):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x00000001186a06b3 offset=af3):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x00000001186a06b3 offset=af3):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x00000001186a06cb offset=b0b):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a06cb offset=b0b):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a06cb offset=b0b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a06d1 offset=b11):
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
ScopeDesc(pc=0x00000001186a06d1 offset=b11):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
ScopeDesc(pc=0x00000001186a06d1 offset=b11):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a06d1 offset=b11):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a06d1 offset=b11):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a06d1 offset=b11):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a06e8 offset=b28):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x00000001186a06ef offset=b2f):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a06ef offset=b2f):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a06ef offset=b2f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a06f3 offset=b33):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x00000001186a0703 offset=b43):
   jdk.incubator.vector.AbstractVector::check@5 (line 124)
ScopeDesc(pc=0x00000001186a0703 offset=b43):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
ScopeDesc(pc=0x00000001186a0703 offset=b43):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a0703 offset=b43):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a0703 offset=b43):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a0703 offset=b43):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a0716 offset=b56):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a0716 offset=b56):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a0716 offset=b56):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a071f offset=b5f):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x00000001186a071f offset=b5f):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x00000001186a071f offset=b5f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x00000001186a0722 offset=b62):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)  reexecute=true
   Locals
    - l0: reg r10 [20],oop
    - l1: reg r11 [22],oop
    - l2: reg r8 [16],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: 0
    - l9: reg xmm3 [96],double
    - l10: reg r12 [24],oop
    - l11: reg rcx [2],oop
    - l12: 0
    - l13: reg xmm4 [112],double
    - l14: 0
    - l15: reg xmm7 [160],double
    - l16: 0
    - l17: 0.000000
    - l18: 0
    - l19: 0.000000
    - l20: obj[1087]
    - l21: obj[1088]
    - l22: empty
   Objects
    - 1087: jdk.incubator.vector.Double256Vector reg xmm9 [192]Wrong location type 7
    - 1088: jdk.incubator.vector.Double256Vector reg xmm8 [176]Wrong location type 7
ScopeDesc(pc=0x00000001186a073e offset=b7e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x00000001186a0799 offset=bd9):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a0799 offset=bd9):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a0799 offset=bd9):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a079c offset=bdc):
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
ScopeDesc(pc=0x00000001186a079c offset=bdc):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@29 (line 2306)
ScopeDesc(pc=0x00000001186a079c offset=bdc):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a079c offset=bdc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
ScopeDesc(pc=0x00000001186a07ae offset=bee):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a07ae offset=bee):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a07ae offset=bee):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a07b2 offset=bf2):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@4 (line 2300)
ScopeDesc(pc=0x00000001186a07b2 offset=bf2):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a07b2 offset=bf2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
ScopeDesc(pc=0x00000001186a07ba offset=bfa):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a07ba offset=bfa):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a07ba offset=bfa):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a07c2 offset=c02):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@4 (line 2300)
ScopeDesc(pc=0x00000001186a07c2 offset=c02):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a07c2 offset=c02):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
ScopeDesc(pc=0x00000001186a084e offset=c8e):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a084e offset=c8e):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a084e offset=c8e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a0854 offset=c94):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x00000001186a086c offset=cac):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a086c offset=cac):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a086c offset=cac):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a086d offset=cad):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x00000001186a0873 offset=cb3):
   jdk.incubator.vector.DoubleVector::fromArray@2 (line 2562)
ScopeDesc(pc=0x00000001186a0873 offset=cb3):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x00000001186a08df offset=d1f):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a08df offset=d1f):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a08df offset=d1f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a08e6 offset=d26):
   jdk.incubator.vector.DoubleVector::arrayAddress@9 (line 3259)
ScopeDesc(pc=0x00000001186a08e6 offset=d26):
   jdk.incubator.vector.DoubleVector::fromArray0Template@20 (line 3121)
ScopeDesc(pc=0x00000001186a08e6 offset=d26):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x00000001186a08e6 offset=d26):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x00000001186a08e6 offset=d26):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x00000001186a08e9 offset=d29):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a08e9 offset=d29):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a08e9 offset=d29):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a08f6 offset=d36):
   jdk.incubator.vector.AbstractVector::check@5 (line 124)
ScopeDesc(pc=0x00000001186a08f6 offset=d36):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
ScopeDesc(pc=0x00000001186a08f6 offset=d36):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a08f6 offset=d36):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a08f6 offset=d36):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a08f6 offset=d36):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a08fd offset=d3d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)  reexecute=true
   Locals
    - l0: reg r14 [28],oop
    - l1: reg r11 [22],oop
    - l2: reg r8 [16],oop
    - l3: 0
    - l4: reg xmm4 [112],double
    - l5: 0
    - l6: reg xmm5 [128],double
    - l7: reg r10 [20],int
    - l8: 0
    - l9: reg xmm3 [96],double
    - l10: reg r12 [24],oop
    - l11: reg rcx [2],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x00000001186a0936 offset=d76):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a0936 offset=d76):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a0936 offset=d76):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a0938 offset=d78):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
ScopeDesc(pc=0x00000001186a0938 offset=d78):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a0938 offset=d78):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a0938 offset=d78):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a0938 offset=d78):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x00000001186a093f offset=d7f):
   jdk.incubator.vector.VectorOperators::opKind@5 (line 409)
ScopeDesc(pc=0x00000001186a093f offset=d7f):
   jdk.incubator.vector.DoubleVector::opKind@2 (line 71)
ScopeDesc(pc=0x00000001186a093f offset=d7f):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@15 (line 630)
ScopeDesc(pc=0x00000001186a093f offset=d7f):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a093f offset=d7f):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a093f offset=d7f):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a093f offset=d7f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x00000001186a0946 offset=d86):
   jdk.incubator.vector.VectorOperators::opKind@-1 (line 409)
ScopeDesc(pc=0x00000001186a0946 offset=d86):
   jdk.incubator.vector.DoubleVector::opKind@2 (line 71)
ScopeDesc(pc=0x00000001186a0946 offset=d86):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@15 (line 630)
ScopeDesc(pc=0x00000001186a0946 offset=d86):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a0946 offset=d86):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a0946 offset=d86):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a0946 offset=d86):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x00000001186a0953 offset=d93):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a0953 offset=d93):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a0953 offset=d93):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a0958 offset=d98):
   java.util.Objects::checkIndex@3 (line 359)
ScopeDesc(pc=0x00000001186a0958 offset=d98):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x00000001186a0958 offset=d98):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x00000001186a0958 offset=d98):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x00000001186a09a0 offset=de0):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[20]
    - @1: stack[72]
    - @2: NULL
ScopeDesc(pc=0x00000001186a09a0 offset=de0):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a09a0 offset=de0):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000014e8010e0}
    - l1: stack[64],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00000001186a09a0 offset=de0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[64],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[20]
    - l8: 0
    - l9: stack[24],double
    - l10: stack[32],oop
    - l11: stack[40],oop
    - l12: 0
    - l13: stack[48],double
    - l14: 0
    - l15: stack[56],double
    - l16: 0
    - l17: 0.000000
    - l18: 0
    - l19: 0.000000
    - l20: obj[1584]
    - l21: obj[1585]
    - l22: empty
   Objects
    - 1584: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
    - 1585: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
ScopeDesc(pc=0x00000001186a09b4 offset=df4):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a09b4 offset=df4):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a09b4 offset=df4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a09b9 offset=df9):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@42 (line 74)
ScopeDesc(pc=0x00000001186a09b9 offset=df9):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x00000001186a09b9 offset=df9):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x00000001186a0a02 offset=e42):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a0a02 offset=e42):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a0a02 offset=e42):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a0a0c offset=e4c):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[20]
    - @1: stack[72]
    - @2: NULL
ScopeDesc(pc=0x00000001186a0a0c offset=e4c):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a0a0c offset=e4c):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000014e8010e0}
    - l1: stack[64],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00000001186a0a0c offset=e4c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[64],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[20]
    - l8: 0
    - l9: stack[24],double
    - l10: stack[32],oop
    - l11: stack[40],oop
    - l12: 0
    - l13: stack[48],double
    - l14: 0
    - l15: stack[56],double
    - l16: 0
    - l17: 0.000000
    - l18: 0
    - l19: 0.000000
    - l20: empty
    - l21: obj[1338]
    - l22: obj[1339]
   Expression stack
    - @0: obj[1340]
   Objects
    - 1338: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
    - 1339: jdk.incubator.vector.Double256Vector stack[160]Wrong location type 7
    - 1340: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
ScopeDesc(pc=0x00000001186a0a29 offset=e69):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x00000001186a0a29 offset=e69):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x00000001186a0a29 offset=e69):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x00000001186a0a3b offset=e7b):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a0a3b offset=e7b):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a0a3b offset=e7b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a0a3f offset=e7f):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x00000001186a0a3f offset=e7f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x00000001186a0ad5 offset=f15):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a0ad5 offset=f15):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a0ad5 offset=f15):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a0ae0 offset=f20):
   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
ScopeDesc(pc=0x00000001186a0ae0 offset=f20):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x00000001186a0ae0 offset=f20):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x00000001186a0ae0 offset=f20):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x00000001186a0af2 offset=f32):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a0af2 offset=f32):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a0af2 offset=f32):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a0af6 offset=f36):
   jdk.incubator.vector.DoubleVector::fromArray0Template@31 (line 3119)
ScopeDesc(pc=0x00000001186a0af6 offset=f36):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x00000001186a0af6 offset=f36):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x00000001186a0af6 offset=f36):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x00000001186a0b2b offset=f6b):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a0b2b offset=f6b):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a0b2b offset=f6b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a0b2f offset=f6f):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
ScopeDesc(pc=0x00000001186a0b2f offset=f6f):
   jdk.incubator.vector.DoubleVector::fromArray0Template@26 (line 3121)
ScopeDesc(pc=0x00000001186a0b2f offset=f6f):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x00000001186a0b2f offset=f6f):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x00000001186a0b2f offset=f6f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x00000001186a0b49 offset=f89):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a0b49 offset=f89):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a0b49 offset=f89):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a0b4d offset=f8d):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x00000001186a0b4d offset=f8d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
ScopeDesc(pc=0x00000001186a0c96 offset=10d6):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a0c96 offset=10d6):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a0c96 offset=10d6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a0ca6 offset=10e6):
   jdk.incubator.vector.AbstractVector::check@5 (line 124)
ScopeDesc(pc=0x00000001186a0ca6 offset=10e6):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
ScopeDesc(pc=0x00000001186a0ca6 offset=10e6):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a0ca6 offset=10e6):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a0ca6 offset=10e6):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a0ca6 offset=10e6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a0cad offset=10ed):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)  reexecute=true
   Locals
    - l0: reg r10 [20],oop
    - l1: reg r11 [22],oop
    - l2: reg r8 [16],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg rbx [6],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[0],double
    - l14: 0
    - l15: stack[8],double
    - l16: 0
    - l17: reg xmm1 [64],double
    - l18: 0
    - l19: reg xmm0 [48],double
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x00000001186a0ce8 offset=1128):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
ScopeDesc(pc=0x00000001186a0cf6 offset=1136):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a0cf6 offset=1136):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a0cf6 offset=1136):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a0cfa offset=113a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
ScopeDesc(pc=0x00000001186a0d12 offset=1152):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a0d12 offset=1152):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a0d12 offset=1152):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a0d71 offset=11b1):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
ScopeDesc(pc=0x00000001186a0d71 offset=11b1):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@157 (line 652)
ScopeDesc(pc=0x00000001186a0d71 offset=11b1):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a0d71 offset=11b1):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a0d71 offset=11b1):
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
ScopeDesc(pc=0x00000001186a0d71 offset=11b1):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x00000001186a0d71 offset=11b1):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
ScopeDesc(pc=0x00000001186a0d7b offset=11bb):
   jdk.incubator.vector.DoubleVector::fromArray0Template@34 (line 3119)
ScopeDesc(pc=0x00000001186a0d7b offset=11bb):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x00000001186a0d7b offset=11bb):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x00000001186a0d7b offset=11bb):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x00000001186a0d89 offset=11c9):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a0d89 offset=11c9):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a0d89 offset=11c9):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a0d94 offset=11d4):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000014e800fe8} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: stack[72],oop
    - @5: obj[320]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000014e8010d0}
ScopeDesc(pc=0x00000001186a0d94 offset=11d4):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a0d94 offset=11d4):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a0d94 offset=11d4):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00000001186a0d94 offset=11d4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: stack[16],oop
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: 0
    - l4: stack[56],double
    - l5: 0
    - l6: stack[64],double
    - l7: stack[8]
    - l8: 0
    - l9: reg rbp [10],double
    - l10: empty
    - l11: stack[0],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 320: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
ScopeDesc(pc=0x00000001186a0df4 offset=1234):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a0df4 offset=1234):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a0df4 offset=1234):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a0dfe offset=123e):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@171 (line 651)
ScopeDesc(pc=0x00000001186a0dfe offset=123e):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a0dfe offset=123e):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a0dfe offset=123e):
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
ScopeDesc(pc=0x00000001186a0dfe offset=123e):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x00000001186a0dfe offset=123e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
ScopeDesc(pc=0x00000001186a0e0c offset=124c):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000014e800fe8} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: stack[40],oop
    - @5: obj[292]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000014e8010d0}
ScopeDesc(pc=0x00000001186a0e0c offset=124c):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a0e0c offset=124c):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a0e0c offset=124c):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00000001186a0e0c offset=124c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: stack[16],oop
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: 0
    - l4: stack[56],double
    - l5: 0
    - l6: stack[64],double
    - l7: stack[8]
    - l8: 0
    - l9: reg rbp [10],double
    - l10: empty
    - l11: stack[0],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 292: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
ScopeDesc(pc=0x00000001186a0e7e offset=12be):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a0e7e offset=12be):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a0e7e offset=12be):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a0e88 offset=12c8):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@41 (line 74)
ScopeDesc(pc=0x00000001186a0e88 offset=12c8):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x00000001186a0e88 offset=12c8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
ScopeDesc(pc=0x00000001186a0e98 offset=12d8):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000014e800fe8} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: stack[0],oop
    - @5: obj[344]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000014e8010d0}
ScopeDesc(pc=0x00000001186a0e98 offset=12d8):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a0e98 offset=12d8):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a0e98 offset=12d8):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00000001186a0e98 offset=12d8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: stack[16],oop
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: 0
    - l4: stack[56],double
    - l5: 0
    - l6: stack[64],double
    - l7: stack[8]
    - l8: 0
    - l9: reg rbp [10],double
    - l10: obj[342]
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 342: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
    - 344: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
ScopeDesc(pc=0x00000001186a0f12 offset=1352):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
ScopeDesc(pc=0x00000001186a0f12 offset=1352):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
ScopeDesc(pc=0x00000001186a0f1c offset=135c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@-1 (line 15)
ScopeDesc(pc=0x00000001186a0f2a offset=136a):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a0f2a offset=136a):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a0f2a offset=136a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a0f34 offset=1374):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000014e800fe8} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: stack[72],oop
    - @5: obj[373]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000014e8010d0}
ScopeDesc(pc=0x00000001186a0f34 offset=1374):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a0f34 offset=1374):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a0f34 offset=1374):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00000001186a0f34 offset=1374):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: stack[8],oop
    - l1: stack[16],oop
    - l2: stack[24],oop
    - l3: 0
    - l4: stack[56],double
    - l5: 0
    - l6: stack[64],double
    - l7: stack[0]
    - l8: 0
    - l9: reg rbp [10],double
    - l10: obj[372]
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 372: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
    - 373: jdk.incubator.vector.Double256Vector stack[160]Wrong location type 7
ScopeDesc(pc=0x00000001186a0fbb offset=13fb):
   jdk.incubator.vector.VectorOperators$OperatorImpl::opCode@1 (line 774)
ScopeDesc(pc=0x00000001186a0fbb offset=13fb):
   jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
ScopeDesc(pc=0x00000001186a0fbb offset=13fb):
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
ScopeDesc(pc=0x00000001186a0fbb offset=13fb):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@29 (line 2306)
ScopeDesc(pc=0x00000001186a0fbb offset=13fb):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a0fbb offset=13fb):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
ScopeDesc(pc=0x00000001186a0fc5 offset=1405):
   jdk.incubator.vector.VectorOperators$OperatorImpl::opCode@26 (line 775)
ScopeDesc(pc=0x00000001186a0fc5 offset=1405):
   jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
ScopeDesc(pc=0x00000001186a0fc5 offset=1405):
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
ScopeDesc(pc=0x00000001186a0fc5 offset=1405):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
ScopeDesc(pc=0x00000001186a0fc5 offset=1405):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a0fc5 offset=1405):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a0fc5 offset=1405):
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
ScopeDesc(pc=0x00000001186a0fc5 offset=1405):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x00000001186a0fc5 offset=1405):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
ScopeDesc(pc=0x00000001186a0fd4 offset=1414):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000014e800fe8} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: stack[32],oop
    - @5: obj[476]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000014e8010d0}
ScopeDesc(pc=0x00000001186a0fd4 offset=1414):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a0fd4 offset=1414):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a0fd4 offset=1414):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00000001186a0fd4 offset=1414):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: stack[8],oop
    - l1: stack[16],oop
    - l2: stack[24],oop
    - l3: 0
    - l4: stack[56],double
    - l5: 0
    - l6: stack[64],double
    - l7: stack[44]
    - l8: 0
    - l9: reg rbp [10],double
    - l10: empty
    - l11: stack[48],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 476: jdk.incubator.vector.Double256Vector stack[160]Wrong location type 7
ScopeDesc(pc=0x00000001186a105c offset=149c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a1066 offset=14a6):
   jdk.incubator.vector.VectorOperators::opCode@-1 (line 403)
ScopeDesc(pc=0x00000001186a1066 offset=14a6):
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
ScopeDesc(pc=0x00000001186a1066 offset=14a6):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
ScopeDesc(pc=0x00000001186a1066 offset=14a6):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a1066 offset=14a6):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a1066 offset=14a6):
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
ScopeDesc(pc=0x00000001186a1066 offset=14a6):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x00000001186a1066 offset=14a6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
ScopeDesc(pc=0x00000001186a107c offset=14bc):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000014e800fe8} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: stack[72],oop
    - @5: obj[503]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000014e8010d0}
ScopeDesc(pc=0x00000001186a107c offset=14bc):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a107c offset=14bc):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a107c offset=14bc):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00000001186a107c offset=14bc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: stack[8],oop
    - l1: stack[16],oop
    - l2: stack[24],oop
    - l3: 0
    - l4: stack[56],double
    - l5: 0
    - l6: stack[64],double
    - l7: stack[36]
    - l8: 0
    - l9: reg rbp [10],double
    - l10: empty
    - l11: stack[40],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 503: jdk.incubator.vector.Double256Vector stack[160]Wrong location type 7
ScopeDesc(pc=0x00000001186a110b offset=154b):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a110b offset=154b):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a110b offset=154b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a1115 offset=1555):
   jdk.incubator.vector.AbstractVector::check@5 (line 124)
ScopeDesc(pc=0x00000001186a1115 offset=1555):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@7 (line 629)
ScopeDesc(pc=0x00000001186a1115 offset=1555):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a1115 offset=1555):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a1115 offset=1555):
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
ScopeDesc(pc=0x00000001186a1115 offset=1555):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x00000001186a1115 offset=1555):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
ScopeDesc(pc=0x00000001186a1124 offset=1564):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000014e800fe8} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: stack[40],oop
    - @5: obj[523]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000014e8010d0}
ScopeDesc(pc=0x00000001186a1124 offset=1564):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a1124 offset=1564):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a1124 offset=1564):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00000001186a1124 offset=1564):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: stack[8],oop
    - l1: stack[16],oop
    - l2: stack[24],oop
    - l3: 0
    - l4: stack[56],double
    - l5: 0
    - l6: stack[64],double
    - l7: stack[36]
    - l8: 0
    - l9: reg rbp [10],double
    - l10: obj[522]
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 522: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
    - 523: jdk.incubator.vector.Double256Vector stack[160]Wrong location type 7
ScopeDesc(pc=0x00000001186a119a offset=15da):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
ScopeDesc(pc=0x00000001186a11a4 offset=15e4):
   jdk.incubator.vector.VectorOperators::opKind@5 (line 409)
ScopeDesc(pc=0x00000001186a11a4 offset=15e4):
   jdk.incubator.vector.DoubleVector::opKind@2 (line 71)
ScopeDesc(pc=0x00000001186a11a4 offset=15e4):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@15 (line 630)
ScopeDesc(pc=0x00000001186a11a4 offset=15e4):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a11a4 offset=15e4):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a11a4 offset=15e4):
   jdk.incubator.vector.DoubleVector::lanewise@7 (line 714)
ScopeDesc(pc=0x00000001186a11a4 offset=15e4):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x00000001186a11a4 offset=15e4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@219 (line 47)
ScopeDesc(pc=0x00000001186a11bb offset=15fb):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a11bb offset=15fb):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a11bb offset=15fb):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a11c4 offset=1604):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@168 (line 651)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x000000014e800fe8} = 'jdk/incubator/vector/Double256Vector'
    - @2: a 'java/lang/Class'{0x000000011ff8c550} = double
    - @3: 4
    - @4: stack[104],oop
    - @5: obj[551]
    - @6: a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000014e8010d0}
ScopeDesc(pc=0x00000001186a11c4 offset=1604):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a11c4 offset=1604):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a11c4 offset=1604):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x00000001186a11c4 offset=1604):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: stack[40],oop
    - l1: stack[48],oop
    - l2: stack[72],oop
    - l3: 0
    - l4: stack[56],double
    - l5: 0
    - l6: stack[64],double
    - l7: stack[84]
    - l8: 0
    - l9: reg rbp [10],double
    - l10: obj[550]
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 550: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
    - 551: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
ScopeDesc(pc=0x00000001186a1225 offset=1665):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x00000001186a122a offset=166a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
ScopeDesc(pc=0x00000001186a1263 offset=16a3):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a1263 offset=16a3):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a1263 offset=16a3):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a126c offset=16ac):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[32]
    - @1: stack[56]
    - @2: NULL
ScopeDesc(pc=0x00000001186a126c offset=16ac):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a126c offset=16ac):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000014e8010e0}
    - l1: stack[48],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00000001186a126c offset=16ac):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[48],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[16],double
    - l5: 0
    - l6: stack[24],double
    - l7: stack[32]
    - l8: 0
    - l9: stack[40],double
    - l10: empty
    - l11: stack[64],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[72],oop
ScopeDesc(pc=0x00000001186a1280 offset=16c0):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a1280 offset=16c0):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a1280 offset=16c0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a1285 offset=16c5):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x00000001186a12cc offset=170c):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[56],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000014e801150}
    - @2: obj[1325]
ScopeDesc(pc=0x00000001186a12cc offset=170c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[16],double
    - l5: 0
    - l6: stack[24],double
    - l7: stack[32]
    - l8: 0
    - l9: stack[40],double
    - l10: empty
    - l11: stack[48],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 1325: jdk.incubator.vector.Double256Vector stack[64]Wrong location type 7
ScopeDesc(pc=0x00000001186a12e0 offset=1720):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a12e0 offset=1720):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a12e0 offset=1720):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a12e5 offset=1725):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x00000001186a1321 offset=1761):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a1321 offset=1761):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a1321 offset=1761):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a132c offset=176c):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[44]
    - @1: reg rbp [10],int
    - @2: NULL
ScopeDesc(pc=0x00000001186a132c offset=176c):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a132c offset=176c):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000014e8010e0}
    - l1: stack[56],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00000001186a132c offset=176c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: stack[0],oop
    - l1: stack[8],oop
    - l2: stack[56],oop
    - l3: 0
    - l4: stack[24],double
    - l5: 0
    - l6: stack[32],double
    - l7: stack[44]
    - l8: 0
    - l9: stack[48],double
    - l10: obj[1356]
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[64],oop
   Objects
    - 1356: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
ScopeDesc(pc=0x00000001186a1348 offset=1788):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a1348 offset=1788):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a1348 offset=1788):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a134d offset=178d):
   jdk.incubator.vector.DoubleVector::fromArray@2 (line 2562)
ScopeDesc(pc=0x00000001186a134d offset=178d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x00000001186a1381 offset=17c1):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a1381 offset=17c1):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a1381 offset=17c1):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a138c offset=17cc):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[48],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000014e801150}
    - @2: obj[1501]
ScopeDesc(pc=0x00000001186a138c offset=17cc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[56],double
    - l5: 0
    - l6: stack[24],double
    - l7: stack[32]
    - l8: 0
    - l9: stack[40],double
    - l10: obj[1500]
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 1500: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
    - 1501: jdk.incubator.vector.Double256Vector stack[64]Wrong location type 7
ScopeDesc(pc=0x00000001186a13d5 offset=1815):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x00000001186a13fd offset=183d):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a13fd offset=183d):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a13fd offset=183d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a1408 offset=1848):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
   Locals
    - l0: stack[24],oop
    - l1: stack[32],oop
    - l2: stack[40],oop
    - l3: 0
    - l4: reg rbp [10],double
    - l5: 0
    - l6: stack[64],double
    - l7: stack[8]
    - l8: 0
    - l9: stack[16],double
    - l10: stack[48],oop
    - l11: stack[56],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x00000001186a142f offset=186f):
   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
ScopeDesc(pc=0x00000001186a142f offset=186f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x00000001186a1434 offset=1874):
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
ScopeDesc(pc=0x00000001186a1434 offset=1874):
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
ScopeDesc(pc=0x00000001186a1434 offset=1874):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x00000001186a1434 offset=1874):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
ScopeDesc(pc=0x00000001186a1461 offset=18a1):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a1461 offset=18a1):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a1461 offset=18a1):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a146c offset=18ac):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: 0
    - l6: stack[16],double
    - l7: stack[24]
    - l8: 0
    - l9: stack[32],double
    - l10: stack[64],oop
    - l11: stack[48],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[56],double
    - @2: stack[64],oop
    - @3: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000014e801150}
ScopeDesc(pc=0x00000001186a1480 offset=18c0):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a1480 offset=18c0):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a1480 offset=18c0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a1485 offset=18c5):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x00000001186a14c0 offset=1900):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[64],double
    - l5: empty
    - l6: empty
    - l7: stack[16]
    - l8: 0
    - l9: stack[24],double
    - l10: stack[32],oop
    - l11: stack[56],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: 0
    - @1: stack[48],double
    - @2: stack[56],oop
    - @3: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000014e801150}
ScopeDesc(pc=0x00000001186a14fe offset=193e):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a14fe offset=193e):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a14fe offset=193e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a1503 offset=1943):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
ScopeDesc(pc=0x00000001186a1503 offset=1943):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
ScopeDesc(pc=0x00000001186a1503 offset=1943):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x00000001186a1533 offset=1973):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a1533 offset=1973):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a1533 offset=1973):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a153c offset=197c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@205 (line 46)  reexecute=true
   Locals
    - l0: stack[0],oop
    - l1: stack[8],oop
    - l2: stack[16],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[24],double
    - l10: stack[32],oop
    - l11: stack[40],oop
    - l12: 0
    - l13: stack[48],double
    - l14: 0
    - l15: stack[56],double
    - l16: 0
    - l17: 0.000000
    - l18: 0
    - l19: 0.000000
    - l20: obj[1600]
    - l21: obj[1601]
    - l22: empty
   Expression stack
    - @0: reg rbp [10],int
   Objects
    - 1600: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
    - 1601: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
ScopeDesc(pc=0x00000001186a1550 offset=1990):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a1550 offset=1990):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a1550 offset=1990):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a1555 offset=1995):
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
ScopeDesc(pc=0x00000001186a1555 offset=1995):
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
ScopeDesc(pc=0x00000001186a1555 offset=1995):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x00000001186a1555 offset=1995):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
ScopeDesc(pc=0x00000001186a1586 offset=19c6):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a1586 offset=19c6):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a1586 offset=19c6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a1590 offset=19d0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@134 (line 32)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[48],double
    - l5: 0
    - l6: stack[56],double
    - l7: stack[20]
    - l8: 0
    - l9: stack[24],double
    - l10: stack[32],oop
    - l11: stack[40],oop
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[20]
    - @1: stack[64]
ScopeDesc(pc=0x00000001186a1644 offset=1a84):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a1644 offset=1a84):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a1644 offset=1a84):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a1649 offset=1a89):
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
ScopeDesc(pc=0x00000001186a1649 offset=1a89):
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
ScopeDesc(pc=0x00000001186a1649 offset=1a89):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x00000001186a1649 offset=1a89):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
ScopeDesc(pc=0x00000001186a1675 offset=1ab5):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a1675 offset=1ab5):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a1675 offset=1ab5):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a1680 offset=1ac0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@305 (line 55)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[20]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[24],double
    - l14: 0
    - l15: stack[32],double
    - l16: 0
    - l17: stack[40],double
    - l18: 0
    - l19: stack[48],double
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[20]
    - @1: stack[56]
ScopeDesc(pc=0x00000001186a1734 offset=1b74):
   jdk.incubator.vector.DoubleVector::fromArray@19 (line 2564)
ScopeDesc(pc=0x00000001186a1734 offset=1b74):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x00000001186a1739 offset=1b79):
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
ScopeDesc(pc=0x00000001186a1739 offset=1b79):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x00000001186a1739 offset=1b79):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
ScopeDesc(pc=0x00000001186a1744 offset=1b84):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: NULL
    - @3: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000014e801150}
ScopeDesc(pc=0x00000001186a1758 offset=1b98):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a1758 offset=1b98):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a1758 offset=1b98):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a175d offset=1b9d):
   jdk.incubator.vector.DoubleVector::sub@-1 (line 1138)
ScopeDesc(pc=0x00000001186a175d offset=1b9d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
ScopeDesc(pc=0x00000001186a1768 offset=1ba8):
   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: NULL
ScopeDesc(pc=0x00000001186a1768 offset=1ba8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: empty
ScopeDesc(pc=0x00000001186a177c offset=1bbc):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a177c offset=1bbc):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a177c offset=1bbc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a1781 offset=1bc1):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x00000001186a1786 offset=1bc6):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a1786 offset=1bc6):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a1786 offset=1bc6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a1790 offset=1bd0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: NULL
    - @1: obj[1317]
   Objects
    - 1317: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
ScopeDesc(pc=0x00000001186a17a4 offset=1be4):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a17a4 offset=1be4):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a17a4 offset=1be4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a17a9 offset=1be9):
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
ScopeDesc(pc=0x00000001186a17a9 offset=1be9):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x00000001186a17a9 offset=1be9):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
ScopeDesc(pc=0x00000001186a17b4 offset=1bf4):
   jdk.incubator.vector.DoubleVector::fromArray@8 (line 2562)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: NULL
ScopeDesc(pc=0x00000001186a17b4 offset=1bf4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: empty
ScopeDesc(pc=0x00000001186a17c8 offset=1c08):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a17c8 offset=1c08):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a17c8 offset=1c08):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a17cd offset=1c0d):
   jdk.incubator.vector.DoubleVector::fromArray@2 (line 2562)
ScopeDesc(pc=0x00000001186a17cd offset=1c0d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x00000001186a17d2 offset=1c12):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a17d2 offset=1c12):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a17d2 offset=1c12):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a17dc offset=1c1c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: NULL
    - @1: obj[1492]
   Objects
    - 1492: jdk.incubator.vector.Double256Vector stack[0]Wrong location type 7
ScopeDesc(pc=0x00000001186a17f0 offset=1c30):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a17f0 offset=1c30):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a17f0 offset=1c30):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a17f5 offset=1c35):
   jdk.incubator.vector.Double256Vector::broadcast@2 (line 41)
ScopeDesc(pc=0x00000001186a17f5 offset=1c35):
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
ScopeDesc(pc=0x00000001186a17f5 offset=1c35):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x00000001186a17f5 offset=1c35):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
ScopeDesc(pc=0x00000001186a1800 offset=1c40):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@124 (line 30)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: empty
    - @1: empty
    - @2: NULL
    - @3: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000014e801150}
ScopeDesc(pc=0x00000001186a1814 offset=1c54):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a1814 offset=1c54):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a1814 offset=1c54):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a1819 offset=1c59):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x00000001186a1824 offset=1c64):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@133 (line 32)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: empty
    - @1: NULL
ScopeDesc(pc=0x00000001186a1838 offset=1c78):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a1838 offset=1c78):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a1838 offset=1c78):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a183d offset=1c7d):
   jdk.incubator.vector.DoubleVector::lanewise@4 (line 714)
ScopeDesc(pc=0x00000001186a183d offset=1c7d):
   jdk.incubator.vector.DoubleVector::sub@5 (line 1138)
ScopeDesc(pc=0x00000001186a183d offset=1c7d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@237 (line 48)
ScopeDesc(pc=0x00000001186a1842 offset=1c82):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a1842 offset=1c82):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a1842 offset=1c82):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a184c offset=1c8c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@360 (line 60)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: NULL
    - @1: 0
    - @2: reg rbp [10],double
ScopeDesc(pc=0x00000001186a1860 offset=1ca0):
   jdk.incubator.vector.VectorOperators$OperatorImpl::opKind@6 (line 828)
ScopeDesc(pc=0x00000001186a1860 offset=1ca0):
   jdk.incubator.vector.VectorOperators::opKind@5 (line 409)
ScopeDesc(pc=0x00000001186a1860 offset=1ca0):
   jdk.incubator.vector.DoubleVector::opKind@2 (line 71)
ScopeDesc(pc=0x00000001186a1860 offset=1ca0):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@15 (line 630)
ScopeDesc(pc=0x00000001186a1860 offset=1ca0):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a1860 offset=1ca0):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a1860 offset=1ca0):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a1860 offset=1ca0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x00000001186a186f offset=1caf):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@133 (line 32)
ScopeDesc(pc=0x00000001186a1871 offset=1cb1):
   jdk.incubator.vector.VectorOperators$OperatorImpl::opKind@6 (line 828)
ScopeDesc(pc=0x00000001186a1871 offset=1cb1):
   jdk.incubator.vector.VectorOperators::opKind@5 (line 409)
ScopeDesc(pc=0x00000001186a1871 offset=1cb1):
   jdk.incubator.vector.DoubleVector::opKind@2 (line 71)
ScopeDesc(pc=0x00000001186a1871 offset=1cb1):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@15 (line 630)
ScopeDesc(pc=0x00000001186a1871 offset=1cb1):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a1871 offset=1cb1):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a1871 offset=1cb1):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a1871 offset=1cb1):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x00000001186a1876 offset=1cb6):
   jdk.incubator.vector.VectorOperators$OperatorImpl::opKind@0 (line 828)
ScopeDesc(pc=0x00000001186a1876 offset=1cb6):
   jdk.incubator.vector.VectorOperators::opKind@5 (line 409)
ScopeDesc(pc=0x00000001186a1876 offset=1cb6):
   jdk.incubator.vector.DoubleVector::opKind@2 (line 71)
ScopeDesc(pc=0x00000001186a1876 offset=1cb6):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@15 (line 630)
ScopeDesc(pc=0x00000001186a1876 offset=1cb6):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a1876 offset=1cb6):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a1876 offset=1cb6):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a1876 offset=1cb6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x00000001186a187a offset=1cba):
   jdk.incubator.vector.VectorOperators::opKind@5 (line 409)
ScopeDesc(pc=0x00000001186a187a offset=1cba):
   jdk.incubator.vector.DoubleVector::opKind@2 (line 71)
ScopeDesc(pc=0x00000001186a187a offset=1cba):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@15 (line 630)
ScopeDesc(pc=0x00000001186a187a offset=1cba):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a187a offset=1cba):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a187a offset=1cba):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a187a offset=1cba):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x00000001186a187c offset=1cbc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@133 (line 32)
ScopeDesc(pc=0x00000001186a187e offset=1cbe):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x00000001186a1883 offset=1cc3):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@133 (line 32)
ScopeDesc(pc=0x00000001186a1888 offset=1cc8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@54 (line 24)
ScopeDesc(pc=0x00000001186a1898 offset=1cd8):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a1898 offset=1cd8):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a1898 offset=1cd8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x000000011869f908: 0020
relocInfo@0x000000011869f908 [type=0(none) addr=0x000000011869fbc0 offset=32]
         @0x000000011869f90a: 6400
relocInfo@0x000000011869f90a [type=6(runtime_call) addr=0x000000011869fbc0 offset=0 format=1] | [destination=0x0000000109677fa0]
         @0x000000011869f90c: f004cca0
relocInfo@0x000000011869f90e [type=12(metadata) addr=0x000000011869fc60 offset=160 format=3 data=4] | [metadata_addr=0x00000001186a1928 *=0x0000000225d0e900 offset=0]metadata_value=0x0000000225d0e900: 'org/jml/regression/linear/DoubleVectorLinearRegression'
         @0x000000011869f910: f005cc20
relocInfo@0x000000011869f912 [type=12(metadata) addr=0x000000011869fc80 offset=32 format=3 data=5] | [metadata_addr=0x00000001186a1930 *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011869f914: f005cc21
relocInfo@0x000000011869f916 [type=12(metadata) addr=0x000000011869fca1 offset=33 format=3 data=5] | [metadata_addr=0x00000001186a1930 *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011869f918: c010
relocInfo@0x000000011869f918 [type=12(metadata) addr=0x000000011869fcb1 offset=16] | [metadata_addr=0x000000011869fcb3 *=0x0000000225d4ce30 offset=0]metadata_value=0x0000000225d4ce30: 'jdk/incubator/vector/DoubleVector'
         @0x000000011869f91a: f00bcc9f
relocInfo@0x000000011869f91c [type=12(metadata) addr=0x000000011869fd50 offset=159 format=3 data=11] | [metadata_addr=0x00000001186a1960 *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011869f91e: f005cc43
relocInfo@0x000000011869f920 [type=12(metadata) addr=0x000000011869fd93 offset=67 format=3 data=5] | [metadata_addr=0x00000001186a1930 *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011869f922: f00bcc7a
relocInfo@0x000000011869f924 [type=12(metadata) addr=0x000000011869fe0d offset=122 format=3 data=11] | [metadata_addr=0x00000001186a1960 *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011869f926: f00bcc38
relocInfo@0x000000011869f928 [type=12(metadata) addr=0x000000011869fe45 offset=56 format=3 data=11] | [metadata_addr=0x00000001186a1960 *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011869f92a: f005cc44
relocInfo@0x000000011869f92c [type=12(metadata) addr=0x000000011869fe89 offset=68 format=3 data=5] | [metadata_addr=0x00000001186a1930 *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011869f92e: f00bcc7b
relocInfo@0x000000011869f930 [type=12(metadata) addr=0x000000011869ff04 offset=123 format=3 data=11] | [metadata_addr=0x00000001186a1960 *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011869f932: f005cc70
relocInfo@0x000000011869f934 [type=12(metadata) addr=0x000000011869ff74 offset=112 format=3 data=5] | [metadata_addr=0x00000001186a1930 *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011869f936: f00bcc7a
relocInfo@0x000000011869f938 [type=12(metadata) addr=0x000000011869ffee offset=122 format=3 data=11] | [metadata_addr=0x00000001186a1960 *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011869f93a: f005cc5d
relocInfo@0x000000011869f93c [type=12(metadata) addr=0x00000001186a004b offset=93 format=3 data=5] | [metadata_addr=0x00000001186a1930 *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011869f93e: f00bcc77
relocInfo@0x000000011869f940 [type=12(metadata) addr=0x00000001186a00c2 offset=119 format=3 data=11] | [metadata_addr=0x00000001186a1960 *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011869f942: f005cc3c
relocInfo@0x000000011869f944 [type=12(metadata) addr=0x00000001186a00fe offset=60 format=3 data=5] | [metadata_addr=0x00000001186a1930 *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011869f946: f00bcc88
relocInfo@0x000000011869f948 [type=12(metadata) addr=0x00000001186a0186 offset=136 format=3 data=11] | [metadata_addr=0x00000001186a1960 *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011869f94a: a025
relocInfo@0x000000011869f94a [type=10(poll) addr=0x00000001186a01ab offset=37]
         @0x000000011869f94c: f005cca3
relocInfo@0x000000011869f94e [type=12(metadata) addr=0x00000001186a024e offset=163 format=3 data=5] | [metadata_addr=0x00000001186a1930 *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011869f950: f00bcc95
relocInfo@0x000000011869f952 [type=12(metadata) addr=0x00000001186a02e3 offset=149 format=3 data=11] | [metadata_addr=0x00000001186a1960 *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011869f954: c06a
relocInfo@0x000000011869f954 [type=12(metadata) addr=0x00000001186a034d offset=106] | [metadata_addr=0x00000001186a034f *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011869f956: 6412
relocInfo@0x000000011869f956 [type=6(runtime_call) addr=0x00000001186a035f offset=18 format=1] | [destination=0x0000000110b391a0]
         @0x000000011869f958: c028
relocInfo@0x000000011869f958 [type=12(metadata) addr=0x00000001186a0387 offset=40] | [metadata_addr=0x00000001186a0389 *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011869f95a: 6414
relocInfo@0x000000011869f95a [type=6(runtime_call) addr=0x00000001186a039b offset=20 format=1] | [destination=0x0000000110b391a0]
         @0x000000011869f95c: c02d
relocInfo@0x000000011869f95c [type=12(metadata) addr=0x00000001186a03c8 offset=45] | [metadata_addr=0x00000001186a03ca *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011869f95e: 640f
relocInfo@0x000000011869f95e [type=6(runtime_call) addr=0x00000001186a03d7 offset=15 format=1] | [destination=0x0000000110b394a0]
         @0x000000011869f960: c03b
relocInfo@0x000000011869f960 [type=12(metadata) addr=0x00000001186a0412 offset=59] | [metadata_addr=0x00000001186a0414 *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011869f962: 640d
relocInfo@0x000000011869f962 [type=6(runtime_call) addr=0x00000001186a041f offset=13 format=1] | [destination=0x0000000110b394a0]
         @0x000000011869f964: 6478
relocInfo@0x000000011869f964 [type=6(runtime_call) addr=0x00000001186a0497 offset=120 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869f966: f80309ba777700017005
relocInfo@0x000000011869f96e [type=7(external_word) addr=0x00000001186a049c offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869f970: 640e
relocInfo@0x000000011869f970 [type=6(runtime_call) addr=0x00000001186a04aa offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869f972: 6445
relocInfo@0x000000011869f972 [type=6(runtime_call) addr=0x00000001186a04ef offset=69 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869f974: f80309ba777700017005
relocInfo@0x000000011869f97c [type=7(external_word) addr=0x00000001186a04f4 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869f97e: 640e
relocInfo@0x000000011869f97e [type=6(runtime_call) addr=0x00000001186a0502 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869f980: f00bcc1e
relocInfo@0x000000011869f982 [type=12(metadata) addr=0x00000001186a0520 offset=30 format=3 data=11] | [metadata_addr=0x00000001186a1960 *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011869f984: f00bcc47
relocInfo@0x000000011869f986 [type=12(metadata) addr=0x00000001186a0567 offset=71 format=3 data=11] | [metadata_addr=0x00000001186a1960 *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011869f988: 9539
relocInfo@0x000000011869f988 [type=9(section_word) addr=0x00000001186a06a0 offset=313 format=1] | [target=0x000000011869fba0]
         @0x000000011869f98a: a082
relocInfo@0x000000011869f98a [type=10(poll) addr=0x00000001186a0722 offset=130]
         @0x000000011869f98c: 940c
relocInfo@0x000000011869f98c [type=9(section_word) addr=0x00000001186a072e offset=12 format=1] | [target=0x000000011869fba0]
         @0x000000011869f98e: 9408
relocInfo@0x000000011869f98e [type=9(section_word) addr=0x00000001186a0736 offset=8 format=1] | [target=0x000000011869fba0]
         @0x000000011869f990: b129
relocInfo@0x000000011869f990 [type=11(poll_return) addr=0x00000001186a085f offset=297]
         @0x000000011869f992: a09e
relocInfo@0x000000011869f992 [type=10(poll) addr=0x00000001186a08fd offset=158]
         @0x000000011869f994: 649e
relocInfo@0x000000011869f994 [type=6(runtime_call) addr=0x00000001186a099b offset=158 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869f996: f80309ba777700017005
relocInfo@0x000000011869f99e [type=7(external_word) addr=0x00000001186a09a0 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869f9a0: 640e
relocInfo@0x000000011869f9a0 [type=6(runtime_call) addr=0x00000001186a09ae offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869f9a2: 6459
relocInfo@0x000000011869f9a2 [type=6(runtime_call) addr=0x00000001186a0a07 offset=89 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869f9a4: f80309ba777700017005
relocInfo@0x000000011869f9ac [type=7(external_word) addr=0x00000001186a0a0c offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869f9ae: 640e
relocInfo@0x000000011869f9ae [type=6(runtime_call) addr=0x00000001186a0a1a offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869f9b0: a293
relocInfo@0x000000011869f9b0 [type=10(poll) addr=0x00000001186a0cad offset=659]
         @0x000000011869f9b2: c0c4
relocInfo@0x000000011869f9b2 [type=12(metadata) addr=0x00000001186a0d71 offset=196] | [metadata_addr=0x00000001186a0d73 *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011869f9b4: 641e
relocInfo@0x000000011869f9b4 [type=6(runtime_call) addr=0x00000001186a0d8f offset=30 format=1] | [destination=0x0000000110b394a0]
         @0x000000011869f9b6: c065
relocInfo@0x000000011869f9b6 [type=12(metadata) addr=0x00000001186a0df4 offset=101] | [metadata_addr=0x00000001186a0df6 *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011869f9b8: 6413
relocInfo@0x000000011869f9b8 [type=6(runtime_call) addr=0x00000001186a0e07 offset=19 format=1] | [destination=0x0000000110b391a0]
         @0x000000011869f9ba: c077
relocInfo@0x000000011869f9ba [type=12(metadata) addr=0x00000001186a0e7e offset=119] | [metadata_addr=0x00000001186a0e80 *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011869f9bc: 6415
relocInfo@0x000000011869f9bc [type=6(runtime_call) addr=0x00000001186a0e93 offset=21 format=1] | [destination=0x0000000110b391a0]
         @0x000000011869f9be: c07f
relocInfo@0x000000011869f9be [type=12(metadata) addr=0x00000001186a0f12 offset=127] | [metadata_addr=0x00000001186a0f14 *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011869f9c0: 641d
relocInfo@0x000000011869f9c0 [type=6(runtime_call) addr=0x00000001186a0f2f offset=29 format=1] | [destination=0x0000000110b394a0]
         @0x000000011869f9c2: c08c
relocInfo@0x000000011869f9c2 [type=12(metadata) addr=0x00000001186a0fbb offset=140] | [metadata_addr=0x00000001186a0fbd *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011869f9c4: 6414
relocInfo@0x000000011869f9c4 [type=6(runtime_call) addr=0x00000001186a0fcf offset=20 format=1] | [destination=0x0000000110b391a0]
         @0x000000011869f9c6: c08d
relocInfo@0x000000011869f9c6 [type=12(metadata) addr=0x00000001186a105c offset=141] | [metadata_addr=0x00000001186a105e *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011869f9c8: 641b
relocInfo@0x000000011869f9c8 [type=6(runtime_call) addr=0x00000001186a1077 offset=27 format=1] | [destination=0x0000000110b394a0]
         @0x000000011869f9ca: c094
relocInfo@0x000000011869f9ca [type=12(metadata) addr=0x00000001186a110b offset=148] | [metadata_addr=0x00000001186a110d *=0x0000000225c40618 offset=0]metadata_value=0x0000000225c40618: {type array double}
         @0x000000011869f9cc: 6414
relocInfo@0x000000011869f9cc [type=6(runtime_call) addr=0x00000001186a111f offset=20 format=1] | [destination=0x0000000110b391a0]
         @0x000000011869f9ce: c07b
relocInfo@0x000000011869f9ce [type=12(metadata) addr=0x00000001186a119a offset=123] | [metadata_addr=0x00000001186a119c *=0x0000000225d520a0 offset=0]metadata_value=0x0000000225d520a0: 'jdk/incubator/vector/Double256Vector'
         @0x000000011869f9d0: 6425
relocInfo@0x000000011869f9d0 [type=6(runtime_call) addr=0x00000001186a11bf offset=37 format=1] | [destination=0x0000000110b394a0]
         @0x000000011869f9d2: 64a8
relocInfo@0x000000011869f9d2 [type=6(runtime_call) addr=0x00000001186a1267 offset=168 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869f9d4: f80309ba777700017005
relocInfo@0x000000011869f9dc [type=7(external_word) addr=0x00000001186a126c offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869f9de: 640e
relocInfo@0x000000011869f9de [type=6(runtime_call) addr=0x00000001186a127a offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869f9e0: 644d
relocInfo@0x000000011869f9e0 [type=6(runtime_call) addr=0x00000001186a12c7 offset=77 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869f9e2: f80309ba777700017005
relocInfo@0x000000011869f9ea [type=7(external_word) addr=0x00000001186a12cc offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869f9ec: 640e
relocInfo@0x000000011869f9ec [type=6(runtime_call) addr=0x00000001186a12da offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869f9ee: 644d
relocInfo@0x000000011869f9ee [type=6(runtime_call) addr=0x00000001186a1327 offset=77 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869f9f0: f80309ba777700017005
relocInfo@0x000000011869f9f8 [type=7(external_word) addr=0x00000001186a132c offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869f9fa: 640e
relocInfo@0x000000011869f9fa [type=6(runtime_call) addr=0x00000001186a133a offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869f9fc: 644d
relocInfo@0x000000011869f9fc [type=6(runtime_call) addr=0x00000001186a1387 offset=77 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869f9fe: f80309ba777700017005
relocInfo@0x000000011869fa06 [type=7(external_word) addr=0x00000001186a138c offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869fa08: 640e
relocInfo@0x000000011869fa08 [type=6(runtime_call) addr=0x00000001186a139a offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869fa0a: 6469
relocInfo@0x000000011869fa0a [type=6(runtime_call) addr=0x00000001186a1403 offset=105 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869fa0c: f80309ba777700017005
relocInfo@0x000000011869fa14 [type=7(external_word) addr=0x00000001186a1408 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869fa16: 640e
relocInfo@0x000000011869fa16 [type=6(runtime_call) addr=0x00000001186a1416 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869fa18: 6451
relocInfo@0x000000011869fa18 [type=6(runtime_call) addr=0x00000001186a1467 offset=81 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869fa1a: f80309ba777700017005
relocInfo@0x000000011869fa22 [type=7(external_word) addr=0x00000001186a146c offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869fa24: 640e
relocInfo@0x000000011869fa24 [type=6(runtime_call) addr=0x00000001186a147a offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869fa26: 6441
relocInfo@0x000000011869fa26 [type=6(runtime_call) addr=0x00000001186a14bb offset=65 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869fa28: f80309ba777700017005
relocInfo@0x000000011869fa30 [type=7(external_word) addr=0x00000001186a14c0 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869fa32: 640e
relocInfo@0x000000011869fa32 [type=6(runtime_call) addr=0x00000001186a14ce offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869fa34: 940d
relocInfo@0x000000011869fa34 [type=9(section_word) addr=0x00000001186a14db offset=13 format=1] | [target=0x000000011869fba0]
         @0x000000011869fa36: 645c
relocInfo@0x000000011869fa36 [type=6(runtime_call) addr=0x00000001186a1537 offset=92 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869fa38: f80309ba777700017005
relocInfo@0x000000011869fa40 [type=7(external_word) addr=0x00000001186a153c offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869fa42: 640e
relocInfo@0x000000011869fa42 [type=6(runtime_call) addr=0x00000001186a154a offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869fa44: 6441
relocInfo@0x000000011869fa44 [type=6(runtime_call) addr=0x00000001186a158b offset=65 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869fa46: f80309ba777700017005
relocInfo@0x000000011869fa4e [type=7(external_word) addr=0x00000001186a1590 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869fa50: 640e
relocInfo@0x000000011869fa50 [type=6(runtime_call) addr=0x00000001186a159e offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869fa52: f80309c2253100017006
relocInfo@0x000000011869fa5a [type=7(external_word) addr=0x00000001186a15a4 offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x000000011869fa5c: 640e
relocInfo@0x000000011869fa5c [type=6(runtime_call) addr=0x00000001186a15b2 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869fa5e: f80309c2253100017006
relocInfo@0x000000011869fa66 [type=7(external_word) addr=0x00000001186a15b8 offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x000000011869fa68: 640e
relocInfo@0x000000011869fa68 [type=6(runtime_call) addr=0x00000001186a15c6 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869fa6a: f80309c2253100017006
relocInfo@0x000000011869fa72 [type=7(external_word) addr=0x00000001186a15cc offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x000000011869fa74: 640e
relocInfo@0x000000011869fa74 [type=6(runtime_call) addr=0x00000001186a15da offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869fa76: f80309c2253100017006
relocInfo@0x000000011869fa7e [type=7(external_word) addr=0x00000001186a15e0 offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x000000011869fa80: 640e
relocInfo@0x000000011869fa80 [type=6(runtime_call) addr=0x00000001186a15ee offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869fa82: f80309c2253100017006
relocInfo@0x000000011869fa8a [type=7(external_word) addr=0x00000001186a15f4 offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x000000011869fa8c: 640e
relocInfo@0x000000011869fa8c [type=6(runtime_call) addr=0x00000001186a1602 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869fa8e: f80309c2253100017006
relocInfo@0x000000011869fa96 [type=7(external_word) addr=0x00000001186a1608 offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x000000011869fa98: 640e
relocInfo@0x000000011869fa98 [type=6(runtime_call) addr=0x00000001186a1616 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869fa9a: f80309c2253100017006
relocInfo@0x000000011869faa2 [type=7(external_word) addr=0x00000001186a161c offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x000000011869faa4: 640e
relocInfo@0x000000011869faa4 [type=6(runtime_call) addr=0x00000001186a162a offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869faa6: f80309c2253100017006
relocInfo@0x000000011869faae [type=7(external_word) addr=0x00000001186a1630 offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x000000011869fab0: 640e
relocInfo@0x000000011869fab0 [type=6(runtime_call) addr=0x00000001186a163e offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869fab2: 643d
relocInfo@0x000000011869fab2 [type=6(runtime_call) addr=0x00000001186a167b offset=61 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869fab4: f80309ba777700017005
relocInfo@0x000000011869fabc [type=7(external_word) addr=0x00000001186a1680 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869fabe: 640e
relocInfo@0x000000011869fabe [type=6(runtime_call) addr=0x00000001186a168e offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869fac0: f80309c2253100017006
relocInfo@0x000000011869fac8 [type=7(external_word) addr=0x00000001186a1694 offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x000000011869faca: 640e
relocInfo@0x000000011869faca [type=6(runtime_call) addr=0x00000001186a16a2 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869facc: f80309c2253100017006
relocInfo@0x000000011869fad4 [type=7(external_word) addr=0x00000001186a16a8 offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x000000011869fad6: 640e
relocInfo@0x000000011869fad6 [type=6(runtime_call) addr=0x00000001186a16b6 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869fad8: f80309c2253100017006
relocInfo@0x000000011869fae0 [type=7(external_word) addr=0x00000001186a16bc offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x000000011869fae2: 640e
relocInfo@0x000000011869fae2 [type=6(runtime_call) addr=0x00000001186a16ca offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869fae4: f80309c2253100017006
relocInfo@0x000000011869faec [type=7(external_word) addr=0x00000001186a16d0 offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x000000011869faee: 640e
relocInfo@0x000000011869faee [type=6(runtime_call) addr=0x00000001186a16de offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869faf0: f80309c2253100017006
relocInfo@0x000000011869faf8 [type=7(external_word) addr=0x00000001186a16e4 offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x000000011869fafa: 640e
relocInfo@0x000000011869fafa [type=6(runtime_call) addr=0x00000001186a16f2 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869fafc: f80309c2253100017006
relocInfo@0x000000011869fb04 [type=7(external_word) addr=0x00000001186a16f8 offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x000000011869fb06: 640e
relocInfo@0x000000011869fb06 [type=6(runtime_call) addr=0x00000001186a1706 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869fb08: f80309c2253100017006
relocInfo@0x000000011869fb10 [type=7(external_word) addr=0x00000001186a170c offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x000000011869fb12: 640e
relocInfo@0x000000011869fb12 [type=6(runtime_call) addr=0x00000001186a171a offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869fb14: f80309c2253100017006
relocInfo@0x000000011869fb1c [type=7(external_word) addr=0x00000001186a1720 offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x000000011869fb1e: 640e
relocInfo@0x000000011869fb1e [type=6(runtime_call) addr=0x00000001186a172e offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869fb20: 6411
relocInfo@0x000000011869fb20 [type=6(runtime_call) addr=0x00000001186a173f offset=17 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869fb22: f80309ba777700017005
relocInfo@0x000000011869fb2a [type=7(external_word) addr=0x00000001186a1744 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869fb2c: 640e
relocInfo@0x000000011869fb2c [type=6(runtime_call) addr=0x00000001186a1752 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869fb2e: 6411
relocInfo@0x000000011869fb2e [type=6(runtime_call) addr=0x00000001186a1763 offset=17 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869fb30: f80309ba777700017005
relocInfo@0x000000011869fb38 [type=7(external_word) addr=0x00000001186a1768 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869fb3a: 640e
relocInfo@0x000000011869fb3a [type=6(runtime_call) addr=0x00000001186a1776 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869fb3c: 6415
relocInfo@0x000000011869fb3c [type=6(runtime_call) addr=0x00000001186a178b offset=21 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869fb3e: f80309ba777700017005
relocInfo@0x000000011869fb46 [type=7(external_word) addr=0x00000001186a1790 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869fb48: 640e
relocInfo@0x000000011869fb48 [type=6(runtime_call) addr=0x00000001186a179e offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869fb4a: 6411
relocInfo@0x000000011869fb4a [type=6(runtime_call) addr=0x00000001186a17af offset=17 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869fb4c: f80309ba777700017005
relocInfo@0x000000011869fb54 [type=7(external_word) addr=0x00000001186a17b4 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869fb56: 640e
relocInfo@0x000000011869fb56 [type=6(runtime_call) addr=0x00000001186a17c2 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869fb58: 6415
relocInfo@0x000000011869fb58 [type=6(runtime_call) addr=0x00000001186a17d7 offset=21 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869fb5a: f80309ba777700017005
relocInfo@0x000000011869fb62 [type=7(external_word) addr=0x00000001186a17dc offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869fb64: 640e
relocInfo@0x000000011869fb64 [type=6(runtime_call) addr=0x00000001186a17ea offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869fb66: 6411
relocInfo@0x000000011869fb66 [type=6(runtime_call) addr=0x00000001186a17fb offset=17 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869fb68: f80309ba777700017005
relocInfo@0x000000011869fb70 [type=7(external_word) addr=0x00000001186a1800 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869fb72: 640e
relocInfo@0x000000011869fb72 [type=6(runtime_call) addr=0x00000001186a180e offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869fb74: 6411
relocInfo@0x000000011869fb74 [type=6(runtime_call) addr=0x00000001186a181f offset=17 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869fb76: f80309ba777700017005
relocInfo@0x000000011869fb7e [type=7(external_word) addr=0x00000001186a1824 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869fb80: 640e
relocInfo@0x000000011869fb80 [type=6(runtime_call) addr=0x00000001186a1832 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869fb82: 6415
relocInfo@0x000000011869fb82 [type=6(runtime_call) addr=0x00000001186a1847 offset=21 format=1] | [destination=0x0000000110bfa540]
         @0x000000011869fb84: f80309ba777700017005
relocInfo@0x000000011869fb8c [type=7(external_word) addr=0x00000001186a184c offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x000000011869fb8e: 640e
relocInfo@0x000000011869fb8e [type=6(runtime_call) addr=0x00000001186a185a offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x000000011869fb90: 6439
relocInfo@0x000000011869fb90 [type=6(runtime_call) addr=0x00000001186a1893 offset=57 format=1] | [destination=0x0000000110b38ea0]
         @0x000000011869fb92: f80110398005
relocInfo@0x000000011869fb96 [type=8(internal_word) addr=0x00000001186a1898 offset=5 data=4153] | [target=0x00000001186a085f]
         @0x000000011869fb98: 6411
relocInfo@0x000000011869fb98 [type=6(runtime_call) addr=0x00000001186a18a9 offset=17 format=1] | [destination=0x0000000110bfb220]
         @0x000000011869fb9a: 0017
relocInfo@0x000000011869fb9a [type=0(none) addr=0x00000001186a18c0 offset=23]
         @0x000000011869fb9c: 6400
relocInfo@0x000000011869fb9c [type=6(runtime_call) addr=0x00000001186a18c0 offset=0 format=1] | [destination=0x0000000110b45120]
         @0x000000011869fb9e: 640f
relocInfo@0x000000011869fb9e [type=6(runtime_call) addr=0x00000001186a18cf offset=15 format=1] | [destination=0x0000000110bfa860]
         @0x000000011869fba0: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type leaf_type
  context = org.jml.regression.linear.DoubleVectorLinearRegression
   [nmethod<=klass]org.jml.regression.linear.DoubleVectorLinearRegression
Dependency of type unique_concrete_method
  context = jdk.incubator.vector.DoubleVector$DoubleSpecies
  method  = {method} {0x0000000267b3ef30} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
   [nmethod<=klass]jdk.incubator.vector.DoubleVector$DoubleSpecies
Dependency of type unique_concrete_method
  context = jdk.incubator.vector.VectorOperators$ImplCache
  method  = {method} {0x0000000267b33200} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$ImplCache
Dependency of type unique_concrete_method
  context = jdk.incubator.vector.VectorOperators$BinaryImpl
  method  = {method} {0x0000000267a862a0} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$BinaryImpl
Dependency of type unique_concrete_method
  context = jdk.incubator.vector.VectorOperators$BinaryImpl
  method  = {method} {0x0000000267a85e38} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$BinaryImpl
Dependency of type unique_concrete_method
  context = jdk.incubator.vector.VectorOperators$BinaryImpl
  method  = {method} {0x0000000267a85f10} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$BinaryImpl
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 288 bytes)
catch_pco = 1956 (1 entries)
  bci -1 at scope depth 0 -> pco 7365
catch_pco = 2016 (1 entries)
  bci -1 at scope depth 0 -> pco 7358
catch_pco = 2076 (1 entries)
  bci -1 at scope depth 0 -> pco 7356
catch_pco = 2148 (1 entries)
  bci -1 at scope depth 0 -> pco 7363
catch_pco = 4564 (1 entries)
  bci -1 at scope depth 0 -> pco 7354
catch_pco = 4684 (1 entries)
  bci -1 at scope depth 0 -> pco 7352
catch_pco = 4824 (1 entries)
  bci -1 at scope depth 0 -> pco 7345
catch_pco = 4980 (1 entries)
  bci -1 at scope depth 0 -> pco 7350
catch_pco = 5140 (1 entries)
  bci -1 at scope depth 0 -> pco 7338
catch_pco = 5308 (1 entries)
  bci -1 at scope depth 0 -> pco 7343
catch_pco = 5476 (1 entries)
  bci -1 at scope depth 0 -> pco 7328
catch_pco = 5636 (1 entries)
  bci -1 at scope depth 0 -> pco 7333
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 10 entries, 84 bytes):
{
   < 0x000000011869fd2a, 0x00000001186a1758 > < 0x000000011869fd4d, 0x00000001186a177c > < 0x000000011869fe20, 0x00000001186a17a4 > 
   < 0x000000011869fe40, 0x00000001186a17c8 > < 0x00000001186a052c, 0x00000001186a17f0 > < 0x00000001186a0573, 0x00000001186a1814 > 
   < 0x00000001186a05d1, 0x00000001186a1550 > < 0x00000001186a06c0, 0x00000001186a14db > < 0x00000001186a0760, 0x00000001186a1644 > 
   < 0x00000001186a0840, 0x00000001186a1838 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 NULL-oop
#1: 0x000000014e800fe8 a 'java/lang/Class'{0x000000014e800fe8} = 'jdk/incubator/vector/Double256Vector'
#2: 0x000000011ff8c550 a 'java/lang/Class'{0x000000011ff8c550} = double
#3: 0x000000014e8010d0 a 'jdk/incubator/vector/DoubleVector$$Lambda$97+0x0000000225d5e5e8'{0x000000014e8010d0}
#4: 0x000000014e8010e0 a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000014e8010e0}
#5: 0x000000014e801150 a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x000000014e801150}
#6: 0x000000011ff58b48 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011ff58b48}
#7: 0x00000001200a7938 a 'java/lang/Class'{0x00000001200a7938} = 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 NULL-oop
# 1: 0x000000026788fe18 {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
# 2: 0x0000000267b6f330 {method} {0x0000000267b6f330} 'reduceLanes' '(Ljdk/incubator/vector/VectorOperators$Associative;)D' in 'jdk/incubator/vector/Double256Vector'
# 3: 0x0000000267b1d348 {method} {0x0000000267b1d348} 'reduceLanesTemplate' '(Ljdk/incubator/vector/VectorOperators$Associative;)D' in 'jdk/incubator/vector/DoubleVector'
# 4: 0x0000000225d0e900 'org/jml/regression/linear/DoubleVectorLinearRegression'
# 5: 0x0000000225c40618 {type array double}
# 6: 0x0000000267b1ded0 {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
# 7: 0x0000000267b710c0 {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
# 8: 0x0000000267b1f228 {method} {0x0000000267b1f228} 'fromArray0Template' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
# 9: 0x000000011040aa78 {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
#10: 0x0000000267b39e30 {method} {0x0000000267b39e30} 'dummyVector' '()Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
#11: 0x0000000225d520a0 'jdk/incubator/vector/Double256Vector'
#12: 0x0000000267b18ef0 {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
#13: 0x0000000267b72458 {method} {0x0000000267b72458} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
#14: 0x0000000267b6f070 {method} {0x0000000267b6f070} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/Double256Vector;' in 'jdk/incubator/vector/Double256Vector'
#15: 0x0000000267b17fb0 {method} {0x0000000267b17fb0} 'lanewiseTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
#16: 0x0000000267b2a790 {method} {0x0000000267b2a790} 'check' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
#17: 0x0000000267b40508 {method} {0x0000000267b40508} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
#18: 0x0000000267b153c0 {method} {0x0000000267b153c0} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;)I' in 'jdk/incubator/vector/DoubleVector'
#19: 0x0000000267b36008 {method} {0x0000000267b36008} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;II)I' in 'jdk/incubator/vector/VectorOperators'
#20: 0x0000000267a85e38 {method} {0x0000000267a85e38} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#21: 0x0000000267b2a8b0 {method} {0x0000000267b2a8b0} 'sameSpecies' '(Ljdk/incubator/vector/Vector;)Z' in 'jdk/incubator/vector/AbstractVector'
#22: 0x0000000267b19378 {method} {0x0000000267b19378} 'sub' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
#23: 0x0000000267b96280 {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
#24: 0x000000011015f0e0 {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
#25: 0x0000000267b15588 {method} {0x0000000267b15588} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/DoubleVector'
#26: 0x0000000267b1fe80 {method} {0x0000000267b1fe80} 'arrayAddress' '([DI)J' in 'jdk/incubator/vector/DoubleVector'
#27: 0x0000000267b360e8 {method} {0x0000000267b360e8} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/VectorOperators'
#28: 0x0000000267b181a0 {method} {0x0000000267b181a0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
#29: 0x0000000267b726c8 {method} {0x0000000267b726c8} 'broadcast' '(D)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
#30: 0x0000000267a862a0 {method} {0x0000000267a862a0} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#31: 0x0000000225d4eb10 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
#32: 0x0000000267b3ef30 {method} {0x0000000267b3ef30} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
#33: 0x0000000267b33200 {method} {0x0000000267b33200} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
#34: 0x0000000225d5a3b0 'jdk/incubator/vector/VectorOperators$BinaryImpl'
#35: 0x0000000267a85f10 {method} {0x0000000267a85f10} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
69.353 ms/op
# Warmup Iteration   5: 
============================= C2-compiled nmethod ==============================
----------------------- MetaData before Compile_id = 1188 ------------------------
{method}
 - this oop:          0x000000026788fe18
 - method holder:     'org/jml/regression/linear/DoubleVectorLinearRegression'
 - constants:         0x000000026788f558 constant pool [135]/operands[5] {0x000000026788f558} for 'org/jml/regression/linear/DoubleVectorLinearRegression' cache=0x0000000267a042d0
 - access:            0xc1000001  public 
 - name:              'fit'
 - signature:         '([D[D)V'
 - max stack:         9
 - max locals:        23
 - size of params:    3
 - method size:       13
 - vtable index:      5
 - i2i entry:         0x0000000110af1e20
 - adapters:          AHE@0x00007f846603a870: 0xbbb00000 i2c: 0x0000000110b69ee0 c2i: 0x0000000110b69fbf c2iUV: 0x0000000110b69f92 c2iNCI: 0x0000000110b69ffc
 - compiled entry     0x0000000110b69fbf
 - code size:         378
 - code start:        0x000000026788fba8
 - code end (excl):   0x000000026788fd22
 - method data:       0x0000000267a04640
 - checked ex length: 0
 - linenumber start:  0x000000026788fd22
 - localvar length:   16
 - localvar start:    0x000000026788fd56

------------------------ OptoAssembly for Compile_id = 1188 -----------------------
#
#  void ( org/jml/regression/linear/DoubleVectorLinearRegression:NotNull *, double[int:>=0]:exact *, double[int:>=0]:exact * )
#
#r018 rsi:rsi   : parm 0: org/jml/regression/linear/DoubleVectorLinearRegression:NotNull *
#r016 rdx:rdx   : parm 1: double[int:>=0]:exact *
#r010 rcx:rcx   : parm 2: double[int:>=0]:exact *
# -- Old rsp -- Framesize: 256 --
#r583 rsp+252: in_preserve
#r582 rsp+248: return address
#r581 rsp+244: in_preserve
#r580 rsp+240: saved fp register
#r579 rsp+236: pad2, stack alignment
#r578 rsp+232: pad2, stack alignment
#r577 rsp+228: Fixed slot 1
#r576 rsp+224: Fixed slot 0
#r639 rsp+220: spill
#r638 rsp+216: spill
#r637 rsp+212: spill
#r636 rsp+208: spill
#r635 rsp+204: spill
#r634 rsp+200: spill
#r633 rsp+196: spill
#r632 rsp+192: spill
#r631 rsp+188: spill
#r630 rsp+184: spill
#r629 rsp+180: spill
#r628 rsp+176: spill
#r627 rsp+172: spill
#r626 rsp+168: spill
#r625 rsp+164: spill
#r624 rsp+160: spill
#r623 rsp+156: spill
#r622 rsp+152: spill
#r621 rsp+148: spill
#r620 rsp+144: spill
#r619 rsp+140: spill
#r618 rsp+136: spill
#r617 rsp+132: spill
#r616 rsp+128: spill
#r615 rsp+124: spill
#r614 rsp+120: spill
#r613 rsp+116: spill
#r612 rsp+112: spill
#r611 rsp+108: spill
#r610 rsp+104: spill
#r609 rsp+100: spill
#r608 rsp+96: spill
#r607 rsp+92: spill
#r606 rsp+88: spill
#r605 rsp+84: spill
#r604 rsp+80: spill
#r603 rsp+76: spill
#r602 rsp+72: spill
#r601 rsp+68: spill
#r600 rsp+64: spill
#r599 rsp+60: spill
#r598 rsp+56: spill
#r597 rsp+52: spill
#r596 rsp+48: spill
#r595 rsp+44: spill
#r594 rsp+40: spill
#r593 rsp+36: spill
#r592 rsp+32: spill
#r591 rsp+28: spill
#r590 rsp+24: spill
#r589 rsp+20: spill
#r588 rsp+16: spill
#r587 rsp+12: spill
#r586 rsp+ 8: spill
#r585 rsp+ 4: spill
#r584 rsp+ 0: spill
#
000     N1184: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     movl    rscratch1, [j_rarg0 + oopDesc::klass_offset_in_bytes()]	# compressed klass
	decode_klass_not_null rscratch1, rscratch1
	cmpq    rax, rscratch1	 # Inline cache check
	jne     SharedRuntime::_ic_miss_stub
	nop	# nops to align entry point

        nop 	# 12 bytes pad for loops and calls

020     B1: #	out( B105 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
020     # stack bang (648 bytes)
	pushq   rbp	# Save rbp
	subq    rsp, #240	# Create frame

02f     movq    [rsp + #8], RSI	# spill
034     movl    R10, [RDX + #12 (8-bit)]	# range
038     NullCheck RDX

038     B2: #	out( B106 B3 ) <- in( B1 )  Freq: 0.999999
        nop 	# 8 bytes pad for loops and calls
040     movl    R11, [RCX + #12 (8-bit)]	# range
044     NullCheck RCX

044     B3: #	out( B82 B4 ) <- in( B2 )  Freq: 0.999998
044     cmpl    R10, R11
047     jne     B82  P=0.000001 C=-1.000000

04d     B4: #	out( B83 B5 ) <- in( B3 )  Freq: 0.999997
04d     movl    RBX, R11	# spill
050     addl    RBX, #-3	# int
053     movl    R9, R10	# spill
056     andl    R9, #-4	# int
05a     movl    RDI, R10	# spill
05d     addl    RDI, #-3	# int
060     cvtsi2sdl XMM0, R9	# i2d
065     replicateD XMM8,#0.000000
06a     xorl    RAX, RAX	# int
06c     # TLS is in R15
06c     # MachConstantBaseNode (empty encoding)
06c     ucomisd XMM0, [constant table base + #0]	# load from constant table: double=#0.000000
	movl    RBP, #-1
	jp,s    done
	jb,s    done
	setne   RBP
	movzbl  RBP, RBP
done:
08d     negl    RBP	# int
08f     ucomisd XMM0, [constant table base + #0]	# load from constant table: double=#0.000000
097     jbe,u   B83  P=0.000001 C=4871584.000000

09d     B5: #	out( B84 B6 ) <- in( B4 )  Freq: 0.999996
        nop 	# 3 bytes pad for loops and calls
0a0     testl   RDI, RDI
0a2     jl     B84  P=0.000001 C=-1.000000

0a8     B6: #	out( B84 B7 ) <- in( B5 )  Freq: 0.999995
0a8     testl   RBX, RBX
0aa     jl     B84  P=0.000001 C=-1.000000

0b0     B7: #	out( B8 ) <- in( B6 )  Freq: 0.999994
0b0     vmovdqu XMM2,XMM8	# spill
0b5     vmovdqu XMM1,XMM8	# spill
0ba     xorl    R12, R12	# int
        nop 	# 3 bytes pad for loops and calls

0c0     B8: #	out( B63 B9 ) <- in( B7 B10 ) Loop( B8-B10 inner ) Freq: 330407
0c0     cmpl    R12, RDI	# unsigned
0c3     jnb,u   B63  P=0.000001 C=-1.000000

0c9     B9: #	out( B64 B10 ) <- in( B8 )  Freq: 330406
0c9     # castII of R12
0c9     vaddpd  XMM2,XMM2,[RDX + #16 + R12 << #3]	! add packedD
0d0     cmpl    R12, RBX	# unsigned
0d3     jnb,u   B64  P=0.000001 C=-1.000000

0d9     B10: #	out( B8 B11 ) <- in( B9 )  Freq: 330406
0d9     vaddpd  XMM1,XMM1,[RCX + #16 + R12 << #3]	! add packedD
0e0     movq    R8, [R15 + #304 (32-bit)]	# ptr
0e7     addl    R12, #4	# int
0eb     testl   rax, [R8]	# Safepoint: poll for GC        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:103 (line 24) L[0]=rsp + #8 L[1]=RDX L[2]=RCX L[3]=#0.000000D L[4]=_ L[5]=#0.000000D L[6]=_ L[7]=R12 L[8]=XMM0 L[9]=_ L[10]=#ScObj0 L[11]=#ScObj1 L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=XMM2 }
        # ScObj1 jdk/incubator/vector/Double256Vector={ [payload :0]=XMM1 }
        # OopMap {rcx=Oop rdx=Oop [8]=Oop off=235/0xeb}
0ee     cvtsi2sdl XMM3, R12	# i2d
0f3     ucomisd XMM0, XMM3 test
0f7     jnbe,us  B8  P=0.999999 C=4871582.000000

0f9     B11: #	out( B12 ) <- in( B10 )  Freq: 0.330406
0f9     vmovdqu XMM6,XMM1	# spill
0fd     vmovdqu XMM5,XMM2	# spill

101     B12: #	out( B37 B13 ) <- in( B11 B83 )  Freq: 0.330407
101     movl    R9, R10	# spill
104     decl    R9	# int
107     xorpd   XMM1, XMM1	# double 0.0
10b     movl    R8, #-2147483648	# int
111     xorpd   XMM2, XMM2	# double 0.0
115     vector_reduction_double XMM2,XMM6 ; using XMM3, XMM4 as TEMP
135     vaddsd  XMM3, XMM2, [constant table base + #0]	# load from constant table: double=#0.000000
13d     vector_reduction_double XMM1,XMM5 ; using XMM4, XMM2 as TEMP
15d     vaddsd  XMM4, XMM1, [constant table base + #0]	# load from constant table: double=#0.000000
165     cmpl    R12, R10
168     jge     B37  P=0.500000 C=-1.000000

16e     B13: #	out( B87 B14 ) <- in( B12 )  Freq: 0.165203
16e     cmpl    R12, R10	# unsigned
171     jnb,u   B87  P=0.000001 C=-1.000000

177     B14: #	out( B87 B15 ) <- in( B13 )  Freq: 0.165203
177     cmpl    R9, R10	# unsigned
        nop 	# 6 bytes pad for loops and calls
180     jnb,u   B87  P=0.000001 C=-1.000000

186     B15: #	out( B87 B16 ) <- in( B14 )  Freq: 0.165203
186     cmpl    R12, R11	# unsigned
189     jnb,u   B87  P=0.000001 C=-1.000000

18f     B16: #	out( B87 B17 ) <- in( B15 )  Freq: 0.165203
18f     cmpl    R9, R11	# unsigned
192     jnb,u   B87  P=0.000001 C=-1.000000

198     B17: #	out( B18 ) <- in( B16 )  Freq: 0.165203
198     movl    R13, R12	# spill
19b     incl    R13	# int
19e     movapd  XMM1, XMM3	# spill
1a2     movapd  XMM7, XMM4	# spill
        nop 	# 2 bytes pad for loops and calls

1a8     B18: #	out( B18 B19 ) <- in( B17 B18 ) Loop( B18-B18 inner pre of N496) Freq: 1.65203
1a8     vaddsd  XMM7, XMM7, [RDX + #16 + R12 << #3]
1af     vaddsd  XMM1, XMM1, [RCX + #16 + R12 << #3]
1b6     incl    R12	# int
1b9     cmpl    R12, R13
1bc     jl,s   B18	# loop end  P=0.900000 C=-1.000000

1be     B19: #	out( B33 B20 ) <- in( B18 )  Freq: 0.165203
1be     movl    RSI, R10	# spill
1c1     addl    RSI, #-7	# int
1c4     cmpl    R9, RSI
1c7     cmovll RSI, R8	# signed, int
1cb     cmpl    R12, RSI
1ce     jge     B33  P=0.000001 C=-1.000000

1d4     B20: #	out( B88 B21 ) <- in( B19 )  Freq: 0.165203
1d4     # castII of R12
1d4     cmpl    R12, R11	# unsigned
1d7     jnb,u   B88  P=0.000001 C=-1.000000

1dd     B21: #	out( B89 B22 ) <- in( B20 )  Freq: 0.165202
        nop 	# 3 bytes pad for loops and calls
1e0     cmpl    R12, R11	# unsigned
1e3     jnb,u   B89  P=0.000001 C=-1.000000

1e9     B22: #	out( B90 B23 ) <- in( B21 )  Freq: 0.165202
1e9     cmpl    R12, R10	# unsigned
1ec     jnb,u   B90  P=0.000001 C=-1.000000

1f2     B23: #	out( B91 B24 ) <- in( B22 )  Freq: 0.165202
1f2     cmpl    R12, R10	# unsigned
1f5     jnb,u   B91  P=0.000001 C=-1.000000

1fb     B24: #	out( B92 B25 ) <- in( B23 )  Freq: 0.165202
        nop 	# 5 bytes pad for loops and calls
200     cmpl    R12, R10	# unsigned
203     jnb,u   B92  P=0.000001 C=-1.000000

209     B25: #	out( B93 B26 ) <- in( B24 )  Freq: 0.165202
209     movl    [rsp + #0], R10	# spill
20d     movl    R10, R12	# spill
210     addl    R10, #7	# int
214     cmpl    R10, [RSP + #0 (32-bit)]	# unsigned
218     jnb,u   B93  P=0.000001 C=-1.000000

21e     B26: #	out( B94 B27 ) <- in( B25 )  Freq: 0.165202
        nop 	# 2 bytes pad for loops and calls
220     cmpl    R12, R11	# unsigned
223     jnb,u   B94  P=0.000001 C=-1.000000

229     B27: #	out( B95 B28 ) <- in( B26 )  Freq: 0.165201
229     cmpl    R10, R11	# unsigned
22c     jnb,u   B95  P=0.000001 C=-1.000000

232     B28: #	out( B29 ) <- in( B27 )  Freq: 0.165201
232     movl    R10, #8000	# int

238     B29: #	out( B30 ) <- in( B28 B31 ) Loop( B29-B31 ) Freq: 1.65201
238     movl    R13, RSI	# spill
23b     subl    R13, R12	# int
23e     cmpl    RSI, R12
241     cmovll R13, RAX	# signed, int
245     cmpl    R13, #8000	# unsigned
24c     cmovlnbe R13, R10	# unsigned, int
250     addl    R13, R12	# int
        nop 	# 13 bytes pad for loops and calls

260     B30: #	out( B30 B31 ) <- in( B29 B30 ) Loop( B30-B30 inner main of N244 strip mined) Freq: 16.5201
260     vaddsd  XMM1, XMM1, [RCX + #16 + R12 << #3]
267     vaddsd  XMM2, XMM7, [RDX + #16 + R12 << #3]
26e     movslq  R14, R12	# i2l
271     vaddsd  XMM2, XMM2, [RDX + #24 + R14 << #3]
278     vaddsd  XMM1, XMM1, [RCX + #24 + R14 << #3]
27f     vaddsd  XMM2, XMM2, [RDX + #32 + R14 << #3]
286     vaddsd  XMM1, XMM1, [RCX + #32 + R14 << #3]
28d     vaddsd  XMM2, XMM2, [RDX + #40 + R14 << #3]
294     vaddsd  XMM1, XMM1, [RCX + #40 + R14 << #3]
29b     vaddsd  XMM2, XMM2, [RDX + #48 + R14 << #3]
2a2     vaddsd  XMM1, XMM1, [RCX + #48 + R14 << #3]
2a9     vaddsd  XMM2, XMM2, [RDX + #56 + R14 << #3]
2b0     vaddsd  XMM1, XMM1, [RCX + #56 + R14 << #3]
2b7     vaddsd  XMM2, XMM2, [RDX + #64 + R14 << #3]
2be     vaddsd  XMM1, XMM1, [RCX + #64 + R14 << #3]
2c5     vaddsd  XMM7, XMM2, [RDX + #72 + R14 << #3]
2cc     vaddsd  XMM1, XMM1, [RCX + #72 + R14 << #3]
2d3     addl    R12, #8	# int
2d7     cmpl    R12, R13
        nop 	# 6 bytes pad for loops and calls
2e0     jl     B30	# loop end  P=0.900000 C=-1.000000

2e6     B31: #	out( B29 B32 ) <- in( B30 )  Freq: 1.65201
2e6     movq    R13, [R15 + #304 (32-bit)]	# ptr
2ed     testl   rax, [R13]	# Safepoint: poll for GC        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:156 (line 32) L[0]=rsp + #8 L[1]=RDX L[2]=RCX L[3]=XMM7 L[4]=_ L[5]=XMM1 L[6]=_ L[7]=R12 L[8]=XMM0 L[9]=_ L[10]=#ScObj0 L[11]=#ScObj1 L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=XMM5 }
        # ScObj1 jdk/incubator/vector/Double256Vector={ [payload :0]=XMM6 }
        # OopMap {rcx=Oop rdx=Oop [8]=Oop off=749/0x2ed}
2f1     cmpl    R12, RSI
2f4     jl     B29  P=0.900000 C=-1.000000

2fa     B32: #	out( B33 ) <- in( B31 )  Freq: 0.165201
2fa     movl    R10, [rsp + #0]	# spill

2fe     B33: #	out( B38 B34 ) <- in( B19 B32 )  Freq: 0.165201
        nop 	# 2 bytes pad for loops and calls
300     cmpl    R12, R10
303     jge,s   B38  P=0.500000 C=-1.000000

305     B34: #	out( B35 ) <- in( B33 )  Freq: 0.0826007
305     # castII of R12
        nop 	# 3 bytes pad for loops and calls

308     B35: #	out( B35 B36 ) <- in( B34 B35 ) Loop( B35-B35 inner post of N496) Freq: 0.826007
308     vaddsd  XMM7, XMM7, [RDX + #16 + R12 << #3]
30f     vaddsd  XMM1, XMM1, [RCX + #16 + R12 << #3]
316     incl    R12	# int
319     cmpl    R12, R10
31c     jl,s   B35	# loop end  P=0.900000 C=-1.000000

31e     B36: #	out( B38 ) <- in( B35 )  Freq: 0.0826007
        nop 	# 2 bytes pad for loops and calls
320     jmp,s   B38

322     B37: #	out( B38 ) <- in( B12 )  Freq: 0.165203
322     movapd  XMM1, XMM3	# spill
326     movapd  XMM7, XMM4	# spill

32a     B38: #	out( B85 B39 ) <- in( B36 B33 B37 )  Freq: 0.330405
32a     cvtsi2sdl XMM2, R10	# i2d
32f     vdivsd  XMM7, XMM7, XMM2
333     vdivsd  XMM2, XMM1, XMM2
337     replicateD XMM9,XMM7
33c     replicateD XMM10,XMM2
341     ucomisd XMM0, [constant table base + #0]	# load from constant table: double=#0.000000
349     jbe,u   B85  P=0.000001 C=1030751.000000

34f     B39: #	out( B86 B40 ) <- in( B38 )  Freq: 0.330405
34f     testl   RDI, RDI
351     jl     B86  P=0.000001 C=-1.000000

357     B40: #	out( B86 B41 ) <- in( B39 )  Freq: 0.330404
357     testl   RBX, RBX
359     jl     B86  P=0.000001 C=-1.000000

35f     B41: #	out( B42 ) <- in( B40 )  Freq: 0.330404
35f     vmovdqu XMM11,XMM8	# spill
364     xorl    R12, R12	# int
        nop 	# 9 bytes pad for loops and calls

370     B42: #	out( B65 B43 ) <- in( B41 B44 ) Loop( B42-B44 inner ) Freq: 109168
370     cmpl    R12, RDI	# unsigned
373     jnb,u   B65  P=0.000001 C=-1.000000

379     B43: #	out( B66 B44 ) <- in( B42 )  Freq: 109168
379     # castII of R12
379     load_vector XMM1,[RDX + #16 + R12 << #3]
380     vsubpd  XMM1,XMM1,XMM9	! sub packedD
385     cmpl    R12, RBX	# unsigned
388     jnb,u   B66  P=0.000001 C=-1.000000

38e     B44: #	out( B42 B45 ) <- in( B43 )  Freq: 109168
38e     load_vector XMM12,[RCX + #16 + R12 << #3]
395     movq    RSI, [R15 + #304 (32-bit)]	# ptr
39c     vsubpd  XMM12,XMM12,XMM10	! sub packedD
3a1     vmulpd  XMM13,XMM1,XMM1	! mul packedD
3a5     vmulpd  XMM1,XMM12,XMM1	! mul packedD
3a9     vaddpd  XMM8,XMM8,XMM13	! add packedD
3ae     vaddpd  XMM11,XMM11,XMM1	! add packedD
3b2     addl    R12, #4	# int
3b6     testl   rax, [RSI]	# Safepoint: poll for GC        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:272 (line 46) L[0]=rsp + #8 L[1]=RDX L[2]=RCX L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=R12 L[8]=XMM0 L[9]=_ L[10]=#ScObj0 L[11]=#ScObj1 L[12]=XMM7 L[13]=_ L[14]=XMM2 L[15]=_ L[16]=#0.000000D L[17]=_ L[18]=#0.000000D L[19]=_ L[20]=#ScObj2 L[21]=#ScObj3 L[22]=_
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=XMM5 }
        # ScObj1 jdk/incubator/vector/Double256Vector={ [payload :0]=XMM6 }
        # ScObj2 jdk/incubator/vector/Double256Vector={ [payload :0]=XMM11 }
        # ScObj3 jdk/incubator/vector/Double256Vector={ [payload :0]=XMM8 }
        # OopMap {rcx=Oop rdx=Oop [8]=Oop off=950/0x3b6}
3b8     cvtsi2sdl XMM1, R12	# i2d
        nop 	# 3 bytes pad for loops and calls
3c0     ucomisd XMM0, XMM1 test
3c4     jnbe,us  B42  P=0.999999 C=1030750.000000

3c6     B45: #	out( B62 B46 ) <- in( B44 B85 )  Freq: 0.109168
3c6     cmpl    R12, R10
3c9     jge     B62  P=0.500000 C=-1.000000

3cf     B46: #	out( B96 B47 ) <- in( B45 )  Freq: 0.0545842
3cf     cmpl    R12, R10	# unsigned
3d2     jnb,u   B96  P=0.000001 C=-1.000000

3d8     B47: #	out( B96 B48 ) <- in( B46 )  Freq: 0.0545842
3d8     cmpl    R9, R10	# unsigned
        nop 	# 5 bytes pad for loops and calls
3e0     jnb,u   B96  P=0.000001 C=-1.000000

3e6     B48: #	out( B96 B49 ) <- in( B47 )  Freq: 0.0545841
3e6     cmpl    R12, R11	# unsigned
3e9     jnb,u   B96  P=0.000001 C=-1.000000

3ef     B49: #	out( B96 B50 ) <- in( B48 )  Freq: 0.0545841
3ef     cmpl    R9, R11	# unsigned
3f2     jnb,u   B96  P=0.000001 C=-1.000000

3f8     B50: #	out( B51 ) <- in( B49 )  Freq: 0.054584
3f8     movl    RSI, RDX	# ptr -> int
3fa     shrl    RSI, #3
3fd     andl    RSI, #3	# int
400     addl    RSI, R12	# int
403     movl    RBP, #1	# int
408     subl    RBP, RSI	# int
40a     andl    RBP, #3	# int
40d     addl    RBP, R12	# int
410     incl    RBP	# int
412     cmpl    RBP, R10
415     cmovlgt RBP, R10	# min
        nop 	# 3 bytes pad for loops and calls

41c     B51: #	out( B51 B52 ) <- in( B50 B51 ) Loop( B51-B51 inner pre of N506) Freq: 0.54584
41c     movsd   XMM1, [RCX + #16 + R12 << #3]	# double
423     movsd   XMM0, [RDX + #16 + R12 << #3]	# double
42a     vsubsd  XMM1, XMM1, XMM2
42e     vsubsd  XMM0, XMM0, XMM7
432     vmulsd  XMM5, XMM0, XMM0
436     vmulsd  XMM0, XMM1, XMM0
43a     vaddsd  XMM4, XMM4, XMM5
43e     vaddsd  XMM3, XMM3, XMM0
442     incl    R12	# int
445     cmpl    R12, RBP
448     jl,s   B51	# loop end  P=0.900000 C=-1.000000

44a     B52: #	out( B78 B53 ) <- in( B51 )  Freq: 0.054584
44a     movl    RBP, R10	# spill
44d     addl    RBP, #-15	# int
450     cmpl    R9, RBP
453     cmovll RBP, R8	# signed, int
457     cmpl    R12, RBP
        nop 	# 6 bytes pad for loops and calls
460     jge     B78  P=0.000001 C=-1.000000

466     B53: #	out( B97 B54 ) <- in( B52 )  Freq: 0.0545839
466     # castII of R12
466     cmpl    R12, R11	# unsigned
469     jnb,u   B97  P=0.000001 C=-1.000000

46f     B54: #	out( B98 B55 ) <- in( B53 )  Freq: 0.0545839
46f     cmpl    R12, R11	# unsigned
472     jnb,u   B98  P=0.000001 C=-1.000000

478     B55: #	out( B99 B56 ) <- in( B54 )  Freq: 0.0545838
478     cmpl    R12, R10	# unsigned
        nop 	# 5 bytes pad for loops and calls
480     jnb,u   B99  P=0.000001 C=-1.000000

486     B56: #	out( B100 B57 ) <- in( B55 )  Freq: 0.0545838
486     cmpl    R12, R10	# unsigned
489     jnb,u   B100  P=0.000001 C=-1.000000

48f     B57: #	out( B101 B58 ) <- in( B56 )  Freq: 0.0545837
48f     cmpl    R12, R10	# unsigned
492     jnb,u   B101  P=0.000001 C=-1.000000

498     B58: #	out( B102 B59 ) <- in( B57 )  Freq: 0.0545837
498     movl    RSI, R12	# spill
49b     addl    RSI, #15	# int
        nop 	# 2 bytes pad for loops and calls
4a0     cmpl    RSI, R10	# unsigned
4a3     jnb,u   B102  P=0.000001 C=-1.000000

4a9     B59: #	out( B103 B60 ) <- in( B58 )  Freq: 0.0545836
4a9     cmpl    R12, R11	# unsigned
4ac     jnb,u   B103  P=0.000001 C=-1.000000

4b2     B60: #	out( B104 B61 ) <- in( B59 )  Freq: 0.0545836
4b2     cmpl    RSI, R11	# unsigned
4b5     jnb,u   B104  P=0.000001 C=-1.000000

4bb     B61: #	out( B71 ) <- in( B60 )  Freq: 0.0545835
4bb     movl    R11, #16000	# int
4c1     jmp     B71

4c6     B62: #	out( N1184 ) <- in( B81 B78 B45 )  Freq: 0.109168
4c6     vdivsd  XMM0, XMM3, XMM4
4ca     movq    R10, [rsp + #8]	# spill
4cf     movsd   [R10 + #24 (8-bit)], XMM0	# double ! Field: org/jml/regression/linear/DoubleVectorLinearRegression.slope
4d5     vmulsd  XMM0, XMM7, XMM0
4d9     vsubsd  XMM0, XMM2, XMM0
4dd     movsd   [R10 + #16 (8-bit)], XMM0	# double ! Field: org/jml/regression/linear/DoubleVectorLinearRegression.intercept
4e3     vzeroupper
	addq    rsp, 240	# Destroy frame
	popq    rbp
	cmpq     rsp, poll_offset[r15_thread] 
	ja       #safepoint_stub	# Safepoint: poll for GC

4fb     ret

4fc     B63: #	out( N1184 ) <- in( B8 )  Freq: 0.334794
4fc     movl    RSI, #-28	# int
501     movq    RBP, [rsp + #8]	# spill
506     movq    [rsp + #8], RCX	# spill
50b     movsd   [rsp + #24], XMM0	# spill
511     movq    [rsp + #32], RDX	# spill
516     movl    [rsp + #20], R12	# spill
51b     movl    [rsp + #40], RDI	# spill
51f     vmovdqu [rsp + 64],XMM1	# spill
525     vmovdqu [rsp + 96],XMM2	# spill
        nop 	# 1 bytes pad for loops and calls
52c     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 359) L[0]=_ L[1]=_ STK[0]=rsp + #20 STK[1]=rsp + #40 STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 74) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::fromArray @ bci:9 (line 2562) L[0]=#Ptr0x00007f846b390f20 L[1]=rsp + #32 L[2]=_ L[3]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:71 (line 25) L[0]=RBP L[1]=rsp + #32 L[2]=rsp + #8 L[3]=#0.000000D L[4]=_ L[5]=#0.000000D L[6]=_ L[7]=rsp + #20 L[8]=rsp + #24 L[9]=_ L[10]=_ L[11]=#ScObj0 L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=#ScObj1
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #64 }
        # ScObj1 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #96 }
        # OopMap {rbp=Oop [8]=Oop [32]=Oop off=1332/0x534}
534     stop	# ShouldNotReachHere

548     B64: #	out( N1184 ) <- in( B9 )  Freq: 0.334794
548     movl    RSI, #-28	# int
54d     movq    RBP, [rsp + #8]	# spill
552     movq    [rsp + #0], RDX	# spill
556     movsd   [rsp + #24], XMM0	# spill
55c     movq    [rsp + #32], RCX	# spill
561     movl    [rsp + #20], R12	# spill
566     movl    [rsp + #40], RBX	# spill
56a     vmovdqu [rsp + 64],XMM1	# spill
570     vmovdqu [rsp + 96],XMM2	# spill
        nop 	# 2 bytes pad for loops and calls
578     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 359) L[0]=_ L[1]=_ STK[0]=rsp + #20 STK[1]=rsp + #40 STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 74) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::fromArray @ bci:9 (line 2562) L[0]=#Ptr0x00007f846b390f20 L[1]=rsp + #32 L[2]=_ L[3]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:87 (line 26) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #32 L[3]=#0.000000D L[4]=_ L[5]=#0.000000D L[6]=_ L[7]=rsp + #20 L[8]=rsp + #24 L[9]=_ L[10]=#ScObj0 L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=#ScObj1
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #96 }
        # ScObj1 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #64 }
        # OopMap {rbp=Oop [0]=Oop [32]=Oop off=1408/0x580}
580     stop	# ShouldNotReachHere

594     B65: #	out( N1184 ) <- in( B42 )  Freq: 0.110618
594     movl    RSI, #-28	# int
599     movq    RBP, [rsp + #8]	# spill
59e     movq    [rsp + #8], RCX	# spill
5a3     movsd   [rsp + #24], XMM0	# spill
5a9     movsd   [rsp + #32], XMM7	# spill
5af     movsd   [rsp + #40], XMM2	# spill
5b5     movq    [rsp + #48], RDX	# spill
5ba     movl    [rsp + #20], R12	# spill
5bf     movl    [rsp + #56], RDI	# spill
5c3     vmovdqu [rsp + 64],XMM11	# spill
5c9     vmovdqu [rsp + 96],XMM6	# spill
5cf     vmovdqu [rsp + 128],XMM8	# spill
5d8     vmovdqu [rsp + 160],XMM5	# spill
        nop 	# 3 bytes pad for loops and calls
5e4     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 359) L[0]=_ L[1]=_ STK[0]=rsp + #20 STK[1]=rsp + #56 STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 74) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::fromArray @ bci:9 (line 2562) L[0]=#Ptr0x00007f846b390f20 L[1]=rsp + #48 L[2]=_ L[3]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:214 (line 47) L[0]=RBP L[1]=rsp + #48 L[2]=rsp + #8 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #20 L[8]=rsp + #24 L[9]=_ L[10]=#ScObj0 L[11]=#ScObj1 L[12]=rsp + #32 L[13]=_ L[14]=rsp + #40 L[15]=_ L[16]=#0.000000D L[17]=_ L[18]=#0.000000D L[19]=_ L[20]=#ScObj2 L[21]=#ScObj3 L[22]=_
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #160 }
        # ScObj1 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #96 }
        # ScObj2 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #64 }
        # ScObj3 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #128 }
        # OopMap {rbp=Oop [8]=Oop [48]=Oop off=1516/0x5ec}
5ec     stop	# ShouldNotReachHere

600     B66: #	out( N1184 ) <- in( B43 )  Freq: 0.110618
600     movl    RSI, #-28	# int
605     movq    RBP, [rsp + #8]	# spill
60a     movq    [rsp + #0], RDX	# spill
60e     movsd   [rsp + #24], XMM0	# spill
614     movsd   [rsp + #32], XMM7	# spill
61a     movsd   [rsp + #40], XMM2	# spill
620     movq    [rsp + #48], RCX	# spill
625     movl    [rsp + #20], R12	# spill
62a     movl    [rsp + #56], RBX	# spill
62e     vmovdqu [rsp + 64],XMM11	# spill
634     vmovdqu [rsp + 96],XMM6	# spill
63a     vmovdqu [rsp + 128],XMM8	# spill
643     vmovdqu [rsp + 160],XMM5	# spill
64c     vmovdqu [rsp + 192],XMM1	# spill
        nop 	# 3 bytes pad for loops and calls
658     call,static  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 359) L[0]=_ L[1]=_ STK[0]=rsp + #20 STK[1]=rsp + #56 STK[2]=#NULL
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 74) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.DoubleVector::fromArray @ bci:9 (line 2562) L[0]=#Ptr0x00007f846b390f20 L[1]=rsp + #48 L[2]=_ L[3]=_
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:232 (line 48) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #48 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #20 L[8]=rsp + #24 L[9]=_ L[10]=#ScObj0 L[11]=#ScObj1 L[12]=rsp + #32 L[13]=_ L[14]=rsp + #40 L[15]=_ L[16]=#0.000000D L[17]=_ L[18]=#0.000000D L[19]=_ L[20]=_ L[21]=#ScObj2 L[22]=#ScObj3 STK[0]=#ScObj4
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #160 }
        # ScObj1 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #96 }
        # ScObj2 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #128 }
        # ScObj3 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #192 }
        # ScObj4 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #64 }
        # OopMap {rbp=Oop [0]=Oop [48]=Oop off=1632/0x660}
660     stop	# ShouldNotReachHere

674     B67: #	out( B68 ) <- in( B68 ) top-of-loop Freq: 0.245626
674     movdq   R13, XMM3	# spill
679     movapd  XMM0, XMM4	# spill

67d     B68: #	out( B67 B69 ) <- in( B75 B67 ) Loop( B68-B67 inner post of N1296) Freq: 0.272917
67d     load_vector XMM1,[RCX + #16 + R12 << #3]
684     load_vector XMM2,[RDX + #16 + R12 << #3]
68b     vmovdqu XMM5,[rsp + 64]	# spill
691     vsubpd  XMM1,XMM1,XMM5	! sub packedD
695     vmovdqu XMM7,[rsp + 32]	# spill
69b     vsubpd  XMM2,XMM2,XMM7	! sub packedD
69f     vmulpd  XMM1,XMM2,XMM1	! mul packedD
6a3     vmulpd  XMM2,XMM2,XMM2	! mul packedD
6a7     movdq   XMM3, R13	# spill
6ac     vector_reduction_double XMM3,XMM1 ; using XMM6, XMM4 as TEMP
6cc     movapd  XMM4, XMM0	# spill
6d0     vector_reduction_double XMM4,XMM2 ; using XMM6, XMM1 as TEMP
6f0     addl    R12, #4	# int
6f4     cmpl    R12, RDI
6f7     jl     B67	# loop end  P=0.900000 C=-1.000000

6fd     B69: #	out( B77 ) <- in( B68 )  Freq: 0.0272918
        nop 	# 3 bytes pad for loops and calls
700     jmp     B77

705     B70: #	out( B71 ) <- in( B73 ) top-of-loop Freq: 0.491251
705     movdq   XMM3, R13	# spill
70a     movapd  XMM4, XMM0	# spill
70e     movdq   XMM7, R14	# spill
713     movsd   XMM2, [rsp + #0]	# spill
718     vmovdqu XMM9,[rsp + 32]	# spill
71e     vmovdqu XMM10,[rsp + 64]	# spill

724     B71: #	out( B72 ) <- in( B61 B70 ) Loop( B71-B70 ) Freq: 0.545835
724     movl    RSI, RBP	# spill
726     subl    RSI, R12	# int
729     cmpl    RBP, R12
72c     cmovll RSI, RAX	# signed, int
72f     cmpl    RSI, #16000	# unsigned
735     cmovlnbe RSI, R11	# unsigned, int
739     addl    RSI, R12	# int
73c     movdq   R13, XMM3	# spill
741     movapd  XMM0, XMM4	# spill
745     movdq   R14, XMM7	# spill
74a     movsd   [rsp + #0], XMM2	# spill
74f     vmovdqu [rsp + 32],XMM9	# spill
755     vmovdqu [rsp + 64],XMM10	# spill
        nop 	# 5 bytes pad for loops and calls

760     B72: #	out( B72 B73 ) <- in( B71 B72 ) Loop( B72-B72 inner main of N489 strip mined) Freq: 5.45835
760     load_vector XMM1,[RCX + #16 + R12 << #3]
767     load_vector XMM2,[RDX + #16 + R12 << #3]
76e     vmovdqu XMM7,[rsp + 64]	# spill
774     vsubpd  XMM1,XMM1,XMM7	! sub packedD
778     vmovdqu XMM9,[rsp + 32]	# spill
77e     vsubpd  XMM2,XMM2,XMM9	! sub packedD
783     vmulpd  XMM6,XMM2,XMM2	! mul packedD
787     vmulpd  XMM11,XMM2,XMM1	! mul packedD
78b     movslq  RBX, R12	# i2l
78e     load_vector XMM3,[RDX + #48 + RBX << #3]
794     load_vector XMM2,[RCX + #112 + RBX << #3]
79a     load_vector XMM1,[RDX + #80 + RBX << #3]
7a0     load_vector XMM5,[RDX + #112 + RBX << #3]
7a6     load_vector XMM8,[RCX + #48 + RBX << #3]
7ac     load_vector XMM4,[RCX + #80 + RBX << #3]
7b2     vsubpd  XMM3,XMM3,XMM9	! sub packedD
7b7     vsubpd  XMM4,XMM4,XMM7	! sub packedD
7bb     vmulpd  XMM10,XMM3,XMM3	! mul packedD
7bf     vsubpd  XMM8,XMM8,XMM7	! sub packedD
7c3     vsubpd  XMM5,XMM5,XMM9	! sub packedD
7c8     vmulpd  XMM8,XMM3,XMM8	! mul packedD
7cd     vmulpd  XMM3,XMM5,XMM5	! mul packedD
7d1     vsubpd  XMM9,XMM1,XMM9	! sub packedD
7d6     vsubpd  XMM1,XMM2,XMM7	! sub packedD
7da     vmulpd  XMM7,XMM9,XMM4	! mul packedD
7de     vmulpd  XMM1,XMM5,XMM1	! mul packedD
7e2     vmulpd  XMM4,XMM9,XMM9	! mul packedD
7e7     vector_reduction_double XMM0,XMM6 ; using XMM15, XMM14 as TEMP
80b     vector_reduction_double XMM0,XMM10 ; using XMM13, XMM12 as TEMP
831     movdq   RBX, XMM0	# spill
836     movdq   XMM0, R13	# spill
83b     vector_reduction_double XMM0,XMM11 ; using XMM14, XMM13 as TEMP
861     vector_reduction_double XMM0,XMM8 ; using XMM12, XMM9 as TEMP
887     vector_reduction_double XMM0,XMM7 ; using XMM6, XMM10 as TEMP
8aa     vector_reduction_double XMM0,XMM1 ; using XMM2, XMM5 as TEMP
8ca     movdq   R13, XMM0	# spill
8cf     movdq   XMM0, RBX	# spill
8d4     vector_reduction_double XMM0,XMM4 ; using XMM6, XMM5 as TEMP
8f4     vector_reduction_double XMM0,XMM3 ; using XMM2, XMM1 as TEMP
914     addl    R12, #16	# int
918     cmpl    R12, RSI
        nop 	# 5 bytes pad for loops and calls
920     jl     B72	# loop end  P=0.900000 C=-1.000000

926     B73: #	out( B70 B74 ) <- in( B72 )  Freq: 0.545835
926     movq    RBX, [R15 + #304 (32-bit)]	# ptr
92d     testl   rax, [RBX]	# Safepoint: poll for GC        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:351 (line 55) L[0]=rsp + #8 L[1]=RDX L[2]=RCX L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=R12 L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=R14 L[13]=_ L[14]=rsp + #0 L[15]=_ L[16]=XMM0 L[17]=_ L[18]=R13 L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # OopMap {rcx=Oop rdx=Oop [8]=Oop off=2349/0x92d}
92f     cmpl    R12, RBP
932     jl     B70  P=0.900000 C=-1.000000

938     B74: #	out( B76 B75 ) <- in( B73 )  Freq: 0.0545835
938     cmpl    R9, RDI
93b     cmovll RDI, R8	# signed, int
        nop 	# 1 bytes pad for loops and calls
940     cmpl    R12, RDI
943     jge,s   B76  P=0.500000 C=-1.000000

945     B75: #	out( B68 ) <- in( B74 )  Freq: 0.0272918
945     # castII of R12
945     jmp     B68

94a     B76: #	out( B77 ) <- in( B74 )  Freq: 0.0272918
94a     movdq   XMM3, R13	# spill
94f     movapd  XMM4, XMM0	# spill

953     B77: #	out( B78 ) <- in( B69 B76 )  Freq: 0.0545835
953     movdq   XMM7, R14	# spill
958     movsd   XMM2, [rsp + #0]	# spill

95d     B78: #	out( B62 B79 ) <- in( B52 B77 )  Freq: 0.0545836
        nop 	# 3 bytes pad for loops and calls
960     cmpl    R12, R10
963     jge     B62  P=0.500000 C=-1.000000

969     B79: #	out( B80 ) <- in( B78 )  Freq: 0.0272918
969     # castII of R12
        nop 	# 3 bytes pad for loops and calls

96c     B80: #	out( B80 B81 ) <- in( B79 B80 ) Loop( B80-B80 inner post of N506) Freq: 0.272918
96c     movsd   XMM0, [RDX + #16 + R12 << #3]	# double
973     movsd   XMM1, [RCX + #16 + R12 << #3]	# double
97a     vsubsd  XMM0, XMM0, XMM7
97e     vsubsd  XMM1, XMM1, XMM2
982     vmulsd  XMM5, XMM0, XMM0
986     vmulsd  XMM0, XMM1, XMM0
98a     vaddsd  XMM4, XMM4, XMM5
98e     vaddsd  XMM3, XMM3, XMM0
992     incl    R12	# int
995     cmpl    R12, R10
998     jl,s   B80	# loop end  P=0.900000 C=-1.000000

99a     B81: #	out( B62 ) <- in( B80 )  Freq: 0.0272918
99a     jmp     B62

99f     B82: #	out( N1184 ) <- in( B3 )  Freq: 9.99998e-07
99f     movl    RSI, #7	# int
9a4     call,static  wrapper for: uncommon_trap(reason='unloaded' action='reinterpret' index='7' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:7 (line 15) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_
        # OopMap {off=2476/0x9ac}
9ac     stop	# ShouldNotReachHere

9c0     B83: #	out( B12 ) <- in( B4 )  Freq: 9.99997e-07
9c0     vmovdqu XMM6,XMM8	# spill
9c5     vmovdqu XMM5,XMM8	# spill
9ca     xorl    R12, R12	# int
9cd     jmp     B12

9d2     B84: #	out( N1184 ) <- in( B6 B5 )  Freq: 1.99999e-06
9d2     movl    RSI, #-138	# int
9d7     pushq   [rsp + #8]	# 64-bit mem-mem spill
	popq    [rsp + #0]
9e0     movq    [rsp + #8], RDX	# spill
9e5     movq    [rsp + #16], RCX	# spill
9ea     movsd   [rsp + #24], XMM0	# spill
9f0     vmovdqu [rsp + 64],XMM8	# spill
        nop 	# 2 bytes pad for loops and calls
9f8     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:60 (line 24) L[0]=rsp + #0 L[1]=rsp + #8 L[2]=rsp + #16 L[3]=#0.000000D L[4]=_ L[5]=#0.000000D L[6]=_ L[7]=#0 L[8]=rsp + #24 L[9]=_ L[10]=#ScObj0 L[11]=#ScObj1 L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=RBP
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #64 }
        # ScObj1 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #64 }
        # OopMap {[0]=Oop [8]=Oop [16]=Oop off=2560/0xa00}
a00     stop	# ShouldNotReachHere

a14     B85: #	out( B45 ) <- in( B38 )  Freq: 3.30405e-07
a14     xorl    R12, R12	# int
a17     jmp     B45

a1c     B86: #	out( N1184 ) <- in( B40 B39 )  Freq: 6.60809e-07
a1c     movl    RSI, #-138	# int
a21     pushq   [rsp + #8]	# 64-bit mem-mem spill
	popq    [rsp + #0]
a2a     movq    [rsp + #8], RDX	# spill
a2f     movq    [rsp + #16], RCX	# spill
a34     movsd   [rsp + #24], XMM0	# spill
a3a     movsd   [rsp + #32], XMM7	# spill
a40     movsd   [rsp + #40], XMM2	# spill
a46     vmovdqu [rsp + 64],XMM6	# spill
a4c     vmovdqu [rsp + 96],XMM5	# spill
a52     vmovdqu [rsp + 160],XMM8	# spill
        nop 	# 1 bytes pad for loops and calls
a5c     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:205 (line 46) L[0]=rsp + #0 L[1]=rsp + #8 L[2]=rsp + #16 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=#0 L[8]=rsp + #24 L[9]=_ L[10]=#ScObj0 L[11]=#ScObj1 L[12]=rsp + #32 L[13]=_ L[14]=rsp + #40 L[15]=_ L[16]=#0.000000D L[17]=_ L[18]=#0.000000D L[19]=_ L[20]=#ScObj2 L[21]=#ScObj3 L[22]=_ STK[0]=RBP
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #96 }
        # ScObj1 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #64 }
        # ScObj2 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #160 }
        # ScObj3 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #160 }
        # OopMap {[0]=Oop [8]=Oop [16]=Oop off=2660/0xa64}
a64     stop	# ShouldNotReachHere

a78     B87: #	out( N1184 ) <- in( B15 B13 B14 B16 )  Freq: 6.69588e-07
a78     movl    RSI, #-138	# int
a7d     movq    RBP, [rsp + #8]	# spill
a82     movq    [rsp + #0], RDX	# spill
a86     movq    [rsp + #8], RCX	# spill
a8b     movsd   [rsp + #24], XMM0	# spill
a91     movl    [rsp + #20], R12	# spill
a96     vmovdqu [rsp + 32],XMM6	# spill
a9c     vmovdqu [rsp + 64],XMM5	# spill
aa2     movsd   [rsp + #96], XMM4	# spill
aa8     movsd   [rsp + #104], XMM3	# spill
aae     movl    [rsp + #112], R10	# spill
        nop 	# 1 bytes pad for loops and calls
ab4     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:134 (line 32) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=rsp + #96 L[4]=_ L[5]=rsp + #104 L[6]=_ L[7]=rsp + #20 L[8]=rsp + #24 L[9]=_ L[10]=#ScObj0 L[11]=#ScObj1 L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=rsp + #20 STK[1]=rsp + #112
        # ScObj0 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #64 }
        # ScObj1 jdk/incubator/vector/Double256Vector={ [payload :0]=rsp + #32 }
        # OopMap {rbp=Oop [0]=Oop [8]=Oop off=2748/0xabc}
abc     stop	# ShouldNotReachHere

ad0     B88: #	out( N1184 ) <- in( B20 )  Freq: 1.67396e-07
ad0     stop	# ShouldNotReachHere

ae4     B89: #	out( N1184 ) <- in( B21 )  Freq: 1.67396e-07
ae4     stop	# ShouldNotReachHere

af8     B90: #	out( N1184 ) <- in( B22 )  Freq: 1.67396e-07
af8     stop	# ShouldNotReachHere

b0c     B91: #	out( N1184 ) <- in( B23 )  Freq: 1.67396e-07
b0c     stop	# ShouldNotReachHere

b20     B92: #	out( N1184 ) <- in( B24 )  Freq: 1.67396e-07
b20     stop	# ShouldNotReachHere

b34     B93: #	out( N1184 ) <- in( B25 )  Freq: 1.67396e-07
b34     stop	# ShouldNotReachHere

b48     B94: #	out( N1184 ) <- in( B26 )  Freq: 1.67395e-07
b48     stop	# ShouldNotReachHere

b5c     B95: #	out( N1184 ) <- in( B27 )  Freq: 1.67395e-07
b5c     stop	# ShouldNotReachHere

b70     B96: #	out( N1184 ) <- in( B48 B46 B47 B49 )  Freq: 2.21236e-07
b70     movl    RSI, #-138	# int
b75     movq    RBP, [rsp + #8]	# spill
b7a     movq    [rsp + #0], RDX	# spill
b7e     movq    [rsp + #8], RCX	# spill
b83     movsd   [rsp + #24], XMM7	# spill
b89     movsd   [rsp + #32], XMM2	# spill
b8f     movl    [rsp + #20], R12	# spill
b94     movsd   [rsp + #40], XMM4	# spill
b9a     movsd   [rsp + #48], XMM3	# spill
ba0     movl    [rsp + #56], R10	# spill
        nop 	# 3 bytes pad for loops and calls
ba8     call,static  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:305 (line 55) L[0]=RBP L[1]=rsp + #0 L[2]=rsp + #8 L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=rsp + #20 L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=rsp + #24 L[13]=_ L[14]=rsp + #32 L[15]=_ L[16]=rsp + #40 L[17]=_ L[18]=rsp + #48 L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=rsp + #20 STK[1]=rsp + #56
        # OopMap {rbp=Oop [0]=Oop [8]=Oop off=2992/0xbb0}
bb0     stop	# ShouldNotReachHere

bc4     B97: #	out( N1184 ) <- in( B53 )  Freq: 5.53088e-08
bc4     stop	# ShouldNotReachHere

bd8     B98: #	out( N1184 ) <- in( B54 )  Freq: 5.53087e-08
bd8     stop	# ShouldNotReachHere

bec     B99: #	out( N1184 ) <- in( B55 )  Freq: 5.53087e-08
bec     stop	# ShouldNotReachHere

c00     B100: #	out( N1184 ) <- in( B56 )  Freq: 5.53086e-08
c00     stop	# ShouldNotReachHere

c14     B101: #	out( N1184 ) <- in( B57 )  Freq: 5.53085e-08
c14     stop	# ShouldNotReachHere

c28     B102: #	out( N1184 ) <- in( B58 )  Freq: 5.53085e-08
c28     stop	# ShouldNotReachHere

c3c     B103: #	out( N1184 ) <- in( B59 )  Freq: 5.53084e-08
c3c     stop	# ShouldNotReachHere

c50     B104: #	out( N1184 ) <- in( B60 )  Freq: 5.53084e-08
c50     stop	# ShouldNotReachHere

c64     B105: #	out( N1184 ) <- in( B1 )  Freq: 1.01328e-06
c64     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
c6c     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:1 (line 15) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=#NULL
        # OopMap {off=3188/0xc74}
c74     stop	# ShouldNotReachHere

c88     B106: #	out( N1184 ) <- in( B2 )  Freq: 1.01328e-06
c88     movl    RSI, #-10	# int
        nop 	# 3 bytes pad for loops and calls
c90     call,static  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # org.jml.regression.linear.DoubleVectorLinearRegression::fit @ bci:3 (line 15) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ L[9]=_ L[10]=_ L[11]=_ L[12]=_ L[13]=_ L[14]=_ L[15]=_ L[16]=_ L[17]=_ L[18]=_ L[19]=_ L[20]=_ L[21]=_ L[22]=_ STK[0]=_ STK[1]=#NULL
        # OopMap {off=3224/0xc98}
c98     stop	# ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    4418 1188       4       org.jml.regression.linear.DoubleVectorLinearRegression::fit (378 bytes)
 total in heap  [0x00000001186a4590,0x00000001186a6440] = 7856
 relocation     [0x00000001186a4708,0x00000001186a4888] = 384
 constants      [0x00000001186a48a0,0x00000001186a48c0] = 32
 main code      [0x00000001186a48c0,0x00000001186a55a0] = 3296
 stub code      [0x00000001186a55a0,0x00000001186a55b8] = 24
 oops           [0x00000001186a55b8,0x00000001186a55d8] = 32
 metadata       [0x00000001186a55d8,0x00000001186a56b0] = 216
 scopes data    [0x00000001186a56b0,0x00000001186a5d00] = 1616
 scopes pcs     [0x00000001186a5d00,0x00000001186a6410] = 1808
 dependencies   [0x00000001186a6410,0x00000001186a6428] = 24
 nul chk table  [0x00000001186a6428,0x00000001186a6440] = 24


[Constant Pool]
             Address          hex4                    hex8      
  0x00000001186a48a0:   0x00000000      0x0000000000000000      
  0x00000001186a48a4:   0x00000000                              
  0x00000001186a48a8:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00000001186a48ac:   0xf4f4f4f4                              
  0x00000001186a48b0:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00000001186a48b4:   0xf4f4f4f4                              
  0x00000001186a48b8:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00000001186a48bc:   0xf4f4f4f4                              

[MachCode]
[Entry Point]
  # {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
  # this:     rsi:rsi   = 'org/jml/regression/linear/DoubleVectorLinearRegression'
  # parm0:    rdx:rdx   = '[D'
  # parm1:    rcx:rcx   = '[D'
  #           [sp+0x100]  (sp of caller)
 ;; N1184: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00000001186a48c0: ;   {no_reloc}
  0x00000001186a48c0: 448b 5608 | 49c1 e203 

  0x00000001186a48c8: ;   {runtime_call ic_miss_stub}
  0x00000001186a48c8: 493b c20f | 854f 5055 | f890 9090 | 9090 9090 | 9090 9090 | 9090 9090 
[Verified Entry Point]
 ;; B1: #	out( B105 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x00000001186a48e0: 8984 2400 | a0fe ff55 | 4881 ecf0 

  0x00000001186a48ec: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorIntrinsics::roundDown@5 (line 106)
                      ; - jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
  0x00000001186a48ec: 0000 0048 | 8974 2408 

  0x00000001186a48f4: ; implicit exception: dispatches to 0x00000001186a5524
  0x00000001186a48f4: 448b 520c 
 ;; B2: #	out( B106 B3 ) <- in( B1 )  Freq: 0.999999
  0x00000001186a48f8: 9090 9090 | 9090 9090 

  0x00000001186a4900: ; implicit exception: dispatches to 0x00000001186a5548
  0x00000001186a4900: 448b 590c 
 ;; B3: #	out( B82 B4 ) <- in( B2 )  Freq: 0.999998
  0x00000001186a4904: 453b d30f | 8552 0900 | 0041 8bdb | 83c3 fd45 | 8bca 4183 | e1fc 418b 

  0x00000001186a491c: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a491c: fa83 c7fd | c4c1 7b2a 

  0x00000001186a4924: ;*invokestatic zero {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x00000001186a4924: c1c4 413d 

  0x00000001186a4928: ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@13 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x00000001186a4928: efc0 33c0 

  0x00000001186a492c: ;   {section_word}
  0x00000001186a492c: c5f9 2e05 | 6cff ffff | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 | c540 0fb6 
  0x00000001186a494c: ;   {section_word}
  0x00000001186a494c: edf7 ddc5 | f92e 0549 

  0x00000001186a4954: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a4954: ffff ff0f | 8623 0900 | 0090 9090 | 85ff 0f8c | 2a09 0000 
 ;; B6: #	out( B84 B7 ) <- in( B5 )  Freq: 0.999995
  0x00000001186a4968: 85db 0f8c 

  0x00000001186a496c: ;*aload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@63 (line 25)
  0x00000001186a496c: 2209 0000 
 ;; B7: #	out( B8 ) <- in( B6 )  Freq: 0.999994
  0x00000001186a4970: c4c1 7e6f | d0c4 c17e | 6fc8 4533 

  0x00000001186a497c: ;*invokestatic toBits {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@19 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x00000001186a497c: e490 9090 
 ;; B8: #	out( B63 B9 ) <- in( B7 B10 ) Loop( B8-B10 inner ) Freq: 330407
  0x00000001186a4980: 443b e70f | 8333 0400 

  0x00000001186a4988: ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x00000001186a4988: 00c4 a16d 

  0x00000001186a498c: ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@28 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x00000001186a498c: 5854 e210 | 443b e30f | 836f 0400 

  0x00000001186a4998: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a4998: 00c4 a175 

  0x00000001186a499c: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@31 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x00000001186a499c: 584c e110 | 4d8b 8730 

  0x00000001186a49a4: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a49a4: 0100 0041 

  0x00000001186a49a8: ; ImmutableOopMap {rcx=Oop rdx=Oop [8]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)
                      ;   {poll}
  0x00000001186a49a8: 83c4 0441 | 8500 c4c1 | 632a dcc5 

  0x00000001186a49b4: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a49b4: f92e c377 | c7c5 fe6f | f1c5 fe6f 

  0x00000001186a49c0: ;*invokestatic zero {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x00000001186a49c0: ea45 8bca | 41ff c9c5 | f157 c941 | b800 0000 | 80c5 e957 | d2c5 eb58 | d6c5 f970 | e60e c5eb 
  0x00000001186a49e0: 58d4 c4e3 | 7d19 f401 | c5eb 58d4 | c5f9 70dc | 0ec5 eb58 

  0x00000001186a49f4: ;   {section_word}
  0x00000001186a49f4: d3c5 eb58 | 1da3 feff | ffc5 f358 | cdc5 f970 | d50e c5f3 | 58ca c4e3 | 7d19 ea01 | c5f3 58ca 
  0x00000001186a4a14: c5f9 70e2 | 0ec5 f358 

  0x00000001186a4a1c: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
                      ;   {section_word}
  0x00000001186a4a1c: ccc5 f358 | 257b feff 

  0x00000001186a4a24: ;*isub {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorIntrinsics::roundDown@11 (line 108)
                      ; - jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
  0x00000001186a4a24: ff45 3be2 | 0f8d b401 | 0000 453b | e20f 8301 | 0900 0045 | 3bca 9090 | 9090 9090 | 0f83 f208 
  0x00000001186a4a44: 0000 453b | e30f 83e9 | 0800 0045 | 3bcb 0f83 | e008 0000 
 ;; B17: #	out( B18 ) <- in( B16 )  Freq: 0.165203
  0x00000001186a4a58: 458b ec41 | ffc5 c5f9 | 28cb c5f9 

  0x00000001186a4a64: ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a4a64: 28fc 9090 
 ;; B18: #	out( B18 B19 ) <- in( B17 B18 ) Loop( B18-B18 inner pre of N496) Freq: 1.65203
  0x00000001186a4a68: c4a1 4358 | 7ce2 10c4 | a173 584c | e110 41ff | c445 3be5 | 7cea 418b | f283 c6f9 | 443b ce41 
  0x00000001186a4a88: 0f4c f044 | 3be6 0f8d | 2a01 0000 
 ;; B20: #	out( B88 B21 ) <- in( B19 )  Freq: 0.165203
  0x00000001186a4a94: 453b e30f | 83f3 0800 | 0090 9090 | 453b e30f | 83fb 0800 | 0045 3be2 | 0f83 0609 | 0000 453b 
  0x00000001186a4ab4: e20f 8311 | 0900 0090 | 9090 9090 | 453b e20f | 8317 0900 | 0044 8914 

  0x00000001186a4acc: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a4acc: 2445 8bd4 | 4183 c207 | 443b 1424 | 0f83 1609 | 0000 9090 | 453b e30f | 831f 0900 | 0045 3bd3 
  0x00000001186a4aec: 0f83 2a09 | 0000 41ba 

  0x00000001186a4af4: ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@0
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@51 (line 2308)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
  0x00000001186a4af4: 401f 0000 
 ;; B29: #	out( B30 ) <- in( B28 B31 ) Loop( B29-B31 ) Freq: 1.65201
  0x00000001186a4af8: 448b ee45 | 2bec 413b | f444 0f4c | e841 81fd | 401f 0000 | 450f 47ea 

  0x00000001186a4b10: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a4b10: 4503 ec90 | 9090 9090 | 9090 9090 

  0x00000001186a4b1c: ;*invokestatic opCode {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x00000001186a4b1c: 9090 9090 
 ;; B30: #	out( B30 B31 ) <- in( B29 B30 ) Loop( B30-B30 inner main of N244 strip mined) Freq: 16.5201
  0x00000001186a4b20: c4a1 7358 | 4ce1 10c4 | a143 5854 | e210 4d63 | f4c4 a16b | 5854 f218 | c4a1 7358 | 4cf1 18c4 
  0x00000001186a4b40: a16b 5854 | f220 c4a1 | 7358 4cf1 | 20c4 a16b | 5854 f228 | c4a1 7358 | 4cf1 28c4 | a16b 5854 
  0x00000001186a4b60: f230 c4a1 | 7358 4cf1 | 30c4 a16b | 5854 f238 | c4a1 7358 | 4cf1 38c4 | a16b 5854 | f240 c4a1 
  0x00000001186a4b80: 7358 4cf1 

  0x00000001186a4b84: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a4b84: 40c4 a16b 

  0x00000001186a4b88: ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@28 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x00000001186a4b88: 587c f248 | c4a1 7358 

  0x00000001186a4b90: ;*invokestatic toBits {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@19 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
  0x00000001186a4b90: 4cf1 4841 | 83c4 0845 | 3be5 9090 | 9090 9090 | 0f8c 7aff | ffff 4d8b | af30 0100 

  0x00000001186a4bac: ; ImmutableOopMap {rcx=Oop rdx=Oop [8]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)
                      ;   {poll}
  0x00000001186a4bac: 0041 8545 | 0044 3be6 | 0f8c 3eff | ffff 448b | 1424 9090 | 453b e27d 

  0x00000001186a4bc4: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a4bc4: 2590 9090 
 ;; B35: #	out( B35 B36 ) <- in( B34 B35 ) Loop( B35-B35 inner post of N496) Freq: 0.826007
  0x00000001186a4bc8: c4a1 4358 | 7ce2 10c4 | a173 584c | e110 41ff | c445 3be2 | 7cea 9090 | eb08 c5f9 | 28cb c5f9 
  0x00000001186a4be8: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a4be8: 28fc c4c1 

  0x00000001186a4bec: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@31 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x00000001186a4bec: 6b2a d2c5 

  0x00000001186a4bf0: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorIntrinsics::roundDown@5 (line 106)
                      ; - jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
  0x00000001186a4bf0: c35e fac5 

  0x00000001186a4bf4: ;*invokestatic roundDown {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
  0x00000001186a4bf4: f35e d2c4 

  0x00000001186a4bf8: ;*invokestatic zero {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
  0x00000001186a4bf8: 627d 19cf | c462 7d19 

  0x00000001186a4c00: ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@60 (line 24)
                      ;   {section_word}
  0x00000001186a4c00: d2c5 f92e | 0597 fcff 

  0x00000001186a4c08: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a4c08: ff0f 86c5 | 0600 0085 | ff0f 8cc5 | 0600 0085 | db0f 8cbd 

  0x00000001186a4c1c: ;*aload {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@63 (line 25)
  0x00000001186a4c1c: 0600 00c4 | 417e 6fd8 | 4533 e490 | 9090 9090 

  0x00000001186a4c2c: ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x00000001186a4c2c: 9090 9090 
 ;; B42: #	out( B65 B43 ) <- in( B41 B44 ) Loop( B42-B44 inner ) Freq: 109168
  0x00000001186a4c30: 443b e70f | 831b 0200 

  0x00000001186a4c38: ;*invokevirtual vectorType {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@6 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x00000001186a4c38: 00c4 a17e 

  0x00000001186a4c3c: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a4c3c: 6f4c e210 | c4c1 755c 

  0x00000001186a4c44: ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::vectorType@0 (line 3399)
                      ; - jdk.incubator.vector.DoubleVector::zero@6 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x00000001186a4c44: c944 3be3 | 0f83 7202 | 0000 c421 | 7e6f 64e1 | 1049 8bb7 | 3001 0000 | c441 1d5c | e2c5 7559 
  0x00000001186a4c64: e9c5 9d59 

  0x00000001186a4c68: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a4c68: c9c4 413d 

  0x00000001186a4c6c: ;*synchronization entry
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@-1 (line 15)
  0x00000001186a4c6c: 58c5 c525 | 58d9 4183 

  0x00000001186a4c74: ; ImmutableOopMap {rcx=Oop rdx=Oop [8]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)
                      ;   {poll}
  0x00000001186a4c74: c404 8506 | c4c1 732a | cc90 9090 

  0x00000001186a4c80: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a4c80: c5f9 2ec1 

  0x00000001186a4c84: ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorIntrinsics::roundDown@5 (line 106)
                      ; - jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
  0x00000001186a4c84: 77aa 453b | e20f 8df7 | 0000 0045 | 3be2 0f83 | 9807 0000 
 ;; B47: #	out( B96 B48 ) <- in( B46 )  Freq: 0.0545842
  0x00000001186a4c98: 453b ca90 | 9090 9090 | 0f83 8a07 | 0000 453b | e30f 8381 | 0700 0045 | 3bcb 0f83 | 7807 0000 
 ;; B50: #	out( B51 ) <- in( B49 )  Freq: 0.054584
  0x00000001186a4cb8: 8bf2 c1ee | 0383 e603 | 4103 f4bd | 0100 0000 | 2bee 83e5 | 0341 03ec | ffc5 413b | ea41 0f4f 
  0x00000001186a4cd8: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a4cd8: ea90 9090 
 ;; B51: #	out( B51 B52 ) <- in( B50 B51 ) Loop( B51-B51 inner pre of N506) Freq: 0.54584
  0x00000001186a4cdc: c4a1 7b10 | 4ce1 10c4 | a17b 1044 | e210 c5f3 

  0x00000001186a4cec: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a4cec: 5cca c5fb 

  0x00000001186a4cf0: ;*invokevirtual opCode {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
                      ; - jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a4cf0: 5cc7 c5fb | 59e8 c5f3 

  0x00000001186a4cf8: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a4cf8: 59c0 c5db 

  0x00000001186a4cfc: ;*invokestatic opCode {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a4cfc: 58e5 c5e3 | 58d8 41ff | c444 3be5 | 7cd2 418b | ea83 c5f1 | 443b cd41 | 0f4c e844 | 3be5 9090 
  0x00000001186a4d1c: 9090 9090 | 0f8d f704 | 0000 453b | e30f 8355 | 0700 0045 | 3be3 0f83 | 6007 0000 
 ;; B55: #	out( B99 B56 ) <- in( B54 )  Freq: 0.0545838
  0x00000001186a4d38: 453b e290 | 9090 9090 | 0f83 6607 | 0000 453b | e20f 8371 | 0700 0045 | 3be2 0f83 | 7c07 0000 
 ;; B58: #	out( B102 B59 ) <- in( B57 )  Freq: 0.0545837
  0x00000001186a4d58: 418b f483 | c60f 9090 | 413b f20f | 837f 0700 | 0045 3be3 | 0f83 8a07 | 0000 413b | f30f 8395 
  0x00000001186a4d78: 0700 0041 | bb80 3e00 | 00e9 5e02 

  0x00000001186a4d84: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a4d84: 0000 c5e3 

  0x00000001186a4d88: ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@31 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x00000001186a4d88: 5ec4 4c8b 

  0x00000001186a4d8c: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a4d8c: 5424 08c4 | c17b 1142 

  0x00000001186a4d94: ;*invokestatic roundDown {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
  0x00000001186a4d94: 18c5 c359 | c0c5 eb5c 

  0x00000001186a4d9c: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a4d9c: c0c4 c17b 

  0x00000001186a4da0: ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@3 (line 15)
  0x00000001186a4da0: 1142 10c5 | f877 4881 | c4f0 0000 

  0x00000001186a4dac: ;   {poll_return}
  0x00000001186a4dac: 005d 493b | a728 0100 | 000f 87b1 

  0x00000001186a4db8: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a4db8: 0700 00c3 
 ;; B63: #	out( N1184 ) <- in( B8 )  Freq: 0.334794
  0x00000001186a4dbc: bee4 ffff 

  0x00000001186a4dc0: ;*invokestatic toBits {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@19 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x00000001186a4dc0: ff48 8b6c | 2408 4889 | 4c24 08c5 | fb11 4424 | 1848 8954 | 2420 4489 | 6424 1489 | 7c24 28c5 
  0x00000001186a4de0: fe7f 4c24 | 40c5 fe7f 

  0x00000001186a4de8: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a4de8: 5424 6090 

  0x00000001186a4dec: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a4dec: c5f8 77e8 

  0x00000001186a4df0: ; ImmutableOopMap {rbp=Oop [8]=Oop [32]=Oop }
                      ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
  0x00000001186a4df0: 4c57 55f8 

  0x00000001186a4df4: ;   {external_word}
  0x00000001186a4df4: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a4e00: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a4e00: e4f0 e849 

  0x00000001186a4e04: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a4e04: c1e3 f0f4 
 ;; B64: #	out( N1184 ) <- in( B9 )  Freq: 0.334794
  0x00000001186a4e08: bee4 ffff 

  0x00000001186a4e0c: ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::zero@28 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x00000001186a4e0c: ff48 8b6c | 2408 4889 | 1424 c5fb | 1144 2418 | 4889 4c24 | 2044 8964 | 2414 895c | 2428 c5fe 
  0x00000001186a4e2c: 7f4c 2440 | c5fe 7f54 

  0x00000001186a4e34: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a4e34: 2460 9090 

  0x00000001186a4e38: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a4e38: c5f8 77e8 

  0x00000001186a4e3c: ; ImmutableOopMap {rbp=Oop [0]=Oop [32]=Oop }
                      ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
  0x00000001186a4e3c: 0057 55f8 

  0x00000001186a4e40: ;   {external_word}
  0x00000001186a4e40: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a4e4c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a4e4c: e4f0 e8fd 

  0x00000001186a4e50: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a4e50: c0e3 f0f4 
 ;; B65: #	out( N1184 ) <- in( B42 )  Freq: 0.110618
  0x00000001186a4e54: bee4 ffff 

  0x00000001186a4e58: ;*invokestatic zero {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x00000001186a4e58: ff48 8b6c | 2408 4889 | 4c24 08c5 | fb11 4424 | 18c5 fb11 | 7c24 20c5 | fb11 5424 | 2848 8954 
  0x00000001186a4e78: 2430 4489 | 6424 1489 | 7c24 38c5 | 7e7f 5c24 | 40c5 fe7f | 7424 60c5 | 7e7f 8424 | 8000 0000 
  0x00000001186a4e98: c5fe 7fac | 24a0 0000 

  0x00000001186a4ea0: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a4ea0: 0090 9090 

  0x00000001186a4ea4: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a4ea4: c5f8 77e8 

  0x00000001186a4ea8: ; ImmutableOopMap {rbp=Oop [8]=Oop [48]=Oop }
                      ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
  0x00000001186a4ea8: 9456 55f8 

  0x00000001186a4eac: ;   {external_word}
  0x00000001186a4eac: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a4eb8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a4eb8: e4f0 e891 

  0x00000001186a4ebc: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a4ebc: c0e3 f0f4 
 ;; B66: #	out( N1184 ) <- in( B43 )  Freq: 0.110618
  0x00000001186a4ec0: bee4 ffff 

  0x00000001186a4ec4: ;*synchronization entry
                      ; - jdk.incubator.vector.DoubleVector$DoubleSpecies::vectorType@-1 (line 3399)
                      ; - jdk.incubator.vector.DoubleVector::zero@6 (line 436)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x00000001186a4ec4: ff48 8b6c | 2408 4889 | 1424 c5fb | 1144 2418 | c5fb 117c | 2420 c5fb | 1154 2428 | 4889 4c24 
  0x00000001186a4ee4: 3044 8964 | 2414 895c | 2438 c57e | 7f5c 2440 | c5fe 7f74 | 2460 c57e | 7f84 2480 | 0000 00c5 
  0x00000001186a4f04: fe7f ac24 | a000 0000 | c5fe 7f8c | 24c0 0000 

  0x00000001186a4f14: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a4f14: 0090 9090 

  0x00000001186a4f18: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a4f18: c5f8 77e8 

  0x00000001186a4f1c: ; ImmutableOopMap {rbp=Oop [0]=Oop [48]=Oop }
                      ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Objects::checkIndex@3 (line 359)
                      ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
                      ; - jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
  0x00000001186a4f1c: 2056 55f8 

  0x00000001186a4f20: ;   {external_word}
  0x00000001186a4f20: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a4f2c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a4f2c: e4f0 e81d | c0e3 f0f4 
 ;; B67: #	out( B68 ) <- in( B68 ) top-of-loop Freq: 0.245626
  0x00000001186a4f34: c4c1 f97e | ddc5 f928 | c4c4 a17e | 6f4c e110 | c4a1 7e6f | 54e2 10c5 | fe6f 6c24 | 40c5 f55c 
  0x00000001186a4f54: cdc5 fe6f 

  0x00000001186a4f58: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a4f58: 7c24 20c5 

  0x00000001186a4f5c: ;*invokestatic opCode {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x00000001186a4f5c: ed5c d7c5 | ed59 c9c5 | ed59 d2c4 | c1f9 6edd | c5e3 58d9 | c5f9 70e1 | 0ec5 e358 | dcc4 e37d 
  0x00000001186a4f7c: 19cc 01c5 | e358 dcc5 | f970 f40e | c5e3 58de | c5f9 28e0 | c5db 58e2 | c5f9 70ca | 0ec5 db58 
  0x00000001186a4f9c: e1c4 e37d | 19d1 01c5 | db58 e1c5 | f970 f10e | c5db 58e6 | 4183 c404 | 443b e70f | 8c77 ffff 
  0x00000001186a4fbc: ff90 9090 | e94e 0200 | 00c4 c1f9 | 6edd c5f9 | 28e0 c4c1 | f96e fec5 | fb10 1424 | c57e 6f4c 
  0x00000001186a4fdc: 2420 c57e | 6f54 2440 
 ;; B71: #	out( B72 ) <- in( B61 B70 ) Loop( B71-B70 ) Freq: 0.545835
  0x00000001186a4fe4: 8bf5 412b | f441 3bec | 0f4c f081 | fe80 3e00 | 0041 0f47 | f341 03f4 | c4c1 f97e | ddc5 f928 
  0x00000001186a5004: c4c4 c1f9 | 7efe c5fb | 1114 24c5 | 7e7f 4c24 | 20c5 7e7f 

  0x00000001186a5018: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a5018: 5424 4090 

  0x00000001186a501c: ;*invokevirtual reduceLanes {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
  0x00000001186a501c: 9090 9090 
 ;; B72: #	out( B72 B73 ) <- in( B71 B72 ) Loop( B72-B72 inner main of N489 strip mined) Freq: 5.45835
  0x00000001186a5020: c4a1 7e6f | 4ce1 10c4 | a17e 6f54 | e210 c5fe | 6f7c 2440 | c5f5 5ccf | c57e 6f4c 

  0x00000001186a503c: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a503c: 2420 c4c1 

  0x00000001186a5040: ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@157 (line 652)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x00000001186a5040: 6d5c d1c5 | ed59 f2c5 | 6d59 d949 | 63dc c5fe | 6f5c da30 | c5fe 6f54 | d970 c5fe | 6f4c da50 
  0x00000001186a5060: c5fe 6f6c | da70 c57e | 6f44 d930 | c5fe 6f64 | d950 c4c1 | 655c d9c5 | dd5c e7c5 | 6559 d3c5 
  0x00000001186a5080: 3d5c c7c4 | c155 5ce9 | c441 6559 | c0c5 d559 

  0x00000001186a5090: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a5090: ddc4 4175 

  0x00000001186a5094: ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@157 (line 652)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
  0x00000001186a5094: 5cc9 c5ed | 5ccf c5b5 | 59fc c5d5 | 59c9 c4c1 | 3559 e1c5 | fb58 c6c5 | 7970 f60e | c4c1 7b58 
  0x00000001186a50b4: c6c4 c37d | 19f6 01c4 | c17b 58c6 | c441 7970 | fe0e c4c1 | 7b58 c7c4 | c17b 58c2 | c441 7970 
  0x00000001186a50d4: e20e c4c1 | 7b58 c4c4 | 437d 19d4 | 01c4 c17b | 58c4 c441 | 7970 ec0e | c4c1 7b58 | c5c4 e1f9 
  0x00000001186a50f4: 7ec3 c4c1 | f96e c5c4 | c17b 58c3 | c441 7970 | eb0e c4c1 | 7b58 c5c4 | 437d 19dd | 01c4 c17b 
  0x00000001186a5114: 58c5 c441 | 7970 f50e | c4c1 7b58 | c6c4 c17b | 58c0 c441 | 7970 c80e | c4c1 7b58 | c1c4 437d 
  0x00000001186a5134: 19c1 01c4 | c17b 58c1 | c441 7970 | e10e c4c1 | 7b58 c4c5 | fb58 c7c5 | 7970 d70e | c4c1 7b58 
  0x00000001186a5154: c2c4 c37d | 19fa 01c4 | c17b 58c2 | c4c1 7970 | f20e c5fb | 58c6 c5fb | 58c1 c5f9 | 70e9 0ec5 
  0x00000001186a5174: fb58 c5c4 | e37d 19cd | 01c5 fb58 | c5c5 f970 | d50e c5fb | 58c2 c4c1 | f97e c5c4 | e1f9 6ec3 
  0x00000001186a5194: c5fb 58c4 | c5f9 70ec | 0ec5 fb58 | c5c4 e37d | 19e5 01c5 | fb58 c5c5 | f970 f50e | c5fb 58c6 
  0x00000001186a51b4: c5fb 58c3 | c5f9 70cb | 0ec5 fb58 | c1c4 e37d | 19d9 01c5 | fb58 c1c5 | f970 d10e 

  0x00000001186a51d0: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a51d0: c5fb 58c2 | 4183 c410 | 443b e690 | 9090 9090 | 0f8c 3afe | ffff 498b | 9f30 0100 

  0x00000001186a51ec: ; ImmutableOopMap {rcx=Oop rdx=Oop [8]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)
                      ;   {poll}
  0x00000001186a51ec: 0085 0344 | 3be5 0f8c | cdfd ffff 
 ;; B74: #	out( B76 B75 ) <- in( B73 )  Freq: 0.0545835
  0x00000001186a51f8: 443b cf41 | 0f4c f890 | 443b e77d | 05e9 33fd | ffff c4c1 | f96e ddc5 | f928 e0c4 | c1f9 6efe 
  0x00000001186a5218: c5fb 1014 | 2490 9090 | 453b e20f | 8d5d fbff 

  0x00000001186a5228: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a5228: ff90 9090 
 ;; B80: #	out( B80 B81 ) <- in( B79 B80 ) Loop( B80-B80 inner post of N506) Freq: 0.272918
  0x00000001186a522c: c4a1 7b10 | 44e2 10c4 | a17b 104c 

  0x00000001186a5238: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a5238: e110 c5fb 

  0x00000001186a523c: ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorOperators$OperatorImpl::opKind@13 (line 828)
                      ; - jdk.incubator.vector.VectorOperators::opKind@5 (line 409)
                      ; - jdk.incubator.vector.DoubleVector::opKind@2 (line 71)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@15 (line 630)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a523c: 5cc7 c5f3 | 5cca c5fb | 59e8 c5f3 

  0x00000001186a5248: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a5248: 59c0 c5db | 58e5 c5e3 

  0x00000001186a5250: ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.VectorOperators$OperatorImpl::opKind@6 (line 828)
                      ; - jdk.incubator.vector.VectorOperators::opKind@5 (line 409)
                      ; - jdk.incubator.vector.DoubleVector::opKind@2 (line 71)
                      ; - jdk.incubator.vector.DoubleVector::lanewiseTemplate@15 (line 630)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
                      ; - jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
                      ; - jdk.incubator.vector.DoubleVector::add@5 (line 1038)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
  0x00000001186a5250: 58d8 41ff | c445 3be2 | 7cd2 e927 

  0x00000001186a525c: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a525c: fbff ffbe | 0700 0000 

  0x00000001186a5264: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a5264: c5f8 77e8 

  0x00000001186a5268: ; ImmutableOopMap {}
                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@7 (line 15)
  0x00000001186a5268: d452 55f8 

  0x00000001186a526c: ;   {external_word}
  0x00000001186a526c: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a5278: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a5278: e4f0 e8d1 | bce3 f0f4 
 ;; B83: #	out( B12 ) <- in( B4 )  Freq: 9.99997e-07
  0x00000001186a5280: c4c1 7e6f | f0c4 c17e | 6fe8 4533 | e4e9 2ff7 

  0x00000001186a5290: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a5290: ffff be76 

  0x00000001186a5294: ;*invokestatic zero {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x00000001186a5294: ffff ff48 | ff74 2408 | 488f 0424 | 4889 5424 | 0848 894c | 2410 c5fb | 1144 2418 | c57e 7f44 
  0x00000001186a52b4: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a52b4: 2440 9090 

  0x00000001186a52b8: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a52b8: c5f8 77e8 

  0x00000001186a52bc: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@60 (line 24)
  0x00000001186a52bc: 8052 55f8 

  0x00000001186a52c0: ;   {external_word}
  0x00000001186a52c0: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a52cc: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a52cc: e4f0 e87d | bce3 f0f4 
 ;; B85: #	out( B45 ) <- in( B38 )  Freq: 3.30405e-07
  0x00000001186a52d4: 4533 e4e9 | aaf9 ffff 
 ;; B86: #	out( N1184 ) <- in( B40 B39 )  Freq: 6.60809e-07
  0x00000001186a52dc: be76 ffff | ff48 ff74 | 2408 488f | 0424 4889 | 5424 0848 | 894c 2410 | c5fb 1144 | 2418 c5fb 
  0x00000001186a52fc: 117c 2420 | c5fb 1154 | 2428 c5fe | 7f74 2440 | c5fe 7f6c | 2460 c57e | 7f84 24a0 

  0x00000001186a5318: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a5318: 0000 0090 

  0x00000001186a531c: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a531c: c5f8 77e8 

  0x00000001186a5320: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@205 (line 46)
  0x00000001186a5320: 1c52 55f8 

  0x00000001186a5324: ;   {external_word}
  0x00000001186a5324: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a5330: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a5330: e4f0 e819 

  0x00000001186a5334: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a5334: bce3 f0f4 
 ;; B87: #	out( N1184 ) <- in( B15 B13 B14 B16 )  Freq: 6.69588e-07
  0x00000001186a5338: be76 ffff 

  0x00000001186a533c: ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
                      ; - jdk.incubator.vector.DoubleVector::zero@23 (line 437)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
  0x00000001186a533c: ff48 8b6c | 2408 4889 | 1424 4889 | 4c24 08c5 | fb11 4424 | 1844 8964 | 2414 c5fe | 7f74 2420 
  0x00000001186a535c: c5fe 7f6c | 2440 c5fb | 1164 2460 | c5fb 115c | 2468 4489 

  0x00000001186a5370: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a5370: 5424 7090 

  0x00000001186a5374: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a5374: c5f8 77e8 

  0x00000001186a5378: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop }
                      ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@134 (line 32)
  0x00000001186a5378: c451 55f8 

  0x00000001186a537c: ;   {external_word}
  0x00000001186a537c: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a5388: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a5388: e4f0 e8c1 | bbe3 f0f4 
 ;; B88: #	out( N1184 ) <- in( B20 )  Freq: 1.67396e-07
  0x00000001186a5390: ;   {external_word}
  0x00000001186a5390: 48bf 3125 | c209 0100 | 0000 4883 

  0x00000001186a539c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a539c: e4f0 e8ad | bbe3 f0f4 
 ;; B89: #	out( N1184 ) <- in( B21 )  Freq: 1.67396e-07
  0x00000001186a53a4: ;   {external_word}
  0x00000001186a53a4: 48bf 3125 | c209 0100 | 0000 4883 

  0x00000001186a53b0: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a53b0: e4f0 e899 | bbe3 f0f4 
 ;; B90: #	out( N1184 ) <- in( B22 )  Freq: 1.67396e-07
  0x00000001186a53b8: ;   {external_word}
  0x00000001186a53b8: 48bf 3125 | c209 0100 | 0000 4883 

  0x00000001186a53c4: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a53c4: e4f0 e885 | bbe3 f0f4 
 ;; B91: #	out( N1184 ) <- in( B23 )  Freq: 1.67396e-07
  0x00000001186a53cc: ;   {external_word}
  0x00000001186a53cc: 48bf 3125 | c209 0100 | 0000 4883 

  0x00000001186a53d8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a53d8: e4f0 e871 | bbe3 f0f4 
 ;; B92: #	out( N1184 ) <- in( B24 )  Freq: 1.67396e-07
  0x00000001186a53e0: ;   {external_word}
  0x00000001186a53e0: 48bf 3125 | c209 0100 | 0000 4883 

  0x00000001186a53ec: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a53ec: e4f0 e85d | bbe3 f0f4 
 ;; B93: #	out( N1184 ) <- in( B25 )  Freq: 1.67396e-07
  0x00000001186a53f4: ;   {external_word}
  0x00000001186a53f4: 48bf 3125 | c209 0100 | 0000 4883 

  0x00000001186a5400: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a5400: e4f0 e849 | bbe3 f0f4 
 ;; B94: #	out( N1184 ) <- in( B26 )  Freq: 1.67395e-07
  0x00000001186a5408: ;   {external_word}
  0x00000001186a5408: 48bf 3125 | c209 0100 | 0000 4883 

  0x00000001186a5414: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a5414: e4f0 e835 | bbe3 f0f4 
 ;; B95: #	out( N1184 ) <- in( B27 )  Freq: 1.67395e-07
  0x00000001186a541c: ;   {external_word}
  0x00000001186a541c: 48bf 3125 | c209 0100 | 0000 4883 

  0x00000001186a5428: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a5428: e4f0 e821 

  0x00000001186a542c: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a542c: bbe3 f0f4 
 ;; B96: #	out( N1184 ) <- in( B48 B46 B47 B49 )  Freq: 2.21236e-07
  0x00000001186a5430: be76 ffff 

  0x00000001186a5434: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
  0x00000001186a5434: ff48 8b6c | 2408 4889 | 1424 4889 | 4c24 08c5 | fb11 7c24 | 18c5 fb11 | 5424 2044 | 8964 2414 
  0x00000001186a5454: c5fb 1164 | 2428 c5fb | 115c 2430 | 4489 5424 

  0x00000001186a5464: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a5464: 3890 9090 

  0x00000001186a5468: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a5468: c5f8 77e8 

  0x00000001186a546c: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop }
                      ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) org.jml.regression.linear.DoubleVectorLinearRegression::fit@305 (line 55)
  0x00000001186a546c: d050 55f8 

  0x00000001186a5470: ;   {external_word}
  0x00000001186a5470: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a547c: 168.682 ms/op
;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a547c: e4f0 e8cd | bae3 f0f4 
 ;; B97: #	out( N1184 ) <- in( B53 )  Freq: 5.53088e-08
  0x00000001186a5484: ;   {external_word}
  0x00000001186a5484: 48bf 3125 | c209 0100 | 0000 4883 # Warmup Iteration   6: 

  0x00000001186a5490: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a5490: e4f0 e8b9 | bae3 f0f4 
 ;; B98: #	out( N1184 ) <- in( B54 )  Freq: 5.53087e-08
  0x00000001186a5498: ;   {external_word}
  0x00000001186a5498: 48bf 3125 | c209 0100 | 0000 4883 

  0x00000001186a54a4: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a54a4: e4f0 e8a5 | bae3 f0f4 
 ;; B99: #	out( N1184 ) <- in( B55 )  Freq: 5.53087e-08
  0x00000001186a54ac: ;   {external_word}
  0x00000001186a54ac: 48bf 3125 | c209 0100 | 0000 4883 

  0x00000001186a54b8: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a54b8: e4f0 e891 | bae3 f0f4 
 ;; B100: #	out( N1184 ) <- in( B56 )  Freq: 5.53086e-08
  0x00000001186a54c0: ;   {external_word}
  0x00000001186a54c0: 48bf 3125 | c209 0100 | 0000 4883 

  0x00000001186a54cc: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a54cc: e4f0 e87d | bae3 f0f4 
 ;; B101: #	out( N1184 ) <- in( B57 )  Freq: 5.53085e-08
  0x00000001186a54d4: ;   {external_word}
  0x00000001186a54d4: 48bf 3125 | c209 0100 | 0000 4883 

  0x00000001186a54e0: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a54e0: e4f0 e869 | bae3 f0f4 
 ;; B102: #	out( N1184 ) <- in( B58 )  Freq: 5.53085e-08
  0x00000001186a54e8: ;   {external_word}
  0x00000001186a54e8: 48bf 3125 | c209 0100 | 0000 4883 

  0x00000001186a54f4: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a54f4: e4f0 e855 | bae3 f0f4 
 ;; B103: #	out( N1184 ) <- in( B59 )  Freq: 5.53084e-08
  0x00000001186a54fc: ;   {external_word}
  0x00000001186a54fc: 48bf 3125 | c209 0100 | 0000 4883 

  0x00000001186a5508: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a5508: e4f0 e841 | bae3 f0f4 
 ;; B104: #	out( N1184 ) <- in( B60 )  Freq: 5.53084e-08
  0x00000001186a5510: ;   {external_word}
  0x00000001186a5510: 48bf 3125 | c209 0100 | 0000 4883 

  0x00000001186a551c: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a551c: e4f0 e82d | bae3 f0f4 
 ;; B105: #	out( N1184 ) <- in( B1 )  Freq: 1.01328e-06
  0x00000001186a5524: bef6 ffff 

  0x00000001186a5528: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a5528: ff90 9090 

  0x00000001186a552c: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a552c: c5f8 77e8 

  0x00000001186a5530: ; ImmutableOopMap {}
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@1 (line 15)
  0x00000001186a5530: 0c50 55f8 

  0x00000001186a5534: ;   {external_word}
  0x00000001186a5534: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a5540: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a5540: e4f0 e809 | bae3 f0f4 
 ;; B106: #	out( N1184 ) <- in( B2 )  Freq: 1.01328e-06
  0x00000001186a5548: bef6 ffff 

  0x00000001186a554c: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a554c: ff90 9090 

  0x00000001186a5550: ;   {runtime_call UncommonTrapBlob}
  0x00000001186a5550: c5f8 77e8 

  0x00000001186a5554: ; ImmutableOopMap {}
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@3 (line 15)
  0x00000001186a5554: e84f 55f8 

  0x00000001186a5558: ;   {external_word}
  0x00000001186a5558: 48bf 7777 | ba09 0100 | 0000 4883 

  0x00000001186a5564: ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001186a5564: e4f0 e8e5 

  0x00000001186a5568: ;*invokestatic reductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
                      ; - jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
                      ; - org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
  0x00000001186a5568: b9e3 f0f4 

  0x00000001186a556c: ;   {internal_word}
  0x00000001186a556c: 49ba ae4d | 6a18 0100 | 0000 4d89 | 97e8 0300 

  0x00000001186a557c: ;   {runtime_call SafepointBlob}
  0x00000001186a557c: 00e9 9e5c | 55f8 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 
  0x00000001186a559c: f4f4 f4f4 
[Exception Handler]
  0x00000001186a55a0: ;   {no_reloc}
  0x00000001186a55a0: e97b fb49 | f8e8 0000 | 0000 4883 

  0x00000001186a55ac: ;   {runtime_call DeoptimizationBlob}
  0x00000001186a55ac: 2c24 05e9 | ac52 55f8 | f4f4 f4f4 
[/MachCode]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x00000001186a55b8:   0x000000014e403a78 a 'java/lang/Class'{0x000000014e403a78} = 'jdk/incubator/vector/Double256Vector'
  0x00000001186a55c0:   0x000000014e403a08 a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000014e403a08}
  0x00000001186a55c8:   0x000000011ff58b48 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011ff58b48}
  0x00000001186a55d0:   0x00000001200a7938 a 'java/lang/Class'{0x00000001200a7938} = 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x00000001186a55d8:   0x000000026788fe18 {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
  0x00000001186a55e0:   0x0000000267b3fa08 {method} {0x0000000267b3fa08} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00000001186a55e8:   0x0000000267b96588 {method} {0x0000000267b96588} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x00000001186a55f0:   0x0000000267b6f330 {method} {0x0000000267b6f330} 'reduceLanes' '(Ljdk/incubator/vector/VectorOperators$Associative;)D' in 'jdk/incubator/vector/Double256Vector'
  0x00000001186a55f8:   0x0000000267b1d348 {method} {0x0000000267b1d348} 'reduceLanesTemplate' '(Ljdk/incubator/vector/VectorOperators$Associative;)D' in 'jdk/incubator/vector/DoubleVector'
  0x00000001186a5600:   0x0000000267b17448 {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x00000001186a5608:   0x000000011040aa78 {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
  0x00000001186a5610:   0x0000000267b18ef0 {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x00000001186a5618:   0x0000000267b72458 {method} {0x0000000267b72458} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
  0x00000001186a5620:   0x0000000267b6f070 {method} {0x0000000267b6f070} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/Double256Vector;' in 'jdk/incubator/vector/Double256Vector'
  0x00000001186a5628:   0x0000000267b17fb0 {method} {0x0000000267b17fb0} 'lanewiseTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x00000001186a5630:   0x0000000267b1ded0 {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
  0x00000001186a5638:   0x0000000267b710c0 {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
  0x00000001186a5640:   0x0000000267b39558 {method} {0x0000000267b39558} 'vectorType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
  0x00000001186a5648:   0x0000000267b153c0 {method} {0x0000000267b153c0} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;)I' in 'jdk/incubator/vector/DoubleVector'
  0x00000001186a5650:   0x0000000267b36008 {method} {0x0000000267b36008} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;II)I' in 'jdk/incubator/vector/VectorOperators'
  0x00000001186a5658:   0x0000000267a85e38 {method} {0x0000000267a85e38} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00000001186a5660:   0x0000000267a85f10 {method} {0x0000000267a85f10} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00000001186a5668:   0x0000000267b96280 {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x00000001186a5670:   0x000000011015f0e0 {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
  0x00000001186a5678:   0x0000000267b15588 {method} {0x0000000267b15588} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/DoubleVector'
  0x00000001186a5680:   0x0000000267b360e8 {method} {0x0000000267b360e8} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/VectorOperators'
  0x00000001186a5688:   0x0000000267a862a0 {method} {0x0000000267a862a0} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x00000001186a5690:   0x0000000225d4eb10 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
  0x00000001186a5698:   0x0000000267b3ef30 {method} {0x0000000267b3ef30} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  0x00000001186a56a0:   0x0000000267b33200 {method} {0x0000000267b33200} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
  0x00000001186a56a8:   0x0000000225d5a3b0 'jdk/incubator/vector/VectorOperators$BinaryImpl'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x00000001186a48bf offset=ffffffff bits=0):
PcDesc(pc=0x00000001186a48ef offset=2f bits=0):   jdk.incubator.vector.VectorIntrinsics::roundDown@5 (line 106)
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
PcDesc(pc=0x00000001186a4920 offset=60 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a4925 offset=65 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
PcDesc(pc=0x00000001186a492a offset=6a bits=0):   jdk.incubator.vector.DoubleVector::zero@13 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
PcDesc(pc=0x00000001186a4957 offset=97 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a4970 offset=b0 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@63 (line 25)
PcDesc(pc=0x00000001186a4980 offset=c0 bits=0):   jdk.incubator.vector.DoubleVector::zero@19 (line 437)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
PcDesc(pc=0x00000001186a4989 offset=c9 bits=0):   jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
PcDesc(pc=0x00000001186a4990 offset=d0 bits=0):   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
PcDesc(pc=0x00000001186a4999 offset=d9 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a49a0 offset=e0 bits=0):   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
PcDesc(pc=0x00000001186a49a7 offset=e7 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a49ab offset=eb bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)  reexecute=true
   Locals
    - l0: stack[8],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: 0.000000
    - l5: 0
    - l6: 0.000000
    - l7: reg r12 [24],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: obj[210]
    - l11: obj[211]
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 210: jdk.incubator.vector.Double256Vector reg xmm2 [80]Wrong location type 7
    - 211: jdk.incubator.vector.Double256Vector reg xmm1 [64]Wrong location type 7
PcDesc(pc=0x00000001186a49b7 offset=f7 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a49c1 offset=101 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
PcDesc(pc=0x00000001186a4a1d offset=15d bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a4a25 offset=165 bits=0):   jdk.incubator.vector.VectorIntrinsics::roundDown@11 (line 108)
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
PcDesc(pc=0x00000001186a4a28 offset=168 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a4a68 offset=1a8 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a4ad0 offset=210 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a4af8 offset=238 bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@0
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@51 (line 2308)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
PcDesc(pc=0x00000001186a4b13 offset=253 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a4b20 offset=260 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x00000001186a4b85 offset=2c5 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a4b8c offset=2cc bits=0):   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
PcDesc(pc=0x00000001186a4b93 offset=2d3 bits=0):   jdk.incubator.vector.DoubleVector::zero@19 (line 437)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
PcDesc(pc=0x00000001186a4bad offset=2ed bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)  reexecute=true
   Locals
    - l0: stack[8],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: reg xmm7 [160],double
    - l5: 0
    - l6: reg xmm1 [64],double
    - l7: reg r12 [24],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: obj[322]
    - l11: obj[323]
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 322: jdk.incubator.vector.Double256Vector reg xmm5 [128]Wrong location type 7
    - 323: jdk.incubator.vector.Double256Vector reg xmm6 [144]Wrong location type 7
PcDesc(pc=0x00000001186a4bc5 offset=305 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a4bc8 offset=308 bits=0):   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
PcDesc(pc=0x00000001186a4bea offset=32a bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a4bef offset=32f bits=0):   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
PcDesc(pc=0x00000001186a4bf3 offset=333 bits=0):   jdk.incubator.vector.VectorIntrinsics::roundDown@5 (line 106)
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
PcDesc(pc=0x00000001186a4bf7 offset=337 bits=0):   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
PcDesc(pc=0x00000001186a4bfc offset=33c bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
PcDesc(pc=0x00000001186a4c01 offset=341 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@60 (line 24)
PcDesc(pc=0x00000001186a4c09 offset=349 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a4c1f offset=35f bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@63 (line 25)
PcDesc(pc=0x00000001186a4c30 offset=370 bits=0):   jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
PcDesc(pc=0x00000001186a4c39 offset=379 bits=0):   jdk.incubator.vector.DoubleVector::zero@6 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
PcDesc(pc=0x00000001186a4c40 offset=380 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a4c45 offset=385 bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::vectorType@0 (line 3399)
   jdk.incubator.vector.DoubleVector::zero@6 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
PcDesc(pc=0x00000001186a4c69 offset=3a9 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a4c6e offset=3ae bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@-1 (line 15)
PcDesc(pc=0x00000001186a4c76 offset=3b6 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)  reexecute=true
   Locals
    - l0: stack[8],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r12 [24],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: obj[337]
    - l11: obj[338]
    - l12: 0
    - l13: reg xmm7 [160],double
    - l14: 0
    - l15: reg xmm2 [80],double
    - l16: 0
    - l17: 0.000000
    - l18: 0
    - l19: 0.000000
    - l20: obj[352]
    - l21: obj[353]
    - l22: empty
   Objects
    - 337: jdk.incubator.vector.Double256Vector reg xmm5 [128]Wrong location type 7
    - 338: jdk.incubator.vector.Double256Vector reg xmm6 [144]Wrong location type 7
    - 352: jdk.incubator.vector.Double256Vector reg xmm11 [224]Wrong location type 7
    - 353: jdk.incubator.vector.Double256Vector reg xmm8 [176]Wrong location type 7
PcDesc(pc=0x00000001186a4c84 offset=3c4 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a4c86 offset=3c6 bits=0):   jdk.incubator.vector.VectorIntrinsics::roundDown@5 (line 106)
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
PcDesc(pc=0x00000001186a4cd9 offset=419 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a4cdc offset=41c bits=0):   jdk.incubator.vector.VectorOperators$OperatorImpl::opCodeRaw@0 (line 786)
   jdk.incubator.vector.VectorOperators$OperatorImpl::opCode@1 (line 774)
   jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a4cee offset=42e bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a4cf2 offset=432 bits=0):   jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a4cfa offset=43a bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a4cfe offset=43e bits=0):   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a4d86 offset=4c6 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a4d8a offset=4ca bits=0):   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
PcDesc(pc=0x00000001186a4d8f offset=4cf bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a4d95 offset=4d5 bits=0):   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
PcDesc(pc=0x00000001186a4d9d offset=4dd bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a4da3 offset=4e3 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@3 (line 15)
PcDesc(pc=0x00000001186a4dbc offset=4fc bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a4dc1 offset=501 bits=0):   jdk.incubator.vector.DoubleVector::zero@19 (line 437)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
PcDesc(pc=0x00000001186a4deb offset=52b bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a4df4 offset=534 bits=0):   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[20]
    - @1: stack[40]
    - @2: NULL
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000014e403a08}
    - l1: stack[32],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[32],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: 0.000000
    - l5: 0
    - l6: 0.000000
    - l7: stack[20]
    - l8: 0
    - l9: stack[24],double
    - l10: empty
    - l11: obj[443]
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: obj[444]
   Objects
    - 443: jdk.incubator.vector.Double256Vector stack[64]Wrong location type 7
    - 444: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
PcDesc(pc=0x00000001186a4e08 offset=548 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a4e0d offset=54d bits=0):   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
PcDesc(pc=0x00000001186a4e36 offset=576 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a4e40 offset=580 bits=0):   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[20]
    - @1: stack[40]
    - @2: NULL
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000014e403a08}
    - l1: stack[32],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[32],oop
    - l3: 0
    - l4: 0.000000
    - l5: 0
    - l6: 0.000000
    - l7: stack[20]
    - l8: 0
    - l9: stack[24],double
    - l10: obj[673]
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: obj[674]
   Objects
    - 673: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
    - 674: jdk.incubator.vector.Double256Vector stack[64]Wrong location type 7
PcDesc(pc=0x00000001186a4e54 offset=594 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a4e59 offset=599 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
PcDesc(pc=0x00000001186a4ea1 offset=5e1 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a4eac offset=5ec bits=0):   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[20]
    - @1: stack[56]
    - @2: NULL
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000014e403a08}
    - l1: stack[48],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[48],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[20]
    - l8: 0
    - l9: stack[24],double
    - l10: obj[389]
    - l11: obj[390]
    - l12: 0
    - l13: stack[32],double
    - l14: 0
    - l15: stack[40],double
    - l16: 0
    - l17: 0.000000
    - l18: 0
    - l19: 0.000000
    - l20: obj[391]
    - l21: obj[392]
    - l22: empty
   Objects
    - 389: jdk.incubator.vector.Double256Vector stack[160]Wrong location type 7
    - 390: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
    - 391: jdk.incubator.vector.Double256Vector stack[64]Wrong location type 7
    - 392: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
PcDesc(pc=0x00000001186a4ec0 offset=600 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a4ec5 offset=605 bits=0):   jdk.incubator.vector.DoubleVector$DoubleSpecies::vectorType@-1 (line 3399)
   jdk.incubator.vector.DoubleVector::zero@6 (line 436)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
PcDesc(pc=0x00000001186a4f15 offset=655 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a4f20 offset=660 bits=0):   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[20]
    - @1: stack[56]
    - @2: NULL
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000014e403a08}
    - l1: stack[48],oop
    - l2: empty
    - l3: empty
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[48],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[20]
    - l8: 0
    - l9: stack[24],double
    - l10: obj[405]
    - l11: obj[406]
    - l12: 0
    - l13: stack[32],double
    - l14: 0
    - l15: stack[40],double
    - l16: 0
    - l17: 0.000000
    - l18: 0
    - l19: 0.000000
    - l20: empty
    - l21: obj[407]
    - l22: obj[408]
   Expression stack
    - @0: obj[409]
   Objects
    - 405: jdk.incubator.vector.Double256Vector stack[160]Wrong location type 7
    - 406: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
    - 407: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
    - 408: jdk.incubator.vector.Double256Vector stack[192]Wrong location type 7
    - 409: jdk.incubator.vector.Double256Vector stack[64]Wrong location type 7
PcDesc(pc=0x00000001186a4f5b offset=69b bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a4f5f offset=69f bits=0):   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x00000001186a501b offset=75b bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a5020 offset=760 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
PcDesc(pc=0x00000001186a503e offset=77e bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a5043 offset=783 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@157 (line 652)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x00000001186a5091 offset=7d1 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a5096 offset=7d6 bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@157 (line 652)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
PcDesc(pc=0x00000001186a51d4 offset=914 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a51ed offset=92d bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)  reexecute=true
   Locals
    - l0: stack[8],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r12 [24],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: reg r14 [28],double
    - l14: 0
    - l15: stack[0],double
    - l16: 0
    - l17: reg xmm0 [48],double
    - l18: 0
    - l19: reg r13 [26],double
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x00000001186a5229 offset=969 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a522c offset=96c bits=0):   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a523a offset=97a bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a523e offset=97e bits=0):   jdk.incubator.vector.VectorOperators$OperatorImpl::opKind@13 (line 828)
   jdk.incubator.vector.VectorOperators::opKind@5 (line 409)
   jdk.incubator.vector.DoubleVector::opKind@2 (line 71)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@15 (line 630)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a524a offset=98a bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a5252 offset=992 bits=0):   jdk.incubator.vector.VectorOperators$OperatorImpl::opKind@6 (line 828)
   jdk.incubator.vector.VectorOperators::opKind@5 (line 409)
   jdk.incubator.vector.DoubleVector::opKind@2 (line 71)
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@15 (line 630)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
PcDesc(pc=0x00000001186a525f offset=99f bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a526c offset=9ac bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@7 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
PcDesc(pc=0x00000001186a5292 offset=9d2 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a5297 offset=9d7 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
PcDesc(pc=0x00000001186a52b6 offset=9f6 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a52c0 offset=a00 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@60 (line 24)  reexecute=true
   Locals
    - l0: stack[0],oop
    - l1: stack[8],oop
    - l2: stack[16],oop
    - l3: 0
    - l4: 0.000000
    - l5: 0
    - l6: 0.000000
    - l7: 0
    - l8: 0
    - l9: stack[24],double
    - l10: obj[421]
    - l11: obj[422]
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: reg rbp [10],int
   Objects
    - 421: jdk.incubator.vector.Double256Vector stack[64]Wrong location type 7
    - 422: jdk.incubator.vector.Double256Vector stack[64]Wrong location type 7
PcDesc(pc=0x00000001186a531b offset=a5b bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a5324 offset=a64 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@205 (line 46)  reexecute=true
   Locals
    - l0: stack[0],oop
    - l1: stack[8],oop
    - l2: stack[16],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[24],double
    - l10: obj[657]
    - l11: obj[658]
    - l12: 0
    - l13: stack[32],double
    - l14: 0
    - l15: stack[40],double
    - l16: 0
    - l17: 0.000000
    - l18: 0
    - l19: 0.000000
    - l20: obj[659]
    - l21: obj[660]
    - l22: empty
   Expression stack
    - @0: reg rbp [10],int
   Objects
    - 657: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
    - 658: jdk.incubator.vector.Double256Vector stack[64]Wrong location type 7
    - 659: jdk.incubator.vector.Double256Vector stack[160]Wrong location type 7
    - 660: jdk.incubator.vector.Double256Vector stack[160]Wrong location type 7
PcDesc(pc=0x00000001186a5338 offset=a78 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a533d offset=a7d bits=0):   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
PcDesc(pc=0x00000001186a5373 offset=ab3 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a537c offset=abc bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@134 (line 32)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[96],double
    - l5: 0
    - l6: stack[104],double
    - l7: stack[20]
    - l8: 0
    - l9: stack[24],double
    - l10: obj[644]
    - l11: obj[645]
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[20]
    - @1: stack[112]
   Objects
    - 644: jdk.incubator.vector.Double256Vector stack[64]Wrong location type 7
    - 645: jdk.incubator.vector.Double256Vector stack[32]Wrong location type 7
PcDesc(pc=0x00000001186a5430 offset=b70 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a5435 offset=b75 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
PcDesc(pc=0x00000001186a5465 offset=ba5 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a5470 offset=bb0 bits=1):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@305 (line 55)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[20]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[24],double
    - l14: 0
    - l15: stack[32],double
    - l16: 0
    - l17: stack[40],double
    - l18: 0
    - l19: stack[48],double
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[20]
    - @1: stack[56]
PcDesc(pc=0x00000001186a5529 offset=c69 bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a5534 offset=c74 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@1 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: NULL
PcDesc(pc=0x00000001186a554d offset=c8d bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a5558 offset=c98 bits=0):   org.jml.regression.linear.DoubleVectorLinearRegression::fit@3 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: empty
    - @1: NULL
PcDesc(pc=0x00000001186a556c offset=cac bits=0):   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
PcDesc(pc=0x00000001186a55d9 offset=d19 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 15 OopMaps

ImmutableOopMap {rcx=Oop rdx=Oop [8]=Oop } pc offsets: 235 749 950 
ImmutableOopMap {rbp=Oop [8]=Oop [32]=Oop } pc offsets: 1332 
ImmutableOopMap {rbp=Oop [0]=Oop [32]=Oop } pc offsets: 1408 
ImmutableOopMap {rbp=Oop [8]=Oop [48]=Oop } pc offsets: 1516 
ImmutableOopMap {rbp=Oop [0]=Oop [48]=Oop } pc offsets: 1632 
ImmutableOopMap {rcx=Oop rdx=Oop [8]=Oop } pc offsets: 2349 
ImmutableOopMap {} pc offsets: 2476 
ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop } pc offsets: 2560 2660 
ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop } pc offsets: 2748 2992 
ImmutableOopMap {} pc offsets: 3188 3224 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x00000001186a48ef offset=2f):
   jdk.incubator.vector.VectorIntrinsics::roundDown@5 (line 106)
ScopeDesc(pc=0x00000001186a48ef offset=2f):
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
ScopeDesc(pc=0x00000001186a48ef offset=2f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
ScopeDesc(pc=0x00000001186a4920 offset=60):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a4920 offset=60):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a4920 offset=60):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a4925 offset=65):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
ScopeDesc(pc=0x00000001186a492a offset=6a):
   jdk.incubator.vector.DoubleVector::zero@13 (line 436)
ScopeDesc(pc=0x00000001186a492a offset=6a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
ScopeDesc(pc=0x00000001186a4957 offset=97):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a4957 offset=97):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a4957 offset=97):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a4970 offset=b0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@63 (line 25)
ScopeDesc(pc=0x00000001186a4980 offset=c0):
   jdk.incubator.vector.DoubleVector::zero@19 (line 437)
ScopeDesc(pc=0x00000001186a4980 offset=c0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
ScopeDesc(pc=0x00000001186a4989 offset=c9):
   jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
ScopeDesc(pc=0x00000001186a4989 offset=c9):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
ScopeDesc(pc=0x00000001186a4990 offset=d0):
   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
ScopeDesc(pc=0x00000001186a4990 offset=d0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
ScopeDesc(pc=0x00000001186a4999 offset=d9):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a4999 offset=d9):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a4999 offset=d9):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a49a0 offset=e0):
   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
ScopeDesc(pc=0x00000001186a49a0 offset=e0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
ScopeDesc(pc=0x00000001186a49a7 offset=e7):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a49a7 offset=e7):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a49a7 offset=e7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a49ab offset=eb):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@103 (line 24)  reexecute=true
   Locals
    - l0: stack[8],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: 0.000000
    - l5: 0
    - l6: 0.000000
    - l7: reg r12 [24],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: obj[210]
    - l11: obj[211]
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 210: jdk.incubator.vector.Double256Vector reg xmm2 [80]Wrong location type 7
    - 211: jdk.incubator.vector.Double256Vector reg xmm1 [64]Wrong location type 7
ScopeDesc(pc=0x00000001186a49b7 offset=f7):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a49b7 offset=f7):
   jdk.incuba15.732 ms/op
tor.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a49b7 offset=f7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a49c1 offset=101):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
ScopeDesc(pc=0x00000001186a4a1d offset=15d):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a4a1d offset=15d):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a4a1d offset=15d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a4a25 offset=165):
   jdk.incubator.vector.VectorIntrinsics::roundDown@11 (line 108)
ScopeDesc(pc=0x00000001186a4a25 offset=165):
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
ScopeDesc(pc=0x00000001186a4a25 offset=165):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
ScopeDesc(pc=0x00000001186a4a28 offse# Warmup Iteration   7: t=168):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a4a28 offset=168):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a4a28 offset=168):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a4a68 offset=1a8):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a4ad0 offset=210):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a4ad0 offset=210):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a4ad0 offset=210):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a4af8 offset=238):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@0
ScopeDesc(pc=0x00000001186a4af8 offset=238):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@51 (line 2308)
ScopeDesc(pc=0x00000001186a4af8 offset=238):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a4af8 offset=238):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
ScopeDesc(pc=0x00000001186a4b13 offset=253):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a4b13 offset=253):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a4b13 offset=253):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a4b20 offset=260):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
ScopeDesc(pc=0x00000001186a4b20 offset=260):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a4b20 offset=260):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a4b20 offset=260):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a4b20 offset=260):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x00000001186a4b85 offset=2c5):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a4b85 offset=2c5):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a4b85 offset=2c5):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a4b8c offset=2cc):
   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
ScopeDesc(pc=0x00000001186a4b8c offset=2cc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
ScopeDesc(pc=0x00000001186a4b93 offset=2d3):
   jdk.incubator.vector.DoubleVector::zero@19 (line 437)
ScopeDesc(pc=0x00000001186a4b93 offset=2d3):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
ScopeDesc(pc=0x00000001186a4bad offset=2ed):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@156 (line 32)  reexecute=true
   Locals
    - l0: stack[8],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: 0
    - l4: reg xmm7 [160],double
    - l5: 0
    - l6: reg xmm1 [64],double
    - l7: reg r12 [24],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: obj[322]
    - l11: obj[323]
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Objects
    - 322: jdk.incubator.vector.Double256Vector reg xmm5 [128]Wrong location type 7
    - 323: jdk.incubator.vector.Double256Vector reg xmm6 [144]Wrong location type 7
ScopeDesc(pc=0x00000001186a4bc5 offset=305):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a4bc5 offset=305):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a4bc5 offset=305):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a4bc8 offset=308):
   jdk.incubator.vector.Double256Vector::fromArray0@3 (line 777)
ScopeDesc(pc=0x00000001186a4bc8 offset=308):
   jdk.incubator.vector.DoubleVector::fromArray@24 (line 2564)
ScopeDesc(pc=0x00000001186a4bc8 offset=308):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
ScopeDesc(pc=0x00000001186a4bea offset=32a):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a4bea offset=32a):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a4bea offset=32a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a4bef offset=32f):
   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
ScopeDesc(pc=0x00000001186a4bef offset=32f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
ScopeDesc(pc=0x00000001186a4bf3 offset=333):
   jdk.incubator.vector.VectorIntrinsics::roundDown@5 (line 106)
ScopeDesc(pc=0x00000001186a4bf3 offset=333):
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
ScopeDesc(pc=0x00000001186a4bf3 offset=333):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
ScopeDesc(pc=0x00000001186a4bf7 offset=337):
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
ScopeDesc(pc=0x00000001186a4bf7 offset=337):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
ScopeDesc(pc=0x00000001186a4bfc offset=33c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@49 (line 23)
ScopeDesc(pc=0x00000001186a4c01 offset=341):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@60 (line 24)
ScopeDesc(pc=0x00000001186a4c09 offset=349):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a4c09 offset=349):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a4c09 offset=349):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a4c1f offset=35f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@63 (line 25)
ScopeDesc(pc=0x00000001186a4c30 offset=370):
   jdk.incubator.vector.DoubleVector::zero@-1 (line 435)
ScopeDesc(pc=0x00000001186a4c30 offset=370):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
ScopeDesc(pc=0x00000001186a4c39 offset=379):
   jdk.incubator.vector.DoubleVector::zero@6 (line 436)
ScopeDesc(pc=0x00000001186a4c39 offset=379):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
ScopeDesc(pc=0x00000001186a4c40 offset=380):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a4c40 offset=380):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a4c40 offset=380):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a4c45 offset=385):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::vectorType@0 (line 3399)
ScopeDesc(pc=0x00000001186a4c45 offset=385):
   jdk.incubator.vector.DoubleVector::zero@6 (line 436)
ScopeDesc(pc=0x00000001186a4c45 offset=385):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
ScopeDesc(pc=0x00000001186a4c69 offset=3a9):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a4c69 offset=3a9):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a4c69 offset=3a9):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a4c6e offset=3ae):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@-1 (line 15)
ScopeDesc(pc=0x00000001186a4c76 offset=3b6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@272 (line 46)  reexecute=true
   Locals
    - l0: stack[8],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r12 [24],int
    - l8: 0
    - l9: reg xmm0 [48],double
    - l10: obj[337]
    - l11: obj[338]
    - l12: 0
    - l13: reg xmm7 [160],double
    - l14: 0
    - l15: reg xmm2 [80],double
    - l16: 0
    - l17: 0.000000
    - l18: 0
    - l19: 0.000000
    - l20: obj[352]
    - l21: obj[353]
    - l22: empty
   Objects
    - 337: jdk.incubator.vector.Double256Vector reg xmm5 [128]Wrong location type 7
    - 338: jdk.incubator.vector.Double256Vector reg xmm6 [144]Wrong location type 7
    - 352: jdk.incubator.vector.Double256Vector reg xmm11 [224]Wrong location type 7
    - 353: jdk.incubator.vector.Double256Vector reg xmm8 [176]Wrong location type 7
ScopeDesc(pc=0x00000001186a4c84 offset=3c4):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a4c84 offset=3c4):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a4c84 offset=3c4):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a4c86 offset=3c6):
   jdk.incubator.vector.VectorIntrinsics::roundDown@5 (line 106)
ScopeDesc(pc=0x00000001186a4c86 offset=3c6):
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
ScopeDesc(pc=0x00000001186a4c86 offset=3c6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
ScopeDesc(pc=0x00000001186a4cd9 offset=419):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a4cd9 offset=419):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a4cd9 offset=419):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a4cdc offset=41c):
   jdk.incubator.vector.VectorOperators$OperatorImpl::opCodeRaw@0 (line 786)
ScopeDesc(pc=0x00000001186a4cdc offset=41c):
   jdk.incubator.vector.VectorOperators$OperatorImpl::opCode@1 (line 774)
ScopeDesc(pc=0x00000001186a4cdc offset=41c):
   jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
ScopeDesc(pc=0x00000001186a4cdc offset=41c):
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
ScopeDesc(pc=0x00000001186a4cdc offset=41c):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
ScopeDesc(pc=0x00000001186a4cdc offset=41c):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a4cdc offset=41c):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a4cdc offset=41c):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a4cdc offset=41c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a4cee offset=42e):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a4cee offset=42e):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a4cee offset=42e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a4cf2 offset=432):
   jdk.incubator.vector.VectorOperators::opCode@6 (line 403)
ScopeDesc(pc=0x00000001186a4cf2 offset=432):
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
ScopeDesc(pc=0x00000001186a4cf2 offset=432):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
ScopeDesc(pc=0x00000001186a4cf2 offset=432):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a4cf2 offset=432):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a4cf2 offset=432):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a4cf2 offset=432):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a4cfa offset=43a):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a4cfa offset=43a):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a4cfa offset=43a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a4cfe offset=43e):
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
ScopeDesc(pc=0x00000001186a4cfe offset=43e):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
ScopeDesc(pc=0x00000001186a4cfe offset=43e):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a4cfe offset=43e):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a4cfe offset=43e):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a4cfe offset=43e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a4d86 offset=4c6):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a4d86 offset=4c6):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a4d86 offset=4c6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a4d8a offset=4ca):
   jdk.incubator.vector.DoubleVector::zero@31 (line 436)
ScopeDesc(pc=0x00000001186a4d8a offset=4ca):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
ScopeDesc(pc=0x00000001186a4d8f offset=4cf):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a4d8f offset=4cf):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a4d8f offset=4cf):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a4d95 offset=4d5):
   jdk.incubator.vector.AbstractSpecies::loopBound@5 (line 203)
ScopeDesc(pc=0x00000001186a4d95 offset=4d5):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@30 (line 21)
ScopeDesc(pc=0x00000001186a4d9d offset=4dd):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a4d9d offset=4dd):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a4d9d offset=4dd):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a4da3 offset=4e3):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@3 (line 15)
ScopeDesc(pc=0x00000001186a4dbc offset=4fc):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a4dbc offset=4fc):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a4dbc offset=4fc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a4dc1 offset=501):
   jdk.incubator.vector.DoubleVector::zero@19 (line 437)
ScopeDesc(pc=0x00000001186a4dc1 offset=501):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
ScopeDesc(pc=0x00000001186a4deb offset=52b):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a4deb offset=52b):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a4deb offset=52b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a4df4 offset=534):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[20]
    - @1: stack[40]
    - @2: NULL
ScopeDesc(pc=0x00000001186a4df4 offset=534):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a4df4 offset=534):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000014e403a08}
    - l1: stack[32],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00000001186a4df4 offset=534):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@71 (line 25)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[32],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: 0.000000
    - l5: 0
    - l6: 0.000000
    - l7: stack[20]
    - l8: 0
    - l9: stack[24],double
    - l10: empty
    - l11: obj[443]
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: obj[444]
   Objects
    - 443: jdk.incubator.vector.Double256Vector stack[64]Wrong location type 7
    - 444: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
ScopeDesc(pc=0x00000001186a4e08 offset=548):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a4e08 offset=548):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a4e08 offset=548):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a4e0d offset=54d):
   jdk.incubator.vector.DoubleVector::zero@28 (line 436)
ScopeDesc(pc=0x00000001186a4e0d offset=54d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
ScopeDesc(pc=0x00000001186a4e36 offset=576):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a4e36 offset=576):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a4e36 offset=576):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a4e40 offset=580):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[20]
    - @1: stack[40]
    - @2: NULL
ScopeDesc(pc=0x00000001186a4e40 offset=580):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a4e40 offset=580):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000014e403a08}
    - l1: stack[32],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00000001186a4e40 offset=580):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@87 (line 26)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[32],oop
    - l3: 0
    - l4: 0.000000
    - l5: 0
    - l6: 0.000000
    - l7: stack[20]
    - l8: 0
    - l9: stack[24],double
    - l10: obj[673]
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: obj[674]
   Objects
    - 673: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
    - 674: jdk.incubator.vector.Double256Vector stack[64]Wrong location type 7
ScopeDesc(pc=0x00000001186a4e54 offset=594):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a4e54 offset=594):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a4e54 offset=594):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a4e59 offset=599):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
ScopeDesc(pc=0x00000001186a4ea1 offset=5e1):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a4ea1 offset=5e1):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a4ea1 offset=5e1):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a4eac offset=5ec):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[20]
    - @1: stack[56]
    - @2: NULL
ScopeDesc(pc=0x00000001186a4eac offset=5ec):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a4eac offset=5ec):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000014e403a08}
    - l1: stack[48],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00000001186a4eac offset=5ec):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@214 (line 47)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[48],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[20]
    - l8: 0
    - l9: stack[24],double
    - l10: obj[389]
    - l11: obj[390]
    - l12: 0
    - l13: stack[32],double
    - l14: 0
    - l15: stack[40],double
    - l16: 0
    - l17: 0.000000
    - l18: 0
    - l19: 0.000000
    - l20: obj[391]
    - l21: obj[392]
    - l22: empty
   Objects
    - 389: jdk.incubator.vector.Double256Vector stack[160]Wrong location type 7
    - 390: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
    - 391: jdk.incubator.vector.Double256Vector stack[64]Wrong location type 7
    - 392: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
ScopeDesc(pc=0x00000001186a4ec0 offset=600):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a4ec0 offset=600):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a4ec0 offset=600):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a4ec5 offset=605):
   jdk.incubator.vector.DoubleVector$DoubleSpecies::vectorType@-1 (line 3399)
ScopeDesc(pc=0x00000001186a4ec5 offset=605):
   jdk.incubator.vector.DoubleVector::zero@6 (line 436)
ScopeDesc(pc=0x00000001186a4ec5 offset=605):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
ScopeDesc(pc=0x00000001186a4f15 offset=655):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a4f15 offset=655):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a4f15 offset=655):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a4f20 offset=660):
   java.util.Objects::checkIndex@3 (line 359)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[20]
    - @1: stack[56]
    - @2: NULL
ScopeDesc(pc=0x00000001186a4f20 offset=660):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 74)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x00000001186a4f20 offset=660):
   jdk.incubator.vector.DoubleVector::fromArray@9 (line 2562)
   Locals
    - l0: a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000014e403a08}
    - l1: stack[48],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x00000001186a4f20 offset=660):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@232 (line 48)
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[48],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[20]
    - l8: 0
    - l9: stack[24],double
    - l10: obj[405]
    - l11: obj[406]
    - l12: 0
    - l13: stack[32],double
    - l14: 0
    - l15: stack[40],double
    - l16: 0
    - l17: 0.000000
    - l18: 0
    - l19: 0.000000
    - l20: empty
    - l21: obj[407]
    - l22: obj[408]
   Expression stack
    - @0: obj[409]
   Objects
    - 405: jdk.incubator.vector.Double256Vector stack[160]Wrong location type 7
    - 406: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
    - 407: jdk.incubator.vector.Double256Vector stack[128]Wrong location type 7
    - 408: jdk.incubator.vector.Double256Vector stack[192]Wrong location type 7
    - 409: jdk.incubator.vector.Double256Vector stack[64]Wrong location type 7
ScopeDesc(pc=0x00000001186a4f5b offset=69b):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a4f5b offset=69b):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a4f5b offset=69b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a4f5f offset=69f):
   jdk.incubator.vector.DoubleVector::opCode@7 (line 62)
ScopeDesc(pc=0x00000001186a4f5f offset=69f):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
ScopeDesc(pc=0x00000001186a4f5f offset=69f):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a4f5f offset=69f):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a4f5f offset=69f):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a4f5f offset=69f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x00000001186a501b offset=75b):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a501b offset=75b):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a501b offset=75b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a5020 offset=760):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
ScopeDesc(pc=0x00000001186a503e offset=77e):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a503e offset=77e):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a503e offset=77e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a5043 offset=783):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@157 (line 652)
ScopeDesc(pc=0x00000001186a5043 offset=783):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a5043 offset=783):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a5043 offset=783):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a5043 offset=783):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x00000001186a5091 offset=7d1):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a5091 offset=7d1):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a5091 offset=7d1):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a5096 offset=7d6):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@157 (line 652)
ScopeDesc(pc=0x00000001186a5096 offset=7d6):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a5096 offset=7d6):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a5096 offset=7d6):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a5096 offset=7d6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@90 (line 26)
ScopeDesc(pc=0x00000001186a51d4 offset=914):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a51d4 offset=914):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a51d4 offset=914):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a51ed offset=92d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@351 (line 55)  reexecute=true
   Locals
    - l0: stack[8],oop
    - l1: reg rdx [4],oop
    - l2: reg rcx [2],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: reg r12 [24],int
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: reg r14 [28],double
    - l14: 0
    - l15: stack[0],double
    - l16: 0
    - l17: reg xmm0 [48],double
    - l18: 0
    - l19: reg r13 [26],double
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x00000001186a5229 offset=969):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a5229 offset=969):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a5229 offset=969):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a522c offset=96c):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@131 (line 650)
ScopeDesc(pc=0x00000001186a522c offset=96c):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a522c offset=96c):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a522c offset=96c):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a522c offset=96c):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a523a offset=97a):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a523a offset=97a):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a523a offset=97a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a523e offset=97e):
   jdk.incubator.vector.VectorOperators$OperatorImpl::opKind@13 (line 828)
ScopeDesc(pc=0x00000001186a523e offset=97e):
   jdk.incubator.vector.VectorOperators::opKind@5 (line 409)
ScopeDesc(pc=0x00000001186a523e offset=97e):
   jdk.incubator.vector.DoubleVector::opKind@2 (line 71)
ScopeDesc(pc=0x00000001186a523e offset=97e):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@15 (line 630)
ScopeDesc(pc=0x00000001186a523e offset=97e):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a523e offset=97e):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a523e offset=97e):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a523e offset=97e):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a524a offset=98a):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a524a offset=98a):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a524a offset=98a):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a5252 offset=992):
   jdk.incubator.vector.VectorOperators$OperatorImpl::opKind@6 (line 828)
ScopeDesc(pc=0x00000001186a5252 offset=992):
   jdk.incubator.vector.VectorOperators::opKind@5 (line 409)
ScopeDesc(pc=0x00000001186a5252 offset=992):
   jdk.incubator.vector.DoubleVector::opKind@2 (line 71)
ScopeDesc(pc=0x00000001186a5252 offset=992):
   jdk.incubator.vector.DoubleVector::lanewiseTemplate@15 (line 630)
ScopeDesc(pc=0x00000001186a5252 offset=992):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 279)
ScopeDesc(pc=0x00000001186a5252 offset=992):
   jdk.incubator.vector.Double256Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x00000001186a5252 offset=992):
   jdk.incubator.vector.DoubleVector::add@5 (line 1038)
ScopeDesc(pc=0x00000001186a5252 offset=992):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@74 (line 25)
ScopeDesc(pc=0x00000001186a525f offset=99f):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a525f offset=99f):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a525f offset=99f):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a526c offset=9ac):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@7 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
ScopeDesc(pc=0x00000001186a5292 offset=9d2):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a5292 offset=9d2):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a5292 offset=9d2):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a5297 offset=9d7):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
ScopeDesc(pc=0x00000001186a52b6 offset=9f6):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a52b6 offset=9f6):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a52b6 offset=9f6):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a52c0 offset=a00):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@60 (line 24)  reexecute=true
   Locals
    - l0: stack[0],oop
    - l1: stack[8],oop
    - l2: stack[16],oop
    - l3: 0
    - l4: 0.000000
    - l5: 0
    - l6: 0.000000
    - l7: 0
    - l8: 0
    - l9: stack[24],double
    - l10: obj[421]
    - l11: obj[422]
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: reg rbp [10],int
   Objects
    - 421: jdk.incubator.vector.Double256Vector stack[64]Wrong location type 7
    - 422: jdk.incubator.vector.Double256Vector stack[64]Wrong location type 7
ScopeDesc(pc=0x00000001186a531b offset=a5b):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a531b offset=a5b):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a531b offset=a5b):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a5324 offset=a64):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@205 (line 46)  reexecute=true
   Locals
    - l0: stack[0],oop
    - l1: stack[8],oop
    - l2: stack[16],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: 0
    - l8: 0
    - l9: stack[24],double
    - l10: obj[657]
    - l11: obj[658]
    - l12: 0
    - l13: stack[32],double
    - l14: 0
    - l15: stack[40],double
    - l16: 0
    - l17: 0.000000
    - l18: 0
    - l19: 0.000000
    - l20: obj[659]
    - l21: obj[660]
    - l22: empty
   Expression stack
    - @0: reg rbp [10],int
   Objects
    - 657: jdk.incubator.vector.Double256Vector stack[96]Wrong location type 7
    - 658: jdk.incubator.vector.Double256Vector stack[64]Wrong location type 7
    - 659: jdk.incubator.vector.Double256Vector stack[160]Wrong location type 7
    - 660: jdk.incubator.vector.Double256Vector stack[160]Wrong location type 7
ScopeDesc(pc=0x00000001186a5338 offset=a78):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a5338 offset=a78):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a5338 offset=a78):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a533d offset=a7d):
   java.lang.invoke.LambdaForm$MH/0x0000000225c05800::linkToTargetMethod@4
ScopeDesc(pc=0x00000001186a533d offset=a7d):
   jdk.incubator.vector.DoubleVector::zero@23 (line 437)
ScopeDesc(pc=0x00000001186a533d offset=a7d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@41 (line 22)
ScopeDesc(pc=0x00000001186a5373 offset=ab3):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a5373 offset=ab3):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a5373 offset=ab3):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a537c offset=abc):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@134 (line 32)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: 0
    - l4: stack[96],double
    - l5: 0
    - l6: stack[104],double
    - l7: stack[20]
    - l8: 0
    - l9: stack[24],double
    - l10: obj[644]
    - l11: obj[645]
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[20]
    - @1: stack[112]
   Objects
    - 644: jdk.incubator.vector.Double256Vector stack[64]Wrong location type 7
    - 645: jdk.incubator.vector.Double256Vector stack[32]Wrong location type 7
ScopeDesc(pc=0x00000001186a5430 offset=b70):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a5430 offset=b70):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a5430 offset=b70):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a5435 offset=b75):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a5435 offset=b75):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a5435 offset=b75):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@112 (line 29)
ScopeDesc(pc=0x00000001186a5465 offset=ba5):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a5465 offset=ba5):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a5465 offset=ba5):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a5470 offset=bb0):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@305 (line 55)  reexecute=true
   Locals
    - l0: reg rbp [10],oop
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: stack[20]
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: 0
    - l13: stack[24],double
    - l14: 0
    - l15: stack[32],double
    - l16: 0
    - l17: stack[40],double
    - l18: 0
    - l19: stack[48],double
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: stack[20]
    - @1: stack[56]
ScopeDesc(pc=0x00000001186a5529 offset=c69):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a5529 offset=c69):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a5529 offset=c69):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a5534 offset=c74):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@1 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: NULL
ScopeDesc(pc=0x00000001186a554d offset=c8d):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a554d offset=c8d):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a554d offset=c8d):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
ScopeDesc(pc=0x00000001186a5558 offset=c98):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@3 (line 15)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
    - l9: empty
    - l10: empty
    - l11: empty
    - l12: empty
    - l13: empty
    - l14: empty
    - l15: empty
    - l16: empty
    - l17: empty
    - l18: empty
    - l19: empty
    - l20: empty
    - l21: empty
    - l22: empty
   Expression stack
    - @0: empty
    - @1: NULL
ScopeDesc(pc=0x00000001186a556c offset=cac):
   jdk.incubator.vector.DoubleVector::reduceLanesTemplate@62 (line 2307)
ScopeDesc(pc=0x00000001186a556c offset=cac):
   jdk.incubator.vector.Double256Vector::reduceLanes@2 (line 304)
ScopeDesc(pc=0x00000001186a556c offset=cac):
   org.jml.regression.linear.DoubleVectorLinearRegression::fit@295 (line 53)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x00000001186a4708: 0020
relocInfo@0x00000001186a4708 [type=0(none) addr=0x00000001186a48c0 offset=32]
         @0x00000001186a470a: 600b
relocInfo@0x00000001186a470a [type=6(runtime_call) addr=0x00000001186a48cb offset=11] | [destination=0x0000000110bf9920]
         @0x00000001186a470c: 9461
relocInfo@0x00000001186a470c [type=9(section_word) addr=0x00000001186a492c offset=97 format=1] | [target=0x00000001186a48a0]
         @0x00000001186a470e: 9423
relocInfo@0x00000001186a470e [type=9(section_word) addr=0x00000001186a494f offset=35 format=1] | [target=0x00000001186a48a0]
         @0x00000001186a4710: a05c
relocInfo@0x00000001186a4710 [type=10(poll) addr=0x00000001186a49ab offset=92]
         @0x00000001186a4712: 944a
relocInfo@0x00000001186a4712 [type=9(section_word) addr=0x00000001186a49f5 offset=74 format=1] | [target=0x00000001186a48a0]
         @0x00000001186a4714: 9428
relocInfo@0x00000001186a4714 [type=9(section_word) addr=0x00000001186a4a1d offset=40 format=1] | [target=0x00000001186a48a0]
         @0x00000001186a4716: a190
relocInfo@0x00000001186a4716 [type=10(poll) addr=0x00000001186a4bad offset=400]
         @0x00000001186a4718: 9454
relocInfo@0x00000001186a4718 [type=9(section_word) addr=0x00000001186a4c01 offset=84 format=1] | [target=0x00000001186a48a0]
         @0x00000001186a471a: a075
relocInfo@0x00000001186a471a [type=10(poll) addr=0x00000001186a4c76 offset=117]
         @0x00000001186a471c: b138
relocInfo@0x00000001186a471c [type=11(poll_return) addr=0x00000001186a4dae offset=312]
         @0x00000001186a471e: 6441
relocInfo@0x00000001186a471e [type=6(runtime_call) addr=0x00000001186a4def offset=65 format=1] | [destination=0x0000000110bfa540]
         @0x00000001186a4720: f80309ba777700017005
relocInfo@0x00000001186a4728 [type=7(external_word) addr=0x00000001186a4df4 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x00000001186a472a: 640e
relocInfo@0x00000001186a472a [type=6(runtime_call) addr=0x00000001186a4e02 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001186a472c: 6439
relocInfo@0x00000001186a472c [type=6(runtime_call) addr=0x00000001186a4e3b offset=57 format=1] | [destination=0x0000000110bfa540]
         @0x00000001186a472e: f80309ba777700017005
relocInfo@0x00000001186a4736 [type=7(external_word) addr=0x00000001186a4e40 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x00000001186a4738: 640e
relocInfo@0x00000001186a4738 [type=6(runtime_call) addr=0x00000001186a4e4e offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001186a473a: 6459
relocInfo@0x00000001186a473a [type=6(runtime_call) addr=0x00000001186a4ea7 offset=89 format=1] | [destination=0x0000000110bfa540]
         @0x00000001186a473c: f80309ba777700017005
relocInfo@0x00000001186a4744 [type=7(external_word) addr=0x00000001186a4eac offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x00000001186a4746: 640e
relocInfo@0x00000001186a4746 [type=6(runtime_call) addr=0x00000001186a4eba offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001186a4748: 6461
relocInfo@0x00000001186a4748 [type=6(runtime_call) addr=0x00000001186a4f1b offset=97 format=1] | [destination=0x0000000110bfa540]
         @0x00000001186a474a: f80309ba777700017005
relocInfo@0x00000001186a4752 [type=7(external_word) addr=0x00000001186a4f20 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x00000001186a4754: 640e
relocInfo@0x00000001186a4754 [type=6(runtime_call) addr=0x00000001186a4f2e offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001186a4756: a2bf
relocInfo@0x00000001186a4756 [type=10(poll) addr=0x00000001186a51ed offset=703]
         @0x00000001186a4758: 647a
relocInfo@0x00000001186a4758 [type=6(runtime_call) addr=0x00000001186a5267 offset=122 format=1] | [destination=0x0000000110bfa540]
         @0x00000001186a475a: f80309ba777700017005
relocInfo@0x00000001186a4762 [type=7(external_word) addr=0x00000001186a526c offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x00000001186a4764: 640e
relocInfo@0x00000001186a4764 [type=6(runtime_call) addr=0x00000001186a527a offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001186a4766: 6441
relocInfo@0x00000001186a4766 [type=6(runtime_call) addr=0x00000001186a52bb offset=65 format=1] | [destination=0x0000000110bfa540]
         @0x00000001186a4768: f80309ba777700017005
relocInfo@0x00000001186a4770 [type=7(external_word) addr=0x00000001186a52c0 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x00000001186a4772: 640e
relocInfo@0x00000001186a4772 [type=6(runtime_call) addr=0x00000001186a52ce offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001186a4774: 6451
relocInfo@0x00000001186a4774 [type=6(runtime_call) addr=0x00000001186a531f offset=81 format=1] | [destination=0x0000000110bfa540]
         @0x00000001186a4776: f80309ba777700017005
relocInfo@0x00000001186a477e [type=7(external_word) addr=0x00000001186a5324 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x00000001186a4780: 640e
relocInfo@0x00000001186a4780 [type=6(runtime_call) addr=0x00000001186a5332 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001186a4782: 6445
relocInfo@0x00000001186a4782 [type=6(runtime_call) addr=0x00000001186a5377 offset=69 format=1] | [destination=0x0000000110bfa540]
         @0x00000001186a4784: f80309ba777700017005
relocInfo@0x00000001186a478c [type=7(external_word) addr=0x00000001186a537c offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x00000001186a478e: 640e
relocInfo@0x00000001186a478e [type=6(runtime_call) addr=0x00000001186a538a offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001186a4790: f80309c2253100017006
relocInfo@0x00000001186a4798 [type=7(external_word) addr=0x00000001186a5390 offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x00000001186a479a: 640e
relocInfo@0x00000001186a479a [type=6(runtime_call) addr=0x00000001186a539e offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001186a479c: f80309c2253100017006
relocInfo@0x00000001186a47a4 [type=7(external_word) addr=0x00000001186a53a4 offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x00000001186a47a6: 640e
relocInfo@0x00000001186a47a6 [type=6(runtime_call) addr=0x00000001186a53b2 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001186a47a8: f80309c2253100017006
relocInfo@0x00000001186a47b0 [type=7(external_word) addr=0x00000001186a53b8 offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x00000001186a47b2: 640e
relocInfo@0x00000001186a47b2 [type=6(runtime_call) addr=0x00000001186a53c6 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001186a47b4: f80309c2253100017006
relocInfo@0x00000001186a47bc [type=7(external_word) addr=0x00000001186a53cc offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x00000001186a47be: 640e
relocInfo@0x00000001186a47be [type=6(runtime_call) addr=0x00000001186a53da offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001186a47c0: f80309c2253100017006
relocInfo@0x00000001186a47c8 [type=7(external_word) addr=0x00000001186a53e0 offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x00000001186a47ca: 640e
relocInfo@0x00000001186a47ca [type=6(runtime_call) addr=0x00000001186a53ee offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001186a47cc: f80309c2253100017006
relocInfo@0x00000001186a47d4 [type=7(external_word) addr=0x00000001186a53f4 offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x00000001186a47d6: 640e
relocInfo@0x00000001186a47d6 [type=6(runtime_call) addr=0x00000001186a5402 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001186a47d8: f80309c2253100017006
relocInfo@0x00000001186a47e0 [type=7(external_word) addr=0x00000001186a5408 offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x00000001186a47e2: 640e
relocInfo@0x00000001186a47e2 [type=6(runtime_call) addr=0x00000001186a5416 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001186a47e4: f80309c2253100017006
relocInfo@0x00000001186a47ec [type=7(external_word) addr=0x00000001186a541c offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x00000001186a47ee: 640e
relocInfo@0x00000001186a47ee [type=6(runtime_call) addr=0x00000001186a542a offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001186a47f0: 6441
relocInfo@0x00000001186a47f0 [type=6(runtime_call) addr=0x00000001186a546b offset=65 format=1] | [destination=0x0000000110bfa540]
         @0x00000001186a47f2: f80309ba777700017005
relocInfo@0x00000001186a47fa [type=7(external_word) addr=0x00000001186a5470 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x00000001186a47fc: 640e
relocInfo@0x00000001186a47fc [type=6(runtime_call) addr=0x00000001186a547e offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001186a47fe: f80309c2253100017006
relocInfo@0x00000001186a4806 [type=7(external_word) addr=0x00000001186a5484 offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x00000001186a4808: 640e
relocInfo@0x00000001186a4808 [type=6(runtime_call) addr=0x00000001186a5492 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001186a480a: f80309c2253100017006
relocInfo@0x00000001186a4812 [type=7(external_word) addr=0x00000001186a5498 offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x00000001186a4814: 640e
relocInfo@0x00000001186a4814 [type=6(runtime_call) addr=0x00000001186a54a6 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001186a4816: f80309c2253100017006
relocInfo@0x00000001186a481e [type=7(external_word) addr=0x00000001186a54ac offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x00000001186a4820: 640e
relocInfo@0x00000001186a4820 [type=6(runtime_call) addr=0x00000001186a54ba offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001186a4822: f80309c2253100017006
relocInfo@0x00000001186a482a [type=7(external_word) addr=0x00000001186a54c0 offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x00000001186a482c: 640e
relocInfo@0x00000001186a482c [type=6(runtime_call) addr=0x00000001186a54ce offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001186a482e: f80309c2253100017006
relocInfo@0x00000001186a4836 [type=7(external_word) addr=0x00000001186a54d4 offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x00000001186a4838: 640e
relocInfo@0x00000001186a4838 [type=6(runtime_call) addr=0x00000001186a54e2 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001186a483a: f80309c2253100017006
relocInfo@0x00000001186a4842 [type=7(external_word) addr=0x00000001186a54e8 offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x00000001186a4844: 640e
relocInfo@0x00000001186a4844 [type=6(runtime_call) addr=0x00000001186a54f6 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001186a4846: f80309c2253100017006
relocInfo@0x00000001186a484e [type=7(external_word) addr=0x00000001186a54fc offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x00000001186a4850: 640e
relocInfo@0x00000001186a4850 [type=6(runtime_call) addr=0x00000001186a550a offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001186a4852: f80309c2253100017006
relocInfo@0x00000001186a485a [type=7(external_word) addr=0x00000001186a5510 offset=6 data={09c225310001}] | [target=0x0000000109c22531]
         @0x00000001186a485c: 640e
relocInfo@0x00000001186a485c [type=6(runtime_call) addr=0x00000001186a551e offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001186a485e: 6411
relocInfo@0x00000001186a485e [type=6(runtime_call) addr=0x00000001186a552f offset=17 format=1] | [destination=0x0000000110bfa540]
         @0x00000001186a4860: f80309ba777700017005
relocInfo@0x00000001186a4868 [type=7(external_word) addr=0x00000001186a5534 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x00000001186a486a: 640e
relocInfo@0x00000001186a486a [type=6(runtime_call) addr=0x00000001186a5542 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001186a486c: 6411
relocInfo@0x00000001186a486c [type=6(runtime_call) addr=0x00000001186a5553 offset=17 format=1] | [destination=0x0000000110bfa540]
         @0x00000001186a486e: f80309ba777700017005
relocInfo@0x00000001186a4876 [type=7(external_word) addr=0x00000001186a5558 offset=5 data={09ba77770001}] | [target=0x0000000109ba7777]
         @0x00000001186a4878: 640e
relocInfo@0x00000001186a4878 [type=6(runtime_call) addr=0x00000001186a5566 offset=14 format=1] | [destination=0x00000001094e0f50]
         @0x00000001186a487a: f7be8006
relocInfo@0x00000001186a487c [type=8(internal_word) addr=0x00000001186a556c offset=6 data=1982] | [target=0x00000001186a4dae]
         @0x00000001186a487e: 6411
relocInfo@0x00000001186a487e [type=6(runtime_call) addr=0x00000001186a557d offset=17 format=1] | [destination=0x0000000110bfb220]
         @0x00000001186a4880: 0023
relocInfo@0x00000001186a4880 [type=0(none) addr=0x00000001186a55a0 offset=35]
         @0x00000001186a4882: 6400
relocInfo@0x00000001186a4882 [type=6(runtime_call) addr=0x00000001186a55a0 offset=0 format=1] | [destination=0x0000000110b45120]
         @0x00000001186a4884: 640f
relocInfo@0x00000001186a4884 [type=6(runtime_call) addr=0x00000001186a55af offset=15 format=1] | [destination=0x0000000110bfa860]
         @0x00000001186a4886: 0000
relocInfo@0x00000001186a4886 [type=0(none) addr=0x00000001186a55af offset=0]
         @0x00000001186a4888: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type unique_concrete_method
  context = jdk.incubator.vector.DoubleVector$DoubleSpecies
  method  = {method} {0x0000000267b3fa08} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
   [nmethod<=klass]jdk.incubator.vector.DoubleVector$DoubleSpecies
Dependency of type unique_concrete_method
  context = jdk.incubator.vector.DoubleVector$DoubleSpecies
  method  = {method} {0x0000000267b3ef30} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
   [nmethod<=klass]jdk.incubator.vector.DoubleVector$DoubleSpecies
Dependency of type unique_concrete_method
  context = jdk.incubator.vector.VectorOperators$ImplCache
  method  = {method} {0x0000000267b33200} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$ImplCache
Dependency of type unique_concrete_method
  context = jdk.incubator.vector.VectorOperators$BinaryImpl
  method  = {method} {0x0000000267a862a0} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$BinaryImpl
Dependency of type unique_concrete_method
  context = jdk.incubator.vector.VectorOperators$BinaryImpl
  method  = {method} {0x0000000267a85e38} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$BinaryImpl
Dependency of type unique_concrete_method
  context = jdk.incubator.vector.VectorOperators$BinaryImpl
  method  = {method} {0x0000000267a85f10} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$BinaryImpl
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 2 entries, 20 bytes):
{
   < 0x00000001186a48f4, 0x00000001186a5524 > < 0x00000001186a4900, 0x00000001186a5548 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 NULL-oop
#1: 0x000000014e403a78 a 'java/lang/Class'{0x000000014e403a78} = 'jdk/incubator/vector/Double256Vector'
#2: 0x000000014e403a08 a 'jdk/incubator/vector/DoubleVector$DoubleSpecies'{0x000000014e403a08}
#3: 0x000000011ff58b48 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000011ff58b48}
#4: 0x00000001200a7938 a 'java/lang/Class'{0x00000001200a7938} = 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 NULL-oop
# 1: 0x000000026788fe18 {method} {0x000000026788fe18} 'fit' '([D[D)V' in 'org/jml/regression/linear/DoubleVectorLinearRegression'
# 2: 0x0000000267b3fa08 {method} {0x0000000267b3fa08} 'loopBound' '(I)I' in 'jdk/incubator/vector/AbstractSpecies'
# 3: 0x0000000267b96588 {method} {0x0000000267b96588} 'roundDown' '(II)I' in 'jdk/incubator/vector/VectorIntrinsics'
# 4: 0x0000000267b6f330 {method} {0x0000000267b6f330} 'reduceLanes' '(Ljdk/incubator/vector/VectorOperators$Associative;)D' in 'jdk/incubator/vector/Double256Vector'
# 5: 0x0000000267b1d348 {method} {0x0000000267b1d348} 'reduceLanesTemplate' '(Ljdk/incubator/vector/VectorOperators$Associative;)D' in 'jdk/incubator/vector/DoubleVector'
# 6: 0x0000000267b17448 {method} {0x0000000267b17448} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
# 7: 0x000000011040aa78 {method} {0x000000011040aa78} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000000225c05800'
# 8: 0x0000000267b18ef0 {method} {0x0000000267b18ef0} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
# 9: 0x0000000267b72458 {method} {0x0000000267b72458} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
#10: 0x0000000267b6f070 {method} {0x0000000267b6f070} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/Double256Vector;' in 'jdk/incubator/vector/Double256Vector'
#11: 0x0000000267b17fb0 {method} {0x0000000267b17fb0} 'lanewiseTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
#12: 0x0000000267b1ded0 {method} {0x0000000267b1ded0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/DoubleVector'
#13: 0x0000000267b710c0 {method} {0x0000000267b710c0} 'fromArray0' '([DI)Ljdk/incubator/vector/DoubleVector;' in 'jdk/incubator/vector/Double256Vector'
#14: 0x0000000267b39558 {method} {0x0000000267b39558} 'vectorType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
#15: 0x0000000267b153c0 {method} {0x0000000267b153c0} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;)I' in 'jdk/incubator/vector/DoubleVector'
#16: 0x0000000267b36008 {method} {0x0000000267b36008} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;II)I' in 'jdk/incubator/vector/VectorOperators'
#17: 0x0000000267a85e38 {method} {0x0000000267a85e38} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#18: 0x0000000267a85f10 {method} {0x0000000267a85f10} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#19: 0x0000000267b96280 {method} {0x0000000267b96280} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
#20: 0x000000011015f0e0 {method} {0x000000011015f0e0} 'checkIndex' '(II)I' in 'java/util/Objects'
#21: 0x0000000267b15588 {method} {0x0000000267b15588} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/DoubleVector'
#22: 0x0000000267b360e8 {method} {0x0000000267b360e8} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/VectorOperators'
#23: 0x0000000267a862a0 {method} {0x0000000267a862a0} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#24: 0x0000000225d4eb10 'jdk/incubator/vector/DoubleVector$DoubleSpecies'
#25: 0x0000000267b3ef30 {method} {0x0000000267b3ef30} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
#26: 0x0000000267b33200 {method} {0x0000000267b33200} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
#27: 0x0000000225d5a3b0 'jdk/incubator/vector/VectorOperators$BinaryImpl'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
15.394 ms/op
# Warmup Iteration   8: 16.153 ms/op
# Warmup Iteration   9: 16.950 ms/op
# Warmup Iteration  10: 17.440 ms/op
# Warmup Iteration  11: 17.324 ms/op
# Warmup Iteration  12: 17.593 ms/op
# Warmup Iteration  13: 17.247 ms/op
# Warmup Iteration  14: 17.492 ms/op
# Warmup Iteration  15: 17.192 ms/op
# Warmup Iteration  16: 17.303 ms/op
# Warmup Iteration  17: 17.153 ms/op
# Warmup Iteration  18: 17.132 ms/op
# Warmup Iteration  19: 18.036 ms/op
# Warmup Iteration  20: 17.525 ms/op
# Warmup Iteration  21: 16.920 ms/op
# Warmup Iteration  22: 17.510 ms/op
# Warmup Iteration  23: 17.497 ms/op
# Warmup Iteration  24: 17.781 ms/op
# Warmup Iteration  25: 17.508 ms/op
# Warmup Iteration  26: 17.271 ms/op
# Warmup Iteration  27: 17.285 ms/op
# Warmup Iteration  28: 17.610 ms/op
# Warmup Iteration  29: 17.470 ms/op
# Warmup Iteration  30: 17.109 ms/op
# Warmup Iteration  31: 17.148 ms/op
# Warmup Iteration  32: 17.082 ms/op
# Warmup Iteration  33: 17.840 ms/op
# Warmup Iteration  34: 16.877 ms/op
# Warmup Iteration  35: 17.336 ms/op
# Warmup Iteration  36: 17.470 ms/op
# Warmup Iteration  37: 17.929 ms/op
# Warmup Iteration  38: 17.747 ms/op
# Warmup Iteration  39: 18.070 ms/op
# Warmup Iteration  40: 17.303 ms/op
# Warmup Iteration  41: 17.319 ms/op
# Warmup Iteration  42: 17.046 ms/op
# Warmup Iteration  43: 17.137 ms/op
# Warmup Iteration  44: 17.629 ms/op
# Warmup Iteration  45: 17.585 ms/op
# Warmup Iteration  46: 17.136 ms/op
# Warmup Iteration  47: 17.141 ms/op
# Warmup Iteration  48: 17.855 ms/op
# Warmup Iteration  49: 17.720 ms/op
# Warmup Iteration  50: 17.231 ms/op
# Warmup Iteration  51: 16.879 ms/op
# Warmup Iteration  52: 17.740 ms/op
# Warmup Iteration  53: 16.916 ms/op
# Warmup Iteration  54: 17.156 ms/op
# Warmup Iteration  55: 18.709 ms/op
# Warmup Iteration  56: 17.800 ms/op
# Warmup Iteration  57: 17.092 ms/op
# Warmup Iteration  58: 16.858 ms/op
# Warmup Iteration  59: 17.124 ms/op
# Warmup Iteration  60: 16.992 ms/op
# Warmup Iteration  61: 17.194 ms/op
# Warmup Iteration  62: 16.975 ms/op
# Warmup Iteration  63: 17.019 ms/op
# Warmup Iteration  64: 17.449 ms/op
# Warmup Iteration  65: 17.279 ms/op
# Warmup Iteration  66: 16.899 ms/op
# Warmup Iteration  67: 17.438 ms/op
# Warmup Iteration  68: 18.181 ms/op
# Warmup Iteration  69: 16.956 ms/op
# Warmup Iteration  70: 17.052 ms/op
# Warmup Iteration  71: 17.097 ms/op
# Warmup Iteration  72: 17.005 ms/op
# Warmup Iteration  73: 17.024 ms/op
# Warmup Iteration  74: 16.877 ms/op
# Warmup Iteration  75: 17.711 ms/op
# Warmup Iteration  76: 16.867 ms/op
# Warmup Iteration  77: 17.038 ms/op
# Warmup Iteration  78: 16.909 ms/op
# Warmup Iteration  79: 16.957 ms/op
# Warmup Iteration  80: 16.883 ms/op
# Warmup Iteration  81: 16.902 ms/op
# Warmup Iteration  82: 17.212 ms/op
# Warmup Iteration  83: 16.797 ms/op
# Warmup Iteration  84: 16.701 ms/op
# Warmup Iteration  85: 17.196 ms/op
# Warmup Iteration  86: 17.028 ms/op
# Warmup Iteration  87: 17.827 ms/op
# Warmup Iteration  88: 17.159 ms/op
# Warmup Iteration  89: 17.742 ms/op
# Warmup Iteration  90: 16.937 ms/op
# Warmup Iteration  91: 16.933 ms/op
# Warmup Iteration  92: 17.261 ms/op
# Warmup Iteration  93: 17.175 ms/op
# Warmup Iteration  94: 17.249 ms/op
# Warmup Iteration  95: 17.331 ms/op
# Warmup Iteration  96: 17.844 ms/op
# Warmup Iteration  97: 17.779 ms/op
# Warmup Iteration  98: 17.385 ms/op
# Warmup Iteration  99: 16.914 ms/op
# Warmup Iteration 100: 16.909 ms/op
Iteration   1: 17.507 ms/op
Iteration   2: 17.750 ms/op
Iteration   3: 17.359 ms/op
Iteration   4: 17.667 ms/op
Iteration   5: 17.545 ms/op
Iteration   6: 17.280 ms/op
Iteration   7: 17.934 ms/op
Iteration   8: 16.970 ms/op
Iteration   9: 17.083 ms/op
Iteration  10: 16.985 ms/op
------------------------------------------------------------------------
org.jml.regression.linear.DoubleVectorLinearRegression::fit([D[D)V
  interpreter_invocation_count:        5 
  invocation_counter:                  5 
  backedge_counter:              6023260 
  mdo size: 1600 bytes

0 aload_1
1 arraylength
2 aload_2
3 arraylength
4 if_icmpeq 17
  0   bci: 4    BranchData          taken(4) displacement(48)
                                    not taken(0)
7 new 7 <java/lang/IllegalArgumentException>
10 dup
11 fast_aldc Arrays length are not equals
13 invokespecial 11 <java/lang/IllegalArgumentException.<init>(Ljava/lang/String;)V> 
  32  bci: 13   CounterData         count(0)
16 athrow
17 dconst_0
18 dstore_3
19 dconst_0
20 dstore #5
22 iconst_0
23 istore #7
25 getstatic 14 <org/jml/regression/linear/DoubleVectorLinearRegression.SPECIES/Ljdk/incubator/vector/VectorSpecies;> 
28 aload_1
29 arraylength
30 invokeinterface 20 <jdk/incubator/vector/VectorSpecies.loopBound(I)I> 
  48  bci: 30   VirtualCallData     count(0) nonprofiled_count(0) entries(1)
                                    'jdk/incubator/vector/DoubleVector$DoubleSpecies'(4 1.00)
35 i2d
36 dstore #8
38 getstatic 14 <org/jml/regression/linear/DoubleVectorLinearRegression.SPECIES/Ljdk/incubator/vector/VectorSpecies;> 
41 invokestatic 26 <jdk/incubator/vector/DoubleVector.zero(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;> 
  104 bci: 41   CounterData         count(4)
44 astore #10
46 getstatic 14 <org/jml/regression/linear/DoubleVectorLinearRegression.SPECIES/Ljdk/incubator/vector/VectorSpecies;> 
49 invokestatic 26 <jdk/incubator/vector/DoubleVector.zero(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;> 
  120 bci: 49   CounterData         count(4)
52 astore #11
54 fast_iload #7
56 i2d
57 dload #8
59 dcmpg
60 ifge 106
  136 bci: 60   BranchData          trap(intrinsic_or_type_checked_inlining recompiled) taken(2) displacement(200)
                                    not taken(4871582)
63 aload #10
65 getstatic 14 <org/jml/regression/linear/DoubleVectorLinearRegression.SPECIES/Ljdk/incubator/vector/VectorSpecies;> 
68 aload_1
69 fast_iload #7
71 invokestatic 32 <jdk/incubator/vector/DoubleVector.fromArray(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;> 
  168 bci: 71   CounterData         count(4871582)
74 invokevirtual 36 <jdk/incubator/vector/DoubleVector.add(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;> 
  184 bci: 74   VirtualCallData     count(4871582) nonprofiled_count(0) entries(0)
77 astore #10
79 aload #11
81 getstatic 14 <org/jml/regression/linear/DoubleVectorLinearRegression.SPECIES/Ljdk/incubator/vector/VectorSpecies;> 
84 aload_2
85 fast_iload #7
87 invokestatic 32 <jdk/incubator/vector/DoubleVector.fromArray(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;> 
  240 bci: 87   CounterData         count(4871582)
90 invokevirtual 36 <jdk/incubator/vector/DoubleVector.add(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;> 
  256 bci: 90   VirtualCallData     count(4871582) nonprofiled_count(0) entries(0)
93 astore #11
95 fast_iload #7
97 getstatic 40 <org/jml/regression/linear/DoubleVectorLinearRegression.SPECIES_LENGTH/I> 
100 iadd
101 istore #7
103 goto 54
  312 bci: 103  JumpData            taken(4871582) displacement(-176)
106 dload_3
107 aload #10
109 getstatic 44 <jdk/incubator/vector/VectorOperators.ADD/Ljdk/incubator/vector/VectorOperators$Associative;> 
112 invokevirtual 50 <jdk/incubator/vector/DoubleVector.reduceLanes(Ljdk/incubator/vector/VectorOperators$Associative;)D> 
  336 bci: 112  VirtualCallData     count(0) nonprofiled_count(0) entries(1)
                                    'jdk/incubator/vector/Double256Vector'(2 1.00)
115 dadd
116 dstore_3
117 dload #5
119 aload #11
121 getstatic 44 <jdk/incubator/vector/VectorOperators.ADD/Ljdk/incubator/vector/VectorOperators$Associative;> 
124 invokevirtual 50 <jdk/incubator/vector/DoubleVector.reduceLanes(Ljdk/incubator/vector/VectorOperators$Associative;)D> 
  392 bci: 124  VirtualCallData     count(0) nonprofiled_count(0) entries(1)
                                    'jdk/incubator/vector/Double256Vector'(2 1.00)
127 dadd
128 dstore #5
130 fast_iload #7
132 aload_1
133 arraylength
134 if_icmpge 159
  448 bci: 134  BranchData          taken(2) displacement(56)
                                    not taken(0)
137 dload_3
138 aload_1
139 iload #7
141 daload
142 dadd
143 dstore_3
144 dload #5
146 aload_2
147 iload #7
149 daload
150 dadd
151 dstore #5
153 iinc #7 1
156 goto 130
  480 bci: 156  JumpData            taken(0) displacement(-32)
159 dload_3
160 aload_1
161 arraylength
162 i2d
163 ddiv
164 dstore #12
166 dload #5
168 aload_1
169 arraylength
170 i2d
171 ddiv
172 dstore #14
174 dconst_0
175 dstore #16
177 dconst_0
178 dstore #18
180 iconst_0
181 istore #7
183 getstatic 14 <org/jml/regression/linear/DoubleVectorLinearRegression.SPECIES/Ljdk/incubator/vector/VectorSpecies;> 
186 invokestatic 26 <jdk/incubator/vector/DoubleVector.zero(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;> 
  504 bci: 186  CounterData         count(2)
189 astore #20
191 getstatic 14 <org/jml/regression/linear/DoubleVectorLinearRegression.SPECIES/Ljdk/incubator/vector/VectorSpecies;> 
194 invokestatic 26 <jdk/incubator/vector/DoubleVector.zero(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/DoubleVector;> 
  520 bci: 194  CounterData         count(2)
197 astore #21
199 fast_iload #7
201 i2d
202 dload #8
204 dcmpg
205 ifge 275
  536 bci: 205  BranchData          trap(intrinsic_or_type_checked_inlining recompiled) taken(1) displacement(424)
                                    not taken(1030750)
208 getstatic 14 <org/jml/regression/linear/DoubleVectorLinearRegression.SPECIES/Ljdk/incubator/vector/VectorSpecies;> 
211 aload_1
212 fast_iload #7
214 invokestatic 32 <jdk/incubator/vector/DoubleVector.fromArray(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;> 
  568 bci: 214  CounterData         count(1030750)
217 dload #12
219 invokevirtual 54 <jdk/incubator/vector/DoubleVector.sub(D)Ljdk/incubator/vector/DoubleVector;> 
  584 bci: 219  VirtualCallData     count(1030750) nonprofiled_count(0) entries(0)
222 astore #22
224 aload #20
226 getstatic 14 <org/jml/regression/linear/DoubleVectorLinearRegression.SPECIES/Ljdk/incubator/vector/VectorSpecies;> 
229 aload_2
230 fast_iload #7
232 invokestatic 32 <jdk/incubator/vector/DoubleVector.fromArray(Ljdk/incubator/vector/VectorSpecies;[DI)Ljdk/incubator/vector/DoubleVector;> 
  640 bci: 232  CounterData         count(1030750)
235 dload #14
237 invokevirtual 54 <jdk/incubator/vector/DoubleVector.sub(D)Ljdk/incubator/vector/DoubleVector;> 
  656 bci: 237  VirtualCallData     count(1030750) nonprofiled_count(0) entries(0)
240 aload #22
242 invokevirtual 58 <jdk/incubator/vector/DoubleVector.mul(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;> 
  712 bci: 242  VirtualCallData     count(1030750) nonprofiled_count(0) entries(0)
245 invokevirtual 36 <jdk/incubator/vector/DoubleVector.add(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;> 
  768 bci: 245  VirtualCallData     count(1030750) nonprofiled_count(0) entries(0)
248 astore #20
250 aload #21
252 aload #22
254 aload #22
256 invokevirtual 58 <jdk/incubator/vector/DoubleVector.mul(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;> 
  824 bci: 256  VirtualCallData     count(1030750) nonprofiled_count(0) entries(0)
259 invokevirtual 36 <jdk/incubator/vector/DoubleVector.add(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/DoubleVector;> 
  880 bci: 259  VirtualCallData     count(1030750) nonprofiled_count(0) entries(0)
262 astore #21
264 fast_iload #7
266 getstatic 40 <org/jml/regression/linear/DoubleVectorLinearRegression.SPECIES_LENGTH/I> 
269 iadd
270 istore #7
272 goto 199
  936 bci: 272  JumpData            taken(1030750) displacement(-400)
275 dload #16
277 aload #10
279 getstatic 44 <jdk/incubator/vector/VectorOperators.ADD/Ljdk/incubator/vector/VectorOperators$Associative;> 
282 invokevirtual 50 <jdk/incubator/vector/DoubleVector.reduceLanes(Ljdk/incubator/vector/VectorOperators$Associative;)D> 
  960 bci: 282  VirtualCallData     count(0) nonprofiled_count(0) entries(1)
                                    'jdk/incubator/vector/Double256Vector'(1 1.00)
285 dadd
286 dstore #16
288 dload #18
290 aload #11
292 getstatic 44 <jdk/incubator/vector/VectorOperators.ADD/Ljdk/incubator/vector/VectorOperators$Associative;> 
295 invokevirtual 50 <jdk/incubator/vector/DoubleVector.reduceLanes(Ljdk/incubator/vector/VectorOperators$Associative;)D> 
  1016bci: 295  VirtualCallData     count(0) nonprofiled_count(0) entries(1)
                                    'jdk/incubator/vector/Double256Vector'(1 1.00)
298 dadd
299 dstore #18
301 fast_iload #7
303 aload_1
304 arraylength
305 if_icmpge 354
  1072bci: 305  BranchData          taken(1) displacement(56)
                                    not taken(0)
308 dload #16
310 aload_1
311 iload #7
313 daload
314 dload #12
316 dsub
317 aload_1
318 iload #7
320 daload
321 dload #12
323 dsub
324 dmul
325 dadd
326 dstore #16
328 dload #18
330 aload_1
331 iload #7
333 daload
334 dload #12
336 dsub
337 aload_2
338 iload #7
340 daload
341 dload #14
343 dsub
344 dmul
345 dadd
346 dstore #18
348 iinc #7 1
351 goto 301
  1104bci: 351  JumpData            taken(0) displacement(-32)
354 fast_aload_0
355 dload #18
357 dload #16
359 ddiv
360 fast_dputfield 61 <org/jml/regression/linear/DoubleVectorLinearRegression.slope/D> 
363 fast_aload_0
364 dload #14
366 aload_0
367 fast_dgetfield 61 <org/jml/regression/linear/DoubleVectorLinearRegression.slope/D> 
370 dload #12
372 dmul
373 dsub
374 fast_dputfield 65 <org/jml/regression/linear/DoubleVectorLinearRegression.intercept/D> 
377 return
------------------------------------------------------------------------
Total MDO size: 1600 bytes


Result "org.jml.regression.linear.BenchmarkLinearRegression.testDoubleVectorLinearRegression":
  N = 10
  mean =     17.408 Â±(99.9%) 0.500 ms/op

  Histogram, ms/op:
    [16.900, 17.000) = 2 
    [17.000, 17.100) = 1 
    [17.100, 17.200) = 0 
    [17.200, 17.300) = 1 
    [17.300, 17.400) = 1 
    [17.400, 17.500) = 0 
    [17.500, 17.600) = 2 
    [17.600, 17.700) = 1 
    [17.700, 17.800) = 1 
    [17.800, 17.900) = 0 

  Percentiles, ms/op:
      p(0.0000) =     16.970 ms/op
     p(50.0000) =     17.433 ms/op
     p(90.0000) =     17.915 ms/op
     p(95.0000) =     17.934 ms/op
     p(99.0000) =     17.934 ms/op
     p(99.9000) =     17.934 ms/op
     p(99.9900) =     17.934 ms/op
     p(99.9990) =     17.934 ms/op
     p(99.9999) =     17.934 ms/op
    p(100.0000) =     17.934 ms/op


# Run complete. Total time: 00:00:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                   Mode  Cnt   Score   Error  Units
BenchmarkLinearRegression.testDoubleLinearRegression          ss   10  25.631 Â± 0.341  ms/op
BenchmarkLinearRegression.testDoubleVectorLinearRegression    ss   10  17.408 Â± 0.500  ms/op
